@title Command Line Arguments

@h1 Command line arguments

Another way to change the name that displays on our hello world program is to use command line arguments.
Instead of providing the data ourselves, we can rely on the user supplying it when the program runs from the command line.
The following shows what the user could enter:

<pre>
flx hello v1 v2 v3 v4
</pre>

With @{v1} having an index of 1, @{v2} of 2, and so on, counting up by one.
We can grab these values by passing the index value (position) into @{System::argv} as we see here:

@felix-unchecked
println$ "Hello " + System::argv 1;
@

This reads the first command line argument (index 1), and returns it to the caller.
For example if you type:

<pre>
flx hello Joachim
</pre>

then the program houtputs the text (i.e. "Hello Joachim").

<ul>

<li>
The function @{System::argv} applied to an integer <em>n</em> returns the <em>n'th</em> command line argument.
If the argument exists it will return it (as a string), or an empty string otherwise.
</li> 

<li>
Note: In Felix, indexes start at 0 (just like C++, Java, and other Algol derived languages).
Index 0 of @{argv} (or @{System::argv 0}) always contains the executable name.
But if you try this you'll notice something funny.
@{System::argv 0} does not include the @{flx} driver.
This happens because after compiling the program, @{flx} is out of the picture, it's just your app that runs.
</li>

</ul>
