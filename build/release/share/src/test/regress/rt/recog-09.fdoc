
@title recog check
@felix
include "std/strings/recognisers";
include "std/control/chips";

open BaseChips;
open Recognisers;

device L = match_string "(";
device R = match_string ")";
device E = match_string "E";

// Grammar:
// p = epsilon
// p = (p)p
// s = pE
var p = fix (proc (q:iochip_t[Buffer,Buffer]) 
  (io: (
    inp: %<Buffer,
    out: %>Buffer
  )) ()
 {
   device y = 
     tryall_list ([
       epsilon[Buffer],
       L |-> q |-> R |-> q
     ])
   ;
   circuit
     wire io.inp to y.inp
     wire io.out to y.out
   endcircuit
});

device parens = p |-> E;

device sayresult = procedure (proc (x:Buffer) {
  println$ "Test: End pos=" + x.str; })
;

device tests = source_from_list (["(()(()))E", "E", "()E"]);
device toBuffer = function (fun (s:string)=> Buffer s);

#(tests |-> toBuffer |-> parens |-> sayresult);


@expect
Test: End pos=@9
Test: End pos=@1
Test: End pos=@3
@

