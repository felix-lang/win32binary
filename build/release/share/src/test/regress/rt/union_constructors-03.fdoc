
@h1 union_constructors-03.flx
@felix
// named variant type constructor with one element as function
typedef U = 1 + int;
proc print (u:U) {
  print "union U ";
  print$
    match u with
    | case 0 => "1"
    | case 1 b => f"int %d" b
    endmatch;
}
fun exec (p:int -> U, x:int) => p x;

val u1 = (case 1 of U) 1; print u1; endl;

val u2 = exec (case 1 of U, 2); print u2; endl;

val u3 = (case 1 of U) 3; print u3; endl;

val f1 = case 1 of U; val u4 = f1 4; print u4; endl;

print (exec (case 1 of U, 5)); endl;

@expect
union U int 1
union U int 2
union U int 3
union U int 4
union U int 5
@
