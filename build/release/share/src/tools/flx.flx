#line 25 "C:/cygwin64/home/skaller/felix/src/packages/flx.fdoc"
// flx plugin linker
//
class FlxPluginSymbols
{

  // We have to do this dummy requirements because static
  // linking removes
  requires package "re2";
  requires package "faio";
  requires package "flx_arun";

  open Dynlink;

  // Now add all the symbols.
  proc addsymbols ()
  {
    static-link-plugin
      toolchain_clang_osx,
      toolchain_clang_iphoneos,
      toolchain_clang_linux,
      toolchain_gcc_osx,
      toolchain_gcc_linux,
      toolchain_msvc_win32
    ;
    // flx
    static-link-symbol dflx_create_thread_frame in plugin dflx;
    static-link-symbol dflx_flx_start in plugin dflx;

  }
}

// Add the symbols
FlxPluginSymbols::addsymbols;

// Now invoke the program!
val linstance =  Dynlink::prepare_lib("dflx");
var init: cont = Dynlink::get_init linstance;

Fibres::chain init;


