#line 937 "C:/projects/felix/src/packages/filesystem.fdoc"

//$ File system directory services,
//$ Parametrised  by operating system and mode type.
class Directory_class[os,mode_t]
{
  //$ Create a directory with specified mode.
  //$ Returns 0 if successful.
  virtual gen mkdir: string * mode_t -> int;

  //$ Create a directory with default mode.
  //$ Returns 0 if successful.
  virtual gen mkdir: string -> int;

  //$ Try to ensure all the directories in a path exist.
  //$ Does not return any error indication.
  virtual proc mkdirs: string;

  virtual gen unlink_empty_dir: string -> int;

  //$ Return an option list of all the regular files in a given directory.
  //$ Returns None if the directory does not exist or isn't accessible.
  //$ Returns Some files if the directory exists and is accessible.
  //$ If the directory has no regular files, the list is Empty.
  virtual fun filesin:string -> opt[List::list[string]];

  //$ Get the absolute pathname of the current working directory.
  virtual fun getcwd: 1 -> string;

  //$ Convert a relative filename to an absolute pathname.
  virtual fun mk_absolute_filename: string -> string;
}

//$ Host file system directory services.
//$ Platform dependent.
class Directory {
if PLAT_WIN32 do
  inherit Win32Directory;
else
  inherit PosixDirectory;
done
}

