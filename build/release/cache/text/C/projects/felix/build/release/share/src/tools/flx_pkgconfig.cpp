//Input file: build\release\share\src\tools\flx_pkgconfig
//Generated by Felix Version 2016.07.12-rc1
//Timestamp: 2017/5/17 16:20:42 UTC
//Timestamp: 2017/5/17 16:20:42 (local)
#define FLX_EXTERN_flx_pkgconfig FLX_EXPORT
#include "flx_pkgconfig.hpp"
#include <stdio.h>
#define comma ,

//-----------------------------------------
//EMIT USER BODY CODE
using namespace ::flxusr::flx_pkgconfig;

    static void _rev(void** plt, _a14239t_71023*) // second arg is a dummy
    { // in place reversal
      //struct node_t { _a14239t_71023 elt; void *tail; };
      struct node_t { void *tail; _a14239t_71023 elt; };
      void *nutail = 0;
      void *cur = *plt;
      while(cur)
      {
        void *oldtail = ((node_t*)FLX_VNP(cur))->tail;   // save old tail in temp
        ((node_t*)FLX_VNP(cur))->tail = nutail;          // overwrite current node tail
        nutail = cur;                                   // set new tail to current
        cur = oldtail;                                  // set current to saved old tail
      }
      *plt = nutail;                                    // overwrite
    }
    

//-----------------------------------------
namespace flxusr { namespace flx_pkgconfig {

//-----------------------------------------
//DEFINE OFFSET tables for GC
#include "flx_pkgconfig.rtti"
FLX_DEF_THREAD_FRAME
//Thread Frame Constructor
thread_frame_t::thread_frame_t(
) :
  gcp(0),
  shape_list_head(flx_pkgconfig_head_shape)
{}

//-----------------------------------------
//DEFINE FUNCTION CLASS METHODS
#include "flx_pkgconfig.ctors_cpp"
//------------------------------
//FUNCTION <69540>: search_and_replace_uncurry::_lam_2363: Apply method
 ::flx::rtl::cl_t _lam_2363::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9); // HACK! 
}

//------------------------------
//FUNCTION <69281>: +::aux_uncurry: Apply method
void* _fI69281_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69282_x_uncurry = _arg.data[0];
  _vI69283_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69290:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69286> := x_uncurry<69282>varname;
      _vI69286_aux__apos_2_mv_1387  = _vI69282_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69286_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69285;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69283>varname;: type void*
      return _vI69283_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69285:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69286_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI69289__lam_1391)(FLX_FPAR_PASS this, ptr_fI68132___plus_))) ) goto _ml1390_L69284;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69287>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69286>varname));
      _vI69287_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69286_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69288>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69286>varname));
      _vI69288_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69286_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69283> := (Snoc<67702>struct (y<69283>varname, h_param_std_1269<69287>varname));
      _vI69283_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69283_y, _vI69287_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69282> := t_param_std_1268<69288>varname;
      _vI69282_x_uncurry  = _vI69288_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69290;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69284:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <70232>: flx_pkgconfig::xfind::_lam_65104: Apply method
 ::flx::rtl::cl_t _lam_65104::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 8 to 13
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",146,8,146,13); // HACK! 
}

//------------------------------
//FUNCTION <69647>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI69647__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <69649>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry: Apply method
void* _fI69649_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69650_x_uncurry = _arg.data[0];
  _vI69651_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69658:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69654> := x_uncurry<69650>varname;
      _vI69654_aux__apos_2_mv_1387  = _vI69650_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69654_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69653;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69651>varname;: type void*
      return _vI69651_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69653:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69654_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI69657__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65171, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L69652;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69655>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69654>varname));
      _vI69655_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69654_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69656>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69654>varname));
      _vI69656_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69654_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69651> := (Snoc<67702>struct (y<69651>varname, h_param_std_1269<69655>varname));
      _vI69651_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69651_y, _vI69655_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69650> := t_param_std_1268<69656>varname;
      _vI69650_x_uncurry  = _vI69656_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69658;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69652:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <65435>: flx_pkgconfig::xfind: Apply method
 ::flx::rtl::cl_t xfind::apply(_at71025 const &_arg ){
  flags = _arg.data[0];
  c = _arg.data[1];
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 54 to 68
      //find_mv_2085<70228> := (stl_find<14442>primfun (flags<65441>varname, c<65442>varname));
      find_mv_2085  = flags.find(c); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
/*match case 1:(i_param_std_1884 when (== (i_param_std_1884, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
      if(!((find_mv_2085 == ::std::string::npos)) ) goto _ml2087_L70230;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      //xfind_mv_65100<70225> := None<67995>varname;
      xfind_mv_65100  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      goto _end_inline_find_70216_L70231;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
    _ml2087_L70230:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 114 to 114
/*match case 2:i_param_std_1885*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 114 to 114
      //i_param_std_1885<70229>varname = find_mv_2085<70228>varname;
      i_param_std_1885 = find_mv_2085; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      //xfind_mv_65100<70225> := (Some<67996>struct i_param_std_1885<70229>varname);
      xfind_mv_65100  = FLX_VNR(1, new(*PTF gcp, _a5094t_71046_ptr_map, true) _a5094t_71046 (i_param_std_1885)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 3 to 134
    _end_inline_find_70216_L70231:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 145, cols 8 to 12
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 145, cols 8 to 12
      if(!(FLX_VNI(xfind_mv_65100)==0) ) goto _ml65102_L70226;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 6 to 22
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 145, cols 8 to 12
    _ml65102_L70226:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 8 to 13
/*match case 2:|Some any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 8 to 13
      if(!andthen(FLX_VNI(xfind_mv_65100)==1, (FLX_NEWP(_lam_65104)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65103_L70227;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 6 to 22
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 8 to 13
    _ml65103_L70227:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 6 to 22
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 6 to 22
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",146,6,146,22);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",146,6,146,22);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",148,5,148,6); // HACK! 
}

//------------------------------
//FUNCTION <69268>: +::aux_uncurry: Apply method
void* _fI69268_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69269_x_uncurry = _arg.data[0];
  _vI69270_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69277:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69273> := x_uncurry<69269>varname;
      _vI69273_aux__apos_2_mv_1387  = _vI69269_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69273_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69272;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69270>varname;: type void*
      return _vI69270_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69272:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69273_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI69276__lam_1391)(FLX_FPAR_PASS this, ptr_fI68132___plus_))) ) goto _ml1390_L69271;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69274>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69273>varname));
      _vI69274_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69273_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69275>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69273>varname));
      _vI69275_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69273_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69270> := (Snoc<67702>struct (y<69270>varname, h_param_std_1269<69274>varname));
      _vI69270_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69270_y, _vI69274_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69269> := t_param_std_1268<69275>varname;
      _vI69269_x_uncurry  = _vI69275_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69277;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69271:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <70688>: flx_pkgconfig::parse_args::aux::aux_uncurry: Apply method
void* _fI70688_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70689_x_uncurry = _arg.data[0];
  _vI70690_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70697:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70693> := x_uncurry<70689>varname;
      _vI70693_aux__apos_2_mv_1387  = _vI70689_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70693_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70692;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70690>varname;: type void*
      return _vI70690_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70692:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70693_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70696__lam_1391)(FLX_FPAR_PASS this, ptr_fI70680_aux, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1390_L70691;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70694>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70693>varname));
      _vI70694_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70693_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70695>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70693>varname));
      _vI70695_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70693_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70690> := (Snoc<67702>struct (y<70690>varname, h_param_std_1269<70694>varname));
      _vI70690_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70690_y, _vI70694_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70689> := t_param_std_1268<70695>varname;
      _vI70689_x_uncurry  = _vI70695_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70697;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70691:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69337>: flx_pkgconfig::check_id::_lam_65133: Apply method
 ::flx::rtl::cl_t _lam_65133::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",248,7,248,56); // HACK! 
}

//------------------------------
//FUNCTION <69914>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI69914__lam_1457::apply(_a14239t_71023 const &_arg ){
  _vI69915_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<67719>stackfun (x<69915>varname, key<65595>varname));: type  ::flx::rtl::cl_t
      return eq(_vI69915_x, ptr_lam_65171->key);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <69824>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2: Apply method
_a14239t_71023 _fI69824_search_and_replace__apos_2::apply(_a14239t_71023 const &_arg ){
  _vI69828_v = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<69836> := variables<65578>varname;
      _vI69836_xs  = ptrhandle_pkg->variables; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv69783<69835> := iterator'2<69837>closure;
      _genout_urv69783  = (FLX_NEWP(_fI69837_iterator__apos_2)(FLX_FPAR_PASS this, ptr_lam_65171, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //_generator_strings_7556<69825>varname = _genout_urv69783<69835>varname;
      _vI69825__generator_strings_7556 = _genout_urv69783; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    continue__ll_strings_7551_L69829:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //search_and_replace'2_mv_2360<69823> := apply(_generator_strings_7556<69825>varname, ());
      _vI69823_search_and_replace__apos_2_mv_2360  = (_vI69825__generator_strings_7556)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 1:|Some (k_param_std_2017, b_param_std_2018)*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!andthen(FLX_VNI(_vI69823_search_and_replace__apos_2_mv_2360)==1, (FLX_NEWP(_fI69846__lam_2363)(FLX_FPAR_PASS this, ptr_lam_65171, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml2362_L69830;
    // # C:/projects/felix/src/packages/strings.fdoc: line 738, cols 13 to 13
      //b_param_std_2018<69826>varname = apply((prj1:string^2 -> string), (arg of case 1 of search_and_replace'2_mv_2360<69823>varname));
      _vI69826_b_param_std_2018 = ((*((_at71025*)FLX_VNP(_vI69823_search_and_replace__apos_2_mv_2360))).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 738, cols 11 to 11
      //k_param_std_2017<69827>varname = apply((prj0:string^2 -> string), (arg of case 1 of search_and_replace'2_mv_2360<69823>varname));
      _vI69827_k_param_std_2017 = ((*((_at71025*)FLX_VNP(_vI69823_search_and_replace__apos_2_mv_2360))).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 734, cols 3 to 4
      //spos<69850> := literal[size]("0");
      _vI69850_spos  = 0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 724, cols 5 to 18
      //m<69847>varname = (len<14304>primfun k_param_std_2017<69827>varname);
      _vI69847_m = _vI69827_k_param_std_2017.size(); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 725, cols 5 to 24
      //o<69848>varname = (copyto<67994>primfun[size] (v<69828>varname, spos<69850>varname));
      _vI69848_o = ::flx::rtl::strutil::substr(_vI69828_v,0,_vI69850_spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 726, cols 5 to 32
      //n<69849>varname = (stl_find<14443>primfun (v<69828>varname, k_param_std_2017<69827>varname, spos<69850>varname));
      _vI69849_n = _vI69828_v.find(_vI69827_k_param_std_2017,_vI69850_spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    continue__ll_strings_7537_L69851:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      if(FLX_UNLIKELY(!(!((_vI69849_n == ::std::string::npos)) ) )) goto break__ll_strings_7537_L69852;
    // # C:/projects/felix/src/packages/strings.fdoc: line 728, cols 7 to 24
      // primcall +=<14301>primproc (&o<69848>ref, (+<14305>primfun ((substring<68032>primfun[size, size] (v<69828>varname, spos<69850>varname, n<69849>varname)), b_param_std_2018<69826>varname)));
      {
      _a14239t_71023* _tmp71148 = (_a14239t_71023*)&_vI69848_o;
      _a14239t_71023 _tmp71149 = ::flx::rtl::strutil::substr(_vI69828_v,_vI69850_spos,_vI69849_n) + _vI69826_b_param_std_2018 ;
      ((_tmp71148))->append((_tmp71149));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 729, cols 7 to 16
      //spos<69850>varname = (+<67457>primfun[size] (n<69849>varname, m<69847>varname));
      _vI69850_spos = _vI69849_n + _vI69847_m ; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 730, cols 7 to 34
      //n<69849>varname = (_ctor_size<5394>primfun (stl_find<14443>primfun (v<69828>varname, k_param_std_2017<69827>varname, spos<69850>varname)));
      _vI69849_n = ((_vI69828_v.find(_vI69827_k_param_std_2017,_vI69850_spos)))/*int.flx: ctor size IDENT*/; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      goto continue__ll_strings_7537_L69851;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    break__ll_strings_7537_L69852:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 732, cols 5 to 18
      // primcall +=<14301>primproc (&o<69848>ref, (copyfrom<67603>primfun[size] (v<69828>varname, spos<69850>varname)));
      {
      _a14239t_71023* _tmp71150 = (_a14239t_71023*)&_vI69848_o;
      _a14239t_71023 _tmp71151 = ::flx::rtl::strutil::substr(_vI69828_v,_vI69850_spos,_vI69828_v.size());
      ((_tmp71150))->append((_tmp71151));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 739, cols 7 to 36
      //v<69828>varname = o<69848>varname;
      _vI69828_v = _vI69848_o; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto continue__ll_strings_7551_L69829;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2362_L69830:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 2:|Some any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!andthen(FLX_VNI(_vI69823_search_and_replace__apos_2_mv_2360)==1, (FLX_NEWP(_fI69853__lam_2365)(FLX_FPAR_PASS this, ptr_lam_65171, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml2364_L69831;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto continue__ll_strings_7551_L69829;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2364_L69831:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 3:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!(FLX_VNI(_vI69823_search_and_replace__apos_2_mv_2360)==0) ) goto _ml2366_L69832;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto _em2360_L69833;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2366_L69832:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _em2360_L69833:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 741, cols 5 to 13
      //return v<69828>varname;: type _a14239t_71023
      return _vI69828_v;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",742,3,742,4); // HACK! 
}

//------------------------------
//FUNCTION <70117>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70117__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <70706>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI70706_aux::apply(_at71054 const &_arg ){
  _vI70707_inp = _arg.data[0];
  _vI70708_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
    start_69233_L70727:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //aux_mv_1493<70711> := inp<70707>varname;
      _vI70711_aux_mv_1493  = _vI70707_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
      if(!(FLX_VNI(_vI70711_aux_mv_1493)==0) ) goto _ml1495_L70710;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<70714>stackfun ((Snoc<67702>struct (out<70708>varname, fld<70631>varname)), Empty<67690>varname));: type void*
      return _fI70714_aux_uncurry(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70708_out, ptrparse_args->fld))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
    _ml1495_L70710:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1301, h_param_std_1302)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      if(!andthen(FLX_VNI(_vI70711_aux_mv_1493)==1, (FLX_NEWP(_fI70724__lam_1502)(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1496_L70709;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 16 to 16
      //h_param_std_1302<70712>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1493<70711>varname));
      _vI70712_h_param_std_1302 = (*((_tt71026*)FLX_VNP(_vI70711_aux_mv_1493))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 14 to 14
      //t_param_std_1301<70713>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1493<70711>varname));
      _vI70713_t_param_std_1301 = (*((_tt71026*)FLX_VNP(_vI70711_aux_mv_1493))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 580, cols 12 to 24
      //aux_mv_1498<70726> := (lnot<5216>primfun (eq<67719>stackfun (h_param_std_1302<70712>varname, fld<70631>varname)));
      _vI70726_aux_mv_1498  = !eq(_vI70712_h_param_std_1302, ptrparse_args->fld) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
      if(!(_vI70726_aux_mv_1498%2==1) ) goto _ml1500_L70725;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //out<70708> := (Snoc<67702>struct (out<70708>varname, h_param_std_1302<70712>varname));
      _vI70708_out  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70708_out, _vI70712_h_param_std_1302))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<70707> := t_param_std_1301<70713>varname;
      _vI70707_inp  = _vI70713_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_69233_L70727;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
    _ml1500_L70725:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<70707> := t_param_std_1301<70713>varname;
      _vI70707_inp  = _vI70713_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_69233_L70727;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
    _ml1496_L70709:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",584,5,584,6); // HACK! 
}

//------------------------------
//FUNCTION <69239>: flx_pkgconfig::tail_val::aux: Apply method
void* aux::apply(_at71054 const &_arg ){
  inp = _arg.data[0];
  _vI69241_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
    start_69233_L69260:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //aux_mv_1493<69244> := inp<69240>varname;
      aux_mv_1493  = inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
      if(!(FLX_VNI(aux_mv_1493)==0) ) goto _ml1495_L69243;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<69247>stackfun ((Snoc<67702>struct (out<69241>varname, v<65570>varname)), Empty<67690>varname));: type void*
      return _fI69247_aux_uncurry(FLX_FPAR_PASS this, ptrtail_val, ptrflx_pkgconfig)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69241_out, ptrtail_val->_vI65570_v))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
    _ml1495_L69243:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1301, h_param_std_1302)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      if(!andthen(FLX_VNI(aux_mv_1493)==1, (FLX_NEWP(_lam_1502)(FLX_FPAR_PASS this, ptrtail_val, ptrflx_pkgconfig))) ) goto _ml1496_L69242;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 16 to 16
      //h_param_std_1302<69245>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1493<69244>varname));
      h_param_std_1302 = (*((_tt71026*)FLX_VNP(aux_mv_1493))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 14 to 14
      //t_param_std_1301<69246>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1493<69244>varname));
      t_param_std_1301 = (*((_tt71026*)FLX_VNP(aux_mv_1493))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 580, cols 12 to 24
      //aux_mv_1498<69259> := (lnot<5216>primfun (eq<67719>stackfun (h_param_std_1302<69245>varname, v<65570>varname)));
      aux_mv_1498  = !eq(h_param_std_1302, ptrtail_val->_vI65570_v) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
      if(!(aux_mv_1498%2==1) ) goto _ml1500_L69258;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //out<69241> := (Snoc<67702>struct (out<69241>varname, h_param_std_1302<69245>varname));
      _vI69241_out  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69241_out, h_param_std_1302))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<69240> := t_param_std_1301<69246>varname;
      inp  = t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_69233_L69260;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
    _ml1500_L69258:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<69240> := t_param_std_1301<69246>varname;
      inp  = t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_69233_L69260;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
    _ml1496_L69242:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",584,5,584,6); // HACK! 
}

//------------------------------

//PROCEDURE <65580:> flx_pkgconfig::handle_pkg::_lam_65160: Call method
::flx::rtl::con_t * _lam_65160::call(::flx::rtl::con_t *_ptr_caller, _a14239t_71023 const &_arg){
  _caller = _ptr_caller;
  dir = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65580:> flx_pkgconfig::handle_pkg::_lam_65160: Resume method
::flx::rtl::con_t *_lam_65160::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 15 to 21
      //_lam_65160_mv_65162<69942> := (==<68130>primfun[string] (dir<65621>varname, ""));
      _lam_65160_mv_65162  = (dir == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
      if(!(_lam_65160_mv_65162%2==1) ) goto _ml65164_L69943;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
      //_urv69941<69941> := ".";
      _urv69941  = ::std::string("."); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
      goto _end_hash_593124728;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
    _ml65164_L69943:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
      //_urv69941<69941> := dir<65621>varname;
      _urv69941  = dir; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
    _end_hash_593124728:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 295, cols 10 to 11
      //filename<65584>varname = (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun (_urv69941<69941>varname, "\")), pkg<65638>varname)), ".")), extension<65430>varname));
      filename = (((_urv69941 + ::std::string("\\") ) + ptrhandle_pkg->pkg ) + ::std::string(".") ) + ptrflx_pkgconfig->extension ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 314, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_621_L69973;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_input] ", filename<65584>varname)), "\x0A")));
      {
      _a14239t_71023 _tmp71155 = (::std::string("[Open_input] ") + filename ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp71155)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 314, cols 5 to 6
    _ifdoelse_std_621_L69973:;
    // # C:/projects/felix/src/packages/io.fdoc: line 315, cols 5 to 29
      //_genout_urv69978<69978> := (raw_fopen_input<8420>primfun filename<65584>varname);
      _genout_urv69978  = fopen(filename.c_str(),"rb"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 315, cols 5 to 29
      //_genout_urv69969<69975> := _genout_urv69978<69978>varname;
      _genout_urv69969  = _genout_urv69978; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 315, cols 5 to 29
      //_genout_urv69971<69971> := _genout_urv69969<69975>varname;
      _genout_urv69971  = _genout_urv69969; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 299, cols 10 to 37
      //file<65585>varname = _genout_urv69971<69971>varname;
      file = _genout_urv69971; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 356, cols 10 to 14
      //_genout_urv69979<69979> := (valid<8422>primfun file<65585>varname);
      _genout_urv69979  = file!=(FILE*)0; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 356, cols 10 to 14
      if(!_genout_urv69979 ) goto _ifdoelse_flx_pkgconfig_65069_L65636;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
      if(!ptrflx_pkgconfig->dolist ) goto _ifdoelse_flx_pkgconfig_65071_L65627;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 302, cols 20 to 23
      //_lam_65160_mv_65166<65166> := keep<65429>varname;
      _lam_65160_mv_65166  = ptrflx_pkgconfig->keep; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 303, cols 16 to 28
/*match case 1:|keepleftmost*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 303, cols 16 to 28
      if(!(_lam_65160_mv_65166%3==1) ) goto _ml65168_L65622;
    // # C:/projects/felix/src/packages/lists.fdoc: line 514, cols 3 to 4
      //insert_unique'3_mv_1487<69986> := (mem_uncurry<68588>stackfun (_lam_1457<69987>closure, result<65528>varname));
      _vI69986_insert_unique__apos_3_mv_1487  = mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71063((FLX_NEWP(_fI69987__lam_1457)(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->result)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      if(!(_vI69986_insert_unique__apos_3_mv_1487%2==1) ) goto _ml1489_L69985;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      //_urv69124<69984> := result<65528>varname;
      _vI69984__urv69124  = ptrflx_pkgconfig->result; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      goto _end_hash_732286722;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
    _ml1489_L69985:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //_urv69124<69984> := (aux_uncurry<69999>stackfun ((Snoc<67702>struct ((aux_uncurry<69989>stackfun (result<65528>varname, Empty<67690>varname)), pkg<65638>varname)), Empty<67690>varname));
      _vI69984__urv69124  = _fI69999_aux_uncurry(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_fI69989_aux_uncurry(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at71054(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, ptrhandle_pkg->pkg))), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 566, cols 3 to 4
    _end_hash_732286722:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 273, cols 6 to 42
      //result<65528>varname = _urv69124<69984>varname;
      ptrflx_pkgconfig->result = _vI69984__urv69124; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
      goto _ifdoelse_flx_pkgconfig_65071_L65627;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 303, cols 16 to 28
    _ml65168_L65622:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 304, cols 16 to 29
/*match case 2:|keeprightmost*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 304, cols 16 to 29
      if(!(_lam_65160_mv_65166%3==2) ) goto _ml65169_L65623;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 278, cols 8 to 44
      //result<65528>varname = (aux<70015>stackfun (result<65528>varname, Empty<67690>varname));
      ptrflx_pkgconfig->result = _fI70015_aux(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at71054(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
      goto _ifdoelse_flx_pkgconfig_65071_L65627;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 304, cols 16 to 29
    _ml65169_L65623:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 305, cols 16 to 23
/*match case 3:|keepall*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 305, cols 16 to 23
      if(!(_lam_65160_mv_65166%3==0) ) goto _ml65170_L65624;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 283, cols 7 to 25
      //result<65528>varname = (+<68132>stackfun (result<65528>varname, pkg<65638>varname));
      ptrflx_pkgconfig->result = _fI68132___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt71026(ptrflx_pkgconfig->result, ptrhandle_pkg->pkg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
      goto _ifdoelse_flx_pkgconfig_65071_L65627;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 305, cols 16 to 23
    _ml65170_L65624:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 306, cols 14 to 23
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 306, cols 14 to 23
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",306,14,306,23);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",306,14,306,23);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
    _ifdoelse_flx_pkgconfig_65071_L65627:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 308, cols 12 to 37
      //lines<65586>varname = Empty<67690>varname;
      lines = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 309, cols 12 to 34
      //_genout_urv70043<70043> := (readln<8425>primfun file<65585>varname);
      _genout_urv70043  = ::flx::rtl::ioutil::readln(file); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 309, cols 12 to 34
      //line<65587>varname = _genout_urv70043<70043>varname;
      _vI65587_line = _genout_urv70043; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 316, cols 12 to 16
    continue__ll_flx_pkgconfig_11046_L65628:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 316, cols 12 to 16
      if(FLX_UNLIKELY(!(!((_vI65587_line == ::std::string(""))) ) )) goto break__ll_flx_pkgconfig_11046_L65631;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 311, cols 14 to 30
      //line<65587>varname = (lstrip<14855>stackfun ((rstrip<14873>stackfun (line<65587>varname, " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      _vI65587_line = lstrip(rstrip(_vI65587_line, ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 314, cols 14 to 18
      if(!(!((_vI65587_line == ::std::string("")))  && !((::flx::rtl::strutil::subscript(_vI65587_line,0) == ::flx::rtl::strutil::subscript(::std::string("#"),0)))  ) ) goto _ifdoelse_flx_pkgconfig_65074_L65630;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 313, cols 16 to 39
      //lines<65586>varname = (Snoc<67702>struct (lines<65586>varname, line<65587>varname));
      lines = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(lines, _vI65587_line))); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 314, cols 14 to 18
    _ifdoelse_flx_pkgconfig_65074_L65630:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 315, cols 14 to 31
      //_genout_urv70076<70076> := (readln<8425>primfun file<65585>varname);
      _genout_urv70076  = ::flx::rtl::ioutil::readln(file); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 315, cols 14 to 31
      //line<65587>varname = _genout_urv70076<70076>varname;
      _vI65587_line = _genout_urv70076; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 316, cols 12 to 16
      goto continue__ll_flx_pkgconfig_11046_L65628;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 316, cols 12 to 16
    break__ll_flx_pkgconfig_11046_L65631:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 317, cols 12 to 54
      if(ptrflx_pkgconfig->backwards) goto _ifdoelse_flx_pkgconfig_65076_L65633;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 317, cols 32 to 48
      //lines<65586>varname = (aux_uncurry<70079>stackfun (lines<65586>varname, Empty<67690>varname));
      lines = _fI70079_aux_uncurry(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at71054(lines, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 317, cols 12 to 54
    _ifdoelse_flx_pkgconfig_65076_L65633:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<68595>directproc (_lam_65171<65588>closure, lines<65586>varname);
      {
      _pt71064* _tmp71157 = (FLX_NEWP(_lam_65171)(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig));
      FLX_SET_PC(71158)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt71065((_tmp71157), lines));
      }
    FLX_CASE_LABEL(71158)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 353, cols 12 to 23
      // primcall fclose<8423>primproc file<65585>varname;
      (void)fclose(file);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 354, cols 12 to 23
      //found<65579>varname = (case 1 of bool);
      ptrhandle_pkg->found = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 355, cols 12 to 26
      if(!ptrflx_pkgconfig->hide ) goto _ifdoelse_flx_pkgconfig_65069_L65636;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 355, cols 12 to 26
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 357, cols 13 to 9
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 356, cols 10 to 14
    _ifdoelse_flx_pkgconfig_65069_L65636:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 357, cols 13 to 9
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <69846>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2::_lam_2363: Apply method
 ::flx::rtl::cl_t _fI69846__lam_2363::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9); // HACK! 
}

//------------------------------
//FUNCTION <70680>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI70680_aux::apply(_at71054 const &_arg ){
  _vI70681_inp = _arg.data[0];
  _vI70682_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
    start_69233_L70701:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //aux_mv_1493<70685> := inp<70681>varname;
      _vI70685_aux_mv_1493  = _vI70681_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
      if(!(FLX_VNI(_vI70685_aux_mv_1493)==0) ) goto _ml1495_L70684;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<70688>stackfun ((Snoc<67702>struct (out<70682>varname, "Requires")), Empty<67690>varname));: type void*
      return _fI70688_aux_uncurry(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70682_out, ::std::string("Requires")))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
    _ml1495_L70684:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1301, h_param_std_1302)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      if(!andthen(FLX_VNI(_vI70685_aux_mv_1493)==1, (FLX_NEWP(_fI70698__lam_1502)(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1496_L70683;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 16 to 16
      //h_param_std_1302<70686>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1493<70685>varname));
      _vI70686_h_param_std_1302 = (*((_tt71026*)FLX_VNP(_vI70685_aux_mv_1493))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 14 to 14
      //t_param_std_1301<70687>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1493<70685>varname));
      _vI70687_t_param_std_1301 = (*((_tt71026*)FLX_VNP(_vI70685_aux_mv_1493))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 580, cols 12 to 24
      //aux_mv_1498<70700> := (lnot<5216>primfun (eq<67719>stackfun (h_param_std_1302<70686>varname, "Requires")));
      _vI70700_aux_mv_1498  = !eq(_vI70686_h_param_std_1302, ::std::string("Requires")) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
      if(!(_vI70700_aux_mv_1498%2==1) ) goto _ml1500_L70699;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //out<70682> := (Snoc<67702>struct (out<70682>varname, h_param_std_1302<70686>varname));
      _vI70682_out  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70682_out, _vI70686_h_param_std_1302))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<70681> := t_param_std_1301<70687>varname;
      _vI70681_inp  = _vI70687_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_69233_L70701;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
    _ml1500_L70699:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<70681> := t_param_std_1301<70687>varname;
      _vI70681_inp  = _vI70687_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_69233_L70701;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
    _ml1496_L70683:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",584,5,584,6); // HACK! 
}

//------------------------------
//FUNCTION <69987>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI69987__lam_1457::apply(_a14239t_71023 const &_arg ){
  _vI69988_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<67719>stackfun (x<69988>varname, pkg<65638>varname));: type  ::flx::rtl::cl_t
      return eq(_vI69988_x, ptrhandle_pkg->pkg);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------

//PROCEDURE <65588:> flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171: Call method
::flx::rtl::con_t * _lam_65171::call(::flx::rtl::con_t *_ptr_caller, _a14239t_71023 const &_arg){
  _caller = _ptr_caller;
  _vI65611_line = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65588:> flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171: Resume method
::flx::rtl::con_t *_lam_65171::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 322, cols 14 to 60
      //_ds2_65172<65590>varname = (get_variable<65550>stackfun line<65611>varname);
      _ds2_65172 = get_variable(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_vI65611_line) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 322, cols 18 to 29
      //variable<65591>varname = apply((prj0:string^2 -> string), _ds2_65172<65590>varname);
      variable = (_ds2_65172.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 322, cols 32 to 39
      //vval<65592>varname = apply((prj1:string^2 -> string), _ds2_65172<65590>varname);
      vval = (_ds2_65172.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 349, cols 14 to 18
      if(!(!((variable == ::std::string(""))) ) ) goto _ifdoend_flx_pkgconfig_65077_L65612;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 324, cols 16 to 59
      //bdy<65593>varname = (search_and_replace_uncurry<68589>stackfun (variables<65578>varname, vval<65592>varname));
      bdy = search_and_replace_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71068(ptrhandle_pkg->variables, vval)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 325, cols 16 to 69
      //variables<65578>varname = (Snoc<68020>struct (variables<65578>varname, ((+<14305>primfun ((+<14305>primfun ("${", variable<65591>varname)), "}")), bdy<65593>varname)));
      ptrhandle_pkg->variables = FLX_VNR(1, new(*PTF gcp, _tt71060_ptr_map, true) _tt71060 (_tt71060(ptrhandle_pkg->variables, _at71025((::std::string("${") + variable ) + ::std::string("}") , bdy)))); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 350, cols 18 to 13
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 349, cols 14 to 18
    _ifdoend_flx_pkgconfig_65077_L65612:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 327, cols 16 to 55
      //_ds2_65173<65594>varname = (get_field<65542>stackfun line<65611>varname);
      _ds2_65173 = get_field(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_vI65611_line) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 327, cols 20 to 26
      //key<65595>varname = apply((prj0:string^2 -> string), _ds2_65173<65594>varname);
      key = (_ds2_65173.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 327, cols 29 to 37
      //value<65596>varname = apply((prj1:string^2 -> string), _ds2_65173<65594>varname);
      value = (_ds2_65173.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 328, cols 16 to 44
      if(!ptrflx_pkgconfig->listkeys ) goto _ifdoelse_flx_pkgconfig_65080_L65614;
    // # C:/projects/felix/src/packages/lists.fdoc: line 514, cols 3 to 4
      //insert_unique'3_mv_1487<69636> := (mem_uncurry<68588>stackfun (_lam_1457<69637>closure, result<65528>varname));
      _vI69636_insert_unique__apos_3_mv_1487  = mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71063((FLX_NEWP(_fI69637__lam_1457)(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->result)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      if(!(_vI69636_insert_unique__apos_3_mv_1487%2==1) ) goto _ml1489_L69635;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      //_urv69124<69634> := result<65528>varname;
      _vI69634__urv69124  = ptrflx_pkgconfig->result; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      goto _end_hash_731430933;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
    _ml1489_L69635:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //_urv69124<69634> := (aux_uncurry<69649>stackfun ((Snoc<67702>struct ((aux_uncurry<69639>stackfun (result<65528>varname, Empty<67690>varname)), key<65595>varname)), Empty<67690>varname));
      _vI69634__urv69124  = _fI69649_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_fI69639_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at71054(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, key))), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 566, cols 3 to 4
    _end_hash_731430933:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 273, cols 6 to 42
      //result<65528>varname = _urv69124<69634>varname;
      ptrflx_pkgconfig->result = _vI69634__urv69124; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 328, cols 16 to 44
    _ifdoelse_flx_pkgconfig_65080_L65614:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 329, cols 16 to 42
      //values<65597>varname = (lexstr<65393>stackfun value<65596>varname);
      values = lexstr(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(value) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<69896>varname = (aux_uncurry<69897>stackfun (values<65597>varname, Empty<67690>varname));
      r = _fI69897_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at71054(values, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<67684>primproc[string, &list] &r<69896>ref;
      {
      void** _tmp71160 = (void**)&r;
      _rev(((_tmp71160)),(_a14239t_71023*)0);
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 330, cols 16 to 65
      //values<65597>varname = r<69896>varname;
      values = r; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
      if(!mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71063((FLX_NEWP(_fI69914__lam_1457)(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->fields)) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_65082_L65616;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 332, cols 24 to 27
      //_lam_65171_mv_65175<69919> := keep<65429>varname;
      _lam_65171_mv_65175  = ptrflx_pkgconfig->keep; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 333, cols 20 to 32
/*match case 1:|keepleftmost*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 333, cols 20 to 32
      if(!(_lam_65171_mv_65175%3==1) ) goto _ml65177_L69923;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<68595>directproc (add_val<65564>closure, values<65597>varname);
      {
      _pt71064* _tmp71161 = (FLX_NEWP(add_val)(FLX_FPAR_PASS ptrflx_pkgconfig));
      FLX_SET_PC(71162)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt71065((_tmp71161), values));
      }
    FLX_CASE_LABEL(71162)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
      goto _ifdoelse_flx_pkgconfig_65082_L65616;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 333, cols 20 to 32
    _ml65177_L69923:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 334, cols 20 to 33
/*match case 2:|keeprightmost*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 334, cols 20 to 33
      if(!(_lam_65171_mv_65175%3==2) ) goto _ml65179_L69924;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<68595>directproc (tail_val<65568>closure, values<65597>varname);
      {
      _pt71064* _tmp71163 = (FLX_NEWP(tail_val)(FLX_FPAR_PASS ptrflx_pkgconfig));
      FLX_SET_PC(71164)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt71065((_tmp71163), values));
      }
    FLX_CASE_LABEL(71164)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
      goto _ifdoelse_flx_pkgconfig_65082_L65616;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 334, cols 20 to 33
    _ml65179_L69924:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 20 to 27
/*match case 3:|keepall*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 20 to 27
      if(!(_lam_65171_mv_65175%3==0) ) goto _ml65181_L69925;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<68595>directproc (keep_val<65572>closure, values<65597>varname);
      {
      _pt71064* _tmp71165 = (FLX_NEWP(keep_val)(FLX_FPAR_PASS ptrflx_pkgconfig));
      FLX_SET_PC(71166)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt71065((_tmp71165), values));
      }
    FLX_CASE_LABEL(71166)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
      goto _ifdoelse_flx_pkgconfig_65082_L65616;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 20 to 27
    _ml65181_L69925:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 18 to 57
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 18 to 57
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",335,18,335,57);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",335,18,335,57);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
    _ifdoelse_flx_pkgconfig_65082_L65616:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 346, cols 16 to 20
      if(!mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71063((FLX_NEWP(_fI69935__lam_1457)(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->recfields)) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_65078_L65619;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //jump to procedure direct tail call iter_uncurry<68595>directjump (_lam_65183<65607>closure, values<65597>varname);
      {
      _pt71064* _tmp71168 = (FLX_NEWP(_lam_65183)(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig));
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(tmp, _tt71065((_tmp71168), values));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 350, cols 18 to 13
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 349, cols 14 to 18
    _ifdoelse_flx_pkgconfig_65078_L65619:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 350, cols 18 to 13
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------

//PROCEDURE <65671:> _init_: Call method
void _init_::stack_call(){
  ::flx::rtl::con_t *cc = call(0);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * _init_::call(::flx::rtl::con_t *_ptr_caller){
  _caller = _ptr_caller;
  INIT_PC
  return this;
}

//PROCEDURE <65671:> _init_: Resume method
::flx::rtl::con_t *_init_::resume(){
    // # C:/projects/felix/src/packages/char.fdoc: line 55, cols 3 to 43
      //upper<5705>varname = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
      PTF upper = ::std::string("ABCDEFGHIJKLMNOPQRSTUVWXYZ"); //assign simple
    // # C:/projects/felix/src/packages/char.fdoc: line 56, cols 3 to 43
      //lower<5706>varname = "abcdefghijklmnopqrstuvwxyz";
      PTF lower = ::std::string("abcdefghijklmnopqrstuvwxyz"); //assign simple
    // # C:/projects/felix/src/packages/char.fdoc: line 57, cols 3 to 30
      //letters<5707>varname = (+<14305>primfun (upper<5705>varname, lower<5706>varname));
      PTF letters = PTF upper + PTF lower ; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 425, cols 1 to 9
      // primcall kludge<65667>primproc ();
      PTF gcp->allow_collection_anywhere=false;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<68964>varname = (aux_uncurry<68965>stackfun ((range<11786>stackfun (0, argc<7608>varname, 1)), Empty<67690>varname));
      _vI68964_r = aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt71031(range(FLX_FPAR_PASS 0, PTF argc, 1), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<67684>primproc[string, &list] &r<68964>ref;
      {
      void** _tmp71171 = (void**)&_vI68964_r;
      _rev(((_tmp71171)),(_a14239t_71023*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 272, cols 3 to 4
      //tail_mv_1372<68987> := r<68964>varname;
      tail_mv_1372  = _vI68964_r; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 270, cols 7 to 15
/*match case 1:|Snoc (t_param_std_1263, any)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 270, cols 7 to 15
      if(!andthen(FLX_VNI(tail_mv_1372)==1, (FLX_NEWP(_lam_1375)(FLX_FPAR_PASS this))) ) goto _ml1374_L68986;
    // # C:/projects/felix/src/packages/lists.fdoc: line 270, cols 12 to 12
      //t_param_std_1263<68988>varname = apply((prj0:list * string -> list), (arg of case 1 of tail_mv_1372<68987>varname));
      t_param_std_1263 = (*((_tt71026*)FLX_VNP(tail_mv_1372))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 270, cols 20 to 28
      //_urv68984<68984> := t_param_std_1263<68988>varname;
      _urv68984  = t_param_std_1263; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 270, cols 20 to 28
      goto _end_inline_tail_68991_L68991;
    // # C:/projects/felix/src/packages/lists.fdoc: line 270, cols 7 to 15
    _ml1374_L68986:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 271, cols 5 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 271, cols 5 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",271,5,271,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",271,5,271,14);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 272, cols 3 to 4
    _end_inline_tail_68991_L68991:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 428, cols 1 to 75
      //_genout_urv70944<70944> := (flx_pkgconfig<65365>stackfun _urv68984<68984>varname);
      _genout_urv70944  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_urv68984) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 428, cols 1 to 75
      //_ds2_64992<65668>varname = _genout_urv70944<70944>varname;
      PTF _ds2_64992 = _genout_urv70944; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 428, cols 1 to 75
      //return_code<65669>varname = apply((prj0:int * list -> int), _ds2_64992<65668>varname);
      PTF _vI65669_return_code = PTF _ds2_64992.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 428, cols 1 to 75
      //result<65670>varname = apply((prj1:int * list -> list), _ds2_64992<65668>varname);
      PTF _vI65670_result = PTF _ds2_64992.mem_1; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 440, cols 53 to 69
      // primcall write<8439>primproc (cstdout<8414>varname, (lstrip<14855>stackfun ((rstrip<14873>stackfun ((cat_uncurry<68581>stackfun (" ", result<65670>varname)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")));
      {
      _a14239t_71023 _tmp71173 = lstrip(rstrip(cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71043(::std::string(" "), PTF _vI65670_result)) /* apply_stack */, ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B"));
      ::flx::rtl::ioutil::write(stdout,((_tmp71173)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 437, cols 31 to 46
      // primcall write<8439>primproc (cstdout<8414>varname, "\x0A");
      ::flx::rtl::ioutil::write(stdout,(::std::string("\n")));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 431, cols 1 to 25
      // primcall exit<7637>primproc return_code<65669>varname;
      ::std::exit((PTF _vI65669_return_code));
    FLX_RETURN
}
//------------------------------
//FUNCTION <69176>: iter_uncurry::_lam_1354: Apply method
 ::flx::rtl::cl_t _lam_1354::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",221,9,221,17); // HACK! 
}

//------------------------------
//FUNCTION <69999>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry: Apply method
void* _fI69999_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70000_x_uncurry = _arg.data[0];
  _vI70001_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70008:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70004> := x_uncurry<70000>varname;
      _vI70004_aux__apos_2_mv_1387  = _vI70000_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70004_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70003;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70001>varname;: type void*
      return _vI70001_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70003:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70004_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70007__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L70002;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70005>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70004>varname));
      _vI70005_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70004_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70006>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70004>varname));
      _vI70006_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70004_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70001> := (Snoc<67702>struct (y<70001>varname, h_param_std_1269<70005>varname));
      _vI70001_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70001_y, _vI70005_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70000> := t_param_std_1268<70006>varname;
      _vI70000_x_uncurry  = _vI70006_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70008;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70002:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <68132>: +: Apply method
void* _fI68132___plus_::apply(_tt71026 const &_arg ){
  _vI68133_x = _arg.mem_0;
  y = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<69281>stackfun ((Snoc<67702>struct ((aux_uncurry<69268>stackfun (x<68133>varname, Empty<67690>varname)), y<68134>varname)), Empty<67690>varname));: type void*
      return _fI69281_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_fI69268_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at71054(_vI68133_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */, y))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",419,3,419,69); // HACK! 
}

//------------------------------
//FUNCTION <70087>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70087__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <69577>: search_and_replace_uncurry::_lam_2365: Apply method
 ::flx::rtl::cl_t _lam_2365::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9); // HACK! 
}

//------------------------------
//FUNCTION <70911>: flx_pkgconfig::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70911__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <65393>: flx_pkgconfig::lexstr: Apply method
void* lexstr::apply(_a14239t_71023 const &_arg ){
  _vI65407_s__apos_ = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 102, cols 7 to 17
      //s<65395>varname = s'<65407>varname;
      s = _vI65407_s__apos_; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 103, cols 7 to 35
      //first<65396>varname = (start_iterator<15975>primfun s<65395>varname);
      first = s.c_str(); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 104, cols 7 to 34
      //finish<65397>varname = (end_iterator<15976>primfun s<65395>varname);
      _vI65397_finish = s.c_str()+s.size(); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 105, cols 7 to 26
      //current<65398>varname = first<65396>varname;
      current = first; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 106, cols 7 to 32
      //words<65399>varname = Empty<67690>varname;
      words = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
    continue__ll_flx_pkgconfig_10812_L65408:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
      if(FLX_UNLIKELY(!(!((current == _vI65397_finish)) ) )) goto break__ll_flx_pkgconfig_10812_L65409;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 108, cols 15 to 35
      //lexstr_mv_65095<69754> := (lexit<65371>stackfun (current<65398>varname, finish<65397>varname));
      lexstr_mv_65095  = lexit(ptrflx_pkgconfig)
      .apply(_at71070(current, _vI65397_finish)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 109, cols 11 to 21
/*match case 1:(next_param_flx_pkgconfig_65005, lexeme_param_flx_pkgconfig_65006)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 109, cols 16 to 21
      //lexeme_param_flx_pkgconfig_65006<69755>varname = apply((prj1:lex_iterator * string -> string), lexstr_mv_65095<69754>varname);
      lexeme_param_flx_pkgconfig_65006 = lexstr_mv_65095.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 109, cols 11 to 14
      //next_param_flx_pkgconfig_65005<69756>varname = apply((prj0:lex_iterator * string -> lex_iterator), lexstr_mv_65095<69754>varname);
      next_param_flx_pkgconfig_65005 = lexstr_mv_65095.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 111, cols 13 to 26
      //current<65398>varname = next_param_flx_pkgconfig_65005<69756>varname;
      current = next_param_flx_pkgconfig_65005; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 112, cols 13 to 63
      if(!(!((lexeme_param_flx_pkgconfig_65006 == ::std::string(""))) ) ) goto continue__ll_flx_pkgconfig_10812_L65408;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 112, cols 32 to 57
      //words<65399>varname = (Snoc<67702>struct (words<65399>varname, lexeme_param_flx_pkgconfig_65006<69755>varname));
      words = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(words, lexeme_param_flx_pkgconfig_65006))); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
      goto continue__ll_flx_pkgconfig_10812_L65408;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
      goto continue__ll_flx_pkgconfig_10812_L65408;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
      goto continue__ll_flx_pkgconfig_10812_L65408;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
    break__ll_flx_pkgconfig_10812_L65409:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<69766>stackfun (words<65399>varname, Empty<67690>varname));: type void*
      return _fI69766_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(words, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",118,5,118,6); // HACK! 
}

//------------------------------
//FUNCTION <70127>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70127__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <70109>: flx_pkgconfig::handle_pkg::aux_uncurry: Apply method
void* _fI70109_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70110_x_uncurry = _arg.data[0];
  _vI70111_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70118:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70114> := x_uncurry<70110>varname;
      _vI70114_aux__apos_2_mv_1387  = _vI70110_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70114_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70113;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70111>varname;: type void*
      return _vI70111_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70113:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70114_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70117__lam_1391)(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L70112;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70115>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70114>varname));
      _vI70115_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70114_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70116>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70114>varname));
      _vI70116_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70114_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70111> := (Snoc<67702>struct (y<70111>varname, h_param_std_1269<70115>varname));
      _vI70111_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70111_y, _vI70115_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70110> := t_param_std_1268<70116>varname;
      _vI70110_x_uncurry  = _vI70116_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70118;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70112:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69639>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry: Apply method
void* _fI69639_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69640_x_uncurry = _arg.data[0];
  _vI69641_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69648:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69644> := x_uncurry<69640>varname;
      _vI69644_aux__apos_2_mv_1387  = _vI69640_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69644_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69643;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69641>varname;: type void*
      return _vI69641_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69643:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69644_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI69647__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65171, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L69642;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69645>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69644>varname));
      _vI69645_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69644_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69646>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69644>varname));
      _vI69646_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69644_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69641> := (Snoc<67702>struct (y<69641>varname, h_param_std_1269<69645>varname));
      _vI69641_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69641_y, _vI69645_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69640> := t_param_std_1268<69646>varname;
      _vI69640_x_uncurry  = _vI69646_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69648;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69642:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69140>: flx_pkgconfig::add_val::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <68589>: search_and_replace_uncurry: Apply method
_a14239t_71023 search_and_replace_uncurry::apply(_tt71068 const &_arg ){
  vs_uncurry = _arg.mem_0;
  _vI68746_v = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<69527> := vs_uncurry<68752>varname;
      _vI69527_xs  = vs_uncurry; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv69526<69526> := iterator'2<69528>closure;
      _genout_urv69526  = (FLX_NEWP(_fI69528_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //_generator_strings_7556<68741>varname = _genout_urv69526<69526>varname;
      _generator_strings_7556 = _genout_urv69526; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    continue__ll_strings_7551_L68747:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //search_and_replace'2_mv_2360<68737> := apply(_generator_strings_7556<68741>varname, ());
      _vI68737_search_and_replace__apos_2_mv_2360  = (_generator_strings_7556)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 1:|Some (k_param_std_2017, b_param_std_2018)*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!andthen(FLX_VNI(_vI68737_search_and_replace__apos_2_mv_2360)==1, (FLX_NEWP(_lam_2363)(FLX_FPAR_PASS this))) ) goto _ml2362_L68748;
    // # C:/projects/felix/src/packages/strings.fdoc: line 738, cols 13 to 13
      //b_param_std_2018<68743>varname = apply((prj1:string^2 -> string), (arg of case 1 of search_and_replace'2_mv_2360<68737>varname));
      b_param_std_2018 = ((*((_at71025*)FLX_VNP(_vI68737_search_and_replace__apos_2_mv_2360))).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 738, cols 11 to 11
      //k_param_std_2017<68744>varname = apply((prj0:string^2 -> string), (arg of case 1 of search_and_replace'2_mv_2360<68737>varname));
      k_param_std_2017 = ((*((_at71025*)FLX_VNP(_vI68737_search_and_replace__apos_2_mv_2360))).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 734, cols 3 to 4
      //spos<69570> := literal[size]("0");
      spos  = 0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 724, cols 5 to 18
      //m<69567>varname = (len<14304>primfun k_param_std_2017<68744>varname);
      m = k_param_std_2017.size(); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 725, cols 5 to 24
      //o<69568>varname = (copyto<67994>primfun[size] (v<68746>varname, spos<69570>varname));
      o = ::flx::rtl::strutil::substr(_vI68746_v,0,spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 726, cols 5 to 32
      //n<69569>varname = (stl_find<14443>primfun (v<68746>varname, k_param_std_2017<68744>varname, spos<69570>varname));
      _vI69569_n = _vI68746_v.find(k_param_std_2017,spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    continue__ll_strings_7537_L69571:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      if(FLX_UNLIKELY(!(!((_vI69569_n == ::std::string::npos)) ) )) goto break__ll_strings_7537_L69572;
    // # C:/projects/felix/src/packages/strings.fdoc: line 728, cols 7 to 24
      // primcall +=<14301>primproc (&o<69568>ref, (+<14305>primfun ((substring<68032>primfun[size, size] (v<68746>varname, spos<69570>varname, n<69569>varname)), b_param_std_2018<68743>varname)));
      {
      _a14239t_71023* _tmp71177 = (_a14239t_71023*)&o;
      _a14239t_71023 _tmp71178 = ::flx::rtl::strutil::substr(_vI68746_v,spos,_vI69569_n) + b_param_std_2018 ;
      ((_tmp71177))->append((_tmp71178));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 729, cols 7 to 16
      //spos<69570>varname = (+<67457>primfun[size] (n<69569>varname, m<69567>varname));
      spos = _vI69569_n + m ; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 730, cols 7 to 34
      //n<69569>varname = (_ctor_size<5394>primfun (stl_find<14443>primfun (v<68746>varname, k_param_std_2017<68744>varname, spos<69570>varname)));
      _vI69569_n = ((_vI68746_v.find(k_param_std_2017,spos)))/*int.flx: ctor size IDENT*/; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      goto continue__ll_strings_7537_L69571;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    break__ll_strings_7537_L69572:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 732, cols 5 to 18
      // primcall +=<14301>primproc (&o<69568>ref, (copyfrom<67603>primfun[size] (v<68746>varname, spos<69570>varname)));
      {
      _a14239t_71023* _tmp71179 = (_a14239t_71023*)&o;
      _a14239t_71023 _tmp71180 = ::flx::rtl::strutil::substr(_vI68746_v,spos,_vI68746_v.size());
      ((_tmp71179))->append((_tmp71180));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 739, cols 7 to 36
      //v<68746>varname = o<69568>varname;
      _vI68746_v = o; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto continue__ll_strings_7551_L68747;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2362_L68748:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 2:|Some any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!andthen(FLX_VNI(_vI68737_search_and_replace__apos_2_mv_2360)==1, (FLX_NEWP(_lam_2365)(FLX_FPAR_PASS this))) ) goto _ml2364_L68749;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto continue__ll_strings_7551_L68747;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2364_L68749:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 3:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!(FLX_VNI(_vI68737_search_and_replace__apos_2_mv_2360)==0) ) goto _ml2366_L68750;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto _em2360_L68751;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2366_L68750:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _em2360_L68751:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 741, cols 5 to 13
      //return v<68746>varname;: type _a14239t_71023
      return _vI68746_v;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",742,3,742,4); // HACK! 
}

//------------------------------
//FUNCTION <70890>: flx_pkgconfig::aux: Apply method
void* _fI70890_aux::apply(_tt71043 const &_arg ){
  _vI70891_x = _arg.mem_0;
  _vI70892_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
    start_70853_L70902:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<70897> := (stl_find<14446>primfun (x<70891>varname, (subscript<67781>primfun[int] (":", 0))));
      _vI70897_find_mv_2105  = _vI70891_x.find((::flx::rtl::strutil::subscript(::std::string(":"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI70897_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L70899;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<70893> := None<67995>varname;
      aux_mv_2285  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_70824_L70900;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L70899:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<70898>varname = find_mv_2105<70897>varname;
      _vI70898_i_param_std_1893 = _vI70897_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<70893> := (Some<67996>struct i_param_std_1893<70898>varname);
      aux_mv_2285  = FLX_VNR(1, new(*PTF gcp, _a5094t_71046_ptr_map, true) _a5094t_71046 (_vI70898_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_70824_L70900:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
      if(!(FLX_VNI(aux_mv_2285)==0) ) goto _ml2287_L70895;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<67702>struct (y<70892>varname, x<70891>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70892_y, _vI70891_x)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
    _ml2287_L70895:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
/*match case 2:|Some n_param_std_1968*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      if(!andthen(FLX_VNI(aux_mv_2285)==1, (FLX_NEWP(_lam_2289)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml2288_L70896;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 14 to 14
      //n_param_std_1968<70894>varname = (arg of case 1 of aux_mv_2285<70893>varname);
      n_param_std_1968 = *((_a5094t_71046*)FLX_VNP(aux_mv_2285)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //y<70892> := (Snoc<67702>struct (y<70892>varname, (copyto<67994>primfun[size] (x<70891>varname, n_param_std_1968<70894>varname))));
      _vI70892_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70892_y, ::flx::rtl::strutil::substr(_vI70891_x,0,n_param_std_1968)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //x<70891> := (copyfrom<67603>primfun[size] (x<70891>varname, (+<67457>primfun[size] (n_param_std_1968<70894>varname, literal[size]("1")))));
      _vI70891_x  = ::flx::rtl::strutil::substr(_vI70891_x,n_param_std_1968 + 1 ,_vI70891_x.size()); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      goto start_70853_L70902;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
    _ml2288_L70896:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",480,5,480,6); // HACK! 
}

//------------------------------
//FUNCTION <69289>: +::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI69289__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <70626>: flx_pkgconfig::parse_args::_lam_65117: Apply method
 ::flx::rtl::cl_t _lam_65117::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 9 to 23
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",154,9,154,23); // HACK! 
}

//------------------------------
//FUNCTION <70990>: cat_uncurry::_lam_1445: Apply method
 ::flx::rtl::cl_t _lam_1445::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",469,7,469,23); // HACK! 
}

//------------------------------
//FUNCTION <69536>: search_and_replace_uncurry::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <69897>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry: Apply method
void* _fI69897_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69898_inp_uncurry = _arg.data[0];
  _vI69899_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_69874_L69906:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<69902> := inp_uncurry<69898>varname;
      _vI69902_aux__apos_2_mv_1381  = _vI69898_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI69902_aux__apos_2_mv_1381)==0) ) goto _ml1383_L69901;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<69899>varname;: type void*
      return _vI69899_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L69901:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI69902_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI69905__lam_1385)(FLX_FPAR_PASS this, ptr_lam_65171, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1384_L69900;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<69903>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<69902>varname));
      _vI69903_h_param_std_1267 = (*((_tt71026*)FLX_VNP(_vI69902_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<69904>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<69902>varname));
      _vI69904_t_param_std_1266 = (*((_tt71026*)FLX_VNP(_vI69902_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<69899> := (Snoc<67702>struct (out<69899>varname, (search_and_replace'2<69824>stackfun h_param_std_1267<69903>varname)));
      _vI69899_out  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69899_out, _fI69824_search_and_replace__apos_2(FLX_FPAR_PASS ptr_lam_65171, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_vI69903_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<69898> := t_param_std_1266<69904>varname;
      _vI69898_inp_uncurry  = _vI69904_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_69874_L69906;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L69900:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <65542>: flx_pkgconfig::get_field: Apply method
_at71025 get_field::apply(_a14239t_71023 const &_arg ){
  line = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<69626> := (stl_find<14446>primfun (line<65549>varname, (subscript<67781>primfun[int] (":", 0))));
      _vI69626_find_mv_2105  = line.find((::flx::rtl::strutil::subscript(::std::string(":"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI69626_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L69628;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //get_field_mv_65136<69622> := None<67995>varname;
      get_field_mv_65136  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_69605_L69629;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L69628:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<69627>varname = find_mv_2105<69626>varname;
      _vI69627_i_param_std_1893 = _vI69626_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //get_field_mv_65136<69622> := (Some<67996>struct i_param_std_1893<69627>varname);
      get_field_mv_65136  = FLX_VNR(1, new(*PTF gcp, _a5094t_71046_ptr_map, true) _a5094t_71046 (_vI69627_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_69605_L69629:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 254, cols 11 to 15
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 254, cols 11 to 15
      if(!(FLX_VNI(get_field_mv_65136)==0) ) goto _ml65138_L69624;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 257, cols 9 to 32
      //return ("", "");: type _at71025
      return _at71025(::std::string(""), ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 254, cols 11 to 15
    _ml65138_L69624:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 11 to 16
/*match case 2:|Some n_param_flx_pkgconfig_65063*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 11 to 16
      if(!andthen(FLX_VNI(get_field_mv_65136)==1, (FLX_NEWP(_lam_65140)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65139_L69625;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 16 to 16
      //n_param_flx_pkgconfig_65063<69623>varname = (arg of case 1 of get_field_mv_65136<69622>varname);
      n_param_flx_pkgconfig_65063 = *((_a5094t_71046*)FLX_VNP(get_field_mv_65136)); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 257, cols 9 to 32
      //return ((lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyto<67994>primfun[size] (line<65549>varname, n_param_flx_pkgconfig_65063<69623>varname)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")), (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<67603>primfun[size] (line<65549>varname, (+<5396>primfun (n_param_flx_pkgconfig_65063<69623>varname, 1)))), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")));: type _at71025
      return _at71025(lstrip(rstrip(::flx::rtl::strutil::substr(line,0,n_param_flx_pkgconfig_65063), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")), lstrip(rstrip(::flx::rtl::strutil::substr(line,n_param_flx_pkgconfig_65063 + 1 ,line.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 11 to 16
    _ml65139_L69625:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 257, cols 9 to 32
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 257, cols 9 to 32
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",257,9,257,32);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",257,9,257,32);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",259,5,259,8); // HACK! 
}

//------------------------------
//FUNCTION <70714>: flx_pkgconfig::parse_args::aux::aux_uncurry: Apply method
void* _fI70714_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70715_x_uncurry = _arg.data[0];
  _vI70716_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70723:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70719> := x_uncurry<70715>varname;
      _vI70719_aux__apos_2_mv_1387  = _vI70715_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70719_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70718;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70716>varname;: type void*
      return _vI70716_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70718:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70719_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70722__lam_1391)(FLX_FPAR_PASS this, ptr_fI70706_aux, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1390_L70717;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70720>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70719>varname));
      _vI70720_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70719_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70721>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70719>varname));
      _vI70721_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70719_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70716> := (Snoc<67702>struct (y<70716>varname, h_param_std_1269<70720>varname));
      _vI70716_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70716_y, _vI70720_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70715> := t_param_std_1268<70721>varname;
      _vI70715_x_uncurry  = _vI70721_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70723;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70717:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69034>: mem_uncurry::_lam_1456: Apply method
 ::flx::rtl::cl_t _lam_1456::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 7 to 15
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",505,7,505,15); // HACK! 
}

//------------------------------

//PROCEDURE <65367:> flx_pkgconfig::print_help: Call method
void print_help::stack_call(){
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("flx_pkgconfig [options] pkg pkg ...", "\x0A")));
      {
      _a14239t_71023 _tmp71186 = ::std::string("flx_pkgconfig [options] pkg pkg ...") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71186)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  returns code 1 if any packages are missing unless --noerror is specified", "\x0A")));
      {
      _a14239t_71023 _tmp71187 = ::std::string("  returns code 1 if any packages are missing unless --noerror is specified") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71187)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  prints package or field list to standard output on one line", "\x0A")));
      {
      _a14239t_71023 _tmp71188 = ::std::string("  prints package or field list to standard output on one line") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71188)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("options: (follows GNU conventions)", "\x0A")));
      {
      _a14239t_71023 _tmp71189 = ::std::string("options: (follows GNU conventions)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71189)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --path=dirname        set database directory name", "\x0A")));
      {
      _a14239t_71023 _tmp71190 = ::std::string("  --path=dirname        set database directory name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71190)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --path+=dirname       append database directory name", "\x0A")));
      {
      _a14239t_71023 _tmp71191 = ::std::string("  --path+=dirname       append database directory name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71191)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --extension=fpc       set resource descriptor extensions,", "\x0A")));
      {
      _a14239t_71023 _tmp71192 = ::std::string("  --extension=fpc       set resource descriptor extensions,") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71192)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("                          default 'fpc' use 'pc' for pkgconfig databases", "\x0A")));
      {
      _a14239t_71023 _tmp71193 = ::std::string("                          default 'fpc' use 'pc' for pkgconfig databases") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71193)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  -h", "\x0A")));
      {
      _a14239t_71023 _tmp71194 = ::std::string("  -h") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71194)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --hide                only process first package in path with a given name", "\x0A")));
      {
      _a14239t_71023 _tmp71195 = ::std::string("  --hide                only process first package in path with a given name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71195)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("                          default, process all occurences", "\x0A")));
      {
      _a14239t_71023 _tmp71196 = ::std::string("                          default, process all occurences") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71196)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --list                list available packages from specified set", "\x0A")));
      {
      _a14239t_71023 _tmp71197 = ::std::string("  --list                list available packages from specified set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71197)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --missing             list missing packages from specified set", "\x0A")));
      {
      _a14239t_71023 _tmp71198 = ::std::string("  --missing             list missing packages from specified set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71198)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --noerror             do not return 1 because of missing packages", "\x0A")));
      {
      _a14239t_71023 _tmp71199 = ::std::string("  --noerror             do not return 1 because of missing packages") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71199)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  -r", "\x0A")));
      {
      _a14239t_71023 _tmp71200 = ::std::string("  -r") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71200)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --rec                 form transitive closure of specified set based on Requires field", "\x0A")));
      {
      _a14239t_71023 _tmp71201 = ::std::string("  --rec                 form transitive closure of specified set based on Requires field") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71201)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --rec=field           form transitive closure of specified set based on specified field", "\x0A")));
      {
      _a14239t_71023 _tmp71202 = ::std::string("  --rec=field           form transitive closure of specified set based on specified field") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71202)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  -b", "\x0A")));
      {
      _a14239t_71023 _tmp71203 = ::std::string("  -b") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71203)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --backwards           process specified packages in reverse order", "\x0A")));
      {
      _a14239t_71023 _tmp71204 = ::std::string("  --backwards           process specified packages in reverse order") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71204)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --field=field         collate values of field in package set", "\x0A")));
      {
      _a14239t_71023 _tmp71205 = ::std::string("  --field=field         collate values of field in package set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71205)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --keepleftmost        remove duplicate values in output keeping only leftmost occurrence", "\x0A")));
      {
      _a14239t_71023 _tmp71206 = ::std::string("  --keepleftmost        remove duplicate values in output keeping only leftmost occurrence") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71206)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --keeprightmost       remove duplicate values in output keeping only rightmost occurrence", "\x0A")));
      {
      _a14239t_71023 _tmp71207 = ::std::string("  --keeprightmost       remove duplicate values in output keeping only rightmost occurrence") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71207)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --keepall             keep duplicate values in output", "\x0A")));
      {
      _a14239t_71023 _tmp71208 = ::std::string("  --keepall             keep duplicate values in output") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71208)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  @filename             Replace with arguments from filename, one line per argument", "\x0A")));
      {
      _a14239t_71023 _tmp71209 = ::std::string("  @filename             Replace with arguments from filename, one line per argument") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp71209)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 51, cols 5 to 6
      return; // proc return from stackable 

}
//------------------------------
//FUNCTION <70804>: flx_pkgconfig::reattach_drive_letters::_lam_65127: Apply method
 ::flx::rtl::cl_t _lam_65127::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 9 to 32
      //return (andthen<5205>stackfun ((_match_ctor_Cons<68243>primfun[string] apply((prj1:string * list -> list), (_ctor_arg_Cons<67712>primfun[string] reattach_drive_letters_mv_65119<70798>varname))), _lam_65128<70805>closure));: type  ::flx::rtl::cl_t
      return andthen(!!((reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>((ptrreattach_drive_letters->reattach_drive_letters_mv_65119)))).mem_1) , (FLX_NEWP(_lam_65128)(FLX_FPAR_PASS this, ptrreattach_drive_letters, ptrflx_pkgconfig)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",231,9,231,32); // HACK! 
}

//------------------------------
//FUNCTION <70698>: flx_pkgconfig::parse_args::aux::_lam_1502: Apply method
 ::flx::rtl::cl_t _fI70698__lam_1502::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",579,9,579,17); // HACK! 
}

//------------------------------
//FUNCTION <70903>: flx_pkgconfig::aux_uncurry: Apply method
void* _fI70903_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70904_x_uncurry = _arg.data[0];
  _vI70905_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70912:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70908> := x_uncurry<70904>varname;
      _vI70908_aux__apos_2_mv_1387  = _vI70904_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70908_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70907;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70905>varname;: type void*
      return _vI70905_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70907:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70908_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70911__lam_1391)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml1390_L70906;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70909>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70908>varname));
      _vI70909_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70908_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70910>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70908>varname));
      _vI70910_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70908_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70905> := (Snoc<67702>struct (y<70905>varname, h_param_std_1269<70909>varname));
      _vI70905_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70905_y, _vI70909_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70904> := t_param_std_1268<70910>varname;
      _vI70904_x_uncurry  = _vI70910_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70912;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70906:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <68581>: cat_uncurry: Apply method
_a14239t_71023 cat_uncurry::apply(_tt71043 const &_arg ){
  sep_uncurry = _arg.mem_0;
  _vI68645_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 463, cols 5 to 16
      //n<68634>varname = literal[size]("0");
      n = 0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<70967> := x<68645>varname;
      xs  = _vI68645_x; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv70966<70966> := iterator'2<70968>closure;
      _genout_urv70966  = (FLX_NEWP(_fI70968_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      //_generator_lists_5289<68635>varname = _genout_urv70966<70966>varname;
      _generator_lists_5289 = _genout_urv70966; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
    continue__ll_lists_5285_L68646:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      //cat'2_mv_1431<68625> := apply(_generator_lists_5289<68635>varname, ());
      _vI68625_cat__apos_2_mv_1431  = (_generator_lists_5289)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
/*match case 1:|Some s_param_std_1285*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      if(!andthen(FLX_VNI(_vI68625_cat__apos_2_mv_1431)==1, (FLX_NEWP(_lam_1434)(FLX_FPAR_PASS this))) ) goto _ml1433_L68647;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      //s_param_std_1285<68637>varname = (arg of case 1 of cat'2_mv_1431<68625>varname);
      s_param_std_1285 = *((_a14239t_71023*)FLX_VNP(_vI68625_cat__apos_2_mv_1431)); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 24 to 37
      // primcall +=<67458>primproc[size] (&n<68634>ref, (+<67457>primfun[size] ((len<14304>primfun s_param_std_1285<68637>varname), literal[size]("1"))));
      {
      _a5094t_71046* _tmp71211 = (_a5094t_71046*)&n;
      _a5094t_71046 _tmp71212 = s_param_std_1285.size() + 1 ;
      *((_tmp71211))+=((_tmp71212));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      goto continue__ll_lists_5285_L68646;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
    _ml1433_L68647:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      if(!(FLX_VNI(_vI68625_cat__apos_2_mv_1431)==0) ) goto _ml1435_L68648;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      goto _em1431_L68649;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
    _ml1435_L68648:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",464,5,464,38);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",464,5,464,38);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
    _em1431_L68649:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 465, cols 5 to 15
      //r<68638>varname = "";
      _vI68638_r = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 466, cols 5 to 19
      // primcall reserve<67459>primproc[size] (&r<68638>ref, n<68634>varname);
      {
      _a14239t_71023* _tmp71214 = (_a14239t_71023*)&_vI68638_r;
      ((_tmp71214))->reserve(n);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 481, cols 3 to 4
      //cat'2_mv_1436<68628> := x<68645>varname;
      _vI68628_cat__apos_2_mv_1436  = _vI68645_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 468, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 468, cols 7 to 12
      if(!(FLX_VNI(_vI68628_cat__apos_2_mv_1436)==0) ) goto _ml1438_L68650;
    // # C:/projects/felix/src/packages/lists.fdoc: line 468, cols 17 to 25
      //return r<68638>varname;: type _a14239t_71023
      return _vI68638_r;
    // # C:/projects/felix/src/packages/lists.fdoc: line 468, cols 7 to 12
    _ml1438_L68650:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
/*match case 2:|Snoc (tail_param_std_1287, head_param_std_1288)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
      if(!andthen(FLX_VNI(_vI68628_cat__apos_2_mv_1436)==1, (FLX_NEWP(_lam_1445)(FLX_FPAR_PASS this))) ) goto _ml1439_L68655;
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 19 to 22
      //head_param_std_1288<68640>varname = apply((prj1:list * string -> string), (arg of case 1 of cat'2_mv_1436<68628>varname));
      head_param_std_1288 = (*((_tt71026*)FLX_VNP(_vI68628_cat__apos_2_mv_1436))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 13 to 16
      //tail_param_std_1287<68641>varname = apply((prj0:list * string -> list), (arg of case 1 of cat'2_mv_1436<68628>varname));
      tail_param_std_1287 = (*((_tt71026*)FLX_VNP(_vI68628_cat__apos_2_mv_1436))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 470, cols 7 to 14
      //r<68638>varname = head_param_std_1288<68640>varname;
      _vI68638_r = head_param_std_1288; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 471, cols 3 to 8
    next_L68651:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 472, cols 13 to 16
      //cat'2_mv_1440<68631> := tail_param_std_1287<68641>varname;
      _vI68631_cat__apos_2_mv_1440  = tail_param_std_1287; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 473, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 473, cols 9 to 14
      if(!(FLX_VNI(_vI68631_cat__apos_2_mv_1440)==0) ) goto _ml1442_L68652;
    // # C:/projects/felix/src/packages/lists.fdoc: line 473, cols 19 to 27
      //return r<68638>varname;: type _a14239t_71023
      return _vI68638_r;
    // # C:/projects/felix/src/packages/lists.fdoc: line 473, cols 9 to 14
    _ml1442_L68652:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1290_param_std_1293, h_param_std_1291_param_std_1294)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 9 to 17
      if(!andthen(FLX_VNI(_vI68631_cat__apos_2_mv_1440)==1, (FLX_NEWP(_lam_1444)(FLX_FPAR_PASS this))) ) goto _ml1443_L68653;
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 16 to 16
      //h_param_std_1291_param_std_1294<68643>varname = apply((prj1:list * string -> string), (arg of case 1 of cat'2_mv_1440<68631>varname));
      h_param_std_1291_param_std_1294 = (*((_tt71026*)FLX_VNP(_vI68631_cat__apos_2_mv_1440))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 14 to 14
      //t_param_std_1290_param_std_1293<68644>varname = apply((prj0:list * string -> list), (arg of case 1 of cat'2_mv_1440<68631>varname));
      t_param_std_1290_param_std_1293 = (*((_tt71026*)FLX_VNP(_vI68631_cat__apos_2_mv_1440))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 475, cols 9 to 20
      // primcall +=<14301>primproc (&r<68638>ref, (+<14305>primfun (sep_uncurry<68657>varname, h_param_std_1291_param_std_1294<68643>varname)));
      {
      _a14239t_71023* _tmp71215 = (_a14239t_71023*)&_vI68638_r;
      _a14239t_71023 _tmp71216 = sep_uncurry + h_param_std_1291_param_std_1294 ;
      ((_tmp71215))->append((_tmp71216));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 476, cols 9 to 16
      //tail_param_std_1287<68641>varname = t_param_std_1290_param_std_1293<68644>varname;
      tail_param_std_1287 = t_param_std_1290_param_std_1293; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 477, cols 9 to 18
      goto next_L68651;
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
      FLX_HALT("C:/projects/felix/src/packages/lists.fdoc",469,7,469,23,"HALT: Jump to end of function");
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 9 to 17
    _ml1443_L68653:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 478, cols 7 to 16
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 478, cols 7 to 16
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",478,7,478,16);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",478,7,478,16);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
      FLX_HALT("C:/projects/felix/src/packages/lists.fdoc",469,7,469,23,"HALT: Jump to end of function");
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
    _ml1439_L68655:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 479, cols 5 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 479, cols 5 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",479,5,479,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",479,5,479,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",481,3,481,4); // HACK! 
}

//------------------------------
//FUNCTION <69130>: flx_pkgconfig::add_val::_lam_1457: Apply method
 ::flx::rtl::cl_t _lam_1457::apply(_a14239t_71023 const &_arg ){
  _vI69131_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<67719>stackfun (x<69131>varname, v<65566>varname));: type  ::flx::rtl::cl_t
      return eq(_vI69131_x, ptradd_val->v);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <65550>: flx_pkgconfig::get_variable: Apply method
_at71025 get_variable::apply(_a14239t_71023 const &_arg ){
  _vI65563_line = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<69489> := (stl_find<14446>primfun (line<65563>varname, (subscript<67781>primfun[int] ("=", 0))));
      _vI69489_find_mv_2105  = _vI65563_line.find((::flx::rtl::strutil::subscript(::std::string("="),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI69489_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L69491;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //get_variable_mv_65142<69485> := None<67995>varname;
      get_variable_mv_65142  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_69469_L69492;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L69491:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<69490>varname = find_mv_2105<69489>varname;
      _vI69490_i_param_std_1893 = _vI69489_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //get_variable_mv_65142<69485> := (Some<67996>struct i_param_std_1893<69490>varname);
      get_variable_mv_65142  = FLX_VNR(1, new(*PTF gcp, _a5094t_71046_ptr_map, true) _a5094t_71046 (_vI69490_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_69469_L69492:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 264, cols 11 to 15
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 264, cols 11 to 15
      if(!(FLX_VNI(get_variable_mv_65142)==0) ) goto _ml65144_L69487;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 9 to 56
      //return ("", "");: type _at71025
      return _at71025(::std::string(""), ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 264, cols 11 to 15
    _ml65144_L69487:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 11 to 16
/*match case 2:|Some n_param_flx_pkgconfig_65064*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 11 to 16
      if(!andthen(FLX_VNI(get_variable_mv_65142)==1, (FLX_NEWP(_lam_65159)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65145_L69488;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 16 to 16
      //n_param_flx_pkgconfig_65064<69486>varname = (arg of case 1 of get_variable_mv_65142<69485>varname);
      n_param_flx_pkgconfig_65064 = *((_a5094t_71046*)FLX_VNP(get_variable_mv_65142)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 450, cols 3 to 61
      //get_variable_mv_65147<69494> := (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyto<67994>primfun[size] (line<65563>varname, n_param_flx_pkgconfig_65064<69486>varname)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      get_variable_mv_65147  = lstrip(rstrip(::flx::rtl::strutil::substr(_vI65563_line,0,n_param_flx_pkgconfig_65064), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 266, cols 17 to 20
/*match case 1:name_param_flx_pkgconfig_65065*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 266, cols 17 to 20
      //name_param_flx_pkgconfig_65065<69495>varname = get_variable_mv_65147<69494>varname;
      name_param_flx_pkgconfig_65065 = get_variable_mv_65147; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 450, cols 3 to 61
      //get_variable_mv_65151<69496> := (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<67603>primfun[size] (line<65563>varname, (+<5396>primfun (n_param_flx_pkgconfig_65064<69486>varname, 1)))), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      get_variable_mv_65151  = lstrip(rstrip(::flx::rtl::strutil::substr(_vI65563_line,n_param_flx_pkgconfig_65064 + 1 ,_vI65563_line.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 267, cols 17 to 21
/*match case 1:value_param_flx_pkgconfig_65066*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 267, cols 17 to 21
      //value_param_flx_pkgconfig_65066<69497>varname = get_variable_mv_65151<69496>varname;
      value_param_flx_pkgconfig_65066 = get_variable_mv_65151; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 16 to 28
      //get_variable_mv_65155<69498> := (check_id<65529>stackfun name_param_flx_pkgconfig_65065<69495>varname);
      get_variable_mv_65155  = check_id(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(name_param_flx_pkgconfig_65065) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
      if(!(get_variable_mv_65155%2==1) ) goto _ml65157_L69499;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
      //return (name_param_flx_pkgconfig_65065<69495>varname, value_param_flx_pkgconfig_65066<69497>varname);: type _at71025
      return _at71025(name_param_flx_pkgconfig_65065, value_param_flx_pkgconfig_65066);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
    _ml65157_L69499:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
      //return ("", "");: type _at71025
      return _at71025(::std::string(""), ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 11 to 16
    _ml65145_L69488:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 9 to 56
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 9 to 56
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",268,9,268,56);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",268,9,268,56);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",270,5,270,8); // HACK! 
}

//------------------------------
//C FUNC <14873>: rstrip
_a14239t_71023 rstrip( _a14239t_71023 _vI14878_x, _a14239t_71023 e){
  _a5094t_71046 j;
   ::flx::rtl::cl_t _vI14876_found;
  _a5094t_71046 _vI14875_i;
    // # C:/projects/felix/src/packages/strings.fdoc: line 444, cols 5 to 9
      if(!((0 < _vI14878_x.size())) ) goto _ifdoelse_std_1963_L14890;
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      //i<14875>varname = (-<67519>primfun[size] ((len<14304>primfun x<14878>varname), literal[size]("1")));
      _vI14875_i = _vI14878_x.size() - 1 ; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      // primcall pre_incr<67520>primproc[size] &i<14875>ref;
      {
      _a5094t_71046* _tmp71220 = (_a5094t_71046*)&_vI14875_i;
      ++*((_tmp71220));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
    redo__ll_strings_7274_L14880:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI14875_i)) )) goto _ifdoelse_std_1963_L14890;
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      // primcall pre_decr<67521>primproc[size] &i<14875>ref;
      {
      _a5094t_71046* _tmp71221 = (_a5094t_71046*)&_vI14875_i;
      --*((_tmp71221));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 433, cols 9 to 26
      //found<14876>varname = (case 0 of bool);
      _vI14876_found = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
      //j<14877>varname = literal[size]("0");
      j = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
    redo__ll_strings_7278_L14881:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
      if(FLX_UNLIKELY(!(!((e.size() - 1  < j)) ) )) goto break__ll_strings_7278_L14885;
    // # C:/projects/felix/src/packages/strings.fdoc: line 437, cols 11 to 15
      if(!((::flx::rtl::strutil::subscript(_vI14878_x,_vI14875_i) == ::flx::rtl::strutil::subscript(e,j))) ) goto _ifdoelse_std_1965_L14883;
    // # C:/projects/felix/src/packages/strings.fdoc: line 436, cols 13 to 24
      //found<14876>varname = (case 1 of bool);
      _vI14876_found = 1; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 437, cols 11 to 15
    _ifdoelse_std_1965_L14883:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
      // primcall pre_incr<67520>primproc[size] &j<14877>ref;
      {
      _a5094t_71046* _tmp71222 = (_a5094t_71046*)&j;
      ++*((_tmp71222));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
      goto redo__ll_strings_7278_L14881;
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
    break__ll_strings_7278_L14885:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 442, cols 9 to 13
      if(_vI14876_found) goto redo__ll_strings_7274_L14880;
    // # C:/projects/felix/src/packages/strings.fdoc: line 441, cols 11 to 34
      //return (copyto<67525>primfun[int] (x<14878>varname, (+<67526>primfun[int] ((_ctor_int<67527>primfun[size] i<14875>varname), 1))));: type _a14239t_71023
      return ::flx::rtl::strutil::substr(_vI14878_x,0,(static_cast<int>(_vI14875_i)/*int.flx: ctor*/) + 1 );
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      goto redo__ll_strings_7274_L14880;
    // # C:/projects/felix/src/packages/strings.fdoc: line 444, cols 5 to 9
    _ifdoelse_std_1963_L14890:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 445, cols 5 to 14
      //return "";: type _a14239t_71023
      return ::std::string("");
}
//------------------------------
//FUNCTION <65365>: flx_pkgconfig: Apply method
_tt71038 flx_pkgconfig::apply(void* const &_arg ){
  args = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 122, cols 5 to 44
      //path<65410>varname = (getenv<67710>primfun[Win32] "PKG_CONFIG_PATH");
      path = ::flx::rtl::strutil::atostr(std::getenv((::std::string("PKG_CONFIG_PATH")).c_str())); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 125, cols 5 to 31
      //fields<65411>varname = Empty<67690>varname;
      fields = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 126, cols 5 to 29
      //pkgs<65412>varname = Empty<67690>varname;
      pkgs = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 128, cols 5 to 21
      //hide<65413>varname = (case 0 of bool);
      hide = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 129, cols 5 to 34
      //require_pkg_exists<65414>varname = (case 1 of bool);
      require_pkg_exists = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 130, cols 5 to 24
      //missing<65415>varname = (case 0 of bool);
      missing = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 132, cols 5 to 34
      //recfields<65417>varname = Empty<67690>varname;
      recfields = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 133, cols 5 to 23
      //dolist<65418>varname = (case 0 of bool);
      dolist = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 134, cols 5 to 25
      //listkeys<65419>varname = (case 0 of bool);
      listkeys = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 135, cols 5 to 24
      //return_code<65420>varname = 0;
      return_code = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 136, cols 5 to 26
      //backwards<65421>varname = (case 0 of bool);
      backwards = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 138, cols 5 to 27
      //keep<65429>varname = keepleftmost<65425>varname;
      keep = /*VR_int*/1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 139, cols 5 to 26
      //extension<65430>varname = "fpc";
      extension = ::std::string("fpc"); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      //run procedure stackcall parse_args<65443>stackproc  args<65659>varname;
      {
      parse_args(FLX_FPAR_PASS this)
      .stack_call(args);
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 240, cols 5 to 59
      //dirs<65527>varname = (reattach_drive_letters<65512>stackfun (aux_uncurry<70903>stackfun ((aux<70890>stackfun (path<65410>varname, Empty<67690>varname)), Empty<67690>varname)));
      dirs = reattach_drive_letters(FLX_FPAR_PASS this)
      .apply(_fI70903_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at71054(_fI70890_aux(FLX_FPAR_PASS this)
      .apply(_tt71043(path, (void* /*VR_nullptr*/ )0)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 244, cols 5 to 31
      //result<65528>varname = Empty<67690>varname;
      result = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
    continue__ll_flx_pkgconfig_11162_L65660:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //is_empty_mv_1368<70928> := pkgs<65412>varname;
      is_empty_mv_1368  = pkgs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
      if(!(FLX_VNI(is_empty_mv_1368)==0) ) goto _ml1370_L70927;
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //_urv70925<70925> := (case 1 of bool);
      _urv70925  = 1; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      goto _end_inline_is_empty_70930_L70930;
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
    _ml1370_L70927:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 262, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //_urv70925<70925> := (case 0 of bool);
      _urv70925  = 0; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
    _end_inline_is_empty_70930_L70930:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
      if(FLX_UNLIKELY(_urv70925)) goto break__ll_flx_pkgconfig_11162_L65661;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 370, cols 13 to 16
      //flx_pkgconfig_mv_65185<70931> := pkgs<65412>varname;
      flx_pkgconfig_mv_65185  = pkgs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 371, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 371, cols 9 to 14
      if(!(FLX_VNI(flx_pkgconfig_mv_65185)==0) ) goto _ml65187_L70936;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
      goto continue__ll_flx_pkgconfig_11162_L65660;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 371, cols 9 to 14
    _ml65187_L70936:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 9 to 23
/*match case 2:|Cons (pkg_param_flx_pkgconfig_65092, tail_param_flx_pkgconfig_65093)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 9 to 23
      if(!andthen(!!flx_pkgconfig_mv_65185 , (FLX_NEWP(_lam_65191)(FLX_FPAR_PASS this))) ) goto _ml65189_L70937;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 19 to 22
      //tail_param_flx_pkgconfig_65093<70933>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<67712>primfun[string] flx_pkgconfig_mv_65185<70931>varname));
      tail_param_flx_pkgconfig_65093 = (reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(flx_pkgconfig_mv_65185))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 15 to 17
      //pkg_param_flx_pkgconfig_65092<70934>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<67712>primfun[string] flx_pkgconfig_mv_65185<70931>varname));
      pkg_param_flx_pkgconfig_65092 = (reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(flx_pkgconfig_mv_65185))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 375, cols 11 to 21
      //pkgs<65412>varname = tail_param_flx_pkgconfig_65093<70933>varname;
      pkgs = tail_param_flx_pkgconfig_65093; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      //run procedure directcall handle_pkg<65576>directproc (pkg_param_flx_pkgconfig_65092<70934>varname, Empty<67690>varname);
      {
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(handle_pkg)(FLX_FPAR_PASS this))
          ->call(0, _tt71043(pkg_param_flx_pkgconfig_65092, (void* /*VR_nullptr*/ )0));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller flx_pkgconfig\n");
            fprintf(stderr,"Calls  handle_pkg\n");
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
      goto continue__ll_flx_pkgconfig_11162_L65660;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 9 to 23
    _ml65189_L70937:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 378, cols 7 to 10
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 378, cols 7 to 10
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",378,7,378,10);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",378,7,378,10);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
      goto continue__ll_flx_pkgconfig_11162_L65660;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
    break__ll_flx_pkgconfig_11162_L65661:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 384, cols 5 to 31
      //return (return_code<65420>varname, result<65528>varname);: type _tt71038
      return _tt71038(return_code, result);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",385,3,385,4); // HACK! 
}

//------------------------------
//FUNCTION <70119>: flx_pkgconfig::handle_pkg::aux_uncurry: Apply method
void* _fI70119_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70120_x_uncurry = _arg.data[0];
  _vI70121_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70128:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70124> := x_uncurry<70120>varname;
      _vI70124_aux__apos_2_mv_1387  = _vI70120_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70124_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70123;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70121>varname;: type void*
      return _vI70121_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70123:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70124_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70127__lam_1391)(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L70122;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70125>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70124>varname));
      _vI70125_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70124_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70126>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70124>varname));
      _vI70126_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70124_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70121> := (Snoc<67702>struct (y<70121>varname, h_param_std_1269<70125>varname));
      _vI70121_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70121_y, _vI70125_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70120> := t_param_std_1268<70126>varname;
      _vI70120_x_uncurry  = _vI70126_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70128;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70122:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <70805>: flx_pkgconfig::reattach_drive_letters::_lam_65127::_lam_65128: Apply method
 ::flx::rtl::cl_t _lam_65128::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 18 to 31
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",231,18,231,31); // HACK! 
}

//------------------------------
//FUNCTION <65529>: flx_pkgconfig::check_id: Apply method
 ::flx::rtl::cl_t check_id::apply(_a14239t_71023 const &_arg ){
  _vI65536_s = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 247, cols 7 to 19
      //acc<65531>varname = (case 1 of bool);
      acc = 1; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 365, cols 5 to 6
      //x<69333> := s<65536>varname;
      _vI69333_x  = _vI65536_s; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 365, cols 5 to 6
      //_genout_urv69328<69328> := iterator'2<69329>closure;
      _genout_urv69328  = (FLX_NEWP(_fI69329_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_pkgconfig)); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      //_generator_flx_pkgconfig_10995<65532>varname = _genout_urv69328<69328>varname;
      _generator_flx_pkgconfig_10995 = _genout_urv69328; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
    continue__ll_flx_pkgconfig_10990_L65537:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      //check_id_mv_65130<65130> := apply(_generator_flx_pkgconfig_10995<65532>varname, ());
      check_id_mv_65130  = (_generator_flx_pkgconfig_10995)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
/*match case 1:|Some elt_param_flx_pkgconfig_65062*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      if(!andthen(FLX_VNI(check_id_mv_65130)==1, (FLX_NEWP(_lam_65133)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65132_L65538;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      //elt_param_flx_pkgconfig_65062<65535>varname = (arg of case 1 of check_id_mv_65130<65130>varname);
      elt_param_flx_pkgconfig_65062 = *((char*)FLX_VNP(check_id_mv_65130)); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 23 to 50
      //acc<65531>varname = (land<5211>primfun (acc<65531>varname, (lor<5213>primfun ((isidstart<5714>stackfun elt_param_flx_pkgconfig_65062<65535>varname), (isdigit<5698>primfun elt_param_flx_pkgconfig_65062<65535>varname)))));
      acc = acc && (isidstart(FLX_FPAR_PASS_ONLY)
      .apply(elt_param_flx_pkgconfig_65062) /* apply_stack */ || (!!isdigit(elt_param_flx_pkgconfig_65062)) ) ; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      goto continue__ll_flx_pkgconfig_10990_L65537;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
    _ml65132_L65538:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      if(!(FLX_VNI(check_id_mv_65130)==0) ) goto _ml65134_L65539;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      goto _em65130_L65540;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
    _ml65134_L65539:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",248,7,248,56);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",248,7,248,56);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
    _em65130_L65540:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 249, cols 7 to 17
      //return acc<65531>varname;: type  ::flx::rtl::cl_t
      return acc;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",250,5,250,6); // HACK! 
}

//------------------------------
//FUNCTION <68989>: _init_::_lam_1375: Apply method
 ::flx::rtl::cl_t _lam_1375::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 270, cols 7 to 15
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",270,7,270,15); // HACK! 
}

//------------------------------
//FUNCTION <69637>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI69637__lam_1457::apply(_a14239t_71023 const &_arg ){
  _vI69638_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<67719>stackfun (x<69638>varname, key<65595>varname));: type  ::flx::rtl::cl_t
      return eq(_vI69638_x, ptr_lam_65171->key);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <69766>: flx_pkgconfig::lexstr::aux_uncurry: Apply method
void* _fI69766_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69767_x_uncurry = _arg.data[0];
  _vI69768_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69775:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69771> := x_uncurry<69767>varname;
      _vI69771_aux__apos_2_mv_1387  = _vI69767_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69771_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69770;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69768>varname;: type void*
      return _vI69768_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69770:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69771_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI69774__lam_1391)(FLX_FPAR_PASS this, ptrlexstr, ptrflx_pkgconfig))) ) goto _ml1390_L69769;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69772>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69771>varname));
      _vI69772_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69771_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69773>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69771>varname));
      _vI69773_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69771_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69768> := (Snoc<67702>struct (y<69768>varname, h_param_std_1269<69772>varname));
      _vI69768_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69768_y, _vI69772_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69767> := t_param_std_1268<69773>varname;
      _vI69767_x_uncurry  = _vI69773_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69775;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69769:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69905>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI69905__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//C FUNC <5205>: andthen
 ::flx::rtl::cl_t andthen(  ::flx::rtl::cl_t _vI5209_x, _ft71035* _vI5210_y){
   ::flx::rtl::cl_t andthen_mv_147;
    // # C:/projects/felix/src/packages/logic.fdoc: line 16, cols 3 to 4
      //andthen_mv_147<68908> := x<5209>varname;
      andthen_mv_147  = _vI5209_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
      if(!(andthen_mv_147%2==1) ) goto _ml149_L68909;
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
      //return apply(y<5210>varname, ());: type  ::flx::rtl::cl_t
      return (_vI5210_y)->clone()
      ->apply() /* general apply */;
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
    _ml149_L68909:;
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
/*match case 2:any*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
}
//------------------------------
//FUNCTION <70730>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI70730_aux::apply(_tt71043 const &_arg ){
  _vI70731_x = _arg.mem_0;
  _vI70732_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
    start_70424_L70742:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 62 to 85
      //find_first_of_mv_2155<70737> := (stl_find_first_of<14558>primfun (x<70731>varname, literal[cstring](" \x0A\x0D\x09,")));
      find_first_of_mv_2155  = _vI70731_x.find_first_of((" \n\x0D\x09,")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 94 to 113
/*match case 1:(i_param_std_1912 when (== (i_param_std_1912, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 94 to 113
      if(!((find_first_of_mv_2155 == ::std::string::npos)) ) goto _ml2157_L70739;
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 56 to 141
      //aux_mv_2296<70733> := None<67995>varname;
      aux_mv_2296  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 56 to 141
      goto _end_inline_find_first_of_70395_L70740;
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 94 to 113
    _ml2157_L70739:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 131 to 131
/*match case 2:i_param_std_1913*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 131 to 131
      //i_param_std_1913<70738>varname = find_first_of_mv_2155<70737>varname;
      i_param_std_1913 = find_first_of_mv_2155; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 56 to 141
      //aux_mv_2296<70733> := (Some<67996>struct i_param_std_1913<70738>varname);
      aux_mv_2296  = FLX_VNR(1, new(*PTF gcp, _a5094t_71046_ptr_map, true) _a5094t_71046 (i_param_std_1913)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 3 to 151
    _end_inline_find_first_of_70395_L70740:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 501, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 501, cols 9 to 13
      if(!(FLX_VNI(aux_mv_2296)==0) ) goto _ml2298_L70735;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<67702>struct (y<70732>varname, x<70731>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70732_y, _vI70731_x)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 501, cols 9 to 13
    _ml2298_L70735:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 9 to 14
/*match case 2:|Some n_param_std_1972*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 9 to 14
      if(!andthen(FLX_VNI(aux_mv_2296)==1, (FLX_NEWP(_lam_2300)(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml2299_L70736;
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 14 to 14
      //n_param_std_1972<70734>varname = (arg of case 1 of aux_mv_2296<70733>varname);
      n_param_std_1972 = *((_a5094t_71046*)FLX_VNP(aux_mv_2296)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
      //y<70732> := (Snoc<67702>struct (y<70732>varname, (copyto<67994>primfun[size] (x<70731>varname, n_param_std_1972<70734>varname))));
      _vI70732_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70732_y, ::flx::rtl::strutil::substr(_vI70731_x,0,n_param_std_1972)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
      //x<70731> := (copyfrom<67603>primfun[size] (x<70731>varname, (+<67457>primfun[size] (n_param_std_1972<70734>varname, literal[size]("1")))));
      _vI70731_x  = ::flx::rtl::strutil::substr(_vI70731_x,n_param_std_1972 + 1 ,_vI70731_x.size()); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
      goto start_70424_L70742;
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 9 to 14
    _ml2299_L70736:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 7 to 61
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 7 to 61
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",502,7,502,61);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",502,7,502,61);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",504,5,504,6); // HACK! 
}

//------------------------------
//FUNCTION <70724>: flx_pkgconfig::parse_args::aux::_lam_1502: Apply method
 ::flx::rtl::cl_t _fI70724__lam_1502::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",579,9,579,17); // HACK! 
}

//------------------------------
//FUNCTION <68965>: _init_::aux_uncurry: Apply method
void* aux_uncurry::apply(_tt71031 const &_arg ){
  inp_uncurry = _arg.mem_0;
  out = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_68928_L68974:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<68970> := inp_uncurry<68966>varname;
      _vI68970_aux__apos_2_mv_1381  = inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI68970_aux__apos_2_mv_1381)==0) ) goto _ml1383_L68969;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<68967>varname;: type void*
      return out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L68969:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI68970_aux__apos_2_mv_1381)==1, (FLX_NEWP(_lam_1385)(FLX_FPAR_PASS this, ptr_init_))) ) goto _ml1384_L68968;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<68971>varname = apply((prj1:list * int -> int), (arg of case 1 of aux'2_mv_1381<68970>varname));
      h_param_std_1267 = (*((_tt71029*)FLX_VNP(_vI68970_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<68972>varname = apply((prj0:list * int -> list), (arg of case 1 of aux'2_mv_1381<68970>varname));
      t_param_std_1266 = (*((_tt71029*)FLX_VNP(_vI68970_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<68967> := (Snoc<67702>struct (out<68967>varname, (_a68825_argv<68825>stackfun h_param_std_1267<68971>varname)));
      out  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(out, _a68825_argv(FLX_FPAR_PASS h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<68966> := t_param_std_1266<68972>varname;
      inp_uncurry  = t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_68928_L68974;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L68968:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <5714>: isidstart: Apply method
 ::flx::rtl::cl_t isidstart::apply(char const &_arg ){
  x = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<69372> := (stl_find<14446>primfun (letters<5707>varname, x<5720>varname));
      find_mv_2105  = (PTF letters).find(x); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L69374;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //isidstart_mv_165<69369> := None<67995>varname;
      isidstart_mv_165  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_69360_L69375;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L69374:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<69373>varname = find_mv_2105<69372>varname;
      i_param_std_1893 = find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //isidstart_mv_165<69369> := (Some<67996>struct i_param_std_1893<69373>varname);
      isidstart_mv_165  = FLX_VNR(1, new(*PTF gcp, _a5094t_71046_ptr_map, true) _a5094t_71046 (i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_69360_L69375:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 57 to 62
/*match case 1:|Some any*/
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 57 to 62
      if(!andthen(FLX_VNI(isidstart_mv_165)==1, (FLX_NEWP(_lam_168)(FLX_FPAR_PASS this))) ) goto _ml167_L69370;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 28 to 87
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 57 to 62
    _ml167_L69370:;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 74 to 78
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 74 to 78
      if(!(FLX_VNI(isidstart_mv_165)==0) ) goto _ml169_L69371;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 28 to 87
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 74 to 78
    _ml169_L69371:;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 28 to 87
/*match failure*/
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 28 to 87
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/char.fdoc",66,28,66,87);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/char.fdoc",66,28,66,87);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/char.fdoc",66,3,66,97); // HACK! 
}

//------------------------------
//FUNCTION <70976>: cat_uncurry::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI70976__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <69150>: flx_pkgconfig::add_val::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI69150__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <70031>: flx_pkgconfig::handle_pkg::_lam_65160::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70031__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//C FUNC <67719>: eq
 ::flx::rtl::cl_t eq( _a14239t_71023 _vI68197_x, _a14239t_71023 _vI68198_y){
    // # C:/projects/felix/src/packages/algebra.fdoc: line 275, cols 3 to 28
      //return (==<68130>primfun[string] (x<68197>varname, y<68198>varname));: type  ::flx::rtl::cl_t
      return (_vI68197_x == _vI68198_y);
}
//------------------------------
//FUNCTION <69257>: flx_pkgconfig::tail_val::aux::_lam_1502: Apply method
 ::flx::rtl::cl_t _lam_1502::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",579,9,579,17); // HACK! 
}

//------------------------------

//PROCEDURE <65576:> flx_pkgconfig::handle_pkg: Call method
::flx::rtl::con_t * handle_pkg::call(::flx::rtl::con_t *_ptr_caller, _tt71043 const &_arg){
  _caller = _ptr_caller;
  pkg = _arg.mem_0;
  trace = _arg.mem_1;
  INIT_PC
  return this;
}

//PROCEDURE <65576:> flx_pkgconfig::handle_pkg: Resume method
::flx::rtl::con_t *handle_pkg::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 288, cols 8 to 46
      //variables<65578>varname = Empty<67716>varname;
      variables = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 290, cols 8 to 37
      if(!mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71063((FLX_NEWP(_fI70096__lam_1457)(FLX_FPAR_PASS this, ptrflx_pkgconfig)), trace)) /* apply_stack */ ) goto _ifret_flx_pkgconfig_65067_L65640;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 290, cols 8 to 37
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 290, cols 8 to 37
    _ifret_flx_pkgconfig_65067_L65640:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 291, cols 8 to 25
      //found<65579>varname = (case 0 of bool);
      found = 0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<68595>directproc (_lam_65160<65580>closure, dirs<65527>varname);
      {
      _pt71064* _tmp71232 = (FLX_NEWP(_lam_65160)(FLX_FPAR_PASS this, ptrflx_pkgconfig));
      FLX_SET_PC(71233)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt71065((_tmp71232), ptrflx_pkgconfig->dirs));
      }
    FLX_CASE_LABEL(71233)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 363, cols 8 to 12
      if(found) goto _ifdoelse_flx_pkgconfig_65087_L65646;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("package not found: ", pkg<65638>varname)), "\x0A")));
      {
      _a14239t_71023 _tmp71234 = (::std::string("package not found: ") + pkg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp71234)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 361, cols 10 to 55
      if(!ptrflx_pkgconfig->require_pkg_exists ) goto _ifdoelse_flx_pkgconfig_65089_L65642;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 361, cols 35 to 49
      //return_code<65420>varname = 1;
      ptrflx_pkgconfig->return_code = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 361, cols 10 to 55
    _ifdoelse_flx_pkgconfig_65089_L65642:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 362, cols 10 to 38
      if(!ptrflx_pkgconfig->missing ) goto _ifdoelse_flx_pkgconfig_65087_L65646;
    // # C:/projects/felix/src/packages/lists.fdoc: line 514, cols 3 to 4
      //insert_unique'3_mv_1487<70106> := (mem_uncurry<68588>stackfun (_lam_1457<70107>closure, result<65528>varname));
      _vI70106_insert_unique__apos_3_mv_1487  = mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71063((FLX_NEWP(_fI70107__lam_1457)(FLX_FPAR_PASS this, ptrflx_pkgconfig)), ptrflx_pkgconfig->result)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      if(!(_vI70106_insert_unique__apos_3_mv_1487%2==1) ) goto _ml1489_L70105;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      //_urv69124<70104> := result<65528>varname;
      _vI70104__urv69124  = ptrflx_pkgconfig->result; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      goto _end_hash_732287877;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
    _ml1489_L70105:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //_urv69124<70104> := (aux_uncurry<70119>stackfun ((Snoc<67702>struct ((aux_uncurry<70109>stackfun (result<65528>varname, Empty<67690>varname)), pkg<65638>varname)), Empty<67690>varname));
      _vI70104__urv69124  = _fI70119_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_fI70109_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, pkg))), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 566, cols 3 to 4
    _end_hash_732287877:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 273, cols 6 to 42
      //result<65528>varname = _urv69124<70104>varname;
      ptrflx_pkgconfig->result = _vI70104__urv69124; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 363, cols 8 to 12
    _ifdoelse_flx_pkgconfig_65087_L65646:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <69774>: flx_pkgconfig::lexstr::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI69774__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <70033>: flx_pkgconfig::handle_pkg::_lam_65160::aux::_lam_1502: Apply method
 ::flx::rtl::cl_t _fI70033__lam_1502::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",579,9,579,17); // HACK! 
}

//------------------------------

//PROCEDURE <65607:> flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_65183: Call method
::flx::rtl::con_t * _lam_65183::call(::flx::rtl::con_t *_ptr_caller, _a14239t_71023 const &_arg){
  _caller = _ptr_caller;
  _vI65609_s = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65607:> flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_65183: Resume method
::flx::rtl::con_t *_lam_65183::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      //jump to procedure direct tail call handle_pkg<65576>directjump (s<65609>varname, (Snoc<67702>struct (trace<65639>varname, pkg<65638>varname)));
      {
      void* _tmp71235 = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(ptrhandle_pkg->trace, ptrhandle_pkg->pkg)));
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(handle_pkg)(FLX_FPAR_PASS ptrflx_pkgconfig))
      ->call(tmp, _tt71043(_vI65609_s, (_tmp71235)));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 344, cols 24 to 19
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <69935>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI69935__lam_1457::apply(_a14239t_71023 const &_arg ){
  _vI69936_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<67719>stackfun (x<69936>varname, key<65595>varname));: type  ::flx::rtl::cl_t
      return eq(_vI69936_x, ptr_lam_65171->key);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <69853>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2::_lam_2365: Apply method
 ::flx::rtl::cl_t _fI69853__lam_2365::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9); // HACK! 
}

//------------------------------
//FUNCTION <70980>: cat_uncurry::_lam_1434: Apply method
 ::flx::rtl::cl_t _lam_1434::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",464,5,464,38); // HACK! 
}

//------------------------------
//FUNCTION <69276>: +::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI69276__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//C FUNC <68825>: _a68825_argv
_a14239t_71023 _a68825_argv(FLX_APAR_DECL int _a68826){
    // # C:/projects/felix/src/packages/program.fdoc: line 670, cols 3 to 35
      //return (argv<7610>primfun _a68826<68826>varname);: type _a14239t_71023
      return ::std::string(_a68826<0||_a68826>=PTF argc?"":PTF argv[_a68826]);
}
//------------------------------
//FUNCTION <70007>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70007__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <70015>: flx_pkgconfig::handle_pkg::_lam_65160::aux: Apply method
void* _fI70015_aux::apply(_at71054 const &_arg ){
  _vI70016_inp = _arg.data[0];
  _vI70017_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
    start_69233_L70036:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //aux_mv_1493<70020> := inp<70016>varname;
      _vI70020_aux_mv_1493  = _vI70016_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
      if(!(FLX_VNI(_vI70020_aux_mv_1493)==0) ) goto _ml1495_L70019;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<70023>stackfun ((Snoc<67702>struct (out<70017>varname, pkg<65638>varname)), Empty<67690>varname));: type void*
      return _fI70023_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70017_out, ptrhandle_pkg->pkg))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
    _ml1495_L70019:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1301, h_param_std_1302)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      if(!andthen(FLX_VNI(_vI70020_aux_mv_1493)==1, (FLX_NEWP(_fI70033__lam_1502)(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1496_L70018;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 16 to 16
      //h_param_std_1302<70021>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1493<70020>varname));
      _vI70021_h_param_std_1302 = (*((_tt71026*)FLX_VNP(_vI70020_aux_mv_1493))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 14 to 14
      //t_param_std_1301<70022>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1493<70020>varname));
      _vI70022_t_param_std_1301 = (*((_tt71026*)FLX_VNP(_vI70020_aux_mv_1493))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 580, cols 12 to 24
      //aux_mv_1498<70035> := (lnot<5216>primfun (eq<67719>stackfun (h_param_std_1302<70021>varname, pkg<65638>varname)));
      _vI70035_aux_mv_1498  = !eq(_vI70021_h_param_std_1302, ptrhandle_pkg->pkg) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
      if(!(_vI70035_aux_mv_1498%2==1) ) goto _ml1500_L70034;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //out<70017> := (Snoc<67702>struct (out<70017>varname, h_param_std_1302<70021>varname));
      _vI70017_out  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70017_out, _vI70021_h_param_std_1302))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<70016> := t_param_std_1301<70022>varname;
      _vI70016_inp  = _vI70022_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_69233_L70036;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
    _ml1500_L70034:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<70016> := t_param_std_1301<70022>varname;
      _vI70016_inp  = _vI70022_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_69233_L70036;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
    _ml1496_L70018:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",584,5,584,6); // HACK! 
}

//------------------------------
//FUNCTION <70107>: flx_pkgconfig::handle_pkg::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI70107__lam_1457::apply(_a14239t_71023 const &_arg ){
  _vI70108_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<67719>stackfun (x<70108>varname, pkg<65638>varname));: type  ::flx::rtl::cl_t
      return eq(_vI70108_x, ptrhandle_pkg->pkg);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <68973>: _init_::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//C FUNC <14855>: lstrip
_a14239t_71023 lstrip( _a14239t_71023 _vI14860_x, _a14239t_71023 _vI14861_e){
  _a5094t_71046 _vI14859_j;
   ::flx::rtl::cl_t _vI14858_found;
  _a5094t_71046 _vI14857_i;
    // # C:/projects/felix/src/packages/strings.fdoc: line 425, cols 5 to 9
      if(!((0 < _vI14860_x.size())) ) goto _ifdoelse_std_1957_L14872;
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
      //i<14857>varname = literal[size]("0");
      _vI14857_i = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
    redo__ll_strings_7234_L14862:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
      if(FLX_UNLIKELY(!(!((_vI14860_x.size() - 1  < _vI14857_i)) ) )) goto _ifdoelse_std_1957_L14872;
    // # C:/projects/felix/src/packages/strings.fdoc: line 414, cols 9 to 26
      //found<14858>varname = (case 0 of bool);
      _vI14858_found = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
      //j<14859>varname = literal[size]("0");
      _vI14859_j = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
    redo__ll_strings_7240_L14863:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
      if(FLX_UNLIKELY(!(!((_vI14861_e.size() - 1  < _vI14859_j)) ) )) goto break__ll_strings_7240_L14867;
    // # C:/projects/felix/src/packages/strings.fdoc: line 418, cols 11 to 15
      if(!((::flx::rtl::strutil::subscript(_vI14860_x,_vI14857_i) == ::flx::rtl::strutil::subscript(_vI14861_e,_vI14859_j))) ) goto _ifdoelse_std_1959_L14865;
    // # C:/projects/felix/src/packages/strings.fdoc: line 417, cols 13 to 24
      //found<14858>varname = (case 1 of bool);
      _vI14858_found = 1; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 418, cols 11 to 15
    _ifdoelse_std_1959_L14865:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
      // primcall pre_incr<67520>primproc[size] &j<14859>ref;
      {
      _a5094t_71046* _tmp71238 = (_a5094t_71046*)&_vI14859_j;
      ++*((_tmp71238));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
      goto redo__ll_strings_7240_L14863;
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
    break__ll_strings_7240_L14867:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 423, cols 9 to 13
      if(_vI14858_found) goto _ifdoend_std_1960_L14868;
    // # C:/projects/felix/src/packages/strings.fdoc: line 422, cols 11 to 26
      //return (copyfrom<67603>primfun[size] (x<14860>varname, i<14857>varname));: type _a14239t_71023
      return ::flx::rtl::strutil::substr(_vI14860_x,_vI14857_i,_vI14860_x.size());
    // # C:/projects/felix/src/packages/strings.fdoc: line 423, cols 9 to 13
    _ifdoend_std_1960_L14868:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
      // primcall pre_incr<67520>primproc[size] &i<14857>ref;
      {
      _a5094t_71046* _tmp71239 = (_a5094t_71046*)&_vI14857_i;
      ++*((_tmp71239));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
      goto redo__ll_strings_7234_L14862;
    // # C:/projects/felix/src/packages/strings.fdoc: line 425, cols 5 to 9
    _ifdoelse_std_1957_L14872:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 426, cols 5 to 14
      //return "";: type _a14239t_71023
      return ::std::string("");
}
//------------------------------
//FUNCTION <69845>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI69845__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <70743>: flx_pkgconfig::parse_args::aux_uncurry: Apply method
void* _fI70743_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70744_x_uncurry = _arg.data[0];
  _vI70745_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70752:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70748> := x_uncurry<70744>varname;
      _vI70748_aux__apos_2_mv_1387  = _vI70744_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70748_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70747;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70745>varname;: type void*
      return _vI70745_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70747:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70748_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70751__lam_1391)(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1390_L70746;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70749>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70748>varname));
      _vI70749_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70748_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70750>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70748>varname));
      _vI70750_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70748_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70745> := (Snoc<67702>struct (y<70745>varname, h_param_std_1269<70749>varname));
      _vI70745_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70745_y, _vI70749_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70744> := t_param_std_1268<70750>varname;
      _vI70744_x_uncurry  = _vI70750_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70752;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70746:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------

//PROCEDURE <65568:> flx_pkgconfig::tail_val: Call method
::flx::rtl::con_t * tail_val::call(::flx::rtl::con_t *_ptr_caller, _a14239t_71023 const &_arg){
  _caller = _ptr_caller;
  _vI65570_v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65568:> flx_pkgconfig::tail_val: Resume method
::flx::rtl::con_t *tail_val::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 278, cols 8 to 44
      //result<65528>varname = (aux<69239>stackfun (result<65528>varname, Empty<67690>varname));
      ptrflx_pkgconfig->result = aux(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 280, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <68588>: mem_uncurry: Apply method
 ::flx::rtl::cl_t mem_uncurry::apply(_tt71063 const &_arg ){
  eq_uncurry = _arg.mem_0;
  _vI68659_xs = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
    start_69038_L69038:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
      //mem'2_mv_1447<69031> := xs<68659>varname;
      _vI69031_mem__apos_2_mv_1447  = _vI68659_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 504, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 504, cols 7 to 12
      if(!(FLX_VNI(_vI69031_mem__apos_2_mv_1447)==0) ) goto _ml1449_L69030;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 5 to 58
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 504, cols 7 to 12
    _ml1449_L69030:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 7 to 15
/*match case 2:|Snoc (t_param_std_1295, h_param_std_1296)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 7 to 15
      if(!andthen(FLX_VNI(_vI69031_mem__apos_2_mv_1447)==1, (FLX_NEWP(_lam_1456)(FLX_FPAR_PASS this))) ) goto _ml1450_L69029;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 14 to 14
      //h_param_std_1296<69032>varname = apply((prj1:list * string -> string), (arg of case 1 of mem'2_mv_1447<69031>varname));
      h_param_std_1296 = (*((_tt71026*)FLX_VNP(_vI69031_mem__apos_2_mv_1447))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 12 to 12
      //t_param_std_1295<69033>varname = apply((prj0:list * string -> list), (arg of case 1 of mem'2_mv_1447<69031>varname));
      t_param_std_1295 = (*((_tt71026*)FLX_VNP(_vI69031_mem__apos_2_mv_1447))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 23 to 27
      //mem'2_mv_1452<69036> := apply(eq_uncurry<68658>varname, h_param_std_1296<69032>varname);
      _vI69036_mem__apos_2_mv_1452  = (eq_uncurry)->clone()
      ->apply(h_param_std_1296) /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
      if(!(_vI69036_mem__apos_2_mv_1452%2==1) ) goto _ml1454_L69035;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
    _ml1454_L69035:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
      //xs<68659> := t_param_std_1295<69033>varname;
      _vI68659_xs  = t_param_std_1295; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
      goto start_69038_L69038;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 7 to 15
    _ml1450_L69029:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 5 to 58
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 5 to 58
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",505,5,505,58);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",505,5,505,58);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",507,3,507,4); // HACK! 
}

//------------------------------
//FUNCTION <70079>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry: Apply method
void* _fI70079_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70080_x_uncurry = _arg.data[0];
  _vI70081_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70088:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70084> := x_uncurry<70080>varname;
      _vI70084_aux__apos_2_mv_1387  = _vI70080_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70084_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70083;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70081>varname;: type void*
      return _vI70081_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70083:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70084_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70087__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L70082;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70085>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70084>varname));
      _vI70085_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70084_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70086>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70084>varname));
      _vI70086_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70084_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70081> := (Snoc<67702>struct (y<70081>varname, h_param_std_1269<70085>varname));
      _vI70081_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70081_y, _vI70085_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70080> := t_param_std_1268<70086>varname;
      _vI70080_x_uncurry  = _vI70086_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70088;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70082:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69329>: flx_pkgconfig::check_id::iterator'2: Apply method
void* _fI69329_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      //i<69330>varname = 0;
      i = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
    redo__ll_strings_7200_L69331:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      if(FLX_UNLIKELY(!(!(((static_cast<int>((ptrcheck_id->_vI69333_x.size()))/*int.flx: ctor*/) - 1  < i)) ) )) goto break__ll_strings_7200_L69332;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 44 to 62
      FLX_SET_PC(71243)
      //yield (Some<68082>struct (subscript<67781>primfun[int] (x<69333>varname, i<69330>varname)));: type void*
      return FLX_VNR(1, new(*PTF gcp, char_ptr_map, true) char (::flx::rtl::strutil::subscript(ptrcheck_id->_vI69333_x,i)));//yield
    FLX_CASE_LABEL(71243)
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      // primcall pre_incr<68083>primproc[int] &i<69330>ref;
      {
      int* _tmp71244 = (int*)&i;
      ++*((_tmp71244));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      goto redo__ll_strings_7200_L69331;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
    break__ll_strings_7200_L69332:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 364, cols 7 to 24
      //return None<68084>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",365,5,365,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <70938>: flx_pkgconfig::_lam_65191: Apply method
 ::flx::rtl::cl_t _lam_65191::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 9 to 23
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",372,9,372,23); // HACK! 
}

//------------------------------
//FUNCTION <69376>: isidstart::_lam_168: Apply method
 ::flx::rtl::cl_t _lam_168::apply(){
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 57 to 62
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/char.fdoc",66,57,66,62); // HACK! 
}

//------------------------------
//FUNCTION <70968>: cat_uncurry::iterator'2: Apply method
void* _fI70968_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L70969:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<70973> := xs<70967>varname;
      _vI70973_iterator__apos_2_mv_1563  = ptrcat_uncurry->xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70973_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI70976__lam_1566)(FLX_FPAR_PASS this, ptrcat_uncurry))) ) goto _ml1565_L70972;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<70974>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<70973>varname));
      _vI70974_h_param_std_1319 = (*((_tt71026*)FLX_VNP(_vI70973_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<70975>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<70973>varname));
      _vI70975_t_param_std_1318 = (*((_tt71026*)FLX_VNP(_vI70973_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<70967>varname = t_param_std_1318<70975>varname;
      ptrcat_uncurry->xs = _vI70975_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(71245)
      //yield (Some<67472>struct h_param_std_1319<70974>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_71023_ptr_map, true) _a14239t_71023 (_vI70974_h_param_std_1319));//yield
    FLX_CASE_LABEL(71245)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L70969;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L70972:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI70973_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L70971;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<67474>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L70971:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L70969;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <70023>: flx_pkgconfig::handle_pkg::_lam_65160::aux::aux_uncurry: Apply method
void* _fI70023_aux_uncurry::apply(_at71054 const &_arg ){
  _vI70024_x_uncurry = _arg.data[0];
  _vI70025_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L70032:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<70028> := x_uncurry<70024>varname;
      _vI70028_aux__apos_2_mv_1387  = _vI70024_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI70028_aux__apos_2_mv_1387)==0) ) goto _ml1389_L70027;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<70025>varname;: type void*
      return _vI70025_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L70027:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI70028_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI70031__lam_1391)(FLX_FPAR_PASS this, ptr_fI70015_aux, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L70026;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<70029>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<70028>varname));
      _vI70029_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI70028_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<70030>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<70028>varname));
      _vI70030_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI70028_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<70025> := (Snoc<67702>struct (y<70025>varname, h_param_std_1269<70029>varname));
      _vI70025_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI70025_y, _vI70029_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<70024> := t_param_std_1268<70030>varname;
      _vI70024_x_uncurry  = _vI70030_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L70032;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L70026:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <70722>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70722__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <69142>: flx_pkgconfig::add_val::aux_uncurry: Apply method
void* _fI69142_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69143_x_uncurry = _arg.data[0];
  _vI69144_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69151:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69147> := x_uncurry<69143>varname;
      _vI69147_aux__apos_2_mv_1387  = _vI69143_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69147_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69146;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69144>varname;: type void*
      return _vI69144_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69146:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69147_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI69150__lam_1391)(FLX_FPAR_PASS this, ptradd_val, ptrflx_pkgconfig))) ) goto _ml1390_L69145;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69148>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69147>varname));
      _vI69148_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69147_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69149>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69147>varname));
      _vI69149_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69147_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69144> := (Snoc<67702>struct (y<69144>varname, h_param_std_1269<69148>varname));
      _vI69144_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69144_y, _vI69148_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69143> := t_param_std_1268<69149>varname;
      _vI69143_x_uncurry  = _vI69149_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69151;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69145:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69657>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI69657__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <69997>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI69997__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <69493>: flx_pkgconfig::get_variable::_lam_65159: Apply method
 ::flx::rtl::cl_t _lam_65159::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 11 to 16
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",265,11,265,16); // HACK! 
}

//------------------------------
//FUNCTION <70751>: flx_pkgconfig::parse_args::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70751__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <65512>: flx_pkgconfig::reattach_drive_letters: Apply method
void* reattach_drive_letters::apply(void* const &_arg ){
  _a = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 238, cols 5 to 6
      //reattach_drive_letters_mv_65119<70798> := _a<65526>varname;
      reattach_drive_letters_mv_65119  = _a; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 9 to 32
/*match case 1:|Cons (a_param_flx_pkgconfig_65057, |Cons (b_param_flx_pkgconfig_65058, tail_param_flx_pkgconfig_65059))*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 9 to 32
      if(!andthen(!!reattach_drive_letters_mv_65119 , (FLX_NEWP(_lam_65127)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65121_L70803;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 27 to 30
      //tail_param_flx_pkgconfig_65059<70799>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<67712>primfun[string] apply((prj1:string * list -> list), (_ctor_arg_Cons<67712>primfun[string] reattach_drive_letters_mv_65119<70798>varname))));
      tail_param_flx_pkgconfig_65059 = (reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(((reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(reattach_drive_letters_mv_65119))).mem_1)))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 24 to 24
      //b_param_flx_pkgconfig_65058<70800>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<67712>primfun[string] apply((prj1:string * list -> list), (_ctor_arg_Cons<67712>primfun[string] reattach_drive_letters_mv_65119<70798>varname))));
      b_param_flx_pkgconfig_65058 = (reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(((reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(reattach_drive_letters_mv_65119))).mem_1)))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 15 to 15
      //a_param_flx_pkgconfig_65057<70801>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<67712>primfun[string] reattach_drive_letters_mv_65119<70798>varname));
      a_param_flx_pkgconfig_65057 = (reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(reattach_drive_letters_mv_65119))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 232, cols 15 to 72
      //reattach_drive_letters_mv_65123<70806> := (land<5211>primfun ((land<5211>primfun ((==<68016>primfun[size] ((len<14304>primfun a_param_flx_pkgconfig_65057<70801>varname), (_ctor_size<68271>primfun[int] 1))), (isalpha<5697>primfun (subscript<67781>primfun[int] (a_param_flx_pkgconfig_65057<70801>varname, 0))))), (==<68130>primfun[string] ((copyto<67994>primfun[size] (b_param_flx_pkgconfig_65058<70800>varname, (len<14304>primfun "\"))), "\"))));
      reattach_drive_letters_mv_65123  = ((a_param_flx_pkgconfig_65057.size() == (static_cast<_a5094t_71046>(1)/*int.flx: ctor size from _a5094t_71046*/)) && (!!isalpha((::flx::rtl::strutil::subscript(a_param_flx_pkgconfig_65057,0)))) ) && (::flx::rtl::strutil::substr(b_param_flx_pkgconfig_65058,0,::std::string("\\").size()) == ::std::string("\\")) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 235, cols 11 to 62
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 235, cols 11 to 62
      if(!(reattach_drive_letters_mv_65123%2==1) ) goto _ml65125_L70807;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<67702>struct ((reattach_drive_letters<65512>stackfun tail_param_flx_pkgconfig_65059<70799>varname), (+<14305>primfun ((+<14305>primfun (a_param_flx_pkgconfig_65057<70801>varname, ":")), b_param_flx_pkgconfig_65058<70800>varname))));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(reattach_drive_letters(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(tail_param_flx_pkgconfig_65059) /* apply_stack */, (a_param_flx_pkgconfig_65057 + ::std::string(":") ) + b_param_flx_pkgconfig_65058 )));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 235, cols 11 to 62
    _ml65125_L70807:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 235, cols 11 to 62
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<67702>struct ((reattach_drive_letters<65512>stackfun (Snoc<67702>struct (tail_param_flx_pkgconfig_65059<70799>varname, b_param_flx_pkgconfig_65058<70800>varname))), a_param_flx_pkgconfig_65057<70801>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(reattach_drive_letters(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(tail_param_flx_pkgconfig_65059, b_param_flx_pkgconfig_65058)))) /* apply_stack */, a_param_flx_pkgconfig_65057)));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 9 to 32
    _ml65121_L70803:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 237, cols 9 to 13
/*match case 2:other_param_flx_pkgconfig_65060*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 237, cols 9 to 13
      //other_param_flx_pkgconfig_65060<70802>varname = reattach_drive_letters_mv_65119<70798>varname;
      other_param_flx_pkgconfig_65060 = reattach_drive_letters_mv_65119; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 238, cols 5 to 6
      //return other_param_flx_pkgconfig_65060<70802>varname;: type void*
      return other_param_flx_pkgconfig_65060;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",238,5,238,6); // HACK! 
}

//------------------------------
//FUNCTION <70096>: flx_pkgconfig::handle_pkg::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI70096__lam_1457::apply(_a14239t_71023 const &_arg ){
  _vI70097_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<67719>stackfun (x<70097>varname, pkg<65638>varname));: type  ::flx::rtl::cl_t
      return eq(_vI70097_x, ptrhandle_pkg->pkg);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------

//PROCEDURE <65572:> flx_pkgconfig::keep_val: Call method
::flx::rtl::con_t * keep_val::call(::flx::rtl::con_t *_ptr_caller, _a14239t_71023 const &_arg){
  _caller = _ptr_caller;
  _vI65574_v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65572:> flx_pkgconfig::keep_val: Resume method
::flx::rtl::con_t *keep_val::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 283, cols 7 to 25
      //result<65528>varname = (+<68132>stackfun (result<65528>varname, v<65574>varname));
      ptrflx_pkgconfig->result = _fI68132___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt71026(ptrflx_pkgconfig->result, _vI65574_v)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 284, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <69132>: flx_pkgconfig::add_val::aux_uncurry: Apply method
void* _fI69132_aux_uncurry::apply(_at71054 const &_arg ){
  x_uncurry = _arg.data[0];
  _vI69134_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69141:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69137> := x_uncurry<69133>varname;
      _vI69137_aux__apos_2_mv_1387  = x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69137_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69136;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69134>varname;: type void*
      return _vI69134_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69136:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69137_aux__apos_2_mv_1387)==1, (FLX_NEWP(_lam_1391)(FLX_FPAR_PASS this, ptradd_val, ptrflx_pkgconfig))) ) goto _ml1390_L69135;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69138>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69137>varname));
      h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69137_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69139>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69137>varname));
      t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69137_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69134> := (Snoc<67702>struct (y<69134>varname, h_param_std_1269<69138>varname));
      _vI69134_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69134_y, h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69133> := t_param_std_1268<69139>varname;
      x_uncurry  = t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69141;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69135:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69989>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry: Apply method
void* _fI69989_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69990_x_uncurry = _arg.data[0];
  _vI69991_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69998:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69994> := x_uncurry<69990>varname;
      _vI69994_aux__apos_2_mv_1387  = _vI69990_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69994_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69993;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69991>varname;: type void*
      return _vI69991_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69993:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69994_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI69997__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L69992;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69995>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69994>varname));
      _vI69995_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69994_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69996>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69994>varname));
      _vI69996_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69994_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69991> := (Snoc<67702>struct (y<69991>varname, h_param_std_1269<69995>varname));
      _vI69991_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69991_y, _vI69995_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69990> := t_param_std_1268<69996>varname;
      _vI69990_x_uncurry  = _vI69996_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69998;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69992:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------

//PROCEDURE <68595:> iter_uncurry: Call method
::flx::rtl::con_t * iter_uncurry::call(::flx::rtl::con_t *_ptr_caller, _tt71065 const &_arg){
  _caller = _ptr_caller;
  _f_uncurry = _arg.mem_0;
  _vI68725_x = _arg.mem_1;
  INIT_PC
  return this;
}

//PROCEDURE <68595:> iter_uncurry: Resume method
::flx::rtl::con_t *iter_uncurry::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //iter'2_mv_1348<69171> := x<68725>varname;
      _vI69171_iter__apos_2_mv_1348  = _vI68725_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 220, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 220, cols 9 to 14
      if(!(FLX_VNI(_vI69171_iter__apos_2_mv_1348)==0) ) goto _ml1350_L69170;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/lists.fdoc: line 220, cols 9 to 14
    _ml1350_L69170:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1256, h_param_std_1257)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 9 to 17
      if(!andthen(FLX_VNI(_vI69171_iter__apos_2_mv_1348)==1, (FLX_NEWP(_lam_1354)(FLX_FPAR_PASS this))) ) goto _ml1352_L69169;
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 16 to 16
      //h_param_std_1257<69173>varname = apply((prj1:list * string -> string), (arg of case 1 of iter'2_mv_1348<69171>varname));
      h_param_std_1257 = (*((_tt71026*)FLX_VNP(_vI69171_iter__apos_2_mv_1348))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 14 to 14
      //t_param_std_1256<69174>varname = apply((prj0:list * string -> list), (arg of case 1 of iter'2_mv_1348<69171>varname));
      t_param_std_1256 = (*((_tt71026*)FLX_VNP(_vI69171_iter__apos_2_mv_1348))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 24 to 28
      //call _f_uncurry<68724>varname h_param_std_1257<69173>varname;
      FLX_SET_PC(71251)
      return (_f_uncurry)->clone()
      ->call(this, h_param_std_1257);
    FLX_CASE_LABEL(71251)
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //jump to procedure direct tail call iter_uncurry<68595>directjump (_f_uncurry<68724>varname, t_param_std_1256<69174>varname);
      {
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(tmp, _tt71065(_f_uncurry, t_param_std_1256));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 9 to 17
    _ml1352_L69169:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 7 to 42
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 7 to 42
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",221,7,221,42);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",221,7,221,42);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <65371>: flx_pkgconfig::lexit: Apply method
_tt71071 lexit::apply(_at71070 const &_arg ){
  ini = _arg.data[0];
  finish = _arg.data[1];
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 59, cols 7 to 22
      //start<65373>varname = ini<65377>varname;
      start = ini; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 93, cols 7 to 11
      if(!((start == finish)) ) goto _ifdoend_flx_pkgconfig_64993_L65379;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 63, cols 9 to 25
      //return (start<65373>varname, "");: type _tt71071
      return _tt71071(start, ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 93, cols 7 to 11
    _ifdoend_flx_pkgconfig_64993_L65379:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0))) ) goto _ifdoend_flx_pkgconfig_64995_L65382;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 67, cols 9 to 15
      // primcall pre_incr<65370>primproc &start<65373>ref;
      {
      _a15974t_71069* _tmp71254 = (_a15974t_71069*)&start;
      ++*((_tmp71254));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 9 to 70
    continue__ll_flx_pkgconfig_10727_L65380:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 9 to 70
      if(FLX_UNLIKELY(!(!((start == finish))  && (*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0)) ) )) goto break__ll_flx_pkgconfig_10727_L65381;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 58 to 64
      // primcall pre_incr<65370>primproc &start<65373>ref;
      {
      _a15974t_71069* _tmp71255 = (_a15974t_71069*)&start;
      ++*((_tmp71255));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 9 to 70
      goto continue__ll_flx_pkgconfig_10727_L65380;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 9 to 70
    break__ll_flx_pkgconfig_10727_L65381:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 69, cols 9 to 24
      //return (start<65373>varname, "");: type _tt71071
      return _tt71071(start, ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
    _ifdoend_flx_pkgconfig_64995_L65382:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_flx_pkgconfig_64997_L65386;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 73, cols 9 to 15
      // primcall pre_incr<65370>primproc &start<65373>ref;
      {
      _a15974t_71069* _tmp71256 = (_a15974t_71069*)&start;
      ++*((_tmp71256));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 74, cols 9 to 19
      //p1<65374>varname = start<65373>varname;
      p1 = start; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 9 to 70
    continue__ll_flx_pkgconfig_10742_L65383:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 9 to 70
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string("\""),0)))  ) )) goto break__ll_flx_pkgconfig_10742_L65384;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 58 to 64
      // primcall pre_incr<65370>primproc &start<65373>ref;
      {
      _a15974t_71069* _tmp71257 = (_a15974t_71069*)&start;
      ++*((_tmp71257));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 9 to 70
      goto continue__ll_flx_pkgconfig_10742_L65383;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 9 to 70
    break__ll_flx_pkgconfig_10742_L65384:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 80, cols 9 to 13
      if(!((start == finish)) ) goto _ifdoend_flx_pkgconfig_64999_L65385;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 77, cols 11 to 48
      //return (start<65373>varname, (string_between<15980>primfun (p1<65374>varname, start<65373>varname)));: type _tt71071
      return _tt71071(start, ::std::string(p1,start));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 80, cols 9 to 13
    _ifdoend_flx_pkgconfig_64999_L65385:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 79, cols 11 to 51
      //return ((+<15981>primfun (start<65373>varname, 1)), (string_between<15980>primfun (p1<65374>varname, start<65373>varname)));: type _tt71071
      return _tt71071(start + 1 , ::std::string(p1,start));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
    _ifdoend_flx_pkgconfig_64997_L65386:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string("'"),0))) ) goto _ifdoend_flx_pkgconfig_65001_L65390;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 84, cols 9 to 15
      // primcall pre_incr<65370>primproc &start<65373>ref;
      {
      _a15974t_71069* _tmp71258 = (_a15974t_71069*)&start;
      ++*((_tmp71258));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 85, cols 9 to 19
      //p2<65375>varname = start<65373>varname;
      p2 = start; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 9 to 70
    continue__ll_flx_pkgconfig_10768_L65387:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 9 to 70
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string("'"),0)))  ) )) goto break__ll_flx_pkgconfig_10768_L65388;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 58 to 64
      // primcall pre_incr<65370>primproc &start<65373>ref;
      {
      _a15974t_71069* _tmp71259 = (_a15974t_71069*)&start;
      ++*((_tmp71259));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 9 to 70
      goto continue__ll_flx_pkgconfig_10768_L65387;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 9 to 70
    break__ll_flx_pkgconfig_10768_L65388:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 9 to 13
      if(!((start == finish)) ) goto _ifdoend_flx_pkgconfig_65003_L65389;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 88, cols 11 to 48
      //return (start<65373>varname, (string_between<15980>primfun (p2<65375>varname, start<65373>varname)));: type _tt71071
      return _tt71071(start, ::std::string(p2,start));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 9 to 13
    _ifdoend_flx_pkgconfig_65003_L65389:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 90, cols 11 to 51
      //return ((+<15981>primfun (start<65373>varname, 1)), (string_between<15980>primfun (p2<65375>varname, start<65373>varname)));: type _tt71071
      return _tt71071(start + 1 , ::std::string(p2,start));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
    _ifdoend_flx_pkgconfig_65001_L65390:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 95, cols 7 to 17
      //p3<65376>varname = start<65373>varname;
      p3 = start; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 7 to 69
    continue__ll_flx_pkgconfig_10793_L65391:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 7 to 69
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0)))  ) )) goto break__ll_flx_pkgconfig_10793_L65392;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 57 to 63
      // primcall pre_incr<65370>primproc &start<65373>ref;
      {
      _a15974t_71069* _tmp71260 = (_a15974t_71069*)&start;
      ++*((_tmp71260));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 7 to 69
      goto continue__ll_flx_pkgconfig_10793_L65391;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 7 to 69
    break__ll_flx_pkgconfig_10793_L65392:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 97, cols 7 to 44
      //return (start<65373>varname, (string_between<15980>primfun (p3<65376>varname, start<65373>varname)));: type _tt71071
      return _tt71071(start, ::std::string(p3,start));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",98,5,98,6); // HACK! 
}

//------------------------------
//FUNCTION <69630>: flx_pkgconfig::get_field::_lam_65140: Apply method
 ::flx::rtl::cl_t _lam_65140::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 11 to 16
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",255,11,255,16); // HACK! 
}

//------------------------------
//FUNCTION <69255>: flx_pkgconfig::tail_val::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI69255__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------

//PROCEDURE <65564:> flx_pkgconfig::add_val: Call method
::flx::rtl::con_t * add_val::call(::flx::rtl::con_t *_ptr_caller, _a14239t_71023 const &_arg){
  _caller = _ptr_caller;
  v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65564:> flx_pkgconfig::add_val: Resume method
::flx::rtl::con_t *add_val::resume(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 514, cols 3 to 4
      //insert_unique'3_mv_1487<69129> := (mem_uncurry<68588>stackfun (_lam_1457<69130>closure, result<65528>varname));
      _vI69129_insert_unique__apos_3_mv_1487  = mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt71063((FLX_NEWP(_lam_1457)(FLX_FPAR_PASS this, ptrflx_pkgconfig)), ptrflx_pkgconfig->result)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      if(!(_vI69129_insert_unique__apos_3_mv_1487%2==1) ) goto _ml1489_L69128;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      //_urv69124<69124> := result<65528>varname;
      _urv69124  = ptrflx_pkgconfig->result; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      goto _end_hash_731425483;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
    _ml1489_L69128:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //_urv69124<69124> := (aux_uncurry<69142>stackfun ((Snoc<67702>struct ((aux_uncurry<69132>stackfun (result<65528>varname, Empty<67690>varname)), v<65566>varname)), Empty<67690>varname));
      _urv69124  = _fI69142_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_fI69132_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, v))), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 566, cols 3 to 4
    _end_hash_731425483:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 273, cols 6 to 42
      //result<65528>varname = _urv69124<69124>varname;
      ptrflx_pkgconfig->result = _urv69124; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 275, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//C FUNC <11786>: range
void* range(FLX_APAR_DECL  int low, int high, int step){
   ::flx::rtl::cl_t inner_mv_1400;
  void* _vI68890_values;
  int _vI68889_step;
  int _vI68888_high;
  int _vI68887_low;
   ::flx::rtl::cl_t range_mv_1411;
   ::flx::rtl::cl_t range_mv_1406;
  _at71033 _urv68880;
  int _vI11802_n;
  int _vI11801_s;
  int hi;
  int lo;
  _at71033 _ds1_1404;
    // # C:/projects/felix/src/packages/lists.fdoc: line 363, cols 21 to 30
      //range_mv_1406<68881> := (<<67642>primfun[int] (low<11805>varname, high<11806>varname));
      range_mv_1406  = (low < high); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
      if(!(range_mv_1406%2==1) ) goto _ml1408_L68882;
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj0:int^3 -> int), _urv68880<68880>varname) = low<11805>varname;
      (_urv68880.data)[0] = low; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj1:int^3 -> int), _urv68880<68880>varname) = high<11806>varname;
      (_urv68880.data)[1] = high; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj2:int^3 -> int), _urv68880<68880>varname) = step<11807>varname;
      (_urv68880.data)[2] = step; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
      goto _end_inline_range_mf_1405_68884_L68884;
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
    _ml1408_L68882:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj0:int^3 -> int), _urv68880<68880>varname) = high<11806>varname;
      (_urv68880.data)[0] = high; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj1:int^3 -> int), _urv68880<68880>varname) = low<11805>varname;
      (_urv68880.data)[1] = low; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj2:int^3 -> int), _urv68880<68880>varname) = (neg<67678>primfun[int] step<11807>varname);
      (_urv68880.data)[2] = - step ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
    _end_inline_range_mf_1405_68884_L68884:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 366, cols 5 to 12
      //_ds1_1404<11798>varname = _urv68880<68880>varname;
      _ds1_1404 = _urv68880; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 366, cols 5 to 12
      //lo<11799>varname = apply((prj0:int^3 -> int), _ds1_1404<11798>varname);
      lo = (_ds1_1404.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 366, cols 5 to 12
      //hi<11800>varname = apply((prj1:int^3 -> int), _ds1_1404<11798>varname);
      hi = (_ds1_1404.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 366, cols 5 to 12
      //s<11801>varname = apply((prj2:int^3 -> int), _ds1_1404<11798>varname);
      _vI11801_s = (_ds1_1404.data)[2]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 370, cols 5 to 20
      //n<11802>varname = (-<67612>primfun[int] ((-<67612>primfun[int] (hi<11800>varname, lo<11799>varname)), 1));
      _vI11802_n = (hi - lo ) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 398, cols 3 to 39
      //range_mv_1411<68885> := (lnot<5216>primfun (<<67642>primfun[int] (0, s<11801>varname)));
      range_mv_1411  = !((0 < _vI11801_s)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
      if(!(range_mv_1411%2==1) ) goto _ml1413_L68886;
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
      //return Empty<67621>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
    _ml1413_L68886:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //low<68887> := lo<11799>varname;
      _vI68887_low  = lo; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //high<68888> := (+<67526>primfun[int] (lo<11799>varname, (-<67612>primfun[int] (n<11802>varname, (%<67622>primfun[int] (n<11802>varname, s<11801>varname))))));
      _vI68888_high  = lo + (_vI11802_n - (_vI11802_n % _vI11801_s ) ) ; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //step<68889> := s<11801>varname;
      _vI68889_step  = _vI11801_s; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //values<68890> := Empty<67621>varname;
      _vI68890_values  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
    start_68869_L68893:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 355, cols 12 to 21
      //inner_mv_1400<68891> := (<<67642>primfun[int] (high<68888>varname, low<68887>varname));
      inner_mv_1400  = (_vI68888_high < _vI68887_low); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
      if(!(inner_mv_1400%2==1) ) goto _ml1402_L68892;
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
      //return values<68890>varname;: type void*
      return _vI68890_values;
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
    _ml1402_L68892:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //values<68890> := (Snoc<67643>struct (values<68890>varname, high<68888>varname));
      _vI68890_values  = FLX_VNR(1, new(*PTF gcp, _tt71029_ptr_map, true) _tt71029 (_tt71029(_vI68890_values, _vI68888_high))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //high<68888> := (-<67612>primfun[int] (high<68888>varname, step<68889>varname));
      _vI68888_high  = _vI68888_high - _vI68889_step ; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      goto start_68869_L68893;
}
//------------------------------
//FUNCTION <70741>: flx_pkgconfig::parse_args::aux::_lam_2300: Apply method
 ::flx::rtl::cl_t _lam_2300::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",502,9,502,14); // HACK! 
}

//------------------------------
//FUNCTION <69528>: search_and_replace_uncurry::iterator'2: Apply method
void* _fI69528_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L69529:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<69533> := xs<69527>varname;
      _vI69533_iterator__apos_2_mv_1563  = ptrsearch_and_replace_uncurry->_vI69527_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69533_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_lam_1566)(FLX_FPAR_PASS this, ptrsearch_and_replace_uncurry))) ) goto _ml1565_L69532;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<69534>varname = apply((prj1:list * string^2 -> string^2), (arg of case 1 of iterator'2_mv_1563<69533>varname));
      h_param_std_1319 = (*((_tt71060*)FLX_VNP(_vI69533_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<69535>varname = apply((prj0:list * string^2 -> list), (arg of case 1 of iterator'2_mv_1563<69533>varname));
      t_param_std_1318 = (*((_tt71060*)FLX_VNP(_vI69533_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<69527>varname = t_param_std_1318<69535>varname;
      ptrsearch_and_replace_uncurry->_vI69527_xs = t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(71261)
      //yield (Some<68065>struct h_param_std_1319<69534>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _at71025_ptr_map, true) _at71025 (h_param_std_1319));//yield
    FLX_CASE_LABEL(71261)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L69529;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L69532:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI69533_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L69531;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<68067>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L69531:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L69529;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <70696>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI70696__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <70901>: flx_pkgconfig::aux::_lam_2289: Apply method
 ::flx::rtl::cl_t _lam_2289::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,9,478,14); // HACK! 
}

//------------------------------
//FUNCTION <70997>: cat_uncurry::_lam_1444: Apply method
 ::flx::rtl::cl_t _lam_1444::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",474,9,474,17); // HACK! 
}

//------------------------------

//PROCEDURE <65443:> flx_pkgconfig::parse_args: Call method
void parse_args::stack_call(void* const &_arg){
  ::flx::rtl::con_t *cc = call(0,_arg);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * parse_args::call(::flx::rtl::con_t *_ptr_caller, void* const &_arg){
  _caller = _ptr_caller;
  _vI65510_args = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65443:> flx_pkgconfig::parse_args: Resume method
::flx::rtl::con_t *parse_args::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      //parse_args_mv_65106<70496> := args<65510>varname;
      parse_args_mv_65106  = _vI65510_args; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 153, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 153, cols 9 to 14
      if(!(FLX_VNI(parse_args_mv_65106)==0) ) goto _ml65108_L70551;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 153, cols 9 to 14
    _ml65108_L70551:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 9 to 23
/*match case 2:|Cons (arg_param_flx_pkgconfig_65009, tail_param_flx_pkgconfig_65010)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 9 to 23
      if(!andthen(!!parse_args_mv_65106 , (FLX_NEWP(_lam_65117)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65110_L70552;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 19 to 22
      //tail_param_flx_pkgconfig_65010<70498>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<67712>primfun[string] parse_args_mv_65106<70496>varname));
      tail_param_flx_pkgconfig_65010 = (reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(parse_args_mv_65106))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 15 to 17
      //arg_param_flx_pkgconfig_65009<70499>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<67712>primfun[string] parse_args_mv_65106<70496>varname));
      arg_param_flx_pkgconfig_65009 = (reinterpret<_tt71043>(flx::list::snoc2cons<_a14239t_71023>(parse_args_mv_65106))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 219, cols 11 to 15
      if(!((::std::string("--hide") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,::std::string("--hide").size()))) ) goto _ifdoend_flx_pkgconfig_65011_L70634;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 158, cols 34 to 44
      //hide<65413>varname = (case 1 of bool);
      ptrflx_pkgconfig->hide = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 219, cols 11 to 15
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 219, cols 11 to 15
    _ifdoend_flx_pkgconfig_65011_L70634:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--backwards") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,::std::string("--backwards").size()))) ) goto _ifdoend_flx_pkgconfig_65013_L70635;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 159, cols 41 to 56
      //backwards<65421>varname = (case 1 of bool);
      ptrflx_pkgconfig->backwards = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65013_L70635:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--list") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,::std::string("--list").size()))) ) goto _ifdoend_flx_pkgconfig_65015_L70636;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 160, cols 36 to 48
      //dolist<65418>varname = (case 1 of bool);
      ptrflx_pkgconfig->dolist = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65015_L70636:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--missing") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,::std::string("--missing").size()))) ) goto _ifdoend_flx_pkgconfig_65017_L70637;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 161, cols 39 to 52
      //missing<65415>varname = (case 1 of bool);
      ptrflx_pkgconfig->missing = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65017_L70637:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--noerror") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,::std::string("--noerror").size()))) ) goto _ifdoend_flx_pkgconfig_65019_L70638;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 162, cols 39 to 64
      //require_pkg_exists<65414>varname = (case 0 of bool);
      ptrflx_pkgconfig->require_pkg_exists = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65019_L70638:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--keeprightmost") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,::std::string("--keeprightmost").size()))) ) goto _ifdoend_flx_pkgconfig_65021_L70639;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 163, cols 45 to 64
      //keep<65429>varname = keeprightmost<65427>varname;
      ptrflx_pkgconfig->keep = /*VR_int*/2; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65021_L70639:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--keepleftmost") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,::std::string("--keepleftmost").size()))) ) goto _ifdoend_flx_pkgconfig_65023_L70640;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 164, cols 44 to 62
      //keep<65429>varname = keepleftmost<65425>varname;
      ptrflx_pkgconfig->keep = /*VR_int*/1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65023_L70640:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--keepall") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,::std::string("--keepall").size()))) ) goto _ifdoend_flx_pkgconfig_65025_L70641;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 165, cols 39 to 52
      //keep<65429>varname = keepall<65423>varname;
      ptrflx_pkgconfig->keep = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65025_L70641:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--field") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,7))) ) goto _ifdoend_flx_pkgconfig_65027_L70642;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 168, cols 13 to 40
      //fields<65411>varname = (+<68132>stackfun (fields<65411>varname, (copyfrom<68486>primfun[int] (arg_param_flx_pkgconfig_65009<70499>varname, 8))));
      ptrflx_pkgconfig->fields = _fI68132___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt71026(ptrflx_pkgconfig->fields, ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,8,arg_param_flx_pkgconfig_65009.size()))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65027_L70642:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--extension") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,11))) ) goto _ifdoend_flx_pkgconfig_65029_L70643;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 171, cols 13 to 35
      //extension<65430>varname = (copyfrom<68486>primfun[int] (arg_param_flx_pkgconfig_65009<70499>varname, 12));
      ptrflx_pkgconfig->extension = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,12,arg_param_flx_pkgconfig_65009.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65029_L70643:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,1)) && !((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,1,2)))  ) ) goto _ifdoend_flx_pkgconfig_65031_L70652;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 174, cols 13 to 31
      //flags<70630>varname = (copyfrom<68486>primfun[int] (arg_param_flx_pkgconfig_65009<70499>varname, 1));
      _vI70630_flags = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,1,arg_param_flx_pkgconfig_65009.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 177, cols 13 to 17
      if(!xfind(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_at71025(_vI70630_flags, ::std::string("r"))) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_65034_L70645;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 176, cols 15 to 66
      //recfields<65417>varname = (aux<70680>stackfun (recfields<65417>varname, Empty<67690>varname));
      ptrflx_pkgconfig->recfields = _fI70680_aux(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(ptrflx_pkgconfig->recfields, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 177, cols 13 to 17
    _ifdoelse_flx_pkgconfig_65034_L70645:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 179, cols 13 to 52
      if(!xfind(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_at71025(_vI70630_flags, ::std::string("h"))) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_65036_L70647;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 179, cols 36 to 46
      //hide<65413>varname = (case 1 of bool);
      ptrflx_pkgconfig->hide = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 179, cols 13 to 52
    _ifdoelse_flx_pkgconfig_65036_L70647:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 180, cols 13 to 57
      if(!xfind(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_at71025(_vI70630_flags, ::std::string("b"))) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_65038_L70649;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 180, cols 36 to 51
      //backwards<65421>varname = (case 1 of bool);
      ptrflx_pkgconfig->backwards = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 180, cols 13 to 57
    _ifdoelse_flx_pkgconfig_65038_L70649:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 181, cols 13 to 54
      if(!xfind(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_at71025(_vI70630_flags, ::std::string("l"))) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 181, cols 36 to 48
      //dolist<65418>varname = (case 1 of bool);
      ptrflx_pkgconfig->dolist = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65031_L70652:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--rec") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,5))) ) goto _ifdoend_flx_pkgconfig_65041_L70653;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 184, cols 13 to 33
      //fld<70631>varname = (copyfrom<68486>primfun[int] (arg_param_flx_pkgconfig_65009<70499>varname, 6));
      fld = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,6,arg_param_flx_pkgconfig_65009.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 22 to 30
      //_lam_65111_mv_65113<70703> := (==<68130>primfun[string] (fld<70631>varname, ""));
      _lam_65111_mv_65113  = (fld == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
      if(!(_lam_65111_mv_65113%2==1) ) goto _ml65115_L70704;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
      //_urv70316<70702> := "Requires";
      _urv70316  = ::std::string("Requires"); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
      goto _end_hash_237421853;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
    _ml65115_L70704:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
      //_urv70316<70702> := fld<70631>varname;
      _urv70316  = fld; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
    _end_hash_237421853:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 13 to 61
      //fld<70631>varname = _urv70316<70702>varname;
      fld = _urv70316; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 186, cols 13 to 57
      //recfields<65417>varname = (aux<70706>stackfun (recfields<65417>varname, Empty<67690>varname));
      ptrflx_pkgconfig->recfields = _fI70706_aux(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(ptrflx_pkgconfig->recfields, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65041_L70653:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--path+") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,7))) ) goto _ifdoend_flx_pkgconfig_65043_L70656;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 190, cols 13 to 31
      //x<70632>varname = (copyfrom<68486>primfun[int] (arg_param_flx_pkgconfig_65009<70499>varname, 8));
      _vI70632_x = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,8,arg_param_flx_pkgconfig_65009.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 195, cols 13 to 17
      if(!(!((ptrflx_pkgconfig->path == ::std::string(""))) ) ) goto _ifdoend_flx_pkgconfig_65045_L70654;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 192, cols 15 to 34
      //path<65410>varname = (+<14305>primfun ((+<14305>primfun (path<65410>varname, ":")), x<70632>varname));
      ptrflx_pkgconfig->path = (ptrflx_pkgconfig->path + ::std::string(":") ) + _vI70632_x ; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 195, cols 13 to 17
    _ifdoend_flx_pkgconfig_65045_L70654:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 194, cols 15 to 21
      //path<65410>varname = x<70632>varname;
      ptrflx_pkgconfig->path = _vI70632_x; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65043_L70656:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--path") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,6))) ) goto _ifdoend_flx_pkgconfig_65047_L70657;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 199, cols 13 to 28
      //path<65410>varname = (copyfrom<68486>primfun[int] (arg_param_flx_pkgconfig_65009<70499>varname, 7));
      ptrflx_pkgconfig->path = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,7,arg_param_flx_pkgconfig_65009.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65047_L70657:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--help") == arg_param_flx_pkgconfig_65009)) ) goto _ifdoend_flx_pkgconfig_65049_L70658;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 51, cols 5 to 6
      //run procedure stackcall print_help<65367>stackproc  ();
      {
      print_help(ptrflx_pkgconfig)
      .stack_call();
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 204, cols 13 to 28
      // primcall exit<7637>primproc 0;
      ::std::exit(0);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65049_L70658:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("@") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,1))) ) goto _ifdoend_flx_pkgconfig_65051_L70659;
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L70729;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<68486>primfun[int] (arg_param_flx_pkgconfig_65009<70499>varname, 1)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")))), "\x0A")));
      {
      _a14239t_71023 _tmp71265 = (::std::string("[load] ") + lstrip(rstrip(::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,1,arg_param_flx_pkgconfig_65009.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp71265)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L70729:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 207, cols 13 to 46
      //data<70633>varname = (raw_load<8396>primfun (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<68486>primfun[int] (arg_param_flx_pkgconfig_65009<70499>varname, 1)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")));
      data = ::flx::rtl::ioutil::load_file((lstrip(rstrip(::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,1,arg_param_flx_pkgconfig_65009.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")))); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      //run procedure stackcall parse_args<65443>stackproc  (aux_uncurry<70743>stackfun ((aux<70730>stackfun (data<70633>varname, Empty<67690>varname)), Empty<67690>varname));
      {
      void* _tmp71266 = _fI70743_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at71054(_fI70730_aux(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_tt71043(data, (void* /*VR_nullptr*/ )0)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
      parse_args(FLX_FPAR_PASS ptrflx_pkgconfig)
      .stack_call((_tmp71266));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65051_L70659:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_65009,0,1))) ) goto _ifdoend_flx_pkgconfig_65053_L70660;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65053_L70660:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("") == arg_param_flx_pkgconfig_65009)) ) goto _ifdoend_flx_pkgconfig_65055_L70661;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_flx_pkgconfig_65012_L70679;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_flx_pkgconfig_65055_L70661:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 13 to 29
      //pkgs<65412>varname = (+<68132>stackfun (pkgs<65412>varname, arg_param_flx_pkgconfig_65009<70499>varname));
      ptrflx_pkgconfig->pkgs = _fI68132___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt71026(ptrflx_pkgconfig->pkgs, arg_param_flx_pkgconfig_65009)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 219, cols 11 to 15
    _ifdoelse_flx_pkgconfig_65012_L70679:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      //run procedure stackcall parse_args<65443>stackproc  tail_param_flx_pkgconfig_65010<70498>varname;
      {
      parse_args(FLX_FPAR_PASS ptrflx_pkgconfig)
      .stack_call(tail_param_flx_pkgconfig_65010);
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 9 to 23
    _ml65110_L70552:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 221, cols 7 to 10
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 221, cols 7 to 10
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",221,7,221,10);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",221,7,221,10);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <69247>: flx_pkgconfig::tail_val::aux::aux_uncurry: Apply method
void* _fI69247_aux_uncurry::apply(_at71054 const &_arg ){
  _vI69248_x_uncurry = _arg.data[0];
  _vI69249_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_69069_L69256:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<69252> := x_uncurry<69248>varname;
      _vI69252_aux__apos_2_mv_1387  = _vI69248_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI69252_aux__apos_2_mv_1387)==0) ) goto _ml1389_L69251;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<69249>varname;: type void*
      return _vI69249_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L69251:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69252_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI69255__lam_1391)(FLX_FPAR_PASS this, ptraux, ptrtail_val, ptrflx_pkgconfig))) ) goto _ml1390_L69250;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<69253>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<69252>varname));
      _vI69253_h_param_std_1269 = (*((_tt71026*)FLX_VNP(_vI69252_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<69254>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<69252>varname));
      _vI69254_t_param_std_1268 = (*((_tt71026*)FLX_VNP(_vI69252_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<69249> := (Snoc<67702>struct (y<69249>varname, h_param_std_1269<69253>varname));
      _vI69249_y  = FLX_VNR(1, new(*PTF gcp, _tt71026_ptr_map, true) _tt71026 (_tt71026(_vI69249_y, _vI69253_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<69248> := t_param_std_1268<69254>varname;
      _vI69248_x_uncurry  = _vI69254_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_69069_L69256;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L69250:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <69837>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2::iterator'2: Apply method
void* _fI69837_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L69838:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<69842> := xs<69836>varname;
      _vI69842_iterator__apos_2_mv_1563  = ptr_fI69824_search_and_replace__apos_2->_vI69836_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI69842_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI69845__lam_1566)(FLX_FPAR_PASS this, ptr_fI69824_search_and_replace__apos_2, ptr_lam_65171, ptr_lam_65160, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1565_L69841;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<69843>varname = apply((prj1:list * string^2 -> string^2), (arg of case 1 of iterator'2_mv_1563<69842>varname));
      _vI69843_h_param_std_1319 = (*((_tt71060*)FLX_VNP(_vI69842_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<69844>varname = apply((prj0:list * string^2 -> list), (arg of case 1 of iterator'2_mv_1563<69842>varname));
      _vI69844_t_param_std_1318 = (*((_tt71060*)FLX_VNP(_vI69842_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<69836>varname = t_param_std_1318<69844>varname;
      ptr_fI69824_search_and_replace__apos_2->_vI69836_xs = _vI69844_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(71271)
      //yield (Some<68065>struct h_param_std_1319<69843>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _at71025_ptr_map, true) _at71025 (_vI69843_h_param_std_1319));//yield
    FLX_CASE_LABEL(71271)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L69838;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L69841:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI69842_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L69840;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<68067>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L69840:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L69838;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}


//-----------------------------------------
}} // namespace flxusr::flx_pkgconfig
//CREATE STANDARD EXTERNAL INTERFACE
FLX_FRAME_WRAPPERS(::flxusr::flx_pkgconfig,flx_pkgconfig)
FLX_STACK_START_WRAPPER(::flxusr::flx_pkgconfig,flx_pkgconfig,_init_)

//-----------------------------------------
//body complete
