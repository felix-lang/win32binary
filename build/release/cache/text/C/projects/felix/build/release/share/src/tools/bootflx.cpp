//Input file: build\release\share\src\tools\bootflx
//Generated by Felix Version 2016.07.12-rc1
//Timestamp: 2017/5/17 16:21:32 UTC
//Timestamp: 2017/5/17 16:21:32 (local)
#define FLX_EXTERN_bootflx FLX_EXPORT
#include "bootflx.hpp"
#include <stdio.h>
#define comma ,

//-----------------------------------------
//EMIT USER BODY CODE
using namespace ::flxusr::bootflx;

      static void **_mkjudy(FLX_APAR_DECL ::flx::gc::generic::gc_shape_t *jptr_map){
        typedef void *voidp; // syntax
        void **m = new (*PTF gcp, *jptr_map, false) voidp;
        *m=0;
        return m;
      }
    
#define JUDY_SL_MAXLEN 10000

      static void _jSLfree(::flx::gc::generic::collector_t*,void *p) {
        //printf("Free JSLArray %p\n",p);
        JError_t je;
        JudySLFreeArray((void**)p, &je);
      }
    

  static ::std::string RE2_encoder(void *p) {
    return (*(::std::shared_ptr< ::re2::RE2>*)p)->pattern();
  }

  static size_t RE2_decoder (void *p, char *s, size_t i) {
    char tmp[sizeof(::std::string)];
    i = ::flx::gc::generic::string_decoder (&tmp,s,i);
    new(p) ::std::shared_ptr< ::re2::RE2> (new ::re2::RE2 (*(::std::string*)(&tmp)));
    ::destroy((::std::string*)&tmp);
    return i;
  }
  

    static void _rev(void** plt, _a14239t_107672*) // second arg is a dummy
    { // in place reversal
      //struct node_t { _a14239t_107672 elt; void *tail; };
      struct node_t { void *tail; _a14239t_107672 elt; };
      void *nutail = 0;
      void *cur = *plt;
      while(cur)
      {
        void *oldtail = ((node_t*)FLX_VNP(cur))->tail;   // save old tail in temp
        ((node_t*)FLX_VNP(cur))->tail = nutail;          // overwrite current node tail
        nutail = cur;                                   // set new tail to current
        cur = oldtail;                                  // set current to saved old tail
      }
      *plt = nutail;                                    // overwrite
    }
    

    static void _rev_last(void** p1, void** p2, _a14239t_107672*)
    { // in place reversal returns tail as well
      //struct node_t { _a14239t_107672 elt; void *tail; };
      struct node_t { void *tail; _a14239t_107672 elt; };
      void *nutail = (void*)0;                 // new temp tail
      void *cur = *p1;                         // list to reverse
      void *last = cur;                        // save head
      while(cur)
      {
        void *oldtail = ((node_t*)FLX_VNP(cur))->tail;            // set old tail to current's tail
        ((node_t*)FLX_VNP(cur))->tail = nutail;                   // set current's tail to nutail
        nutail = cur;                                            // set nutail to current
        cur = oldtail;                                           // set current to old tail
      }
      *p1 = nutail;                                              // reversed list
      *p2 = last;                                                // original lists tail
    }
    

    static void _rev(void** plt, _at107674*) // second arg is a dummy
    { // in place reversal
      //struct node_t { _at107674 elt; void *tail; };
      struct node_t { void *tail; _at107674 elt; };
      void *nutail = 0;
      void *cur = *plt;
      while(cur)
      {
        void *oldtail = ((node_t*)FLX_VNP(cur))->tail;   // save old tail in temp
        ((node_t*)FLX_VNP(cur))->tail = nutail;          // overwrite current node tail
        nutail = cur;                                   // set new tail to current
        cur = oldtail;                                  // set current to saved old tail
      }
      *plt = nutail;                                    // overwrite
    }
    

    static void _rev_last(void** p1, void** p2, _at107674*)
    { // in place reversal returns tail as well
      //struct node_t { _at107674 elt; void *tail; };
      struct node_t { void *tail; _at107674 elt; };
      void *nutail = (void*)0;                 // new temp tail
      void *cur = *p1;                         // list to reverse
      void *last = cur;                        // save head
      while(cur)
      {
        void *oldtail = ((node_t*)FLX_VNP(cur))->tail;            // set old tail to current's tail
        ((node_t*)FLX_VNP(cur))->tail = nutail;                   // set current's tail to nutail
        nutail = cur;                                            // set nutail to current
        cur = oldtail;                                           // set current to old tail
      }
      *p1 = nutail;                                              // reversed list
      *p2 = last;                                                // original lists tail
    }
    

//-----------------------------------------
namespace flxusr { namespace bootflx {

//-----------------------------------------
//DEFINE OFFSET tables for GC
#include "bootflx.rtti"
FLX_DEF_THREAD_FRAME
//Thread Frame Constructor
thread_frame_t::thread_frame_t(
) :
  gcp(0),
  shape_list_head(bootflx_head_shape)
{}

//-----------------------------------------
//DEFINE FUNCTION CLASS METHODS
#include "bootflx.ctors_cpp"
//------------------------------
//FUNCTION <99143>: cxx_depcheck::_lam_66155: Apply method
 ::flx::rtl::cl_t _lam_66155::apply(_a14239t_107672 const &_arg ){
  _vI99144_s = _arg;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //return (lnot<5216>primfun (==<80464>primfun[string] (s<99144>varname, "")));: type  ::flx::rtl::cl_t
      return !((_vI99144_s == ::std::string(""))) ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",414,21,414,44); // HACK! 
}

//------------------------------
//FUNCTION <98154>: map_package_requirements_uncurry::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI98154__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <106706>: flx_processing::system: Apply method
int _fI106706_system::apply(_a14239t_107672 const &_arg ){
  _vI106710_cmd = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107058>ref;
      {
      __timeb64* _tmp108179 = (__timeb64*)&_vI107058_tv;
      _ftime64_s(((_tmp108179)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96165<107057> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107058>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107058>varname)), literal[double]("1.0e3")))));
      _vI107057__genout_urv96165  = (static_cast<double>((_vI107058_tv.time))) + ((static_cast<double>((_vI107058_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2025, cols 5 to 26
      //now<106707>varname = _genout_urv96165<107057>varname;
      _vI106707_now = _vI107057__genout_urv96165; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2026, cols 5 to 54
      if(!((ptrflx_processing->_vI107004_control.ECHO == 1)) ) goto _ifdoelse_bootflx_65844_L106712;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun (cmd<106710>varname, "\x0A")));
      {
      _a14239t_107672 _tmp108180 = _vI106710_cmd + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108180)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2026, cols 5 to 54
    _ifdoelse_bootflx_65844_L106712:;
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L107060;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", cmd<106710>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108181 = (::std::string("[system] ") + _vI106710_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108181)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L107060:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv96182<107065> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", cmd<106710>varname)), """)));
      _vI107065__genout_urv96182  = ::std::system(((::std::string("\"") + _vI106710_cmd ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<107064> := _genout_urv96182<107065>varname;
      _vI107064__genout_urv93723  = _vI107065__genout_urv96182; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<107063> := _genout_urv93723<107064>varname;
      _vI107063__genout_urv93715  = _vI107064__genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<107062> := _genout_urv93715<107063>varname;
      _vI107062__genout_urv93710  = _vI107063__genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv96173<107059> := _genout_urv93710<107062>varname;
      _vI107059__genout_urv96173  = _vI107062__genout_urv93710; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2027, cols 5 to 37
      //result<106708>varname = _genout_urv96173<107059>varname;
      _vI106708_result = _vI107059__genout_urv96173; //assign simple
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107067>ref;
      {
      __timeb64* _tmp108182 = (__timeb64*)&_vI107067_tv;
      _ftime64_s(((_tmp108182)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96183<107066> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107067>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107067>varname)), literal[double]("1.0e3")))));
      _vI107066__genout_urv96183  = (static_cast<double>((_vI107067_tv.time))) + ((static_cast<double>((_vI107067_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2028, cols 5 to 36
      //elapsed<106709>varname = (-<80547>primfun[double] (_genout_urv96183<107066>varname, now<106707>varname));
      _vI106709_elapsed = _vI107066__genout_urv96183 - _vI106707_now ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2033, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.ECHO == 1)) ) goto _ifdoelse_bootflx_65846_L106714;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("System:Elapsed: ", (fmt<80548>stackfun (elapsed<106709>varname, (fixed<5838>struct (8, 3)))))), ", Result code ")), (str<80203>primfun[int] result<106708>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108183 = (((::std::string("System:Elapsed: ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106709_elapsed, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(8, 3))))) /* apply_stack */ ) + ::std::string(", Result code ") ) + ::flx::rtl::strutil::str<int>(_vI106708_result) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108183)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2033, cols 5 to 9
    _ifdoelse_bootflx_65846_L106714:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2034, cols 5 to 18
      //return result<106708>varname;: type int
      return _vI106708_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2035,3,2035,4); // HACK! 
}

//------------------------------
//FUNCTION <89507>: FlxPkgConfigQuery::getpkgfield_uncurry: Apply method
void* getpkgfield_uncurry::apply(_tt107874 const &_arg ){
  _vI90404_ehandler_uncurry = _arg.mem_0;
  _vI90396_pkg = _arg.mem_1;
  _vI90397_field = _arg.mem_2;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<105417>varname = Empty<80385>varname;
      _vI105417_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L105413;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<105418>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI105418_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<105418>ref;
      {
      int* _tmp108184 = (int*)&_vI105418_i;
      ++*((_tmp108184));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L105416:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI105418_i)) )) goto _ifdoelse_std_1250_L105413;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<105418>ref;
      {
      int* _tmp108185 = (int*)&_vI105418_i;
      --*((_tmp108185));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<105417>varname = (Snoc<80397>struct (o<105417>varname, apply(aprj(i<105418>varname : bool), ((+<14305>primfun ("--field=", field<90397>varname)), pkg<90396>varname))));
      _vI105417_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105417_o, (_at107674(::std::string("--field=") + _vI90397_field , _vI90396_pkg).data)[reinterpret< ::flx::rtl::cl_t>(_vI105418_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L105416;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L105413:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 485, cols 5 to 6
      //_genout_urv105421<105421> := (flx_pkgconfig<68435>stackfun (join_uncurry<89534>stackfun (paths<68346>varname, o<105417>varname)));
      _genout_urv105421  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrFlxPkgConfigQuery->paths, _vI105417_o)) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 489, cols 7 to 63
      //_ds2_65342<90390>varname = _genout_urv105421<105421>varname;
      _vI90390__ds2_65342 = _genout_urv105421; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 489, cols 7 to 63
      //result<90391>varname = apply((prj0:int * list -> int), _ds2_65342<90390>varname);
      _vI90391_result = _vI90390__ds2_65342.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 489, cols 7 to 63
      //values<90392>varname = apply((prj1:int * list -> list), _ds2_65342<90390>varname);
      _vI90392_values = _vI90390__ds2_65342.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 499, cols 7 to 11
      if(!(!((_vI90391_result == 0)) ) ) goto _ifdoelse_bootflx_65315_L90403;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Can't find package ", pkg<90396>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108186 = (::std::string("Can't find package ") + _vI90396_pkg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108186)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Searching in paths:", "\x0A")));
      {
      _a14239t_107672 _tmp108187 = ::std::string("Searching in paths:") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108187)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<105436> := paths<68346>varname;
      _vI105436_xs  = ptrFlxPkgConfigQuery->paths; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv105435<105435> := iterator'2<105437>closure;
      _genout_urv105435  = (FLX_NEWP(_fI105437_iterator__apos_2)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery)); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      //_generator_flx_pkgconfig_11224<90393>varname = _genout_urv105435<105435>varname;
      _vI90393__generator_flx_pkgconfig_11224 = _genout_urv105435; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
    continue__ll_flx_pkgconfig_11218_L90398:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      //getpkgfield'2_mv_65343<90387> := apply(_generator_flx_pkgconfig_11224<90393>varname, ());
      _vI90387_getpkgfield__apos_2_mv_65343  = (_vI90393__generator_flx_pkgconfig_11224)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
/*match case 1:|Some path_param_bootflx_65317*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      if(!andthen(FLX_VNI(_vI90387_getpkgfield__apos_2_mv_65343)==1, (FLX_NEWP(_fI105449__lam_65346)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery))) ) goto _ml65345_L90399;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      //path_param_bootflx_65317<90395>varname = (arg of case 1 of getpkgfield'2_mv_65343<90387>varname);
      _vI90395_path_param_bootflx_65317 = *((_a14239t_107672*)FLX_VNP(_vI90387_getpkgfield__apos_2_mv_65343)); //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("  ", path_param_bootflx_65317<90395>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108188 = (::std::string("  ") + _vI90395_path_param_bootflx_65317 ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108188)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      goto continue__ll_flx_pkgconfig_11218_L90398;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
    _ml65345_L90399:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      if(!(FLX_VNI(_vI90387_getpkgfield__apos_2_mv_65343)==0) ) goto _ml65347_L90400;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      goto _em65343_L90401;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
    _ml65347_L90400:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",495,9,495,13);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",495,9,495,13);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
    _em65343_L90401:;
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler_uncurry<90404>varname);
      {
      _a6258t_107873 _tmp108190 = (_a6258t_107873)(_vI90404_ehandler_uncurry);
      throw ((_tmp108190));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 499, cols 7 to 11
    _ifdoelse_bootflx_65315_L90403:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 500, cols 7 to 20
      //return values<90392>varname;: type void*
      return _vI90392_values;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",501,5,501,6); // HACK! 
}

//------------------------------
//FUNCTION <66715>: toolchain_clang_linux::get_base_cxx_compile_flags: Apply method
void* _fI66715_get_base_cxx_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1228, cols 3 to 69
      //return base_cxx_compile_flags<66687>varname;: type void*
      return ptrtoolchain_clang_linux->_vI66687_base_cxx_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1228,3,1228,69); // HACK! 
}

//------------------------------
//FUNCTION <89750>: toolchain_clang_apple_iOS_maker_uncurry::whatami: Apply method
_a14239t_107672 _fI89750_whatami::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1987, cols 3 to 93
      //return (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("toolchain_clang_apple_iOS sdk=", sdk_tag_uncurry<89804>varname)), ", archs=")), (cat_uncurry<89509>stackfun (",", archs_uncurry<89805>varname))));: type _a14239t_107672
      return ((::std::string("toolchain_clang_apple_iOS sdk=") + ptrtoolchain_clang_apple_iOS_maker_uncurry->sdk_tag_uncurry ) + ::std::string(", archs=") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(","), ptrtoolchain_clang_apple_iOS_maker_uncurry->archs_uncurry)) /* apply_stack */ ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1987,3,1987,93); // HACK! 
}

//------------------------------
//FUNCTION <96977>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::search_and_replace'2::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI96977__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <103058>: exts::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI103058__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <106743>: flx_processing::cal_time_from_flxdepfile::maxf: Apply method
_ft108125* _fI106743_maxf::apply(double const &_arg ){
  _vI106749_x = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2122, cols 5 to 6
      //return maxf'2<106744>closure;: type _ft108125*
      return (FLX_NEWP(_fI106744_maxf__apos_2)(FLX_FPAR_PASS this, ptr_fI106742_cal_time_from_flxdepfile, ptrflx_processing));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2122,5,2122,6); // HACK! 
}

//------------------------------
//FUNCTION <106033>: flx_processing::cxx_compile_static1_uncurry: Apply method
int cxx_compile_static1_uncurry::apply(_tt107874 const &_arg ){
  _vI106047_ehandler_uncurry = _arg.mem_0;
  _vI106038_src = _arg.mem_1;
  _vI106037_dst = _arg.mem_2;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106275>ref;
      {
      __timeb64* _tmp108191 = (__timeb64*)&_vI106275_tv;
      _ftime64_s(((_tmp108191)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99286<106274> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106275>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106275>varname)), literal[double]("1.0e3")))));
      _genout_urv99286  = (static_cast<double>((_vI106275_tv.time))) + ((static_cast<double>((_vI106275_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2348, cols 5 to 25
      //t0<106055>varname = _genout_urv99286<106274>varname;
      _vI106055_t0 = _genout_urv99286; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2349, cols 5 to 33
      //pkgs<106051>varname = (find_cxx_pkgs<105741>stackfun src<106038>varname);
      _vI106051_pkgs = find_cxx_pkgs(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106038_src) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2350, cols 5 to 52
      //(deref<80855>primfun[list] apply((prj78:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<106023>ref)) = (join_uncurry<89534>stackfun (apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), pkgs<106051>varname));
      *(&((_art107702*)&ptrflx_processing->_vI106023_control)->extra_pkgs)  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.extra_pkgs, _vI106051_pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2351, cols 5 to 35
      //pkg_cflags<106036>varname = Empty<80385>varname;
      _vI106036_pkg_cflags = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2366, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI106051_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65907_L106049;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_compile_static1] Adding packages ", (str<81092>stackfun pkgs<106051>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108192 = (::std::string("[flx:cxx_compile_static1] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106051_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108192)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<106276>varname = (aux_uncurry<106277>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI106276_r = _fI106277_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<106276>ref;
      {
      void** _tmp108193 = (void**)&_vI106276_r;
      _rev(((_tmp108193)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2357, cols 7 to 8
      //PKGCONFIG_PATH<106045>varname = r<106276>varname;
      _vI106045_PKGCONFIG_PATH = _vI106276_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2358, cols 7 to 87
      //allargs<106035>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<106045>varname, "--field=cflags")), "--keepleftmost")), pkgs<106051>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI106035_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI106045_PKGCONFIG_PATH, ::std::string("--field=cflags"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI106051_pkgs)) /* apply_stack */, ptrflx_processing->_vI106023_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2359, cols 7 to 62
      //_genout_urv99333<106287> := (flx_pkgconfig<68435>stackfun allargs<106035>varname);
      _genout_urv99333  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI106035_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2359, cols 7 to 62
      //_ds2_66081<106039>varname = _genout_urv99333<106287>varname;
      _ds2_66081 = _genout_urv99333; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2359, cols 7 to 62
      //ret<106041>varname = apply((prj0:int * list -> int), _ds2_66081<106039>varname);
      _vI106041_ret = _ds2_66081.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2359, cols 7 to 62
      //mycflags<106034>varname = apply((prj1:int * list -> list), _ds2_66081<106039>varname);
      _vI106034_mycflags = _ds2_66081.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2364, cols 7 to 11
      if(!(!((_vI106041_ret == 0)) ) ) goto _ifdoelse_bootflx_65909_L106050;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_compile_static1] Error ", (str<80203>primfun[int] ret<106041>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<106035>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108194 = (((::std::string("[flx:cxx_compile_static1] Error ") + ::flx::rtl::strutil::str<int>(_vI106041_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106035_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108194)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2363, cols 9 to 25
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2364, cols 7 to 11
    _ifdoelse_bootflx_65909_L106050:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2365, cols 7 to 27
      //pkg_cflags<106036>varname = mycflags<106034>varname;
      _vI106036_pkg_cflags = _vI106034_mycflags; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2366, cols 5 to 9
    _ifdoelse_bootflx_65907_L106049:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 22 to 36
      //cxx_compile_static1'2_mv_66083<106290> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106290_cxx_compile_static1__apos_2_mv_66083  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      if(!(_vI106290_cxx_compile_static1__apos_2_mv_66083%2==1) ) goto _ml66085_L106289;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      goto _end_hash_13934398;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _ml66085_L106289:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _end_hash_13934398:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 22 to 36
      //cxx_compile_static1'2_mv_66083<106294> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106294_cxx_compile_static1__apos_2_mv_66083  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      if(!(_vI106294_cxx_compile_static1__apos_2_mv_66083%2==1) ) goto _ml66085_L106293;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      //_urv99365<106292> := echoln<106025>closure;
      _urv99365  = (FLX_NEWP(echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      goto _end_hash_877073426;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _ml66085_L106293:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      //_urv99365<106292> := debugln<106024>closure;
      _urv99365  = (FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _end_hash_877073426:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 22 to 36
      //cxx_compile_static1'2_mv_66083<106298> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106298_cxx_compile_static1__apos_2_mv_66083  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      if(!(_vI106298_cxx_compile_static1__apos_2_mv_66083%2==1) ) goto _ml66085_L106297;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      goto _end_hash_518530476;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _ml66085_L106297:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _end_hash_518530476:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 22 to 36
      //cxx_compile_static1'2_mv_66083<106302> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106302_cxx_compile_static1__apos_2_mv_66083  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      if(!(_vI106302_cxx_compile_static1__apos_2_mv_66083%2==1) ) goto _ml66085_L106301;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      goto _end_hash_646672308;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _ml66085_L106301:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _end_hash_646672308:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2377, cols 5 to 6
      //tc<106040>varname = apply(toolchain<68911>varname, ( ccflags:(join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), pkg_cflags<106036>varname)), debugln:_urv99365<106292>varname, dynamic_libraries:apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), header_search_dirs:(join_uncurry<89534>stackfun (apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), apply((prj23:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname))), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), macros:apply((prj46:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname)));
      _vI106040_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.CCFLAGS, _vI106036_pkg_cflags)) /* apply_stack */, _urv99365, ptrflx_processing->_vI105724_dflt_clang_config.dynamic_libraries, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_RTL_DIRS, ptrflx_processing->_vI106023_control.EXTRA_INCLUDE_DIRS)) /* apply_stack */, ptrflx_processing->_vI105724_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI106023_control.MACROS, ptrflx_processing->_vI105724_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2387, cols 5 to 9
      //_genout_urv99410<106304> := (cxx_depcheck<66985>stackfun (tc<106040>varname, src<106038>varname, dst<106037>varname));
      _genout_urv99410  = cxx_depcheck(FLX_FPAR_PASS_ONLY)
      .apply(_tt108175(_vI106040_tc, _vI106038_src, _vI106037_dst)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2387, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.RECOMPILE == 1) || !_genout_urv99410  ) ) goto _ifdoend_bootflx_65910_L106043;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2379, cols 7 to 67
      //result<106042>varname = apply(apply((prj7:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),src:(string)) -> int), tc<106040>varname), ( dst:dst<106037>varname, src:src<106038>varname));
      _vI106042_result = (_vI106040_tc.cxx_static_object_compiler)->clone()
      ->apply(_art107759(_vI106037_dst, _vI106038_src)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _end_99420_L106312;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106311>ref;
      {
      __timeb64* _tmp108195 = (__timeb64*)&_vI106311_tv;
      _ftime64_s(((_tmp108195)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106310> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106311>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106311>varname)), literal[double]("1.0e3")))));
      _vI106310__genout_urv96124  = (static_cast<double>((_vI106311_tv.time))) + ((static_cast<double>((_vI106311_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106305>varname = (-<80547>primfun[double] (_genout_urv96124<106310>varname, t0<106055>varname));
      _vI106305_elapsed = _vI106310__genout_urv96124 - _vI106055_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106306>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106305>varname, literal[double]("60.0"))));
      _vI106306_minutes = ::std::floor((_vI106305_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106307>varname = (-<80547>primfun[double] (elapsed<106305>varname, (*<80818>primfun[double] (minutes<106306>varname, literal[double]("60.0")))));
      _vI106307_seconds = _vI106305_elapsed - (_vI106306_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106306>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106307>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Static c++   : ", src<106038>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108196 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106306_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106307_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Static c++   : ") + _vI106038_src ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108196)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2380, cols 7 to 41
    _end_99420_L106312:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2383, cols 7 to 11
      if(!(!((_vI106042_result == 0)) ) ) goto _ifdoelse_bootflx_65913_L106052;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ compilation ", src<106038>varname)), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108197 = ((::std::string("[flx] C++ compilation ") + _vI106038_src ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108197)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2383, cols 7 to 11
    _ifdoelse_bootflx_65913_L106052:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2384, cols 7 to 20
      //return result<106042>varname;: type int
      return _vI106042_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2387, cols 5 to 9
    _ifdoend_bootflx_65910_L106043:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2386, cols 7 to 15
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2389,3,2389,4); // HACK! 
}

//------------------------------
//FUNCTION <96985>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::search_and_replace'2::_lam_2365: Apply method
 ::flx::rtl::cl_t _fI96985__lam_2365::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9); // HACK! 
}

//------------------------------
//FUNCTION <90370>: map_package_requirements_uncurry::_lam_65103: Apply method
_ft107744* _lam_65103::apply(void* const &_arg ){
  _vI90374_acc = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 820, cols 8 to 14
      //return _lam_65103'2<90371>closure;: type _ft107744*
      return (FLX_NEWP(_fI90371__lam_65103__apos_2)(FLX_FPAR_PASS this, ptrmap_package_requirements_uncurry));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",820,8,820,14); // HACK! 
}

//------------------------------
//FUNCTION <66910>: toolchain_clang_osx::executable_extension: Apply method
_a14239t_107672 _fI66910_executable_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1461, cols 3 to 43
      //return "";: type _a14239t_107672
      return ::std::string("");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1461,3,1461,43); // HACK! 
}

//------------------------------

//PROCEDURE <68045:> xparse_cmd_line: Call method
::flx::rtl::con_t * xparse_cmd_line::call(::flx::rtl::con_t *_ptr_caller, _tt107732 const &_arg){
  _caller = _ptr_caller;
  _vI68060_config = _arg.mem_0;
  _vI68061_control = _arg.mem_1;
  _vI68062_ploopctl = _arg.mem_2;
  vargs = _arg.mem_3;
  INIT_PC
  return this;
}

//PROCEDURE <68045:> xparse_cmd_line: Resume method
::flx::rtl::con_t *xparse_cmd_line::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx.fdoc: line 1404, cols 3 to 32
      //SET_LINKER_OUTPUT<68056>varname = (case 0 of bool);
      SET_LINKER_OUTPUT = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1405, cols 3 to 50
      //SET_LINKER_OUTPUT_WITHOUT_EXTENSION<68057>varname = (case 0 of bool);
      SET_LINKER_OUTPUT_WITHOUT_EXTENSION = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1406, cols 3 to 42
      //SET_LINKER_OUTPUT_DIRECTORY<68058>varname = (case 0 of bool);
      SET_LINKER_OUTPUT_DIRECTORY = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1455, cols 1 to 7
    continue_grabbing_args_L68064:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1455, cols 1 to 7
      if(FLX_UNLIKELY(!(((*_vI68062_ploopctl).grab == 1) && ((*_vI68062_ploopctl).argno < (static_cast<int>((PTF gcp->collector->get_used(vargs)))/*int.flx: ctor*/)) ) )) goto break_grabbing_args_L68081;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(((*_vI68062_ploopctl).argno))/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(vargs))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/flx.fdoc: line 1409, cols 5 to 40
      //arg<68059>varname = (unsafe_get<83437>primfun[string] (vargs<68063>varname, (_ctor_size<83435>primfun[size] (_ctor_size<80270>primfun[int] apply((prj0:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> int), *(ploopctl<68062>varname))))));
      _vI68059_arg = vargs[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(((*_vI68062_ploopctl).argno))/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1401, cols 5 to 68
      if(!(*_vI68061_control).DEBUG_FLX ) goto _end_102836_L102836;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("ARGNO=", (str<80203>primfun[int] apply((prj0:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> int), *(ploopctl<68062>varname))))), ", arg='")), arg<68059>varname)), "'")))), "\x0A")));
      {
      _a14239t_107672 _tmp108198 = (::std::string("[flx] ") + ((((::std::string("ARGNO=") + ::flx::rtl::strutil::str<int>((*_vI68062_ploopctl).argno) ) + ::std::string(", arg='") ) + _vI68059_arg ) + ::std::string("'") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108198)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1410, cols 5 to 61
    _end_102836_L102836:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1453, cols 5 to 9
      if(!SET_LINKER_OUTPUT ) goto _ifdoend_bootflx_65574_L68065;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1413, cols 8 to 44
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68061>varname)) = arg<68059>varname;
      *(&_vI68061_control->LINKER_OUTPUT_FILENAME)  = _vI68059_arg; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1401, cols 5 to 68
      if(!(*_vI68061_control).DEBUG_FLX ) goto _end_102840_L102840;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set linker output file=", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68061>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108199 = (::std::string("[flx] ") + (::std::string("Set linker output file=") + (*_vI68061_control).LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108199)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1414, cols 8 to 76
    _end_102840_L102840:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1415, cols 8 to 32
      //SET_LINKER_OUTPUT<68056>varname = (case 0 of bool);
      SET_LINKER_OUTPUT = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1416, cols 8 to 45
      //(deref<87163>primfun[int] apply((prj53:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<68061>varname)) = 1;
      *(&_vI68061_control->OUTPUT_FILENAME_SPECIFIED)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1453, cols 5 to 9
      goto _ifdoelse_bootflx_65575_L68080;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1453, cols 5 to 9
    _ifdoend_bootflx_65574_L68065:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      if(!SET_LINKER_OUTPUT_WITHOUT_EXTENSION ) goto _ifdoend_bootflx_65576_L68066;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1419, cols 8 to 44
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68061>varname)) = arg<68059>varname;
      *(&_vI68061_control->LINKER_OUTPUT_FILENAME)  = _vI68059_arg; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1401, cols 5 to 68
      if(!(*_vI68061_control).DEBUG_FLX ) goto _end_102844_L102844;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set linker output file=", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68061>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108200 = (::std::string("[flx] ") + (::std::string("Set linker output file=") + (*_vI68061_control).LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108200)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1420, cols 8 to 76
    _end_102844_L102844:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1421, cols 8 to 50
      //SET_LINKER_OUTPUT_WITHOUT_EXTENSION<68057>varname = (case 0 of bool);
      SET_LINKER_OUTPUT_WITHOUT_EXTENSION = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1422, cols 8 to 63
      //(deref<87163>primfun[int] apply((prj54:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<68061>varname)) = 1;
      *(&_vI68061_control->OUTP_hash_48688961)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      goto _ifdoelse_bootflx_65575_L68080;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
    _ifdoend_bootflx_65576_L68066:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      if(!SET_LINKER_OUTPUT_DIRECTORY ) goto _ifdoend_bootflx_65578_L68067;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1425, cols 8 to 44
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68061>varname)) = arg<68059>varname;
      *(&_vI68061_control->LINKER_OUTPUT_FILENAME)  = _vI68059_arg; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1401, cols 5 to 68
      if(!(*_vI68061_control).DEBUG_FLX ) goto _end_102848_L102848;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set linker output directory =", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68061>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108201 = (::std::string("[flx] ") + (::std::string("Set linker output directory =") + (*_vI68061_control).LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108201)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1426, cols 8 to 82
    _end_102848_L102848:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1427, cols 8 to 41
      //SET_LINKER_OUTPUT_DIRECTORY<68058>varname = (case 0 of bool);
      SET_LINKER_OUTPUT_DIRECTORY = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1428, cols 8 to 46
      //(deref<87163>primfun[int] apply((prj52:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<68061>varname)) = 1;
      *(&_vI68061_control->OUTPUT_DIRECTORY_SPECIFIED)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      goto _ifdoelse_bootflx_65575_L68080;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
    _ifdoend_bootflx_65578_L68067:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      if(!((_vI68059_arg == ::std::string("-o"))) ) goto _ifdoend_bootflx_65580_L68068;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1401, cols 5 to 68
      if(!(*_vI68061_control).DEBUG_FLX ) goto _end_102852_L102852;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set linker output name (next arg)")), "\x0A")));
      {
      _a14239t_107672 _tmp108202 = (::std::string("[flx] ") + ::std::string("Set linker output name (next arg)") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108202)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1432, cols 7 to 50
    _end_102852_L102852:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1433, cols 7 to 28
      //SET_LINKER_OUTPUT<68056>varname = (case 1 of bool);
      SET_LINKER_OUTPUT = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      goto _ifdoelse_bootflx_65575_L68080;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
    _ifdoend_bootflx_65580_L68068:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      if(!((_vI68059_arg == ::std::string("-ox"))) ) goto _ifdoend_bootflx_65582_L68069;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1401, cols 5 to 68
      if(!(*_vI68061_control).DEBUG_FLX ) goto _end_102856_L102856;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set linker output name (without extension) (next arg) ")), "\x0A")));
      {
      _a14239t_107672 _tmp108203 = (::std::string("[flx] ") + ::std::string("Set linker output name (without extension) (next arg) ") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108203)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1436, cols 7 to 71
    _end_102856_L102856:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1437, cols 7 to 46
      //SET_LINKER_OUTPUT_WITHOUT_EXTENSION<68057>varname = (case 1 of bool);
      SET_LINKER_OUTPUT_WITHOUT_EXTENSION = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      goto _ifdoelse_bootflx_65575_L68080;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
    _ifdoend_bootflx_65582_L68069:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      if(!((_vI68059_arg == ::std::string("-od"))) ) goto _ifdoend_bootflx_65584_L68070;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1401, cols 5 to 68
      if(!(*_vI68061_control).DEBUG_FLX ) goto _end_102860_L102860;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set linker output directory (next arg) ")), "\x0A")));
      {
      _a14239t_107672 _tmp108204 = (::std::string("[flx] ") + ::std::string("Set linker output directory (next arg) ") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108204)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1440, cols 7 to 56
    _end_102860_L102860:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1441, cols 7 to 38
      //SET_LINKER_OUTPUT_DIRECTORY<68058>varname = (case 1 of bool);
      SET_LINKER_OUTPUT_DIRECTORY = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      goto _ifdoelse_bootflx_65575_L68080;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
    _ifdoend_bootflx_65584_L68070:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      if(!((_vI68059_arg == ::std::string("--"))) ) goto _ifdoend_bootflx_65586_L68071;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1445, cols 7 to 24
      //(deref<87163>primfun[int] apply((prj4:&record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> &int), ploopctl<68062>varname)) = 0;
      *(&_vI68062_ploopctl->grab)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      goto _ifdoelse_bootflx_65575_L68080;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
    _ifdoend_bootflx_65586_L68071:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      if((::flx::rtl::strutil::substr(_vI68059_arg,0,::std::string("-").size()) == ::std::string("-"))) goto _ifdoend_bootflx_65588_L68072;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      //run procedure stackcall handle_filename<67992>stackproc  (ploopctl<68062>varname, config<68060>varname, control<68061>varname, arg<68059>varname);
      {
      handle_filename(FLX_FPAR_PASS_ONLY)
      .stack_call(_tt107851(_vI68062_ploopctl, _vI68060_config, _vI68061_control, _vI68059_arg));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
      goto _ifdoelse_bootflx_65575_L68080;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1451, cols 5 to 41
    _ifdoend_bootflx_65588_L68072:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //call procedure directcall handle_switch<67826>directproc (config<68060>varname, control<68061>varname, arg<68059>varname);
      FLX_SET_PC(108206)
      return (FLX_NEWP(handle_switch)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt107852(_vI68060_config, _vI68061_control, _vI68059_arg));
    FLX_CASE_LABEL(108206)
    // # C:/projects/felix/src/packages/flx.fdoc: line 1453, cols 5 to 9
    _ifdoelse_bootflx_65575_L68080:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1454, cols 5 to 41
      //(deref<87163>primfun[int] apply((prj0:&record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> &int), ploopctl<68062>varname)) = (+<80315>primfun[int] (apply((prj0:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> int), *(ploopctl<68062>varname)), 1));
      *(&_vI68062_ploopctl->argno)  = (*_vI68062_ploopctl).argno + 1 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1455, cols 1 to 7
      goto continue_grabbing_args_L68064;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1455, cols 1 to 7
    break_grabbing_args_L68081:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1459, cols 3 to 7
      if(!((*_vI68061_control).CMDLINE_INPUT || (*_vI68061_control).REPL_MODE ) ) goto _ifdoelse_bootflx_65591_L68083;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      //run procedure stackcall handle_filename<67992>stackproc  (ploopctl<68062>varname, config<68060>varname, control<68061>varname, "cmd.flx");
      {
      handle_filename(FLX_FPAR_PASS_ONLY)
      .stack_call(_tt107851(_vI68062_ploopctl, _vI68060_config, _vI68061_control, ::std::string("cmd.flx")));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1461, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1459, cols 3 to 7
    _ifdoelse_bootflx_65591_L68083:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1461, cols 9 to 2
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <107572>: flx_processing::run_program_dynamic::aux_uncurry: Apply method
void* _fI107572_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107573_inp_uncurry = _arg.data[0];
  _vI107574_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L107581:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<107577> := inp_uncurry<107573>varname;
      _vI107577_aux__apos_2_mv_1381  = _vI107573_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI107577_aux__apos_2_mv_1381)==0) ) goto _ml1383_L107576;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<107574>varname;: type void*
      return _vI107574_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L107576:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI107577_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI107580__lam_1385)(FLX_FPAR_PASS this, ptr_fI106943_run_program_dynamic, ptrflx_processing))) ) goto _ml1384_L107575;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<107578>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<107577>varname));
      _vI107578_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI107577_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<107579>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<107577>varname));
      _vI107579_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI107577_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<107574> := (Snoc<80397>struct (out<107574>varname, (str<15241>stackfun h_param_std_1267<107578>varname)));
      _vI107574_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107574_out, _fI15241_str(_vI107578_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<107573> := t_param_std_1266<107579>varname;
      _vI107573_inp_uncurry  = _vI107579_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L107581;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L107575:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <68018>: exts: Apply method
void* exts::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<102914>varname = Empty<80385>varname;
      _vI102914_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 4)) ) goto _ifdoelse_std_1250_L102910;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<102915>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84297>varname[4]), 1));
      _vI102915_i = (static_cast<int>(4)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<102915>ref;
      {
      int* _tmp108209 = (int*)&_vI102915_i;
      ++*((_tmp108209));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L102913:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI102915_i)) )) goto _ifdoelse_std_1250_L102910;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<102915>ref;
      {
      int* _tmp108210 = (int*)&_vI102915_i;
      --*((_tmp108210));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<102914>varname = (Snoc<80397>struct (o<102914>varname, apply(aprj(i<102915>varname : 4), (".cpp", ".cxx", ".c", ".cc"))));
      _vI102914_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI102914_o, (_at107820(::std::string(".cpp"), ::std::string(".cxx"), ::std::string(".c"), ::std::string(".cc")).data)[reinterpret< ::flx::rtl::cl_t>(_vI102915_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L102913;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L102910:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1372, cols 3 to 53
      //compile_exts<68020>varname = o<102914>varname;
      compile_exts = _vI102914_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<102946>varname = Empty<80385>varname;
      _vI102946_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 5)) ) goto _ifdoelse_std_1250_L102942;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<102947>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<89269>varname[5]), 1));
      _vI102947_i = (static_cast<int>(5)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<102947>ref;
      {
      int* _tmp108211 = (int*)&_vI102947_i;
      ++*((_tmp108211));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L102945:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI102947_i)) )) goto _ifdoelse_std_1250_L102942;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<102947>ref;
      {
      int* _tmp108212 = (int*)&_vI102947_i;
      --*((_tmp108212));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<102946>varname = (Snoc<80397>struct (o<102946>varname, apply(aprj(i<102947>varname : 5), (".mli", ".ml", ".cmi", "cmx", ".cmxa"))));
      _vI102946_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI102946_o, (_at107860(::std::string(".mli"), ::std::string(".ml"), ::std::string(".cmi"), ::std::string("cmx"), ::std::string(".cmxa")).data)[reinterpret< ::flx::rtl::cl_t>(_vI102947_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L102945;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L102942:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1373, cols 3 to 55
      //ocaml<68021>varname = o<102946>varname;
      ocaml = _vI102946_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<102978>varname = Empty<80385>varname;
      _vI102978_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 8)) ) goto _ifdoelse_std_1250_L102974;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<102979>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<89231>varname[8]), 1));
      _vI102979_i = (static_cast<int>(8)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<102979>ref;
      {
      int* _tmp108213 = (int*)&_vI102979_i;
      ++*((_tmp108213));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L102977:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI102979_i)) )) goto _ifdoelse_std_1250_L102974;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<102979>ref;
      {
      int* _tmp108214 = (int*)&_vI102979_i;
      --*((_tmp108214));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<102978>varname = (Snoc<80397>struct (o<102978>varname, apply(aprj(i<102979>varname : 8), (".o", ".obj", ".lib", ".dll", ".a", ".so", ".dylib", ".os"))));
      _vI102978_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI102978_o, (_at107863(::std::string(".o"), ::std::string(".obj"), ::std::string(".lib"), ::std::string(".dll"), ::std::string(".a"), ::std::string(".so"), ::std::string(".dylib"), ::std::string(".os")).data)[reinterpret< ::flx::rtl::cl_t>(_vI102979_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L102977;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L102974:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1375, cols 3 to 78
      //link_exts<68022>varname = o<102978>varname;
      link_exts = _vI102978_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<102988>varname = Empty<80385>varname;
      _vI102988_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L102984;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<102989>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI102989_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<102989>ref;
      {
      int* _tmp108215 = (int*)&_vI102989_i;
      ++*((_tmp108215));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L102987:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI102989_i)) )) goto _ifdoelse_std_1250_L102984;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<102989>ref;
      {
      int* _tmp108216 = (int*)&_vI102989_i;
      --*((_tmp108216));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<102988>varname = (Snoc<80397>struct (o<102988>varname, apply(aprj(i<102989>varname : bool), (".flx", ".fdoc"))));
      _vI102988_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI102988_o, (_at107674(::std::string(".flx"), ::std::string(".fdoc")).data)[reinterpret< ::flx::rtl::cl_t>(_vI102989_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L102987;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L102984:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1376, cols 3 to 41
      //felix_exts<68023>varname = o<102988>varname;
      felix_exts = _vI102988_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<103032>varname = (aux_uncurry<103033>stackfun (ocaml<68021>varname, Empty<81156>varname));
      _vI103032_r = _fI103033_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107865(ocaml, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<89134>primproc[string^2, &list] &r<103032>ref;
      {
      void** _tmp108217 = (void**)&_vI103032_r;
      _rev(((_tmp108217)),(_at107674*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<103049>varname = (aux_uncurry<103050>stackfun (compile_exts<68020>varname, Empty<81156>varname));
      _vI103049_r = _fI103050_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107865(compile_exts, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<89134>primproc[string^2, &list] &r<103049>ref;
      {
      void** _tmp108218 = (void**)&_vI103049_r;
      _rev(((_tmp108218)),(_at107674*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<103139>varname = (aux_uncurry<103140>stackfun (link_exts<68022>varname, Empty<81156>varname));
      _vI103139_r = _fI103140_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107865(link_exts, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<89134>primproc[string^2, &list] &r<103139>ref;
      {
      void** _tmp108219 = (void**)&_vI103139_r;
      _rev(((_tmp108219)),(_at107674*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<103162>varname = (aux_uncurry<103163>stackfun (felix_exts<68023>varname, Empty<81156>varname));
      _vI103162_r = _fI103163_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107865(felix_exts, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<89134>primproc[string^2, &list] &r<103162>ref;
      {
      void** _tmp108220 = (void**)&_vI103162_r;
      _rev(((_tmp108220)),(_at107674*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1383, cols 3 to 4
      //exts<68036>varname = (+<89126>stackfun ((join_uncurry<89467>stackfun ((join_uncurry<89467>stackfun ((join_uncurry<89467>stackfun (r<103032>varname, r<103049>varname)), r<103139>varname)), r<103162>varname)), ("", "none")));
      _vI68036_exts = _fI89126___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107856(join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107867(join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107867(join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107867(_vI103032_r, _vI103049_r)) /* apply_stack */, _vI103139_r)) /* apply_stack */, _vI103162_r)) /* apply_stack */, _at107674(::std::string(""), ::std::string("none")))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1384, cols 3 to 14
      //return exts<68036>varname;: type void*
      return _vI68036_exts;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1385,9,1385,2); // HACK! 
}

//------------------------------
//FUNCTION <106285>: flx_processing::cxx_compile_static1_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI106285__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//C FUNC <68179>: mkmac
_a14239t_107672 mkmac(_a14239t_107672 _vI68181_s){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 117, cols 3 to 35
      //return (+<14305>primfun ("-D", s<68181>varname));: type _a14239t_107672
      return ::std::string("-D") + _vI68181_s ;
}
//------------------------------
//FUNCTION <92884>: toolchain_msvc_win32::dependency_parser::iterator'2: Apply method
void* _fI92884_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L92885:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<92889> := xs<92883>varname;
      _vI92889_iterator__apos_2_mv_1563  = ptrdependency_parser->_vI92883_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI92889_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI92892__lam_1566)(FLX_FPAR_PASS this, ptrdependency_parser, ptrtoolchain_msvc_win32))) ) goto _ml1565_L92888;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<92890>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<92889>varname));
      _vI92890_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI92889_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<92891>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<92889>varname));
      _vI92891_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI92889_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<92883>varname = t_param_std_1318<92891>varname;
      ptrdependency_parser->_vI92883_xs = _vI92891_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108221)
      //yield (Some<80915>struct h_param_std_1319<92890>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI92890_h_param_std_1319));//yield
    FLX_CASE_LABEL(108221)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L92885;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L92888:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI92889_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L92887;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L92887:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L92885;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <94649>: toolchain_clang_apple_iOS_maker_uncurry::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI94649__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <93395>: generic_cxx_gen_deps_uncurry::aux_uncurry: Apply method
void* _fI93395_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93396_inp_uncurry = _arg.data[0];
  _vI93397_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93404:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93400> := inp_uncurry<93396>varname;
      _vI93400_aux__apos_2_mv_1381  = _vI93396_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93400_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93399;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93397>varname;: type void*
      return _vI93397_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93399:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93400_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93403__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_gen_deps_uncurry))) ) goto _ml1384_L93398;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93401>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93400>varname));
      _vI93401_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93400_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93402>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93400>varname));
      _vI93402_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93400_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93397> := (Snoc<80397>struct (out<93397>varname, (mkinc<68173>stackfun h_param_std_1267<93401>varname)));
      _vI93397_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93397_out, mkinc(_vI93401_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93396> := t_param_std_1266<93402>varname;
      _vI93396_inp_uncurry  = _vI93402_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93404;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93398:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <106415>: flx_processing::cxx_link_shared_exe::aux_uncurry: Apply method
void* _fI106415_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106416_inp_uncurry = _arg.data[0];
  _vI106417_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L106424:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<106420> := inp_uncurry<106416>varname;
      _vI106420_aux__apos_2_mv_1381  = _vI106416_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI106420_aux__apos_2_mv_1381)==0) ) goto _ml1383_L106419;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<106417>varname;: type void*
      return _vI106417_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L106419:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI106420_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI106423__lam_1385)(FLX_FPAR_PASS this, ptrcxx_link_shared_exe, ptrflx_processing))) ) goto _ml1384_L106418;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<106421>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<106420>varname));
      _vI106421_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI106420_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<106422>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<106420>varname));
      _vI106422_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI106420_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<106417> := (Snoc<80397>struct (out<106417>varname, (_lam_66099<105882>stackfun h_param_std_1267<106421>varname)));
      _vI106417_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106417_out, _lam_66099(ptrcxx_link_shared_exe, ptrflx_processing)
      .apply(_vI106421_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<106416> := t_param_std_1266<106422>varname;
      _vI106416_inp_uncurry  = _vI106422_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L106424;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L106418:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <96504>: flx_pkgconfig::tail_val::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI96504__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <94056>: generic_link_exe_dynamic_uncurry::aux_uncurry: Apply method
void* _fI94056_aux_uncurry::apply(_at107697 const &_arg ){
  _vI94057_inp_uncurry = _arg.data[0];
  _vI94058_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L94065:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<94061> := inp_uncurry<94057>varname;
      _vI94061_aux__apos_2_mv_1381  = _vI94057_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI94061_aux__apos_2_mv_1381)==0) ) goto _ml1383_L94060;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<94058>varname;: type void*
      return _vI94058_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L94060:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI94061_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI94064__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_link_exe_dynamic_uncurry))) ) goto _ml1384_L94059;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<94062>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<94061>varname));
      _vI94062_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI94061_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<94063>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<94061>varname));
      _vI94063_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI94061_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<94058> := (Snoc<80397>struct (out<94058>varname, (quote_arg<16873>stackfun h_param_std_1267<94062>varname)));
      _vI94058_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94058_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI94062_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<94057> := t_param_std_1266<94063>varname;
      _vI94057_inp_uncurry  = _vI94063_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L94065;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L94059:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <92892>: toolchain_msvc_win32::dependency_parser::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI92892__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <66736>: toolchain_clang_linux::c_dynamic_object_compiler: Apply method
int _fI66736_c_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66739_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1298, cols 5 to 6
      //result<66738>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_c_compile_flags<66688>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:c_compiler<66683>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66739>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66739>varname)));
      _vI66738_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_linux->_vI66688_base_c_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_clang_linux->_vI66683_c_compiler, ptrtoolchain_clang_linux->_vI66768_config.header_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.macros, ::std::string("-o "), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66739_spec.src, _vI66739_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1299, cols 5 to 18
      //return result<66738>varname;: type int
      return _vI66738_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1300,3,1300,4); // HACK! 
}

//------------------------------
//FUNCTION <66653>: toolchain_gcc_osx::cxx_static_library_object_compiler: Apply method
int _fI66653_cxx_static_library_object_compiler::apply(_art107759 const &_arg ){
  _vI66656_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1085, cols 5 to 6
      //result<66655>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_cxx_compile_flags<66597>varname, CCOBJ_STATIC_LIB:cxx_compiler<66593>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), MACROS:(Snoc<80397>struct (apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), "FLX_STATIC_LINK")), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66656>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66656>varname)));
      _vI66655_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_gcc_osx->_vI66597_base_cxx_compile_flags, ptrtoolchain_gcc_osx->_vI66593_cxx_compiler, ptrtoolchain_gcc_osx->_vI66677_config.header_search_dirs, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_osx->_vI66677_config.macros, ::std::string("FLX_STATIC_LINK")))), ::std::string("-o "), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66656_spec.src, _vI66656_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1086, cols 5 to 18
      //return result<66655>varname;: type int
      return _vI66655_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1087,3,1087,4); // HACK! 
}

//------------------------------
//FUNCTION <96680>: search_and_replace_uncurry::iterator'2: Apply method
void* _fI96680_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L96681:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<96685> := xs<96679>varname;
      _vI96685_iterator__apos_2_mv_1563  = ptrsearch_and_replace_uncurry->_vI96679_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI96685_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI96688__lam_1566)(FLX_FPAR_PASS this, ptrsearch_and_replace_uncurry))) ) goto _ml1565_L96684;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<96686>varname = apply((prj1:list * string^2 -> string^2), (arg of case 1 of iterator'2_mv_1563<96685>varname));
      _vI96686_h_param_std_1319 = (*((_tt107856*)FLX_VNP(_vI96685_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<96687>varname = apply((prj0:list * string^2 -> list), (arg of case 1 of iterator'2_mv_1563<96685>varname));
      _vI96687_t_param_std_1318 = (*((_tt107856*)FLX_VNP(_vI96685_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<96679>varname = t_param_std_1318<96687>varname;
      ptrsearch_and_replace_uncurry->_vI96679_xs = _vI96687_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108226)
      //yield (Some<81448>struct h_param_std_1319<96686>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _at107674_ptr_map, true) _at107674 (_vI96686_h_param_std_1319));//yield
    FLX_CASE_LABEL(108226)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L96681;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L96684:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI96685_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L96683;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<81450>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L96683:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L96681;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <66904>: toolchain_clang_osx::target_os: Apply method
_a14239t_107672 _fI66904_target_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1457, cols 3 to 35
      //return "OSX";: type _a14239t_107672
      return ::std::string("OSX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1457,3,1457,35); // HACK! 
}

//------------------------------
//FUNCTION <98088>: map_package_requirements_uncurry::aux_uncurry: Apply method
_a14239t_107672 _fI98088_aux_uncurry::apply(_tt107698 const &_arg ){
  _vI98089_init_uncurry = _arg.mem_0;
  _vI98090_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_95735_L98097:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<98093> := x<98090>varname;
      _vI98093_aux__apos_2_mv_1356  = _vI98090_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI98093_aux__apos_2_mv_1356)==0) ) goto _ml1358_L98092;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<98089>varname;: type _a14239t_107672
      return _vI98089_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L98092:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI98093_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI98096__lam_1360)(FLX_FPAR_PASS this, ptrmap_package_requirements_uncurry))) ) goto _ml1359_L98091;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<98094>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<98093>varname));
      _vI98094_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI98093_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<98095>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<98093>varname));
      _vI98095_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI98093_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<98090> := t_param_std_1258<98095>varname;
      _vI98090_x  = _vI98095_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<98089> := apply((join<84379>flxfun init_uncurry<98089>varname), h_param_std_1259<98094>varname);
      _vI98089_init_uncurry  = ((FLX_NEWP(join)(FLX_FPAR_PASS_ONLY))
      ->apply(_vI98089_init_uncurry))->clone()
      ->apply(_vI98094_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_95735_L98097;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L98091:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <66638>: toolchain_gcc_osx::dependency_parser: Apply method
void* _fI66638_dependency_parser::apply(_a14239t_107672 const &_arg ){
  _vI66640_data = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1018, cols 3 to 4
      //return (generic_dependency_parser<68198>stackfun data<66640>varname);: type void*
      return generic_dependency_parser(FLX_FPAR_PASS_ONLY)
      .apply(_vI66640_data) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1018,3,1018,4); // HACK! 
}

//------------------------------
//FUNCTION <66283>: toolchain_msvc_win32::whatami: Apply method
_a14239t_107672 whatami::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1730, cols 3 to 62
      //return "toolchain_msvc_win32 (version 2)";: type _a14239t_107672
      return ::std::string("toolchain_msvc_win32 (version 2)");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1730,3,1730,62); // HACK! 
}

//------------------------------
//FUNCTION <103683>: setup-from-file_uncurry::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI103683__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <102665>: flx_processing::aux_uncurry: Apply method
_a5094t_107688 _fI102665_aux_uncurry::apply(_tt107728 const &_arg ){
  acc_uncurry = _arg.mem_0;
  _vI102667_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
    start_95253_L102673:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //aux'2_mv_1335<102670> := x<102667>varname;
      _vI102670_aux__apos_2_mv_1335  = _vI102667_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
      if(!(FLX_VNI(_vI102670_aux__apos_2_mv_1335)==0) ) goto _ml1337_L102669;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
      //return acc_uncurry<102666>varname;: type _a5094t_107688
      return acc_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
    _ml1337_L102669:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1252, any)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
      if(!andthen(FLX_VNI(_vI102670_aux__apos_2_mv_1335)==1, (FLX_NEWP(_lam_1339)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml1338_L102668;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 16 to 16
      //t_param_std_1252<102671>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1335<102670>varname));
      t_param_std_1252 = (*((_tt107677*)FLX_VNP(_vI102670_aux__apos_2_mv_1335))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //x<102667> := t_param_std_1252<102671>varname;
      _vI102667_x  = t_param_std_1252; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //acc_uncurry<102666> := (+<80900>primfun[size] (acc_uncurry<102666>varname, literal[size]("1")));
      acc_uncurry  = acc_uncurry + 1 ; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      goto start_95253_L102673;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
    _ml1338_L102668:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,9,202,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,9,202,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",204,7,204,8); // HACK! 
}

//------------------------------
//FUNCTION <94038>: generic_link_exe_dynamic_uncurry::aux_uncurry: Apply method
void* _fI94038_aux_uncurry::apply(_at107697 const &_arg ){
  _vI94039_inp_uncurry = _arg.data[0];
  _vI94040_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L94047:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<94043> := inp_uncurry<94039>varname;
      _vI94043_aux__apos_2_mv_1381  = _vI94039_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI94043_aux__apos_2_mv_1381)==0) ) goto _ml1383_L94042;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<94040>varname;: type void*
      return _vI94040_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L94042:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI94043_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI94046__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_link_exe_dynamic_uncurry))) ) goto _ml1384_L94041;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<94044>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<94043>varname));
      _vI94044_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI94043_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<94045>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<94043>varname));
      _vI94045_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI94043_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<94040> := (Snoc<80397>struct (out<94040>varname, (quote_arg<16873>stackfun h_param_std_1267<94044>varname)));
      _vI94040_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94040_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI94044_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<94039> := t_param_std_1266<94045>varname;
      _vI94039_inp_uncurry  = _vI94045_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L94047;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L94041:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <106916>: flx_processing::check_binary_uptodate::maxf: Apply method
_ft108125* _fI106916_maxf::apply(double const &_arg ){
  _vI106919_t = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2723, cols 5 to 95
      //return maxf'2<106917>closure;: type _ft108125*
      return (FLX_NEWP(_fI106917_maxf__apos_2)(FLX_FPAR_PASS this, ptr_fI106915_check_binary_uptodate, ptrflx_processing));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2723,5,2723,95); // HACK! 
}

//------------------------------
//FUNCTION <89755>: toolchain_clang_apple_iOS_maker_uncurry::executable_extension: Apply method
_a14239t_107672 _fI89755_executable_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1993, cols 3 to 43
      //return "";: type _a14239t_107672
      return ::std::string("");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1993,3,1993,43); // HACK! 
}

//------------------------------
//FUNCTION <105381>: FlxPkgConfigQuery::getpkgfield::getpkgfield'2::iterator'2: Apply method
void* _fI105381_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L105382:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<105386> := xs<105380>varname;
      _vI105386_iterator__apos_2_mv_1563  = ptr_fI68352_getpkgfield__apos_2->_vI105380_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105386_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI105389__lam_1566)(FLX_FPAR_PASS this, ptr_fI68352_getpkgfield__apos_2, ptrgetpkgfield, ptrFlxPkgConfigQuery))) ) goto _ml1565_L105385;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<105387>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<105386>varname));
      _vI105387_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI105386_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<105388>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<105386>varname));
      _vI105388_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI105386_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<105380>varname = t_param_std_1318<105388>varname;
      ptr_fI68352_getpkgfield__apos_2->_vI105380_xs = _vI105388_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108231)
      //yield (Some<80915>struct h_param_std_1319<105387>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI105387_h_param_std_1319));//yield
    FLX_CASE_LABEL(108231)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L105382;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L105385:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI105386_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L105384;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L105384:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L105382;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <66407>: toolchain_msvc_win32::c_static_object_compiler: Apply method
int c_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66412_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1838, cols 5 to 43
      //_genout_urv92990<92990> := (xpopen<66338>stackfun (+<80787>stackfun ((join_uncurry<89534>stackfun ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (macros<66321>varname, (+<14305>primfun ("/Tc", apply((prj1:record(dst:(string),src:(string)) -> string), spec<66412>varname))))), "/c")), "/Zi")), "/MDd")), "/DFLX_STATIC_LINK")), "/nologo")), "cl.exe")), include_switches<66314>varname)), (+<14305>primfun ("/Fo", apply((prj0:record(dst:(string),src:(string)) -> string), spec<66412>varname))))));
      _genout_urv92990  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_msvc_win32->macros, ::std::string("/Tc") + _vI66412_spec.src ))), ::std::string("/c")))), ::std::string("/Zi")))), ::std::string("/MDd")))), ::std::string("/DFLX_STATIC_LINK")))), ::std::string("/nologo")))), ::std::string("cl.exe")))), ptrtoolchain_msvc_win32->include_switches)) /* apply_stack */, ::std::string("/Fo") + _vI66412_spec.dst )) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1838, cols 5 to 43
      //_ds2_66255<66409>varname = _genout_urv92990<92990>varname;
      _ds2_66255 = _genout_urv92990; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1838, cols 5 to 43
      //result<66410>varname = apply((prj0:int * string -> int), _ds2_66255<66409>varname);
      _vI66410_result = _ds2_66255.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1838, cols 5 to 43
      //text<66411>varname = apply((prj1:int * string -> string), _ds2_66255<66409>varname);
      _vI66411_text = _ds2_66255.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66410>varname, text<66411>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66410_result, _vI66411_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1840, cols 5 to 18
      //return result<66410>varname;: type int
      return _vI66410_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1841,3,1841,4); // HACK! 
}

//------------------------------
//FUNCTION <98146>: map_package_requirements_uncurry::aux_uncurry: Apply method
_a14239t_107672 _fI98146_aux_uncurry::apply(_tt107698 const &_arg ){
  _vI98147_init_uncurry = _arg.mem_0;
  _vI98148_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_95735_L98155:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<98151> := x<98148>varname;
      _vI98151_aux__apos_2_mv_1356  = _vI98148_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI98151_aux__apos_2_mv_1356)==0) ) goto _ml1358_L98150;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<98147>varname;: type _a14239t_107672
      return _vI98147_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L98150:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI98151_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI98154__lam_1360)(FLX_FPAR_PASS this, ptrmap_package_requirements_uncurry))) ) goto _ml1359_L98149;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<98152>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<98151>varname));
      _vI98152_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI98151_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<98153>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<98151>varname));
      _vI98153_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI98151_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<98148> := t_param_std_1258<98153>varname;
      _vI98148_x  = _vI98153_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<98147> := apply((join<84379>flxfun init_uncurry<98147>varname), h_param_std_1259<98152>varname);
      _vI98147_init_uncurry  = ((FLX_NEWP(join)(FLX_FPAR_PASS_ONLY))
      ->apply(_vI98147_init_uncurry))->clone()
      ->apply(_vI98152_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_95735_L98155;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L98149:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <66425>: toolchain_msvc_win32::cxx_static_library_object_compiler: Apply method
int cxx_static_library_object_compiler::apply(_art107759 const &_arg ){
  _vI66430_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1863, cols 5 to 73
      //_genout_urv93020<93020> := (xpopen<66338>stackfun (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (macros<66321>varname, "/EHs")), "/c")), "/Zi")), "/MDd")), "/DFLX_STATIC_LINK")), "/wd4190")), "/nologo")), "cl.exe")), include_switches<66314>varname)), (Snoc<80397>struct ((Snoc<80397>struct (Empty<80385>varname, (+<14305>primfun ("/Fo", apply((prj0:record(dst:(string),src:(string)) -> string), spec<66430>varname))))), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66430>varname))))));
      _genout_urv93020  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_msvc_win32->macros, ::std::string("/EHs")))), ::std::string("/c")))), ::std::string("/Zi")))), ::std::string("/MDd")))), ::std::string("/DFLX_STATIC_LINK")))), ::std::string("/wd4190")))), ::std::string("/nologo")))), ::std::string("cl.exe")))), ptrtoolchain_msvc_win32->include_switches)) /* apply_stack */, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("/Fo") + _vI66430_spec.dst ))), _vI66430_spec.src))))) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1863, cols 5 to 73
      //_ds2_66258<66427>varname = _genout_urv93020<93020>varname;
      _ds2_66258 = _genout_urv93020; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1863, cols 5 to 73
      //result<66428>varname = apply((prj0:int * string -> int), _ds2_66258<66427>varname);
      _vI66428_result = _ds2_66258.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1863, cols 5 to 73
      //text<66429>varname = apply((prj1:int * string -> string), _ds2_66258<66427>varname);
      _vI66429_text = _ds2_66258.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66428>varname, text<66429>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66428_result, _vI66429_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1865, cols 5 to 18
      //return result<66428>varname;: type int
      return _vI66428_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1866,3,1866,4); // HACK! 
}

//------------------------------
//FUNCTION <105086>: gramtime_uncurry::aux_uncurry: Apply method
double _fI105086_aux_uncurry::apply(_tt108078 const &_arg ){
  _vI105087_init_uncurry = _arg.mem_0;
  _vI105088_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_98507_L105095:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<105091> := x<105088>varname;
      _vI105091_aux__apos_2_mv_1356  = _vI105088_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI105091_aux__apos_2_mv_1356)==0) ) goto _ml1358_L105090;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<105087>varname;: type double
      return _vI105087_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L105090:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105091_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI105094__lam_1360)(FLX_FPAR_PASS this, ptrgramtime_uncurry))) ) goto _ml1359_L105089;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<105092>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<105091>varname));
      _vI105092_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI105091_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<105093>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<105091>varname));
      _vI105093_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI105091_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<105088> := t_param_std_1258<105093>varname;
      _vI105088_x  = _vI105093_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<105087> := apply((maxtime<89850>flxfun init_uncurry<105087>varname), h_param_std_1259<105092>varname);
      _vI105087_init_uncurry  = ((FLX_NEWP(maxtime)(FLX_FPAR_PASS ptrgramtime_uncurry))
      ->apply(_vI105087_init_uncurry))->clone()
      ->apply(_vI105092_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_98507_L105095;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L105089:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <105070>: gramtime_uncurry::aux_uncurry: Apply method
void* _fI105070_aux_uncurry::apply(_at107697 const &_arg ){
  _vI105071_inp_uncurry = _arg.data[0];
  _vI105072_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L105079:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<105075> := inp_uncurry<105071>varname;
      _vI105075_aux__apos_2_mv_1381  = _vI105071_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI105075_aux__apos_2_mv_1381)==0) ) goto _ml1383_L105074;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<105072>varname;: type void*
      return _vI105072_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L105074:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI105075_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI105078__lam_1385)(FLX_FPAR_PASS this, ptrgramtime_uncurry))) ) goto _ml1384_L105073;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<105076>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<105075>varname));
      _vI105076_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI105075_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<105077>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<105075>varname));
      _vI105077_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI105075_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<105072> := (Snoc<80397>struct (out<105072>varname, (_lam_65075<89862>stackfun h_param_std_1267<105076>varname)));
      _vI105072_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105072_out, _lam_65075(FLX_FPAR_PASS ptrgramtime_uncurry)
      .apply(_vI105076_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<105071> := t_param_std_1266<105077>varname;
      _vI105071_inp_uncurry  = _vI105077_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L105079;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L105073:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <92878>: split::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI92878__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <98170>: map_package_requirements_uncurry::aux_uncurry: Apply method
_a14239t_107672 _fI98170_aux_uncurry::apply(_tt107698 const &_arg ){
  _vI98171_init_uncurry = _arg.mem_0;
  _vI98172_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_95735_L98179:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<98175> := x<98172>varname;
      _vI98175_aux__apos_2_mv_1356  = _vI98172_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI98175_aux__apos_2_mv_1356)==0) ) goto _ml1358_L98174;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<98171>varname;: type _a14239t_107672
      return _vI98171_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L98174:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI98175_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI98178__lam_1360)(FLX_FPAR_PASS this, ptrmap_package_requirements_uncurry))) ) goto _ml1359_L98173;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<98176>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<98175>varname));
      _vI98176_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI98175_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<98177>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<98175>varname));
      _vI98177_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI98175_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<98172> := t_param_std_1258<98177>varname;
      _vI98172_x  = _vI98177_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<98171> := apply((join<84379>flxfun init_uncurry<98171>varname), h_param_std_1259<98176>varname);
      _vI98171_init_uncurry  = ((FLX_NEWP(join)(FLX_FPAR_PASS_ONLY))
      ->apply(_vI98171_init_uncurry))->clone()
      ->apply(_vI98176_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_95735_L98179;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L98173:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <97984>: map_package_requirements_uncurry::_lam_65103::_lam_65103'2::aux: Apply method
void* _fI97984_aux::apply(_tt107698 const &_arg ){
  _vI97985_x = _arg.mem_0;
  _vI97986_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
    start_91607_L97996:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<97991> := (stl_find<14446>primfun (x<97985>varname, (subscript<81183>primfun[int] ("=", 0))));
      _vI97991_find_mv_2105  = _vI97985_x.find((::flx::rtl::strutil::subscript(::std::string("="),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI97991_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L97993;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<97987> := None<81378>varname;
      _vI97987_aux_mv_2285  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_91577_L97994;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L97993:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<97992>varname = find_mv_2105<97991>varname;
      _vI97992_i_param_std_1893 = _vI97991_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<97987> := (Some<81379>struct i_param_std_1893<97992>varname);
      _vI97987_aux_mv_2285  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI97992_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_91577_L97994:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
      if(!(FLX_VNI(_vI97987_aux_mv_2285)==0) ) goto _ml2287_L97989;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<80397>struct (y<97986>varname, x<97985>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97986_y, _vI97985_x)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
    _ml2287_L97989:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
/*match case 2:|Some n_param_std_1968*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      if(!andthen(FLX_VNI(_vI97987_aux_mv_2285)==1, (FLX_NEWP(_fI97995__lam_2289)(FLX_FPAR_PASS this, ptr_fI90371__lam_65103__apos_2, ptr_lam_65103, ptrmap_package_requirements_uncurry))) ) goto _ml2288_L97990;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 14 to 14
      //n_param_std_1968<97988>varname = (arg of case 1 of aux_mv_2285<97987>varname);
      _vI97988_n_param_std_1968 = *((_a5094t_107688*)FLX_VNP(_vI97987_aux_mv_2285)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //y<97986> := (Snoc<80397>struct (y<97986>varname, (copyto<81376>primfun[size] (x<97985>varname, n_param_std_1968<97988>varname))));
      _vI97986_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97986_y, ::flx::rtl::strutil::substr(_vI97985_x,0,_vI97988_n_param_std_1968)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //x<97985> := (copyfrom<81377>primfun[size] (x<97985>varname, (+<80900>primfun[size] (n_param_std_1968<97988>varname, literal[size]("1")))));
      _vI97985_x  = ::flx::rtl::strutil::substr(_vI97985_x,_vI97988_n_param_std_1968 + 1 ,_vI97985_x.size()); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      goto start_91607_L97996;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
    _ml2288_L97990:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",480,5,480,6); // HACK! 
}

//------------------------------
//FUNCTION <92870>: split::aux_uncurry: Apply method
void* _fI92870_aux_uncurry::apply(_at107697 const &_arg ){
  _vI92871_x_uncurry = _arg.data[0];
  _vI92872_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L92879:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<92875> := x_uncurry<92871>varname;
      _vI92875_aux__apos_2_mv_1387  = _vI92871_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI92875_aux__apos_2_mv_1387)==0) ) goto _ml1389_L92874;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<92872>varname;: type void*
      return _vI92872_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L92874:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI92875_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI92878__lam_1391)(FLX_FPAR_PASS this, ptrsplit))) ) goto _ml1390_L92873;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<92876>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<92875>varname));
      _vI92876_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI92875_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<92877>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<92875>varname));
      _vI92877_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI92875_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<92872> := (Snoc<80397>struct (y<92872>varname, h_param_std_1269<92876>varname));
      _vI92872_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92872_y, _vI92876_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<92871> := t_param_std_1268<92877>varname;
      _vI92871_x_uncurry  = _vI92877_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L92879;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L92873:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <98821>: run_felix_compiler::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI98821__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//C PROC <17472>: config_env_overrides
void config_env_overrides(FLX_APAR_DECL _art107699* cfg){
  _art107719 _vI92442_state;
  int _vI92441_respectful_split__apos_2_mv_2356;
   ::flx::rtl::cl_t _vI92432_getenv_mv_612;
  _a14239t_107672 _vI92430_result_param_std_605;
  _a14239t_107672 _vI92429_getenv_mv_608;
  _art107719 _vI92422_state;
  int _vI92421_respectful_split__apos_2_mv_2356;
   ::flx::rtl::cl_t _vI92412_getenv_mv_612;
  _a14239t_107672 _vI92410_result_param_std_605;
  _a14239t_107672 _vI92409_getenv_mv_608;
  _art107719 _vI92402_state;
  int _vI92401_respectful_split__apos_2_mv_2356;
   ::flx::rtl::cl_t _vI92392_getenv_mv_612;
  _a14239t_107672 _vI92390_result_param_std_605;
  _a14239t_107672 _vI92389_getenv_mv_608;
   ::flx::rtl::cl_t _vI92376_getenv_mv_612;
  _a14239t_107672 _vI92374_result_param_std_605;
  _a14239t_107672 _vI92373_getenv_mv_608;
   ::flx::rtl::cl_t _vI92360_getenv_mv_612;
  _a14239t_107672 _vI92358_result_param_std_605;
  _a14239t_107672 _vI92357_getenv_mv_608;
   ::flx::rtl::cl_t getenv_mv_612;
  _a14239t_107672 result_param_std_605;
  _a14239t_107672 getenv_mv_608;
  _a14239t_107672 x_param_std_2951;
  _a14239t_107672 x_param_std_2949;
  _a14239t_107672 x_param_std_2947;
  _a14239t_107672 x_param_std_2945;
  _a14239t_107672 x_param_std_2943;
  _a14239t_107672 x_param_std_2941;
  _a14239t_107672 config_env_overrides_mv_2997;
  _a14239t_107672 config_env_overrides_mv_2993;
  _a14239t_107672 config_env_overrides_mv_2989;
  _a14239t_107672 config_env_overrides_mv_2985;
  _a14239t_107672 config_env_overrides_mv_2981;
  _a14239t_107672 config_env_overrides_mv_2977;
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<92341> := (getenv<80578>primfun[Win32] "FLX_INSTALL_DIR");
      getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_INSTALL_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<92342>varname = getenv_mv_608<92341>varname;
      result_param_std_605 = getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<92344> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<92342>varname), literal[size]("0"))));
      getenv_mv_612  = !((result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(getenv_mv_612%2==1) ) goto _ml614_L92343;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2977<2977> := result_param_std_605<92342>varname;
      config_env_overrides_mv_2977  = result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_92347_L92347;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L92343:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2977<2977> := "";
      config_env_overrides_mv_2977  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_92347_L92347:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 575, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 575, cols 7 to 8
      if(!((::std::string("") == config_env_overrides_mv_2977)) ) goto _ml2979_L17481;
    // # C:/projects/felix/src/packages/flx.fdoc: line 575, cols 7 to 8
      goto _em2977_L17483;
    // # C:/projects/felix/src/packages/flx.fdoc: line 575, cols 7 to 8
    _ml2979_L17481:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 576, cols 7 to 7
/*match case 2:x_param_std_2941*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 576, cols 7 to 7
      //x_param_std_2941<17474>varname = config_env_overrides_mv_2977<2977>varname;
      x_param_std_2941 = config_env_overrides_mv_2977; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg<17480>varname)) = (join<82705>stackfun (x_param_std_2941<17474>varname, "host"));
      *(&cfg->FLX_TARGET_DIR)  = _fI82705_join(x_param_std_2941, ::std::string("host")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg<17480>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun ((join<82705>stackfun (x_param_std_2941<17474>varname, "host")), "config"))));
      *(&cfg->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(_fI82705_join(x_param_std_2941, ::std::string("host")), ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg);
    // # C:/projects/felix/src/packages/flx.fdoc: line 494, cols 5 to 24
      //(deref<85463>primfun[string] apply((prj7:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg<17480>varname)) = (join<82705>stackfun (x_param_std_2941<17474>varname, "share"));
      *(&cfg->FLX_SHARE_DIR)  = _fI82705_join(x_param_std_2941, ::std::string("share")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg);
    // # C:/projects/felix/src/packages/flx.fdoc: line 577, cols 5 to 14
    _em2977_L17483:;
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<92357> := (getenv<80578>primfun[Win32] "FLX_SHARE_DIR");
      _vI92357_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHARE_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<92358>varname = getenv_mv_608<92357>varname;
      _vI92358_result_param_std_605 = _vI92357_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<92360> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<92358>varname), literal[size]("0"))));
      _vI92360_getenv_mv_612  = !((_vI92358_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI92360_getenv_mv_612%2==1) ) goto _ml614_L92359;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2981<2981> := result_param_std_605<92358>varname;
      config_env_overrides_mv_2981  = _vI92358_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_92363_L92363;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L92359:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2981<2981> := "";
      config_env_overrides_mv_2981  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_92363_L92363:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 580, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 580, cols 7 to 8
      if(!((::std::string("") == config_env_overrides_mv_2981)) ) goto _ml2983_L17484;
    // # C:/projects/felix/src/packages/flx.fdoc: line 580, cols 7 to 8
      goto _em2981_L17486;
    // # C:/projects/felix/src/packages/flx.fdoc: line 580, cols 7 to 8
    _ml2983_L17484:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 581, cols 7 to 7
/*match case 2:x_param_std_2943*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 581, cols 7 to 7
      //x_param_std_2943<17475>varname = config_env_overrides_mv_2981<2981>varname;
      x_param_std_2943 = config_env_overrides_mv_2981; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 494, cols 5 to 24
      //(deref<85463>primfun[string] apply((prj7:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg<17480>varname)) = x_param_std_2943<17475>varname;
      *(&cfg->FLX_SHARE_DIR)  = x_param_std_2943; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg);
    // # C:/projects/felix/src/packages/flx.fdoc: line 582, cols 5 to 14
    _em2981_L17486:;
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<92373> := (getenv<80578>primfun[Win32] "FLX_TARGET_DIR");
      _vI92373_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_TARGET_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<92374>varname = getenv_mv_608<92373>varname;
      _vI92374_result_param_std_605 = _vI92373_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<92376> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<92374>varname), literal[size]("0"))));
      _vI92376_getenv_mv_612  = !((_vI92374_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI92376_getenv_mv_612%2==1) ) goto _ml614_L92375;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2985<2985> := result_param_std_605<92374>varname;
      config_env_overrides_mv_2985  = _vI92374_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_92379_L92379;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L92375:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2985<2985> := "";
      config_env_overrides_mv_2985  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_92379_L92379:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 585, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 585, cols 7 to 8
      if(!((::std::string("") == config_env_overrides_mv_2985)) ) goto _ml2987_L17487;
    // # C:/projects/felix/src/packages/flx.fdoc: line 585, cols 7 to 8
      goto _em2985_L17489;
    // # C:/projects/felix/src/packages/flx.fdoc: line 585, cols 7 to 8
    _ml2987_L17487:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 586, cols 7 to 7
/*match case 2:x_param_std_2945*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 586, cols 7 to 7
      //x_param_std_2945<17476>varname = config_env_overrides_mv_2985<2985>varname;
      x_param_std_2945 = config_env_overrides_mv_2985; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg<17480>varname)) = x_param_std_2945<17476>varname;
      *(&cfg->FLX_TARGET_DIR)  = x_param_std_2945; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg<17480>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun (x_param_std_2945<17476>varname, "config"))));
      *(&cfg->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(x_param_std_2945, ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg);
    // # C:/projects/felix/src/packages/flx.fdoc: line 587, cols 5 to 14
    _em2985_L17489:;
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<92389> := (getenv<80578>primfun[Win32] "FLX_CONFIG_DIRS");
      _vI92389_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_CONFIG_DIRS")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<92390>varname = getenv_mv_608<92389>varname;
      _vI92390_result_param_std_605 = _vI92389_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<92392> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<92390>varname), literal[size]("0"))));
      _vI92392_getenv_mv_612  = !((_vI92390_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI92392_getenv_mv_612%2==1) ) goto _ml614_L92391;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2989<2989> := result_param_std_605<92390>varname;
      config_env_overrides_mv_2989  = _vI92390_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_92395_L92395;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L92391:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2989<2989> := "";
      config_env_overrides_mv_2989  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_92395_L92395:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 590, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 590, cols 7 to 8
      if(!((::std::string("") == config_env_overrides_mv_2989)) ) goto _ml2991_L17490;
    // # C:/projects/felix/src/packages/flx.fdoc: line 590, cols 7 to 8
      goto _em2989_L17492;
    // # C:/projects/felix/src/packages/flx.fdoc: line 590, cols 7 to 8
    _ml2991_L17490:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 591, cols 7 to 7
/*match case 2:x_param_std_2947*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 591, cols 7 to 7
      //x_param_std_2947<17477>varname = config_env_overrides_mv_2989<2989>varname;
      x_param_std_2947 = config_env_overrides_mv_2989; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 677, cols 5 to 6
      //state<92402>varname = (respectful_parse_uncurry_uncurry<90457>stackfun (( dquote:keep-dquote<14987>varname, escape:keep-escape<14994>varname, quote:keep-quote<14980>varname), ( current:"", mode:skipping<15002>varname, parsed:Empty<80385>varname), x_param_std_2947<17477>varname));
      _vI92402_state = respectful_parse_uncurry_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107724(_art107723(/*VR_int*/1, /*VR_int*/1, /*VR_int*/1), _art107719(::std::string(""), /*VR_int*/1, (void* /*VR_nullptr*/ )0), x_param_std_2947)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 679, cols 11 to 20
      //respectful_split'2_mv_2356<92401> := apply((prj1:record(current:(string),mode:(mode_t),parsed:(list)) -> mode_t), state<92402>varname);
      _vI92401_respectful_split__apos_2_mv_2356  = _vI92402_state.mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
/*match case 1:|skipping*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      if(!(_vI92401_respectful_split__apos_2_mv_2356%7==1) ) goto _ml2358_L92403;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      goto _em2356_L92404;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
    _ml2358_L92403:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 12 to 54
      //apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92402>varname) = (+<80787>stackfun (apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92402>varname), apply((prj0:record(current:(string),mode:(mode_t),parsed:(list)) -> string), state<92402>varname)));
      _vI92402_state.parsed = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI92402_state.parsed, _vI92402_state.current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 682, cols 5 to 14
    _em2356_L92404:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 591, cols 12 to 52
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg<17480>varname)) = apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92402>varname);
      *(&cfg->FLX_CONFIG_DIRS)  = _vI92402_state.parsed; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 592, cols 5 to 14
    _em2989_L17492:;
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<92409> := (getenv<80578>primfun[Win32] "FLX_LIB_DIRS");
      _vI92409_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_LIB_DIRS")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<92410>varname = getenv_mv_608<92409>varname;
      _vI92410_result_param_std_605 = _vI92409_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<92412> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<92410>varname), literal[size]("0"))));
      _vI92412_getenv_mv_612  = !((_vI92410_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI92412_getenv_mv_612%2==1) ) goto _ml614_L92411;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2993<2993> := result_param_std_605<92410>varname;
      config_env_overrides_mv_2993  = _vI92410_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_92415_L92415;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L92411:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2993<2993> := "";
      config_env_overrides_mv_2993  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_92415_L92415:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 595, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 595, cols 7 to 8
      if(!((::std::string("") == config_env_overrides_mv_2993)) ) goto _ml2995_L17493;
    // # C:/projects/felix/src/packages/flx.fdoc: line 595, cols 7 to 8
      goto _em2993_L17495;
    // # C:/projects/felix/src/packages/flx.fdoc: line 595, cols 7 to 8
    _ml2995_L17493:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 596, cols 7 to 7
/*match case 2:x_param_std_2949*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 596, cols 7 to 7
      //x_param_std_2949<17478>varname = config_env_overrides_mv_2993<2993>varname;
      x_param_std_2949 = config_env_overrides_mv_2993; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 677, cols 5 to 6
      //state<92422>varname = (respectful_parse_uncurry_uncurry<90457>stackfun (( dquote:keep-dquote<14987>varname, escape:keep-escape<14994>varname, quote:keep-quote<14980>varname), ( current:"", mode:skipping<15002>varname, parsed:Empty<80385>varname), x_param_std_2949<17478>varname));
      _vI92422_state = respectful_parse_uncurry_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107724(_art107723(/*VR_int*/1, /*VR_int*/1, /*VR_int*/1), _art107719(::std::string(""), /*VR_int*/1, (void* /*VR_nullptr*/ )0), x_param_std_2949)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 679, cols 11 to 20
      //respectful_split'2_mv_2356<92421> := apply((prj1:record(current:(string),mode:(mode_t),parsed:(list)) -> mode_t), state<92422>varname);
      _vI92421_respectful_split__apos_2_mv_2356  = _vI92422_state.mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
/*match case 1:|skipping*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      if(!(_vI92421_respectful_split__apos_2_mv_2356%7==1) ) goto _ml2358_L92423;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      goto _em2356_L92424;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
    _ml2358_L92423:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 12 to 54
      //apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92422>varname) = (+<80787>stackfun (apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92422>varname), apply((prj0:record(current:(string),mode:(mode_t),parsed:(list)) -> string), state<92422>varname)));
      _vI92422_state.parsed = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI92422_state.parsed, _vI92422_state.current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 682, cols 5 to 14
    _em2356_L92424:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 596, cols 12 to 49
      //(deref<80855>primfun[list] apply((prj3:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg<17480>varname)) = apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92422>varname);
      *(&cfg->FLX_LIB_DIRS)  = _vI92422_state.parsed; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 597, cols 5 to 14
    _em2993_L17495:;
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<92429> := (getenv<80578>primfun[Win32] "FLX_RTL_DIRS");
      _vI92429_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_RTL_DIRS")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<92430>varname = getenv_mv_608<92429>varname;
      _vI92430_result_param_std_605 = _vI92429_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<92432> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<92430>varname), literal[size]("0"))));
      _vI92432_getenv_mv_612  = !((_vI92430_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI92432_getenv_mv_612%2==1) ) goto _ml614_L92431;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2997<2997> := result_param_std_605<92430>varname;
      config_env_overrides_mv_2997  = _vI92430_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_92435_L92435;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L92431:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //config_env_overrides_mv_2997<2997> := "";
      config_env_overrides_mv_2997  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_92435_L92435:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 600, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 600, cols 7 to 8
      if(!((::std::string("") == config_env_overrides_mv_2997)) ) goto _ml2999_L17496;
    // # C:/projects/felix/src/packages/flx.fdoc: line 603, cols 3 to 4
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/flx.fdoc: line 600, cols 7 to 8
    _ml2999_L17496:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 601, cols 7 to 7
/*match case 2:x_param_std_2951*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 601, cols 7 to 7
      //x_param_std_2951<17479>varname = config_env_overrides_mv_2997<2997>varname;
      x_param_std_2951 = config_env_overrides_mv_2997; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 677, cols 5 to 6
      //state<92442>varname = (respectful_parse_uncurry_uncurry<90457>stackfun (( dquote:keep-dquote<14987>varname, escape:keep-escape<14994>varname, quote:keep-quote<14980>varname), ( current:"", mode:skipping<15002>varname, parsed:Empty<80385>varname), x_param_std_2951<17479>varname));
      _vI92442_state = respectful_parse_uncurry_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107724(_art107723(/*VR_int*/1, /*VR_int*/1, /*VR_int*/1), _art107719(::std::string(""), /*VR_int*/1, (void* /*VR_nullptr*/ )0), x_param_std_2951)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 679, cols 11 to 20
      //respectful_split'2_mv_2356<92441> := apply((prj1:record(current:(string),mode:(mode_t),parsed:(list)) -> mode_t), state<92442>varname);
      _vI92441_respectful_split__apos_2_mv_2356  = _vI92442_state.mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
/*match case 1:|skipping*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      if(!(_vI92441_respectful_split__apos_2_mv_2356%7==1) ) goto _ml2358_L92443;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      goto _em2356_L92444;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
    _ml2358_L92443:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 12 to 54
      //apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92442>varname) = (+<80787>stackfun (apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92442>varname), apply((prj0:record(current:(string),mode:(mode_t),parsed:(list)) -> string), state<92442>varname)));
      _vI92442_state.parsed = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI92442_state.parsed, _vI92442_state.current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 682, cols 5 to 14
    _em2356_L92444:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 601, cols 12 to 49
      //(deref<80855>primfun[list] apply((prj6:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg<17480>varname)) = apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92442>varname);
      *(&cfg->FLX_RTL_DIRS)  = _vI92442_state.parsed; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 603, cols 3 to 4
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/flx.fdoc: line 603, cols 3 to 4
      return; // proc return from stackable 
}
//------------------------------
//FUNCTION <80787>: +: Apply method
void* _fI80787___plus_::apply(_tt107677 const &_arg ){
  _vI80822_x = _arg.mem_0;
  _vI80823_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<92075>stackfun ((Snoc<80397>struct ((aux_uncurry<92062>stackfun (x<80822>varname, Empty<80385>varname)), y<80823>varname)), Empty<80385>varname));: type void*
      return _fI92075_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI92062_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI80822_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */, _vI80823_y))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",419,3,419,69); // HACK! 
}

//------------------------------
//FUNCTION <93777>: generic_cxx_compile_for_dynamic_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93777__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66622>: toolchain_gcc_osx::get_base_c_compile_flags: Apply method
void* _fI66622_get_base_c_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 979, cols 3 to 65
      //return base_c_compile_flags<66596>varname;: type void*
      return ptrtoolchain_gcc_osx->_vI66596_base_c_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",979,3,979,65); // HACK! 
}

//------------------------------
//FUNCTION <66618>: toolchain_gcc_osx::pathname_separator: Apply method
_a14239t_107672 _fI66618_pathname_separator::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 977, cols 3 to 42
      //return "/";: type _a14239t_107672
      return ::std::string("/");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",977,3,977,42); // HACK! 
}

//------------------------------
//FUNCTION <66305>: toolchain_msvc_win32::debug_flags: Apply method
void* debug_flags::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 148, cols 3 to 44
      //return (Snoc<80397>struct (Empty<80385>varname, "-g"));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-g"))));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1742,3,1742,49); // HACK! 
}

//------------------------------
//FUNCTION <107396>: flx_processing::cxx_link_shared_exe::aux_uncurry: Apply method
void* _fI107396_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107397_inp_uncurry = _arg.data[0];
  _vI107398_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L107405:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<107401> := inp_uncurry<107397>varname;
      _vI107401_aux__apos_2_mv_1381  = _vI107397_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI107401_aux__apos_2_mv_1381)==0) ) goto _ml1383_L107400;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<107398>varname;: type void*
      return _vI107398_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L107400:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI107401_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI107404__lam_1385)(FLX_FPAR_PASS this, ptr_fI106859_cxx_link_shared_exe, ptrflx_processing))) ) goto _ml1384_L107399;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<107402>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<107401>varname));
      _vI107402_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI107401_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<107403>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<107401>varname));
      _vI107403_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI107401_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<107398> := (Snoc<80397>struct (out<107398>varname, (_lam_66099<106863>stackfun h_param_std_1267<107402>varname)));
      _vI107398_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107398_out, _fI106863__lam_66099(ptr_fI106859_cxx_link_shared_exe, ptrflx_processing)
      .apply(_vI107402_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<107397> := t_param_std_1266<107403>varname;
      _vI107397_inp_uncurry  = _vI107403_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L107405;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L107399:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <97106>: flx_pkgconfig::handle_pkg::_lam_65277::aux::aux_uncurry: Apply method
void* _fI97106_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97107_x_uncurry = _arg.data[0];
  _vI97108_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97115:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97111> := x_uncurry<97107>varname;
      _vI97111_aux__apos_2_mv_1387  = _vI97107_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97111_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97110;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97108>varname;: type void*
      return _vI97108_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97110:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97111_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97114__lam_1391)(FLX_FPAR_PASS this, ptr_fI97098_aux, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L97109;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97112>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97111>varname));
      _vI97112_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97111_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97113>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97111>varname));
      _vI97113_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97111_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97108> := (Snoc<80397>struct (y<97108>varname, h_param_std_1269<97112>varname));
      _vI97108_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97108_y, _vI97112_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97107> := t_param_std_1268<97113>varname;
      _vI97107_x_uncurry  = _vI97113_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97115;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97109:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//C FUNC <68173>: mkinc
_a14239t_107672 mkinc(_a14239t_107672 _vI68175_s){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 114, cols 3 to 35
      //return (+<14305>primfun ("-I", s<68175>varname));: type _a14239t_107672
      return ::std::string("-I") + _vI68175_s ;
}
//------------------------------
//FUNCTION <68415>: FlxPkgConfigQuery::getclosure::getclosure'2: Apply method
void* _fI68415_getclosure__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI68420_pkg = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 551, cols 7 to 8
      //_genout_urv105527<105527> := (flx_pkgconfig<68435>stackfun (+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (paths<68346>varname, "--keeprightmost")), "--rec")), "--list")), pkg<68420>varname)));
      _genout_urv105527  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrFlxPkgConfigQuery->paths, ::std::string("--keeprightmost"))) /* apply_stack */, ::std::string("--rec"))) /* apply_stack */, ::std::string("--list"))) /* apply_stack */, _vI68420_pkg)) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 551, cols 7 to 8
      //_ds2_65366<68417>varname = _genout_urv105527<105527>varname;
      _ds2_65366 = _genout_urv105527; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 551, cols 7 to 8
      //result<68418>varname = apply((prj0:int * list -> int), _ds2_65366<68417>varname);
      _vI68418_result = _ds2_65366.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 551, cols 7 to 8
      //values<68419>varname = apply((prj1:int * list -> list), _ds2_65366<68417>varname);
      _vI68419_values = _ds2_65366.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 557, cols 7 to 11
      if(!(!((_vI68418_result == 0)) ) ) goto _ifdoelse_bootflx_65324_L68422;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("missing package for closure of ", pkg<68420>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108243 = (::std::string("missing package for closure of ") + _vI68420_pkg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108243)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<68423>varname);
      {
      _a6258t_107873 _tmp108244 = (_a6258t_107873)(ptrgetclosure->_vI68423_ehandler);
      throw ((_tmp108244));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 557, cols 7 to 11
    _ifdoelse_bootflx_65324_L68422:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<105539>stackfun (values<68419>varname, Empty<80385>varname));: type void*
      return _fI105539_aux_uncurry(FLX_FPAR_PASS this, ptrgetclosure, ptrFlxPkgConfigQuery)
      .apply(_at107697(_vI68419_values, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",559,5,559,6); // HACK! 
}

//------------------------------
//FUNCTION <105461>: FlxPkgConfigQuery::getpkgfield1::getpkgfield1'2::_lam_65351: Apply method
 ::flx::rtl::cl_t _lam_65351::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 508, cols 9 to 23
      //return (match case 0)(apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] getpkgfield1'2_mv_65348<65348>varname)));: type  ::flx::rtl::cl_t
      return FLX_VNI((reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>((ptr_fI68373_getpkgfield1__apos_2->_vI65348_getpkgfield1__apos_2_mv_65348)))).mem_1)==0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",508,9,508,23); // HACK! 
}

//------------------------------
//FUNCTION <89754>: toolchain_clang_apple_iOS_maker_uncurry::dependency_extension: Apply method
_a14239t_107672 _fI89754_dependency_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1992, cols 3 to 45
      //return ".d";: type _a14239t_107672
      return ::std::string(".d");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1992,3,1992,45); // HACK! 
}

//------------------------------
//FUNCTION <66645>: toolchain_gcc_osx::c_dynamic_object_compiler: Apply method
int _fI66645_c_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66648_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1050, cols 5 to 6
      //result<66647>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_c_compile_flags<66596>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:c_compiler<66592>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66648>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66648>varname)));
      _vI66647_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_osx->_vI66596_base_c_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_gcc_osx->_vI66592_c_compiler, ptrtoolchain_gcc_osx->_vI66677_config.header_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.macros, ::std::string("-o "), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66648_spec.src, _vI66648_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1051, cols 5 to 18
      //return result<66647>varname;: type int
      return _vI66647_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1052,3,1052,4); // HACK! 
}

//------------------------------
//FUNCTION <68297>: run_felix_compiler::_lam_65389: Apply method
_a14239t_107672 _lam_65389::apply(_a14239t_107672 const &_arg ){
  _vI68299_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 362, cols 12 to 42
      //return (+<14305>primfun ("--import=", s<68299>varname));: type _a14239t_107672
      return ::std::string("--import=") + _vI68299_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",362,12,362,42); // HACK! 
}

//------------------------------
//FUNCTION <89785>: toolchain_clang_apple_iOS_maker_uncurry::cxx_static_library_object_compiler: Apply method
int _fI89785_cxx_static_library_object_compiler::apply(_art107759 const &_arg ){
  _vI89787_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2106, cols 5 to 6
      //result<89786>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_cxx_compile_flags<89749>varname, CCOBJ_STATIC_LIB:cxx_compiler<89740>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), MACROS:(Snoc<80397>struct (apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), "FLX_STATIC_LINK")), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<89787>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<89787>varname)));
      _vI89786_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89749_base_cxx_compile_flags, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89740_cxx_compiler, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.header_search_dirs, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.macros, ::std::string("FLX_STATIC_LINK")))), ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89787_spec.src, _vI89787_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2107, cols 5 to 18
      //return result<89786>varname;: type int
      return _vI89786_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2108,3,2108,4); // HACK! 
}

//------------------------------
//FUNCTION <66985>: cxx_depcheck: Apply method
 ::flx::rtl::cl_t cxx_depcheck::apply(_tt108175 const &_arg ){
  tc = _arg.mem_0;
  src = _arg.mem_1;
  dst = _arg.mem_2;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 403, cols 5 to 64
      //new_switches<67009>varname = (cat_uncurry<89509>stackfun (" ", apply(apply((prj17:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> list), tc<67033>varname), ())));
      new_switches = cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), (tc.get_base_cxx_compile_flags)->clone()
      ->apply() /* general apply */)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 405, cols 5 to 61
      //_ds2_66152<67010>varname = apply(apply((prj4:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(src:(string)) -> int * string), tc<67033>varname), ( src:src<67034>varname));
      _ds2_66152 = (tc.cxx_dependency_generator)->clone()
      ->apply(_art107756(src)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 405, cols 5 to 61
      //result<67011>varname = apply((prj0:int * string -> int), _ds2_66152<67010>varname);
      _vI67011_result = _ds2_66152.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 405, cols 5 to 61
      //deps<67012>varname = apply((prj1:int * string -> string), _ds2_66152<67010>varname);
      deps = _ds2_66152.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 409, cols 5 to 9
      if(!(!((_vI67011_result == 0)) ) ) goto _ifdoend_bootflx_66130_L67036;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("[flx_depchk] C++ Dependency generator FAILED on ", src<67034>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108245 = (::std::string("[flx_depchk] C++ Dependency generator FAILED on ") + src ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108245)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 408, cols 7 to 19
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 409, cols 5 to 9
    _ifdoend_bootflx_66130_L67036:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 410, cols 5 to 44
      //newdeps<67013>varname = apply(apply((prj10:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> string -> list), tc<67033>varname), deps<67012>varname);
      newdeps = (tc.dependency_parser)->clone()
      ->apply(deps) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 411, cols 5 to 29
      //depfile<67014>varname = (+<14305>primfun (dst<67035>varname, ".d"));
      depfile = dst + ::std::string(".d") ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L99138;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", depfile<67014>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108246 = (::std::string("[load] ") + depfile ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108246)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L99138:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 412, cols 5 to 33
      //olddeptxt<67015>varname = (raw_load<8396>primfun depfile<67014>varname);
      olddeptxt = ::flx::rtl::ioutil::load_file(depfile); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 553, cols 5 to 28
      //cxx_depcheck_mv_66156<99142> := (aux<99148>stackfun ((split<14933>stackfun (olddeptxt<67015>varname, "\x0A")), Empty<80385>varname));
      cxx_depcheck_mv_66156  = _fI99148_aux(FLX_FPAR_PASS this)
      .apply(_at107697(split(FLX_FPAR_PASS_ONLY)
      .apply(_at107674(olddeptxt, ::std::string("\n"))) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 415, cols 9 to 13
/*match case 1:|Cons (h_param_bootflx_66132, t_param_bootflx_66133)*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 415, cols 9 to 13
      if(!andthen(!!cxx_depcheck_mv_66156 , (FLX_NEWP(_lam_66159)(FLX_FPAR_PASS this))) ) goto _ml66158_L99147;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 415, cols 13 to 13
      //t_param_bootflx_66133<99145>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] cxx_depcheck_mv_66156<99142>varname));
      t_param_bootflx_66133 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(cxx_depcheck_mv_66156))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 415, cols 9 to 9
      //h_param_bootflx_66132<99146>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] cxx_depcheck_mv_66156<99142>varname));
      h_param_bootflx_66132 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(cxx_depcheck_mv_66156))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 432, cols 3 to 4
      //apply((prj0:string * list -> string), _urv99141<99141>varname) = h_param_bootflx_66132<99146>varname;
      _urv99141.mem_0 = h_param_bootflx_66132; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 432, cols 3 to 4
      //apply((prj1:string * list -> list), _urv99141<99141>varname) = t_param_bootflx_66133<99145>varname;
      _urv99141.mem_1 = t_param_bootflx_66133; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 416, cols 7 to 30
      goto _end_hash_906653666;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 415, cols 9 to 13
    _ml66158_L99147:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 416, cols 9 to 9
/*match case 2:any*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 432, cols 3 to 4
      //apply((prj0:string * list -> string), _urv99141<99141>varname) = "";
      _urv99141.mem_0 = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 432, cols 3 to 4
      //apply((prj1:string * list -> list), _urv99141<99141>varname) = Empty<80385>varname;
      _urv99141.mem_1 = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 416, cols 7 to 30
    _end_hash_906653666:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 417, cols 5 to 6
      //_ds2_66153<67025>varname = _urv99141<99141>varname;
      _ds2_66153 = _urv99141; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 417, cols 5 to 6
      //old_switches<67026>varname = apply((prj0:string * list -> string), _ds2_66153<67025>varname);
      old_switches = _ds2_66153.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 417, cols 5 to 6
      //olddeps<67027>varname = apply((prj1:string * list -> list), _ds2_66153<67025>varname);
      olddeps = _ds2_66153.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 419, cols 5 to 71
      //samedeps<67028>varname = (land<5211>primfun ((==<80464>primfun[string] (new_switches<67009>varname, old_switches<67026>varname)), (==<66987>stackfun (newdeps<67013>varname, olddeps<67027>varname))));
      samedeps = (new_switches == old_switches) && _fI66987___equals___equals_(FLX_FPAR_PASS this)
      .apply(_at107697(newdeps, olddeps)) /* apply_stack */ ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_624_L99189;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_output] ", depfile<67014>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108247 = (::std::string("[Open_output] ") + depfile ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108247)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
    _ifdoelse_std_624_L99189:;
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv99195<99195> := (raw_fopen_output<8432>primfun depfile<67014>varname);
      _genout_urv99195  = fopen(depfile.c_str(),"wb"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv99181<99192> := _genout_urv99195<99195>varname;
      _genout_urv99181  = _genout_urv99195; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98870<99191> := _genout_urv99181<99192>varname;
      _genout_urv98870  = _genout_urv99181; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv99174<99188> := _genout_urv98870<99191>varname;
      _genout_urv99174  = _genout_urv98870; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 428, cols 5 to 28
      //f<99185>varname = _genout_urv99174<99188>varname;
      f = _genout_urv99174; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //run procedure directcall iter_uncurry<89522>directproc (_lam_641<99186>closure, (Snoc<80397>struct (newdeps<67013>varname, new_switches<67009>varname)));
      {
      _pt107730* _tmp108248 = (FLX_NEWP(_lam_641)(FLX_FPAR_PASS this));
      void* _tmp108249 = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(newdeps, new_switches)));
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
          ->call(0, _tt107731((_tmp108248), (_tmp108249)));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller cxx_depcheck\n");
            fprintf(stderr,"Calls  iter_uncurry\n");
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 430, cols 5 to 13
      // primcall fclose<8437>primproc f<99185>varname;
      (void)fclose(f);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 427, cols 7 to 58
      //t<99197>varname = (aux_uncurry<99198>stackfun ((neg<82781>primfun[double] literal[double]("1.0")), newdeps<67013>varname));
      t = _fI99198_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt108078(- 1.0 , newdeps)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 429, cols 5 to 7
      //fresh<67032>varname = (land<5211>primfun (samedeps<67028>varname, (<<82604>primfun[double] (t<99197>varname, (dfiletime<82503>stackfun (dst<67035>varname, (neg<82781>primfun[double] literal[double]("1.0"))))))));
      fresh = samedeps && (t < dfiletime(dst, - 1.0 )) ; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 431, cols 5 to 17
      //return fresh<67032>varname;: type  ::flx::rtl::cl_t
      return fresh;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",432,3,432,4); // HACK! 
}

//------------------------------
//FUNCTION <106111>: flx_processing::find_cxx_pkgs::_lam_66026: Apply method
 ::flx::rtl::cl_t _lam_66026::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2093,7,2093,11); // HACK! 
}

//------------------------------
//FUNCTION <91692>: process_config_text_uncurry::iterator'2: Apply method
void* _fI91692_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L91693:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<91697> := xs<91691>varname;
      _vI91697_iterator__apos_2_mv_1563  = ptrprocess_config_text_uncurry->_vI91691_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI91697_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI91700__lam_1566)(FLX_FPAR_PASS this, ptrprocess_config_text_uncurry))) ) goto _ml1565_L91696;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<91698>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<91697>varname));
      _vI91698_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI91697_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<91699>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<91697>varname));
      _vI91699_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI91697_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<91691>varname = t_param_std_1318<91699>varname;
      ptrprocess_config_text_uncurry->_vI91691_xs = _vI91699_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108251)
      //yield (Some<80915>struct h_param_std_1319<91698>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI91698_h_param_std_1319));//yield
    FLX_CASE_LABEL(108251)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L91693;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L91696:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI91697_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L91695;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L91695:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L91693;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <66413>: toolchain_msvc_win32::c_dynamic_object_compiler: Apply method
int c_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66418_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1846, cols 5 to 44
      //_genout_urv92998<92998> := (xpopen<66338>stackfun (+<80787>stackfun ((join_uncurry<89534>stackfun ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (macros<66321>varname, (+<14305>primfun ("/Tc", apply((prj1:record(dst:(string),src:(string)) -> string), spec<66418>varname))))), "/c")), "/Zi")), "/MDd")), "/nologo")), "cl.exe")), include_switches<66314>varname)), (+<14305>primfun ("/Fo", apply((prj0:record(dst:(string),src:(string)) -> string), spec<66418>varname))))));
      _genout_urv92998  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_msvc_win32->macros, ::std::string("/Tc") + _vI66418_spec.src ))), ::std::string("/c")))), ::std::string("/Zi")))), ::std::string("/MDd")))), ::std::string("/nologo")))), ::std::string("cl.exe")))), ptrtoolchain_msvc_win32->include_switches)) /* apply_stack */, ::std::string("/Fo") + _vI66418_spec.dst )) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1846, cols 5 to 44
      //_ds2_66256<66415>varname = _genout_urv92998<92998>varname;
      _ds2_66256 = _genout_urv92998; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1846, cols 5 to 44
      //result<66416>varname = apply((prj0:int * string -> int), _ds2_66256<66415>varname);
      _vI66416_result = _ds2_66256.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1846, cols 5 to 44
      //text<66417>varname = apply((prj1:int * string -> string), _ds2_66256<66415>varname);
      _vI66417_text = _ds2_66256.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66416>varname, text<66417>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66416_result, _vI66417_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1848, cols 5 to 18
      //return result<66416>varname;: type int
      return _vI66416_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1849,3,1849,4); // HACK! 
}

//------------------------------
//FUNCTION <93057>: toolchain_msvc_win32::static_executable_linker::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI93057__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <105935>: flx_processing::check_binary_uptodate::maxf: Apply method
_ft108125* _fI105935_maxf::apply(double const &_arg ){
  _vI105938_t = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2723, cols 5 to 95
      //return maxf'2<105936>closure;: type _ft108125*
      return (FLX_NEWP(_fI105936_maxf__apos_2)(FLX_FPAR_PASS this, ptrcheck_binary_uptodate, ptrflx_processing));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2723,5,2723,95); // HACK! 
}

//------------------------------
//FUNCTION <68612>: flx_pkgconfig::get_field: Apply method
_at107674 get_field::apply(_a14239t_107672 const &_arg ){
  line = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<96758> := (stl_find<14446>primfun (line<68619>varname, (subscript<81183>primfun[int] (":", 0))));
      _vI96758_find_mv_2105  = line.find((::flx::rtl::strutil::subscript(::std::string(":"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI96758_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L96760;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //get_field_mv_65253<96754> := None<81378>varname;
      get_field_mv_65253  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_96737_L96761;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L96760:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<96759>varname = find_mv_2105<96758>varname;
      _vI96759_i_param_std_1893 = _vI96758_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //get_field_mv_65253<96754> := (Some<81379>struct i_param_std_1893<96759>varname);
      get_field_mv_65253  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI96759_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_96737_L96761:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 254, cols 11 to 15
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 254, cols 11 to 15
      if(!(FLX_VNI(get_field_mv_65253)==0) ) goto _ml65255_L96756;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 257, cols 9 to 32
      //return ("", "");: type _at107674
      return _at107674(::std::string(""), ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 254, cols 11 to 15
    _ml65255_L96756:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 11 to 16
/*match case 2:|Some n_param_bootflx_65180*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 11 to 16
      if(!andthen(FLX_VNI(get_field_mv_65253)==1, (FLX_NEWP(_lam_65257)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65256_L96757;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 16 to 16
      //n_param_bootflx_65180<96755>varname = (arg of case 1 of get_field_mv_65253<96754>varname);
      n_param_bootflx_65180 = *((_a5094t_107688*)FLX_VNP(get_field_mv_65253)); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 257, cols 9 to 32
      //return ((lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyto<81376>primfun[size] (line<68619>varname, n_param_bootflx_65180<96755>varname)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")), (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<81377>primfun[size] (line<68619>varname, (+<5396>primfun (n_param_bootflx_65180<96755>varname, 1)))), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")));: type _at107674
      return _at107674(lstrip(rstrip(::flx::rtl::strutil::substr(line,0,n_param_bootflx_65180), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")), lstrip(rstrip(::flx::rtl::strutil::substr(line,n_param_bootflx_65180 + 1 ,line.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 11 to 16
    _ml65256_L96757:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 257, cols 9 to 32
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 257, cols 9 to 32
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",257,9,257,32);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",257,9,257,32);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",259,5,259,8); // HACK! 
}

//------------------------------
//FUNCTION <93928>: generic_link_exe_static_uncurry::aux_uncurry: Apply method
void* _fI93928_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93929_inp_uncurry = _arg.data[0];
  _vI93930_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93937:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93933> := inp_uncurry<93929>varname;
      _vI93933_aux__apos_2_mv_1381  = _vI93929_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93933_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93932;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93930>varname;: type void*
      return _vI93930_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93932:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93933_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93936__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_link_exe_static_uncurry))) ) goto _ml1384_L93931;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93934>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93933>varname));
      _vI93934_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93933_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93935>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93933>varname));
      _vI93935_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93933_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93930> := (Snoc<80397>struct (out<93930>varname, (quote_arg<16873>stackfun h_param_std_1267<93934>varname)));
      _vI93930_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93930_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI93934_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93929> := t_param_std_1266<93935>varname;
      _vI93929_inp_uncurry  = _vI93935_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93937;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93931:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93291>: toolchain_msvc_win32::aux::_lam_1480: Apply method
 ::flx::rtl::cl_t _lam_1480::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",547,9,547,17); // HACK! 
}

//------------------------------
//FUNCTION <106515>: flx_processing::check_binary_uptodate::aux_uncurry: Apply method
double _fI106515_aux_uncurry::apply(_tt108078 const &_arg ){
  _vI106516_init_uncurry = _arg.mem_0;
  _vI106517_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_98507_L106524:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<106520> := x<106517>varname;
      _vI106520_aux__apos_2_mv_1356  = _vI106517_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI106520_aux__apos_2_mv_1356)==0) ) goto _ml1358_L106519;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<106516>varname;: type double
      return _vI106516_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L106519:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI106520_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI106523__lam_1360)(FLX_FPAR_PASS this, ptrcheck_binary_uptodate, ptrflx_processing))) ) goto _ml1359_L106518;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<106521>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<106520>varname));
      _vI106521_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI106520_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<106522>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<106520>varname));
      _vI106522_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI106520_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<106517> := t_param_std_1258<106522>varname;
      _vI106517_x  = _vI106522_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<106516> := apply((maxf<105935>flxfun init_uncurry<106516>varname), h_param_std_1259<106521>varname);
      _vI106516_init_uncurry  = ((FLX_NEWP(_fI105935_maxf)(FLX_FPAR_PASS ptrcheck_binary_uptodate, ptrflx_processing))
      ->apply(_vI106516_init_uncurry))->clone()
      ->apply(_vI106521_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_98507_L106524;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L106518:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <106627>: flx_processing::run_program_static::aux_uncurry: Apply method
void* _fI106627_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106628_inp_uncurry = _arg.data[0];
  _vI106629_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L106636:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<106632> := inp_uncurry<106628>varname;
      _vI106632_aux__apos_2_mv_1381  = _vI106628_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI106632_aux__apos_2_mv_1381)==0) ) goto _ml1383_L106631;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<106629>varname;: type void*
      return _vI106629_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L106631:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI106632_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI106635__lam_1385)(FLX_FPAR_PASS this, ptrrun_program_static, ptrflx_processing))) ) goto _ml1384_L106630;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<106633>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<106632>varname));
      _vI106633_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI106632_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<106634>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<106632>varname));
      _vI106634_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI106632_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<106629> := (Snoc<80397>struct (out<106629>varname, (quote_arg<16873>stackfun h_param_std_1267<106633>varname)));
      _vI106629_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106629_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI106633_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<106628> := t_param_std_1266<106634>varname;
      _vI106628_inp_uncurry  = _vI106634_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L106636;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L106630:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <96379>: flx_pkgconfig::add_val::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI96379__lam_1457::apply(_a14239t_107672 const &_arg ){
  _vI96380_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<81159>stackfun (x<96380>varname, v<68636>varname));: type  ::flx::rtl::cl_t
      return eq(_vI96380_x, ptradd_val->v);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <103647>: setup-from-file_uncurry::aux: Apply method
void* _fI103647_aux::apply(_tt107698 const &_arg ){
  _vI103648_x = _arg.mem_0;
  _vI103649_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
    start_91607_L103659:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<103654> := (stl_find<14446>primfun (x<103648>varname, (subscript<81183>primfun[int] ("\x0A", 0))));
      _vI103654_find_mv_2105  = _vI103648_x.find((::flx::rtl::strutil::subscript(::std::string("\n"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI103654_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L103656;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<103650> := None<81378>varname;
      _vI103650_aux_mv_2285  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_91577_L103657;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L103656:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<103655>varname = find_mv_2105<103654>varname;
      _vI103655_i_param_std_1893 = _vI103654_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<103650> := (Some<81379>struct i_param_std_1893<103655>varname);
      _vI103650_aux_mv_2285  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI103655_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_91577_L103657:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
      if(!(FLX_VNI(_vI103650_aux_mv_2285)==0) ) goto _ml2287_L103652;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<80397>struct (y<103649>varname, x<103648>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI103649_y, _vI103648_x)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
    _ml2287_L103652:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
/*match case 2:|Some n_param_std_1968*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      if(!andthen(FLX_VNI(_vI103650_aux_mv_2285)==1, (FLX_NEWP(_fI103658__lam_2289)(FLX_FPAR_PASS this, ptr_pI89521_setup__hyphen_from__hyphen_file_uncurry))) ) goto _ml2288_L103653;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 14 to 14
      //n_param_std_1968<103651>varname = (arg of case 1 of aux_mv_2285<103650>varname);
      _vI103651_n_param_std_1968 = *((_a5094t_107688*)FLX_VNP(_vI103650_aux_mv_2285)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //y<103649> := (Snoc<80397>struct (y<103649>varname, (copyto<81376>primfun[size] (x<103648>varname, n_param_std_1968<103651>varname))));
      _vI103649_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI103649_y, ::flx::rtl::strutil::substr(_vI103648_x,0,_vI103651_n_param_std_1968)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //x<103648> := (copyfrom<81377>primfun[size] (x<103648>varname, (+<80900>primfun[size] (n_param_std_1968<103651>varname, literal[size]("1")))));
      _vI103648_x  = ::flx::rtl::strutil::substr(_vI103648_x,_vI103651_n_param_std_1968 + 1 ,_vI103648_x.size()); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      goto start_91607_L103659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
    _ml2288_L103653:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",480,5,480,6); // HACK! 
}

//------------------------------
//FUNCTION <66926>: toolchain_clang_osx::get_base_cxx_compile_flags: Apply method
void* _fI66926_get_base_cxx_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1469, cols 3 to 69
      //return base_cxx_compile_flags<66899>varname;: type void*
      return ptrtoolchain_clang_osx->_vI66899_base_cxx_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1469,3,1469,69); // HACK! 
}

//------------------------------
//FUNCTION <98064>: map_package_requirements_uncurry::aux_uncurry: Apply method
_a14239t_107672 _fI98064_aux_uncurry::apply(_tt107698 const &_arg ){
  _vI98065_init_uncurry = _arg.mem_0;
  _vI98066_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_95735_L98073:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<98069> := x<98066>varname;
      _vI98069_aux__apos_2_mv_1356  = _vI98066_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI98069_aux__apos_2_mv_1356)==0) ) goto _ml1358_L98068;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<98065>varname;: type _a14239t_107672
      return _vI98065_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L98068:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI98069_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI98072__lam_1360)(FLX_FPAR_PASS this, ptrmap_package_requirements_uncurry))) ) goto _ml1359_L98067;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<98070>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<98069>varname));
      _vI98070_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI98069_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<98071>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<98069>varname));
      _vI98071_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI98069_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<98066> := t_param_std_1258<98071>varname;
      _vI98066_x  = _vI98071_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<98065> := apply((join<84379>flxfun init_uncurry<98065>varname), h_param_std_1259<98070>varname);
      _vI98065_init_uncurry  = ((FLX_NEWP(join)(FLX_FPAR_PASS_ONLY))
      ->apply(_vI98065_init_uncurry))->clone()
      ->apply(_vI98070_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_95735_L98073;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L98067:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------

//PROCEDURE <68894:> flx_processing::ehandler: Call method
::flx::rtl::con_t * ehandler::call(::flx::rtl::con_t *_ptr_caller){
  _caller = _ptr_caller;
  INIT_PC
  return this;
}

//PROCEDURE <68894:> flx_processing::ehandler: Resume method
::flx::rtl::con_t *ehandler::resume(){
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("BOOTFLX: Flx_pkgconfig getpkgfiled1 failed, temporary ehandler invoked", "\x0A")));
      {
      _a14239t_107672 _tmp108260 = ::std::string("BOOTFLX: Flx_pkgconfig getpkgfiled1 failed, temporary ehandler invoked") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108260)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3238, cols 7 to 21
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3239, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <66707>: toolchain_clang_linux::dynamic_library_extension: Apply method
_a14239t_107672 _fI66707_dynamic_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1224, cols 3 to 51
      //return ".so";: type _a14239t_107672
      return ::std::string(".so");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1224,3,1224,51); // HACK! 
}

//------------------------------
//FUNCTION <93273>: toolchain_msvc_win32::aux: Apply method
void* _fI93273_aux::apply(_at107697 const &_arg ){
  inp = _arg.data[0];
  _vI93275_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
    start_93268_L93294:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //aux_mv_1471<93278> := inp<93274>varname;
      aux_mv_1471  = inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
      if(!(FLX_VNI(aux_mv_1471)==0) ) goto _ml1473_L93277;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<93281>stackfun (out<93275>varname, Empty<80385>varname));: type void*
      return _fI93281_aux_uncurry(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)
      .apply(_at107697(_vI93275_out, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
    _ml1473_L93277:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1299, h_param_std_1300)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
      if(!andthen(FLX_VNI(aux_mv_1471)==1, (FLX_NEWP(_lam_1480)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml1474_L93276;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 16 to 16
      //h_param_std_1300<93279>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1471<93278>varname));
      h_param_std_1300 = (*((_tt107677*)FLX_VNP(aux_mv_1471))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 14 to 14
      //t_param_std_1299<93280>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1471<93278>varname));
      t_param_std_1299 = (*((_tt107677*)FLX_VNP(aux_mv_1471))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 548, cols 12 to 15
      //aux_mv_1476<93293> := (_lam_66228<66315>stackfun h_param_std_1300<93279>varname);
      aux_mv_1476  = _lam_66228(ptrtoolchain_msvc_win32)
      .apply(h_param_std_1300) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
      if(!(aux_mv_1476%2==1) ) goto _ml1478_L93292;
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //out<93275> := (Snoc<80397>struct (out<93275>varname, h_param_std_1300<93279>varname));
      _vI93275_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93275_out, h_param_std_1300))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //inp<93274> := t_param_std_1299<93280>varname;
      inp  = t_param_std_1299; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      goto start_93268_L93294;
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
    _ml1478_L93292:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //inp<93274> := t_param_std_1299<93280>varname;
      inp  = t_param_std_1299; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      goto start_93268_L93294;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
    _ml1474_L93276:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 550, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 550, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",550,7,550,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",550,7,550,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",552,5,552,6); // HACK! 
}

//------------------------------
//FUNCTION <97210>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97210__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <105988>: flx_processing::check_output_if_required: Apply method
int check_output_if_required::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2879, cols 5 to 19
      //result<105989>varname = 0;
      _vI105989_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2880, cols 5 to 34
      //expected<105990>varname = apply((prj21:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname);
      expected = ptrflx_processing->_vI106023_control.EXPECT; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2881, cols 5 to 32
      //output<105991>varname = apply((prj69:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname);
      _vI105991_output = ptrflx_processing->_vI106023_control.STDOUT; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2901, cols 5 to 9
      if(!((_vI105991_output == ::std::string(""))) ) goto _ifdoend_bootflx_65980_L105995;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("[flx] No output file given??", "\x0A")));
      {
      _a14239t_107672 _tmp108262 = ::std::string("[flx] No output file given??") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108262)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2887, cols 7 to 16
      //result<105989>varname = 1;
      _vI105989_result = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2901, cols 5 to 9
      goto _ifdoelse_bootflx_65981_L106000;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2901, cols 5 to 9
    _ifdoend_bootflx_65980_L105995:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2900, cols 5 to 11
      if(!((expected == ::std::string(""))) ) goto _ifdoend_bootflx_65982_L105996;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("[flx] No expect file given??", "\x0A")));
      {
      _a14239t_107672 _tmp108263 = ::std::string("[flx] No expect file given??") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108263)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2890, cols 7 to 16
      //result<105989>varname = 1;
      _vI105989_result = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2900, cols 5 to 11
      goto _ifdoelse_bootflx_65981_L106000;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2900, cols 5 to 11
    _ifdoend_bootflx_65982_L105996:;
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_634_L106660;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load_text] ", output<105991>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108264 = (::std::string("[load_text] ") + _vI105991_output ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108264)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
    _ifdoelse_std_634_L106660:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2894, cols 7 to 43
      //output_text<105992>varname = (raw_load_text<8398>primfun output<105991>varname);
      output_text = ::flx::rtl::ioutil::load_text_file(_vI105991_output); //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_634_L106662;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load_text] ", expected<105990>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108265 = (::std::string("[load_text] ") + expected ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108265)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
    _ifdoelse_std_634_L106662:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2895, cols 7 to 47
      //expected_text<105993>varname = (raw_load_text<8398>primfun expected<105990>varname);
      expected_text = ::flx::rtl::ioutil::load_text_file(expected); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2896, cols 7 to 49
      //bresult<105994>varname = (==<80464>primfun[string] (output_text<105992>varname, expected_text<105993>varname));
      bresult = (output_text == expected_text); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2900, cols 7 to 11
      if(bresult) goto _ifdoelse_bootflx_65981_L106000;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Output ", output<105991>varname)), " doesn't match expected ")), expected<105990>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108266 = (((::std::string("[flx] Output ") + _vI105991_output ) + ::std::string(" doesn't match expected ") ) + expected ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108266)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2899, cols 9 to 18
      //result<105989>varname = 1;
      _vI105989_result = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2901, cols 5 to 9
    _ifdoelse_bootflx_65981_L106000:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2902, cols 5 to 18
      //return result<105989>varname;: type int
      return _vI105989_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2903,3,2903,4); // HACK! 
}

//------------------------------
//FUNCTION <66624>: toolchain_gcc_osx::get_base_cxx_compile_flags: Apply method
void* _fI66624_get_base_cxx_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 980, cols 3 to 69
      //return base_cxx_compile_flags<66597>varname;: type void*
      return ptrtoolchain_gcc_osx->_vI66597_base_cxx_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",980,3,980,69); // HACK! 
}

//------------------------------
//FUNCTION <107305>: flx_processing::cxx_compile_static::_lam_66077: Apply method
 ::flx::rtl::cl_t _fI107305__lam_66077::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2325,5,2325,9); // HACK! 
}

//------------------------------
//FUNCTION <105695>: flx_processing::aux_uncurry::_lam_1339: Apply method
 ::flx::rtl::cl_t _fI105695__lam_1339::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,11,202,19); // HACK! 
}

//------------------------------

//PROCEDURE <68658:> flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288: Call method
::flx::rtl::con_t * _lam_65288::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI68681_line = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <68658:> flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288: Resume method
::flx::rtl::con_t *_lam_65288::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 322, cols 14 to 60
      //_ds2_65289<68660>varname = (get_variable<68620>stackfun line<68681>varname);
      _ds2_65289 = get_variable(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_vI68681_line) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 322, cols 18 to 29
      //variable<68661>varname = apply((prj0:string^2 -> string), _ds2_65289<68660>varname);
      variable = (_ds2_65289.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 322, cols 32 to 39
      //vval<68662>varname = apply((prj1:string^2 -> string), _ds2_65289<68660>varname);
      vval = (_ds2_65289.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 349, cols 14 to 18
      if(!(!((variable == ::std::string(""))) ) ) goto _ifdoend_bootflx_65194_L68682;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 324, cols 16 to 59
      //bdy<68663>varname = (search_and_replace_uncurry<89526>stackfun (variables<68648>varname, vval<68662>varname));
      bdy = search_and_replace_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107877(ptrhandle_pkg->variables, vval)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 325, cols 16 to 69
      //variables<68648>varname = (Snoc<81403>struct (variables<68648>varname, ((+<14305>primfun ((+<14305>primfun ("${", variable<68661>varname)), "}")), bdy<68663>varname)));
      ptrhandle_pkg->variables = FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(ptrhandle_pkg->variables, _at107674((::std::string("${") + variable ) + ::std::string("}") , bdy)))); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 350, cols 18 to 13
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 349, cols 14 to 18
    _ifdoend_bootflx_65194_L68682:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 327, cols 16 to 55
      //_ds2_65290<68664>varname = (get_field<68612>stackfun line<68681>varname);
      _ds2_65290 = get_field(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_vI68681_line) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 327, cols 20 to 26
      //key<68665>varname = apply((prj0:string^2 -> string), _ds2_65290<68664>varname);
      _vI68665_key = (_ds2_65290.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 327, cols 29 to 37
      //value<68666>varname = apply((prj1:string^2 -> string), _ds2_65290<68664>varname);
      value = (_ds2_65290.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 328, cols 16 to 44
      if(!ptrflx_pkgconfig->listkeys ) goto _ifdoelse_bootflx_65197_L68684;
    // # C:/projects/felix/src/packages/lists.fdoc: line 514, cols 3 to 4
      //insert_unique'3_mv_1487<96768> := (mem_uncurry<89504>stackfun (_lam_1457<96769>closure, result<68598>varname));
      _vI96768_insert_unique__apos_3_mv_1487  = mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107790((FLX_NEWP(_fI96769__lam_1457)(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->_vI68598_result)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      if(!(_vI96768_insert_unique__apos_3_mv_1487%2==1) ) goto _ml1489_L96767;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      //_urv96373<96766> := result<68598>varname;
      _vI96766__urv96373  = ptrflx_pkgconfig->_vI68598_result; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      goto _end_hash_271343011;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
    _ml1489_L96767:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //_urv96373<96766> := (aux_uncurry<96781>stackfun ((Snoc<80397>struct ((aux_uncurry<96771>stackfun (result<68598>varname, Empty<80385>varname)), key<68665>varname)), Empty<80385>varname));
      _vI96766__urv96373  = _fI96781_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI96771_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at107697(ptrflx_pkgconfig->_vI68598_result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, _vI68665_key))), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 566, cols 3 to 4
    _end_hash_271343011:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 273, cols 6 to 42
      //result<68598>varname = _urv96373<96766>varname;
      ptrflx_pkgconfig->_vI68598_result = _vI96766__urv96373; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 328, cols 16 to 44
    _ifdoelse_bootflx_65197_L68684:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 329, cols 16 to 42
      //values<68667>varname = (lexstr<68463>stackfun value<68666>varname);
      _vI68667_values = lexstr(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(value) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<96991>varname = (aux_uncurry<96992>stackfun (values<68667>varname, Empty<80385>varname));
      _vI96991_r = _fI96992_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at107697(_vI68667_values, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<96991>ref;
      {
      void** _tmp108267 = (void**)&_vI96991_r;
      _rev(((_tmp108267)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 330, cols 16 to 65
      //values<68667>varname = r<96991>varname;
      _vI68667_values = _vI96991_r; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
      if(!mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107790((FLX_NEWP(_fI97009__lam_1457)(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->fields)) /* apply_stack */ ) goto _ifdoelse_bootflx_65199_L68686;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 332, cols 24 to 27
      //_lam_65288_mv_65292<97014> := keep<68499>varname;
      _lam_65288_mv_65292  = ptrflx_pkgconfig->keep; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 333, cols 20 to 32
/*match case 1:|keepleftmost*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 333, cols 20 to 32
      if(!(_lam_65288_mv_65292%3==1) ) goto _ml65294_L97018;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<89522>directproc (add_val<68634>closure, values<68667>varname);
      {
      _pt107730* _tmp108268 = (FLX_NEWP(add_val)(FLX_FPAR_PASS ptrflx_pkgconfig));
      FLX_SET_PC(108269)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt107731((_tmp108268), _vI68667_values));
      }
    FLX_CASE_LABEL(108269)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
      goto _ifdoelse_bootflx_65199_L68686;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 333, cols 20 to 32
    _ml65294_L97018:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 334, cols 20 to 33
/*match case 2:|keeprightmost*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 334, cols 20 to 33
      if(!(_lam_65288_mv_65292%3==2) ) goto _ml65296_L97019;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<89522>directproc (tail_val<68638>closure, values<68667>varname);
      {
      _pt107730* _tmp108270 = (FLX_NEWP(tail_val)(FLX_FPAR_PASS ptrflx_pkgconfig));
      FLX_SET_PC(108271)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt107731((_tmp108270), _vI68667_values));
      }
    FLX_CASE_LABEL(108271)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
      goto _ifdoelse_bootflx_65199_L68686;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 334, cols 20 to 33
    _ml65296_L97019:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 20 to 27
/*match case 3:|keepall*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 20 to 27
      if(!(_lam_65288_mv_65292%3==0) ) goto _ml65298_L97020;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<89522>directproc (keep_val<68642>closure, values<68667>varname);
      {
      _pt107730* _tmp108272 = (FLX_NEWP(keep_val)(FLX_FPAR_PASS ptrflx_pkgconfig));
      FLX_SET_PC(108273)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt107731((_tmp108272), _vI68667_values));
      }
    FLX_CASE_LABEL(108273)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
      goto _ifdoelse_bootflx_65199_L68686;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 20 to 27
    _ml65298_L97020:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 18 to 57
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 335, cols 18 to 57
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",335,18,335,57);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",335,18,335,57);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 337, cols 16 to 20
    _ifdoelse_bootflx_65199_L68686:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 346, cols 16 to 20
      if(!mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107790((FLX_NEWP(_fI97030__lam_1457)(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->recfields)) /* apply_stack */ ) goto _ifdoelse_bootflx_65195_L68689;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //jump to procedure direct tail call iter_uncurry<89522>directjump (_lam_65300<68677>closure, values<68667>varname);
      {
      _pt107730* _tmp108275 = (FLX_NEWP(_lam_65300)(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig));
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(tmp, _tt107731((_tmp108275), _vI68667_values));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 350, cols 18 to 13
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 349, cols 14 to 18
    _ifdoelse_bootflx_65195_L68689:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 350, cols 18 to 13
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <80548>: fmt: Apply method
_a14239t_107672 fmt::apply(_tt107893 const &_arg ){
  _vI80549_v = _arg.mem_0;
  _vI80550_m = _arg.mem_1;
    // # C:/projects/felix/src/packages/numbers.fdoc: line 216, cols 3 to 4
      //fmt_mv_224<96150> := m<80550>varname;
      fmt_mv_224  = _vI80550_m; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/numbers.fdoc: line 212, cols 7 to 19
/*match case 1:|default (w_param_std_211, p_param_std_212)*/
    // # C:/projects/felix/src/packages/numbers.fdoc: line 212, cols 7 to 19
      if(!andthen(FLX_VI(fmt_mv_224)==0, (FLX_NEWP(_lam_227)(FLX_FPAR_PASS this))) ) goto _ml226_L96149;
    // # C:/projects/felix/src/packages/numbers.fdoc: line 212, cols 18 to 18
      //p_param_std_212<96151>varname = apply((prj1:int^2 -> int), (arg of case 0 of fmt_mv_224<96150>varname));
      p_param_std_212 = ((*((_at107686*)FLX_VP(fmt_mv_224))).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/numbers.fdoc: line 212, cols 16 to 16
      //w_param_std_211<96152>varname = apply((prj0:int^2 -> int), (arg of case 0 of fmt_mv_224<96150>varname));
      w_param_std_211 = ((*((_at107686*)FLX_VP(fmt_mv_224))).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 5 to 47
      //return (fmt_default<80559>primfun[double] (v<80549>varname, w_param_std_211<96152>varname, p_param_std_212<96151>varname));: type _a14239t_107672
      return ::flx::rtl::strutil::fmt_default(_vI80549_v, w_param_std_211, p_param_std_212);
    // # C:/projects/felix/src/packages/numbers.fdoc: line 212, cols 7 to 19
    _ml226_L96149:;
    // # C:/projects/felix/src/packages/numbers.fdoc: line 213, cols 7 to 17
/*match case 2:|fixed (w_param_std_213, p_param_std_214)*/
    // # C:/projects/felix/src/packages/numbers.fdoc: line 213, cols 7 to 17
      if(!andthen(FLX_VI(fmt_mv_224)==1, (FLX_NEWP(_lam_229)(FLX_FPAR_PASS this))) ) goto _ml228_L96148;
    // # C:/projects/felix/src/packages/numbers.fdoc: line 213, cols 16 to 16
      //p_param_std_214<96153>varname = apply((prj1:int^2 -> int), (arg of case 1 of fmt_mv_224<96150>varname));
      p_param_std_214 = ((*((_at107686*)FLX_VP(fmt_mv_224))).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/numbers.fdoc: line 213, cols 14 to 14
      //w_param_std_213<96154>varname = apply((prj0:int^2 -> int), (arg of case 1 of fmt_mv_224<96150>varname));
      w_param_std_213 = ((*((_at107686*)FLX_VP(fmt_mv_224))).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 5 to 47
      //return (fmt_fixed<80563>primfun[double] (v<80549>varname, w_param_std_213<96154>varname, p_param_std_214<96153>varname));: type _a14239t_107672
      return ::flx::rtl::strutil::fmt_fixed(_vI80549_v, w_param_std_213, p_param_std_214);
    // # C:/projects/felix/src/packages/numbers.fdoc: line 213, cols 7 to 17
    _ml228_L96148:;
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 7 to 21
/*match case 3:|scientific (w_param_std_215, p_param_std_216)*/
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 7 to 21
      if(!andthen(FLX_VI(fmt_mv_224)==2, (FLX_NEWP(_lam_231)(FLX_FPAR_PASS this))) ) goto _ml230_L96147;
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 20 to 20
      //p_param_std_216<96155>varname = apply((prj1:int^2 -> int), (arg of case 2 of fmt_mv_224<96150>varname));
      p_param_std_216 = ((*((_at107686*)FLX_VP(fmt_mv_224))).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 18 to 18
      //w_param_std_215<96156>varname = apply((prj0:int^2 -> int), (arg of case 2 of fmt_mv_224<96150>varname));
      w_param_std_215 = ((*((_at107686*)FLX_VP(fmt_mv_224))).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 5 to 47
      //return (fmt_scientific<80567>primfun[double] (v<80549>varname, w_param_std_215<96156>varname, p_param_std_216<96155>varname));: type _a14239t_107672
      return ::flx::rtl::strutil::fmt_scientific(_vI80549_v, w_param_std_215, p_param_std_216);
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 7 to 21
    _ml230_L96147:;
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 5 to 47
/*match failure*/
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 5 to 47
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/numbers.fdoc",214,5,214,47);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/numbers.fdoc",214,5,214,47);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/numbers.fdoc",216,3,216,4); // HACK! 
}

//------------------------------
//FUNCTION <107253>: flx_processing::cxx_compile_dynamic::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI107253__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <105676>: flx_processing::rfi::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI105676__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <103658>: setup-from-file_uncurry::aux::_lam_2289: Apply method
 ::flx::rtl::cl_t _fI103658__lam_2289::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,9,478,14); // HACK! 
}

//------------------------------
//FUNCTION <66604>: toolchain_gcc_osx::cxx_compiler_vendor: Apply method
_a14239t_107672 _fI66604_cxx_compiler_vendor::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 969, cols 3 to 45
      //return "GNU";: type _a14239t_107672
      return ::std::string("GNU");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",969,3,969,45); // HACK! 
}

//------------------------------
//FUNCTION <99793>: subscript::_lam_2059: Apply method
 ::flx::rtl::cl_t _lam_2059::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 225, cols 7 to 25
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",225,7,225,25); // HACK! 
}

//------------------------------
//FUNCTION <97755>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97755__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <97802>: flx_pkgconfig::parse_args::aux_uncurry: Apply method
void* _fI97802_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97803_x_uncurry = _arg.data[0];
  _vI97804_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97811:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97807> := x_uncurry<97803>varname;
      _vI97807_aux__apos_2_mv_1387  = _vI97803_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97807_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97806;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97804>varname;: type void*
      return _vI97804_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97806:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97807_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97810__lam_1391)(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1390_L97805;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97808>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97807>varname));
      _vI97808_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97807_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97809>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97807>varname));
      _vI97809_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97807_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97804> := (Snoc<80397>struct (y<97804>varname, h_param_std_1269<97808>varname));
      _vI97804_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97804_y, _vI97808_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97803> := t_param_std_1268<97809>varname;
      _vI97803_x_uncurry  = _vI97809_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97811;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97805:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <105668>: flx_processing::rfi::iterator'2: Apply method
void* _fI105668_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L105669:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<105673> := xs<105667>varname;
      _vI105673_iterator__apos_2_mv_1563  = ptrrfi->_vI105667_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105673_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI105676__lam_1566)(FLX_FPAR_PASS this, ptrrfi, ptrflx_processing))) ) goto _ml1565_L105672;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<105674>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<105673>varname));
      _vI105674_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI105673_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<105675>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<105673>varname));
      _vI105675_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI105673_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<105667>varname = t_param_std_1318<105675>varname;
      ptrrfi->_vI105667_xs = _vI105675_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108279)
      //yield (Some<80915>struct h_param_std_1319<105674>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI105674_h_param_std_1319));//yield
    FLX_CASE_LABEL(108279)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L105669;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L105672:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI105673_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L105671;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L105671:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L105669;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------

//PROCEDURE <68513:> flx_pkgconfig::parse_args: Call method
void parse_args::stack_call(void* const &_arg){
  ::flx::rtl::con_t *cc = call(0,_arg);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * parse_args::call(::flx::rtl::con_t *_ptr_caller, void* const &_arg){
  _caller = _ptr_caller;
  _vI68580_args = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <68513:> flx_pkgconfig::parse_args: Resume method
::flx::rtl::con_t *parse_args::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      //parse_args_mv_65223<97555> := args<68580>varname;
      parse_args_mv_65223  = _vI68580_args; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 153, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 153, cols 9 to 14
      if(!(FLX_VNI(parse_args_mv_65223)==0) ) goto _ml65225_L97610;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 153, cols 9 to 14
    _ml65225_L97610:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 9 to 23
/*match case 2:|Cons (arg_param_bootflx_65126, tail_param_bootflx_65127)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 9 to 23
      if(!andthen(!!parse_args_mv_65223 , (FLX_NEWP(_lam_65234)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65227_L97611;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 19 to 22
      //tail_param_bootflx_65127<97557>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] parse_args_mv_65223<97555>varname));
      tail_param_bootflx_65127 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(parse_args_mv_65223))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 15 to 17
      //arg_param_bootflx_65126<97558>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] parse_args_mv_65223<97555>varname));
      arg_param_bootflx_65126 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(parse_args_mv_65223))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 219, cols 11 to 15
      if(!((::std::string("--hide") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,::std::string("--hide").size()))) ) goto _ifdoend_bootflx_65128_L97693;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 158, cols 34 to 44
      //hide<68483>varname = (case 1 of bool);
      ptrflx_pkgconfig->hide = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 219, cols 11 to 15
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 219, cols 11 to 15
    _ifdoend_bootflx_65128_L97693:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--backwards") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,::std::string("--backwards").size()))) ) goto _ifdoend_bootflx_65130_L97694;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 159, cols 41 to 56
      //backwards<68491>varname = (case 1 of bool);
      ptrflx_pkgconfig->backwards = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65130_L97694:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--list") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,::std::string("--list").size()))) ) goto _ifdoend_bootflx_65132_L97695;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 160, cols 36 to 48
      //dolist<68488>varname = (case 1 of bool);
      ptrflx_pkgconfig->dolist = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65132_L97695:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--missing") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,::std::string("--missing").size()))) ) goto _ifdoend_bootflx_65134_L97696;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 161, cols 39 to 52
      //missing<68485>varname = (case 1 of bool);
      ptrflx_pkgconfig->missing = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65134_L97696:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--noerror") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,::std::string("--noerror").size()))) ) goto _ifdoend_bootflx_65136_L97697;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 162, cols 39 to 64
      //require_pkg_exists<68484>varname = (case 0 of bool);
      ptrflx_pkgconfig->require_pkg_exists = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65136_L97697:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--keeprightmost") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,::std::string("--keeprightmost").size()))) ) goto _ifdoend_bootflx_65138_L97698;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 163, cols 45 to 64
      //keep<68499>varname = keeprightmost<68497>varname;
      ptrflx_pkgconfig->keep = /*VR_int*/2; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65138_L97698:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--keepleftmost") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,::std::string("--keepleftmost").size()))) ) goto _ifdoend_bootflx_65140_L97699;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 164, cols 44 to 62
      //keep<68499>varname = keepleftmost<68495>varname;
      ptrflx_pkgconfig->keep = /*VR_int*/1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65140_L97699:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--keepall") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,::std::string("--keepall").size()))) ) goto _ifdoend_bootflx_65142_L97700;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 165, cols 39 to 52
      //keep<68499>varname = keepall<68493>varname;
      ptrflx_pkgconfig->keep = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65142_L97700:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--field") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,7))) ) goto _ifdoend_bootflx_65144_L97701;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 168, cols 13 to 40
      //fields<68481>varname = (+<80787>stackfun (fields<68481>varname, (copyfrom<81959>primfun[int] (arg_param_bootflx_65126<97558>varname, 8))));
      ptrflx_pkgconfig->fields = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_pkgconfig->fields, ::flx::rtl::strutil::substr(arg_param_bootflx_65126,8,arg_param_bootflx_65126.size()))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65144_L97701:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--extension") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,11))) ) goto _ifdoend_bootflx_65146_L97702;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 171, cols 13 to 35
      //extension<68500>varname = (copyfrom<81959>primfun[int] (arg_param_bootflx_65126<97558>varname, 12));
      ptrflx_pkgconfig->extension = ::flx::rtl::strutil::substr(arg_param_bootflx_65126,12,arg_param_bootflx_65126.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65146_L97702:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,1)) && !((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,1,2)))  ) ) goto _ifdoend_bootflx_65148_L97711;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 174, cols 13 to 31
      //flags<97689>varname = (copyfrom<81959>primfun[int] (arg_param_bootflx_65126<97558>varname, 1));
      _vI97689_flags = ::flx::rtl::strutil::substr(arg_param_bootflx_65126,1,arg_param_bootflx_65126.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 177, cols 13 to 17
      if(!xfind(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_at107674(_vI97689_flags, ::std::string("r"))) /* apply_stack */ ) goto _ifdoelse_bootflx_65151_L97704;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 176, cols 15 to 66
      //recfields<68487>varname = (aux<97739>stackfun (recfields<68487>varname, Empty<80385>varname));
      ptrflx_pkgconfig->recfields = _fI97739_aux(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(ptrflx_pkgconfig->recfields, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 177, cols 13 to 17
    _ifdoelse_bootflx_65151_L97704:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 179, cols 13 to 52
      if(!xfind(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_at107674(_vI97689_flags, ::std::string("h"))) /* apply_stack */ ) goto _ifdoelse_bootflx_65153_L97706;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 179, cols 36 to 46
      //hide<68483>varname = (case 1 of bool);
      ptrflx_pkgconfig->hide = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 179, cols 13 to 52
    _ifdoelse_bootflx_65153_L97706:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 180, cols 13 to 57
      if(!xfind(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_at107674(_vI97689_flags, ::std::string("b"))) /* apply_stack */ ) goto _ifdoelse_bootflx_65155_L97708;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 180, cols 36 to 51
      //backwards<68491>varname = (case 1 of bool);
      ptrflx_pkgconfig->backwards = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 180, cols 13 to 57
    _ifdoelse_bootflx_65155_L97708:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 181, cols 13 to 54
      if(!xfind(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(_at107674(_vI97689_flags, ::std::string("l"))) /* apply_stack */ ) goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 181, cols 36 to 48
      //dolist<68488>varname = (case 1 of bool);
      ptrflx_pkgconfig->dolist = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65148_L97711:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--rec") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,5))) ) goto _ifdoend_bootflx_65158_L97712;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 184, cols 13 to 33
      //fld<97690>varname = (copyfrom<81959>primfun[int] (arg_param_bootflx_65126<97558>varname, 6));
      fld = ::flx::rtl::strutil::substr(arg_param_bootflx_65126,6,arg_param_bootflx_65126.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 22 to 30
      //_lam_65228_mv_65230<97762> := (==<80464>primfun[string] (fld<97690>varname, ""));
      _lam_65228_mv_65230  = (fld == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
      if(!(_lam_65228_mv_65230%2==1) ) goto _ml65232_L97763;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
      //_urv97384<97761> := "Requires";
      _urv97384  = ::std::string("Requires"); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
      goto _end_hash_1038127120;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
    _ml65232_L97763:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
      //_urv97384<97761> := fld<97690>varname;
      _urv97384  = fld; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 19 to 55
    _end_hash_1038127120:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 185, cols 13 to 61
      //fld<97690>varname = _urv97384<97761>varname;
      fld = _urv97384; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 186, cols 13 to 57
      //recfields<68487>varname = (aux<97765>stackfun (recfields<68487>varname, Empty<80385>varname));
      ptrflx_pkgconfig->recfields = _fI97765_aux(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(ptrflx_pkgconfig->recfields, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65158_L97712:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--path+") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,7))) ) goto _ifdoend_bootflx_65160_L97715;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 190, cols 13 to 31
      //x<97691>varname = (copyfrom<81959>primfun[int] (arg_param_bootflx_65126<97558>varname, 8));
      _vI97691_x = ::flx::rtl::strutil::substr(arg_param_bootflx_65126,8,arg_param_bootflx_65126.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 195, cols 13 to 17
      if(!(!((ptrflx_pkgconfig->_vI68480_path == ::std::string(""))) ) ) goto _ifdoend_bootflx_65162_L97713;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 192, cols 15 to 34
      //path<68480>varname = (+<14305>primfun ((+<14305>primfun (path<68480>varname, ":")), x<97691>varname));
      ptrflx_pkgconfig->_vI68480_path = (ptrflx_pkgconfig->_vI68480_path + ::std::string(":") ) + _vI97691_x ; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 195, cols 13 to 17
    _ifdoend_bootflx_65162_L97713:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 194, cols 15 to 21
      //path<68480>varname = x<97691>varname;
      ptrflx_pkgconfig->_vI68480_path = _vI97691_x; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65160_L97715:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--path") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,6))) ) goto _ifdoend_bootflx_65164_L97716;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 199, cols 13 to 28
      //path<68480>varname = (copyfrom<81959>primfun[int] (arg_param_bootflx_65126<97558>varname, 7));
      ptrflx_pkgconfig->_vI68480_path = ::flx::rtl::strutil::substr(arg_param_bootflx_65126,7,arg_param_bootflx_65126.size()); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65164_L97716:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("--help") == arg_param_bootflx_65126)) ) goto _ifdoend_bootflx_65166_L97717;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 51, cols 5 to 6
      //run procedure stackcall print_help<68437>stackproc  ();
      {
      print_help(ptrflx_pkgconfig)
      .stack_call();
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 204, cols 13 to 28
      // primcall exit<7637>primproc 0;
      ::std::exit(0);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65166_L97717:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("@") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,1))) ) goto _ifdoend_bootflx_65168_L97718;
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L97788;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<81959>primfun[int] (arg_param_bootflx_65126<97558>varname, 1)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")))), "\x0A")));
      {
      _a14239t_107672 _tmp108283 = (::std::string("[load] ") + lstrip(rstrip(::flx::rtl::strutil::substr(arg_param_bootflx_65126,1,arg_param_bootflx_65126.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108283)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L97788:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 207, cols 13 to 46
      //data<97692>varname = (raw_load<8396>primfun (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<81959>primfun[int] (arg_param_bootflx_65126<97558>varname, 1)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B")));
      _vI97692_data = ::flx::rtl::ioutil::load_file((lstrip(rstrip(::flx::rtl::strutil::substr(arg_param_bootflx_65126,1,arg_param_bootflx_65126.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")))); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      //run procedure stackcall parse_args<68513>stackproc  (aux_uncurry<97802>stackfun ((aux<97789>stackfun (data<97692>varname, Empty<80385>varname)), Empty<80385>varname));
      {
      void* _tmp108284 = _fI97802_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(_fI97789_aux(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_tt107698(_vI97692_data, (void* /*VR_nullptr*/ )0)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
      parse_args(FLX_FPAR_PASS ptrflx_pkgconfig)
      .stack_call((_tmp108284));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65168_L97718:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_bootflx_65126,0,1))) ) goto _ifdoend_bootflx_65170_L97719;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65170_L97719:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      if(!((::std::string("") == arg_param_bootflx_65126)) ) goto _ifdoend_bootflx_65172_L97720;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
      goto _ifdoelse_bootflx_65129_L97738;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 11 to 31
    _ifdoend_bootflx_65172_L97720:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 218, cols 13 to 29
      //pkgs<68482>varname = (+<80787>stackfun (pkgs<68482>varname, arg_param_bootflx_65126<97558>varname));
      ptrflx_pkgconfig->pkgs = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_pkgconfig->pkgs, arg_param_bootflx_65126)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 219, cols 11 to 15
    _ifdoelse_bootflx_65129_L97738:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      //run procedure stackcall parse_args<68513>stackproc  tail_param_bootflx_65127<97557>varname;
      {
      parse_args(FLX_FPAR_PASS ptrflx_pkgconfig)
      .stack_call(tail_param_bootflx_65127);
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 9 to 23
    _ml65227_L97611:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 221, cols 7 to 10
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 221, cols 7 to 10
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",221,7,221,10);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",221,7,221,10);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <97997>: map_package_requirements_uncurry::_lam_65103::_lam_65103'2::aux_uncurry: Apply method
void* _fI97997_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97998_x_uncurry = _arg.data[0];
  _vI97999_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L98006:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<98002> := x_uncurry<97998>varname;
      _vI98002_aux__apos_2_mv_1387  = _vI97998_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI98002_aux__apos_2_mv_1387)==0) ) goto _ml1389_L98001;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97999>varname;: type void*
      return _vI97999_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L98001:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI98002_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI98005__lam_1391)(FLX_FPAR_PASS this, ptr_fI90371__lam_65103__apos_2, ptr_lam_65103, ptrmap_package_requirements_uncurry))) ) goto _ml1390_L98000;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<98003>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<98002>varname));
      _vI98003_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI98002_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<98004>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<98002>varname));
      _vI98004_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI98002_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97999> := (Snoc<80397>struct (y<97999>varname, h_param_std_1269<98003>varname));
      _vI97999_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97999_y, _vI98003_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97998> := t_param_std_1268<98004>varname;
      _vI97998_x_uncurry  = _vI98004_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L98006;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L98000:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <106814>: flx_processing::run_cxx_compiler_if_required: Apply method
int _fI106814_run_cxx_compiler_if_required::apply(_pt107743* const &_arg ){
  _vI106816_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2394, cols 5 to 19
      //result<106815>varname = 0;
      _vI106815_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2401, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.STATIC == 0)) ) goto _ifdoend_bootflx_65914_L106817;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_99475_L107308;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Dynamic linkage")), "\x0A")));
      {
      _a14239t_107672 _tmp108289 = (::std::string("[flx] ") + ::std::string("Dynamic linkage") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108289)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2396, cols 7 to 32
    _end_99475_L107308:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2397, cols 7 to 43
      //_genout_urv99476<107309> := (cxx_compile_dynamic<106776>stackfun ehandler<106816>varname);
      _vI107309__genout_urv99476  = _fI106776_cxx_compile_dynamic(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106816_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2397, cols 7 to 43
      //result<106815>varname = _genout_urv99476<107309>varname;
      _vI106815_result = _vI107309__genout_urv99476; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2401, cols 5 to 9
      goto _ifdoelse_bootflx_65915_L106818;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2401, cols 5 to 9
    _ifdoend_bootflx_65914_L106817:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_99480_L107312;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Static linkage")), "\x0A")));
      {
      _a14239t_107672 _tmp108290 = (::std::string("[flx] ") + ::std::string("Static linkage") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108290)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2399, cols 7 to 31
    _end_99480_L107312:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2400, cols 7 to 42
      //_genout_urv99481<107313> := (cxx_compile_static<106797>stackfun ehandler<106816>varname);
      _vI107313__genout_urv99481  = _fI106797_cxx_compile_static(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106816_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2400, cols 7 to 42
      //result<106815>varname = _genout_urv99481<107313>varname;
      _vI106815_result = _vI107313__genout_urv99481; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2401, cols 5 to 9
    _ifdoelse_bootflx_65915_L106818:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2402, cols 5 to 18
      //return result<106815>varname;: type int
      return _vI106815_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2403,3,2403,4); // HACK! 
}

//------------------------------

//PROCEDURE <68085:> processing_stage1: Call method
::flx::rtl::con_t * processing_stage1::call(::flx::rtl::con_t *_ptr_caller, _tt107732 const &_arg){
  _caller = _ptr_caller;
  _vI68138_config = _arg.mem_0;
  _vI68139_control = _arg.mem_1;
  xloopctl = _arg.mem_2;
  _vI68141_vargs = _arg.mem_3;
  INIT_PC
  return this;
}

//PROCEDURE <68085:> processing_stage1: Resume method
::flx::rtl::con_t *processing_stage1::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx.fdoc: line 1483, cols 3 to 7
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_DEBUG_FLX")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65595_L68143;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1479, cols 5 to 29
      //(deref<87162>primfun[bool] apply((prj14:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &bool), control<68139>varname)) = (case 1 of bool);
      *(&_vI68139_control->DEBUG_FLX)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1480, cols 5 to 21
      //(deref<87163>primfun[int] apply((prj20:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<68139>varname)) = 1;
      *(&_vI68139_control->ECHO)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_102817_L102817;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "debug flx tool ON")), "\x0A")));
      {
      _a14239t_107672 _tmp108291 = (::std::string("[flx] ") + ::std::string("debug flx tool ON") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108291)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1481, cols 5 to 32
    _end_102817_L102817:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1482, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj12:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<68139>varname)) = 1;
      *(&_vI68139_control->DEBUG)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1483, cols 3 to 7
    _ifdoelse_bootflx_65595_L68143:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1461, cols 9 to 2
      //call procedure directcall xparse_cmd_line<68045>directproc (config<68138>varname, control<68139>varname, xloopctl<68140>varname, vargs<68141>varname);
      FLX_SET_PC(108292)
      return (FLX_NEWP(xparse_cmd_line)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt107732(_vI68138_config, _vI68139_control, xloopctl, _vI68141_vargs));
    FLX_CASE_LABEL(108292)
    // # C:/projects/felix/src/packages/flx.fdoc: line 1489, cols 3 to 7
      if(!(((*_vI68139_control).PRINT_HELP == 1)) ) goto _ifdoelse_bootflx_65597_L68145;
    // # C:/projects/felix/src/packages/flx.fdoc: line 897, cols 9 to 2
  _pI67770_print_help();
    // # C:/projects/felix/src/packages/flx.fdoc: line 1488, cols 5 to 20
      // primcall exit<7637>primproc 0;
      ::std::exit(0);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1489, cols 3 to 7
    _ifdoelse_bootflx_65597_L68145:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1496, cols 3 to 7
      if(!(((*_vI68139_control).LINKIT == 0) && ((*_vI68139_control).STATICLIB == 1) ) ) goto _ifdoelse_bootflx_65599_L68147;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("Conflicting switches --nolink and --staticlib", "\x0A")));
      {
      _a14239t_107672 _tmp108293 = ::std::string("Conflicting switches --nolink and --staticlib") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108293)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1495, cols 5 to 19
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1496, cols 3 to 7
    _ifdoelse_bootflx_65599_L68147:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104619_L104619;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (str<87413>stackfun (apply((prj4:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> int), *(xloopctl<68140>varname)), apply((prj0:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> int), *(xloopctl<68140>varname)), argc<7608>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108294 = (::std::string("[flx] ") + _fI87413_str(_at107684((*xloopctl).grab, (*xloopctl).argno, PTF argc)) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108294)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1498, cols 3 to 57
    _end_104619_L104619:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104623_L104623;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "#--------")), "\x0A")));
      {
      _a14239t_107672 _tmp108295 = (::std::string("[flx] ") + ::std::string("#--------") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108295)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1501, cols 3 to 22
    _end_104623_L104623:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104627_L104627;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("DONE, option index = ", (str<80203>primfun[int] apply((prj0:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> int), *(xloopctl<68140>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp108296 = (::std::string("[flx] ") + (::std::string("DONE, option index = ") + ::flx::rtl::strutil::str<int>((*xloopctl).argno) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108296)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1502, cols 3 to 56
    _end_104627_L104627:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104631_L104631;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("path=", apply((prj5:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(xloopctl<68140>varname)))), ": dir=")), apply((prj2:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(xloopctl<68140>varname)))), ",base=")), apply((prj1:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(xloopctl<68140>varname)))), ", ext=")), apply((prj3:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(xloopctl<68140>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108297 = (::std::string("[flx] ") + (((((((::std::string("path=") + (*xloopctl).path ) + ::std::string(": dir=") ) + (*xloopctl).dir ) + ::std::string(",base=") ) + (*xloopctl).base ) + ::std::string(", ext=") ) + (*xloopctl).ext ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108297)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1503, cols 3 to 104
    _end_104631_L104631:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104635_L104635;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("cpps=", (str<81092>stackfun apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp108298 = (::std::string("[flx] ") + (::std::string("cpps=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68139_control).cpps) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108298)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1504, cols 3 to 37
    _end_104635_L104635:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104639_L104639;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("cppos=", (str<81092>stackfun apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp108299 = (::std::string("[flx] ") + (::std::string("cppos=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68139_control).cppos) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108299)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1505, cols 3 to 39
    _end_104639_L104639:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto continue__ll_flx_1634_L68148;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("ocamls=", (str<81092>stackfun apply((prj79:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp108300 = (::std::string("[flx] ") + (::std::string("ocamls=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68139_control).ocamls) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108300)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1514, cols 3 to 7
    continue__ll_flx_1634_L68148:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1514, cols 3 to 7
      if(FLX_UNLIKELY(!(((*xloopctl).argno < (static_cast<int>((PTF gcp->collector->get_used(_vI68141_vargs)))/*int.flx: ctor*/))) )) goto break__ll_flx_1634_L68149;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(((*xloopctl).argno))/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(_vI68141_vargs))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj73:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68139>varname))) = (+<80787>stackfun ((deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj73:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68139>varname))), (unsafe_get<83437>primfun[string] (vargs<68141>varname, (_ctor_size<83435>primfun[size] (_ctor_size<80270>primfun[int] apply((prj0:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> int), *(xloopctl<68140>varname))))))));
      *(&(*(&_vI68139_control->USER_ARGS) ))  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*(&(*(&_vI68139_control->USER_ARGS) )) , _vI68141_vargs[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(((*xloopctl).argno))/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)])) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1513, cols 5 to 21
      // primcall pre_incr<81467>primproc[int] &(deref<87163>primfun[int] apply((prj0:&record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> &int), xloopctl<68140>varname));
      {
      int* _tmp108301 = &(*(&xloopctl->argno) );
      ++*((_tmp108301));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1514, cols 3 to 7
      goto continue__ll_flx_1634_L68148;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1514, cols 3 to 7
    break__ll_flx_1634_L68149:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104657_L104657;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("USER_ARGS=", (str<81092>stackfun apply((prj73:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp108302 = (::std::string("[flx] ") + (::std::string("USER_ARGS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68139_control).USER_ARGS) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108302)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1515, cols 3 to 49
    _end_104657_L104657:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 459, cols 7 to 17
      //s<104659>varname = "";
      _vI104659_s = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 460, cols 7 to 23
      // primcall reserve<87393>primproc[int] (&s<104659>ref, 1000);
      {
      _a14239t_107672* _tmp108303 = (_a14239t_107672*)&_vI104659_s;
      ((_tmp108303))->reserve(1000);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 461, cols 7 to 49
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("(FLX_SHARE_DIR=", apply((prj7:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108304 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108305 = (::std::string("(FLX_SHARE_DIR=") + (*_vI68138_config ).FLX_SHARE_DIR ) + ::std::string(",\n") ;
      ((_tmp108304))->append((_tmp108305));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 462, cols 7 to 51
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("FLX_TARGET_DIR=", apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108306 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108307 = (::std::string("FLX_TARGET_DIR=") + (*_vI68138_config ).FLX_TARGET_DIR ) + ::std::string(",\n") ;
      ((_tmp108306))->append((_tmp108307));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 463, cols 7 to 46
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("FLX_HOME_DIR=", apply((prj2:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108308 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108309 = (::std::string("FLX_HOME_DIR=") + (*_vI68138_config ).FLX_HOME_DIR ) + ::std::string(",\n") ;
      ((_tmp108308))->append((_tmp108309));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 464, cols 7 to 52
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("FLX_PROFILE_DIR=", apply((prj5:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108310 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108311 = (::std::string("FLX_PROFILE_DIR=") + (*_vI68138_config ).FLX_PROFILE_DIR ) + ::std::string(",\n") ;
      ((_tmp108310))->append((_tmp108311));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 465, cols 7 to 48
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("FLX_CACHE_DIR=", apply((prj0:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108312 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108313 = (::std::string("FLX_CACHE_DIR=") + (*_vI68138_config ).FLX_CACHE_DIR ) + ::std::string(",\n") ;
      ((_tmp108312))->append((_tmp108313));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 466, cols 7 to 50
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("FLX_OUTPUT_DIR=", apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108314 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108315 = (::std::string("FLX_OUTPUT_DIR=") + (*_vI68138_config ).FLX_OUTPUT_DIR ) + ::std::string(",\n") ;
      ((_tmp108314))->append((_tmp108315));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 467, cols 7 to 50
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("FLX_LIB_DIRS=", (str<81092>stackfun apply((prj3:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname))))), ",\x0A")));
      {
      _a14239t_107672* _tmp108316 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108317 = (::std::string("FLX_LIB_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68138_config ).FLX_LIB_DIRS) /* apply_stack */ ) + ::std::string(",\n") ;
      ((_tmp108316))->append((_tmp108317));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 468, cols 7 to 56
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("FLX_CONFIG_DIRS=", (str<81092>stackfun apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname))))), ",\x0A")));
      {
      _a14239t_107672* _tmp108318 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108319 = (::std::string("FLX_CONFIG_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68138_config ).FLX_CONFIG_DIRS) /* apply_stack */ ) + ::std::string(",\n") ;
      ((_tmp108318))->append((_tmp108319));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 469, cols 7 to 50
      // primcall +=<14301>primproc (&s<104659>ref, (+<14305>primfun ((+<14305>primfun ("FLX_RTL_DIRS=", (str<81092>stackfun apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68138>varname))))), ")\x0A")));
      {
      _a14239t_107672* _tmp108320 = (_a14239t_107672*)&_vI104659_s;
      _a14239t_107672 _tmp108321 = (::std::string("FLX_RTL_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68138_config ).FLX_RTL_DIRS) /* apply_stack */ ) + ::std::string(")\n") ;
      ((_tmp108320))->append((_tmp108321));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104666_L104666;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("config=", s<104659>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108322 = (::std::string("[flx] ") + (::std::string("config=") + _vI104659_s ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108322)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1517, cols 3 to 37
    _end_104666_L104666:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1525, cols 3 to 7
      if(!(((*_vI68139_control).NOOPTIMISE == 0)) ) goto _ifdoend_bootflx_65600_L68150;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104670_L104670;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set C++ compiler optimisation switches")), "\x0A")));
      {
      _a14239t_107672 _tmp108323 = (::std::string("[flx] ") + ::std::string("Set C++ compiler optimisation switches") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108323)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1521, cols 5 to 53
    _end_104670_L104670:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1522, cols 5 to 58
      //(deref<80855>primfun[list] apply((prj2:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68139>varname)) = (join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname)), apply((prj51:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname))));
      *(&_vI68139_control->CCFLAGS)  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697((*_vI68139_control).CCFLAGS, (*_vI68139_control).OPTIMISE)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1525, cols 3 to 7
      goto _ifdoelse_bootflx_65601_L68151;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1525, cols 3 to 7
    _ifdoend_bootflx_65600_L68150:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65601_L68151;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "What, no optimisation?")), "\x0A")));
      {
      _a14239t_107672 _tmp108324 = (::std::string("[flx] ") + ::std::string("What, no optimisation?") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108324)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1525, cols 3 to 7
    _ifdoelse_bootflx_65601_L68151:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1528, cols 3 to 62
      //(deref<80855>primfun[list] apply((prj2:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68139>varname)) = (join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname)), apply((prj22:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname))));
      *(&_vI68139_control->CCFLAGS)  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697((*_vI68139_control).CCFLAGS, (*_vI68139_control).EXTRA_CCFLAGS)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104690_L104690;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("CCFLAGS =", (str<81092>stackfun apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp108325 = (::std::string("[flx] ") + (::std::string("CCFLAGS =") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68139_control).CCFLAGS) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108325)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1529, cols 3 to 46
    _end_104690_L104690:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1536, cols 3 to 21
      //dflt_flxg<68101>varname = "";
      dflt_flxg = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1537, cols 3 to 35
      //dflt_flx_run<68102>varname = Empty<80385>varname;
      dflt_flx_run = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1539, cols 5 to 73
      //dflt_flxg<68101>varname = (join<82705>stackfun ((join<82705>stackfun (apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68138>varname)), "bin")), "flxg.exe"));
      dflt_flxg = _fI82705_join(_fI82705_join((*_vI68138_config).FLX_TARGET_DIR, ::std::string("bin")), ::std::string("flxg.exe")); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<104705>varname = Empty<80385>varname;
      _vI104705_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L104701;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<104706>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI104706_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<104706>ref;
      {
      int* _tmp108326 = (int*)&_vI104706_i;
      ++*((_tmp108326));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L104704:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI104706_i)) )) goto _ifdoelse_std_1250_L104701;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<104706>ref;
      {
      int* _tmp108327 = (int*)&_vI104706_i;
      --*((_tmp108327));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<104705>varname = (Snoc<80397>struct (o<104705>varname, apply(aprj(i<104706>varname : bool), ("set", (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("PATH=", (mk_absolute_filename<17011>stackfun apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68138>varname))))), "\lib\rtl;")), "%PATH%&&"))))));
      _vI104705_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI104705_o, (_at107674(::std::string("set"), ((::std::string("PATH=") + mk_absolute_filename((*_vI68138_config).FLX_TARGET_DIR) ) + ::std::string("\\lib\\rtl;") ) + ::std::string("%PATH%&&") ).data)[reinterpret< ::flx::rtl::cl_t>(_vI104706_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L104704;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L104701:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1540, cols 5 to 121
      //dflt_flx_run<68102>varname = o<104705>varname;
      dflt_flx_run = _vI104705_o; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1558, cols 11 to 23
      //processing_stage1_mv_65662<104710> := apply((prj27:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname));
      processing_stage1_mv_65662  = (*_vI68139_control).FLXG; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1559, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1559, cols 7 to 8
      if(!((::std::string("") == processing_stage1_mv_65662)) ) goto _ml65664_L104712;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1560, cols 5 to 13
      //_urv104709<104709> := dflt_flxg<68101>varname;
      _urv104709  = dflt_flxg; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1560, cols 5 to 13
      goto _end_hash_996049183;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1559, cols 7 to 8
    _ml65664_L104712:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1560, cols 7 to 7
/*match case 2:x_param_bootflx_65602*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1560, cols 7 to 7
      //x_param_bootflx_65602<104711>varname = processing_stage1_mv_65662<104710>varname;
      x_param_bootflx_65602 = processing_stage1_mv_65662; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1560, cols 5 to 13
      //_urv104709<104709> := x_param_bootflx_65602<104711>varname;
      _urv104709  = x_param_bootflx_65602; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1560, cols 5 to 13
    _end_hash_996049183:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1561, cols 3 to 13
      //(deref<85463>primfun[string] apply((prj27:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68139>varname)) = _urv104709<104709>varname;
      *(&_vI68139_control->FLXG)  = _urv104709; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104718_L104718;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("FLXG = ", apply((prj27:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108328 = (::std::string("[flx] ") + (::std::string("FLXG = ") + (*_vI68139_control).FLXG ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108328)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1563, cols 3 to 37
    _end_104718_L104718:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1565, cols 11 to 25
      //processing_stage1_mv_65667<104720> := apply((prj30:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname));
      processing_stage1_mv_65667  = (*_vI68139_control).FLXRUN; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1566, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1566, cols 7 to 12
      if(!(FLX_VNI(processing_stage1_mv_65667)==0) ) goto _ml65669_L104722;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1567, cols 5 to 13
      //_urv104719<104719> := dflt_flx_run<68102>varname;
      _urv104719  = dflt_flx_run; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1567, cols 5 to 13
      goto _end_hash_734971267;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1566, cols 7 to 12
    _ml65669_L104722:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1567, cols 7 to 7
/*match case 2:x_param_bootflx_65603*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1567, cols 7 to 7
      //x_param_bootflx_65603<104721>varname = processing_stage1_mv_65667<104720>varname;
      x_param_bootflx_65603 = processing_stage1_mv_65667; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1567, cols 5 to 13
      //_urv104719<104719> := x_param_bootflx_65603<104721>varname;
      _urv104719  = x_param_bootflx_65603; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1567, cols 5 to 13
    _end_hash_734971267:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1568, cols 3 to 13
      //(deref<80855>primfun[list] apply((prj30:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68139>varname)) = _urv104719<104719>varname;
      *(&_vI68139_control->FLXRUN)  = _urv104719; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104734_L104734;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (str<81092>stackfun (Snoc<80397>struct (apply((prj30:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68139>varname)), "FLXRUN = "))))), "\x0A")));
      {
      _a14239t_107672 _tmp108329 = (::std::string("[flx] ") + str(FLX_FPAR_PASS_ONLY)
      .apply(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((*_vI68139_control).FLXRUN, ::std::string("FLXRUN = "))))) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108329)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1570, cols 3 to 41
    _end_104734_L104734:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1576, cols 5 to 26
      //DLINK_STRING<104736>varname = "";
      DLINK_STRING = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1577, cols 5 to 26
      //SLINK_STRING<104737>varname = "";
      SLINK_STRING = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1579, cols 7 to 67
      //DLINK_STRING<104736>varname = (+<14305>primfun ((+<14305>primfun ("/LIBPATH:", apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68138>varname)))), "\lib\rtl"));
      DLINK_STRING = (::std::string("/LIBPATH:") + (*_vI68138_config).FLX_TARGET_DIR ) + ::std::string("\\lib\\rtl") ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1580, cols 7 to 67
      //SLINK_STRING<104737>varname = (+<14305>primfun ((+<14305>primfun ("/LIBPATH:", apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68138>varname)))), "\lib\rtl"));
      SLINK_STRING = (::std::string("/LIBPATH:") + (*_vI68138_config).FLX_TARGET_DIR ) + ::std::string("\\lib\\rtl") ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1656, cols 1 to 2
/*parallel assignment*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1656, cols 1 to 2
      //s<68115> := SLINK_STRING<104737>varname;
      _vI68115_s  = SLINK_STRING; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1656, cols 1 to 2
      //d<68114> := DLINK_STRING<104736>varname;
      _vI68114_d  = DLINK_STRING; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1595, cols 3 to 42
      //(deref<80855>primfun[list] apply((prj16:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68139>varname)) = (parse<16889>stackfun d<68114>varname);
      *(&_vI68139_control->DLINK_STRINGS)  = parse(FLX_FPAR_PASS_ONLY)
      .apply(_vI68114_d) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1596, cols 3 to 42
      //(deref<80855>primfun[list] apply((prj62:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68139>varname)) = (parse<16889>stackfun s<68115>varname);
      *(&_vI68139_control->SLINK_STRINGS)  = parse(FLX_FPAR_PASS_ONLY)
      .apply(_vI68115_s) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1602, cols 3 to 53
      //dflt_grammar_dir<68122>varname = (join<82705>stackfun (apply((prj7:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68138>varname)), "lib"));
      dflt_grammar_dir = _fI82705_join((*_vI68138_config).FLX_SHARE_DIR, ::std::string("lib")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1605, cols 11 to 30
      //processing_stage1_mv_65678<104850> := apply((prj36:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname));
      processing_stage1_mv_65678  = (*_vI68139_control).GRAMMAR_DIR; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1606, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1606, cols 7 to 8
      if(!((::std::string("") == processing_stage1_mv_65678)) ) goto _ml65680_L104852;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1607, cols 5 to 45
      //_urv104849<104849> := dflt_grammar_dir<68122>varname;
      _urv104849  = dflt_grammar_dir; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1607, cols 5 to 45
      goto _end_hash_940704751;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1606, cols 7 to 8
    _ml65680_L104852:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1607, cols 7 to 7
/*match case 2:x_param_bootflx_65604*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1607, cols 7 to 7
      //x_param_bootflx_65604<104851>varname = processing_stage1_mv_65678<104850>varname;
      x_param_bootflx_65604 = processing_stage1_mv_65678; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1607, cols 5 to 45
      //_urv104849<104849> := (mk_absolute_filename<17011>stackfun x_param_bootflx_65604<104851>varname);
      _urv104849  = mk_absolute_filename(x_param_bootflx_65604); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1607, cols 5 to 45
    _end_hash_940704751:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1608, cols 3 to 13
      //(deref<85463>primfun[string] apply((prj36:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68139>varname)) = _urv104849<104849>varname;
      *(&_vI68139_control->GRAMMAR_DIR)  = _urv104849; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104858_L104858;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("GRAMMAR_DIR = ", apply((prj36:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108330 = (::std::string("[flx] ") + (::std::string("GRAMMAR_DIR = ") + (*_vI68139_control).GRAMMAR_DIR ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108330)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1610, cols 3 to 51
    _end_104858_L104858:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1614, cols 3 to 4
      //dflt_grammar<68126>varname = (mk_absolute_filename<17011>stackfun (join<82705>stackfun (apply((prj36:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname)), "grammar/grammar.files")));
      dflt_grammar = mk_absolute_filename(_fI82705_join((*_vI68139_control).GRAMMAR_DIR, ::std::string("grammar/grammar.files"))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1616, cols 11 to 29
      //processing_stage1_mv_65683<104860> := apply((prj66:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname));
      processing_stage1_mv_65683  = (*_vI68139_control).STDGRAMMAR; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1617, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1617, cols 7 to 8
      if(!((::std::string("") == processing_stage1_mv_65683)) ) goto _ml65685_L104862;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 5 to 52
      //_urv104859<104859> := dflt_grammar<68126>varname;
      _urv104859  = dflt_grammar; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 5 to 52
      goto _end_hash_927726975;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1617, cols 7 to 8
    _ml65685_L104862:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1618, cols 7 to 7
/*match case 2:x_param_bootflx_65605*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1618, cols 7 to 7
      //x_param_bootflx_65605<104861>varname = processing_stage1_mv_65683<104860>varname;
      x_param_bootflx_65605 = processing_stage1_mv_65683; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 139, cols 5 to 6
      //processing_stage1_mv_65688<104863> := (lor<5213>primfun ((==<81352>primfun[char] ((subscript<81183>primfun[int] (x_param_bootflx_65605<104861>varname, 0)), (subscript<81183>primfun[int] ("\", 0)))), (land<5211>primfun ((==<81352>primfun[char] ((subscript<81183>primfun[int] (x_param_bootflx_65605<104861>varname, 1)), (subscript<81183>primfun[int] (":", 0)))), (==<81352>primfun[char] ((subscript<81183>primfun[int] (x_param_bootflx_65605<104861>varname, 2)), (subscript<81183>primfun[int] ("\", 0))))))));
      processing_stage1_mv_65688  = (::flx::rtl::strutil::subscript(x_param_bootflx_65605,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0)) || ((::flx::rtl::strutil::subscript(x_param_bootflx_65605,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0)) && (::flx::rtl::strutil::subscript(x_param_bootflx_65605,2) == ::flx::rtl::strutil::subscript(::std::string("\\"),0)) ) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 7 to 52
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 7 to 52
      if(!(processing_stage1_mv_65688%2==1) ) goto _ml65690_L104864;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 7 to 52
      //_urv104859<104859> := x_param_bootflx_65605<104861>varname;
      _urv104859  = x_param_bootflx_65605; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 7 to 52
      goto _end_hash_927726975;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 7 to 52
    _ml65690_L104864:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 7 to 52
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 7 to 52
      //_urv104859<104859> := (join<82705>stackfun (apply((prj36:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname)), x_param_bootflx_65605<104861>varname));
      _urv104859  = _fI82705_join((*_vI68139_control).GRAMMAR_DIR, x_param_bootflx_65605); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1620, cols 5 to 52
    _end_hash_927726975:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1621, cols 3 to 13
      //(deref<85463>primfun[string] apply((prj66:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68139>varname)) = _urv104859<104859>varname;
      *(&_vI68139_control->STDGRAMMAR)  = _urv104859; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104870_L104870;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("STDGRAMMAR = ", apply((prj66:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108331 = (::std::string("[flx] ") + (::std::string("STDGRAMMAR = ") + (*_vI68139_control).STDGRAMMAR ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108331)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1623, cols 3 to 49
    _end_104870_L104870:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<104874> := (join<82705>stackfun (apply((prj66:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname)), "syntax.automaton"));
      _vI104874_f  = _fI82705_join((*_vI68139_control).STDGRAMMAR, ::std::string("syntax.automaton")); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI104874_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L104875;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<104874>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<104874>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<104874>varname, 2))));
      _vI104874_f = ::flx::rtl::strutil::substr(_vI104874_f,0,1) + ::flx::rtl::strutil::substr(_vI104874_f,2,_vI104874_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L104878;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L104875:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI104874_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L104878;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<104874>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<104874>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<104874>varname, 2))));
      _vI104874_f = (::flx::rtl::strutil::substr(_vI104874_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI104874_f,2,_vI104874_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L104878:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI104874_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L104880;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<104874>varname = (copyfrom<81959>primfun[int] (f<104874>varname, 1));
      _vI104874_f = ::flx::rtl::strutil::substr(_vI104874_f,1,_vI104874_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L104880:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<104872>varname = (join<82705>stackfun (apply((prj0:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68138>varname)), f<104874>varname));
      _vI104872_k = _fI82705_join((*_vI68138_config).FLX_CACHE_DIR, _vI104874_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1631, cols 3 to 4
      //dflt_automaton<68132>varname = k<104872>varname;
      dflt_automaton = _vI104872_k; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1633, cols 11 to 28
      //processing_stage1_mv_65693<104885> := apply((prj0:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname));
      processing_stage1_mv_65693  = (*_vI68139_control).AUTOMATON; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1634, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1634, cols 7 to 8
      if(!((::std::string("") == processing_stage1_mv_65693)) ) goto _ml65695_L104887;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1635, cols 5 to 13
      //_urv104884<104884> := dflt_automaton<68132>varname;
      _urv104884  = dflt_automaton; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1635, cols 5 to 13
      goto _end_hash_460501395;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1634, cols 7 to 8
    _ml65695_L104887:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1635, cols 7 to 7
/*match case 2:x_param_bootflx_65606*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1635, cols 7 to 7
      //x_param_bootflx_65606<104886>varname = processing_stage1_mv_65693<104885>varname;
      x_param_bootflx_65606 = processing_stage1_mv_65693; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1635, cols 5 to 13
      //_urv104884<104884> := x_param_bootflx_65606<104886>varname;
      _urv104884  = x_param_bootflx_65606; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1635, cols 5 to 13
    _end_hash_460501395:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1636, cols 3 to 13
      //(deref<85463>primfun[string] apply((prj0:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68139>varname)) = _urv104884<104884>varname;
      *(&_vI68139_control->AUTOMATON)  = _urv104884; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1474, cols 5 to 68
      if(!(*_vI68139_control).DEBUG_FLX ) goto _end_104893_L104893;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("AUTOMATON = ", apply((prj0:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68139>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108332 = (::std::string("[flx] ") + (::std::string("AUTOMATON = ") + (*_vI68139_control).AUTOMATON ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108332)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1638, cols 3 to 47
    _end_104893_L104893:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //processing_stage1_mv_65698<104895> := (lnot<5216>primfun (==<80464>primfun[string] (apply((prj2:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(xloopctl<68140>varname)), "")));
      processing_stage1_mv_65698  = !(((*xloopctl).dir == ::std::string(""))) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1653, cols 5 to 13
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1653, cols 5 to 13
      if(!(processing_stage1_mv_65698%2==1) ) goto _ml65700_L104896;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1653, cols 5 to 13
      //_urv104894<104894> := apply((prj2:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(xloopctl<68140>varname));
      _urv104894  = (*xloopctl).dir; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1653, cols 5 to 13
      goto _end_hash_392593367;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1653, cols 5 to 13
    _ml65700_L104896:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1653, cols 5 to 13
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1653, cols 5 to 13
      //_urv104894<104894> := ".";
      _urv104894  = ::std::string("."); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1653, cols 5 to 13
    _end_hash_392593367:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1654, cols 3 to 10
      //(deref<85463>primfun[string] apply((prj2:&record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> &string), xloopctl<68140>varname)) = _urv104894<104894>varname;
      *(&xloopctl->dir)  = _urv104894; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1656, cols 1 to 2
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <107591>: flx_processing::run_program_dynamic::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI107591__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <107122>: flx_processing::cal_time_from_flxdepfile::aux_uncurry: Apply method
double _fI107122_aux_uncurry::apply(_tt108078 const &_arg ){
  _vI107123_init_uncurry = _arg.mem_0;
  _vI107124_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_98507_L107131:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<107127> := x<107124>varname;
      _vI107127_aux__apos_2_mv_1356  = _vI107124_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI107127_aux__apos_2_mv_1356)==0) ) goto _ml1358_L107126;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<107123>varname;: type double
      return _vI107123_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L107126:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI107127_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI107130__lam_1360)(FLX_FPAR_PASS this, ptr_fI106742_cal_time_from_flxdepfile, ptrflx_processing))) ) goto _ml1359_L107125;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<107128>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<107127>varname));
      _vI107128_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI107127_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<107129>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<107127>varname));
      _vI107129_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI107127_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<107124> := t_param_std_1258<107129>varname;
      _vI107124_x  = _vI107129_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<107123> := apply((maxf<106743>flxfun init_uncurry<107123>varname), h_param_std_1259<107128>varname);
      _vI107123_init_uncurry  = ((FLX_NEWP(_fI106743_maxf)(FLX_FPAR_PASS ptr_fI106742_cal_time_from_flxdepfile, ptrflx_processing))
      ->apply(_vI107123_init_uncurry))->clone()
      ->apply(_vI107128_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_98507_L107131;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L107125:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <89508>: find_uncurry: Apply method
void* find_uncurry::apply(_tt107858 const &_arg ){
  _vI89606_eq_uncurry = _arg.mem_0;
  _vI89607_xs = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 761, cols 3 to 4
    start_103240_L103240:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 761, cols 3 to 4
      //find'2_mv_1586<103232> := xs<89607>varname;
      _vI103232_find__apos_2_mv_1586  = _vI89607_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 758, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 758, cols 7 to 12
      if(!(FLX_VNI(_vI103232_find__apos_2_mv_1586)==0) ) goto _ml1588_L103231;
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 5 to 67
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 758, cols 7 to 12
    _ml1588_L103231:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 7 to 21
/*match case 2:|Snoc (t_param_std_1580, (a_param_std_1581, b_param_std_1582))*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 7 to 21
      if(!andthen(FLX_VNI(_vI103232_find__apos_2_mv_1586)==1, (FLX_NEWP(_lam_1595)(FLX_FPAR_PASS this))) ) goto _ml1589_L103230;
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 19 to 19
      //b_param_std_1582<103233>varname = apply((prj1:string^2 -> string), apply((prj1:list * string^2 -> string^2), (arg of case 1 of find'2_mv_1586<103232>varname)));
      b_param_std_1582 = ((*((_tt107856*)FLX_VNP(_vI103232_find__apos_2_mv_1586))).mem_1.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 16 to 16
      //a_param_std_1581<103234>varname = apply((prj0:string^2 -> string), apply((prj1:list * string^2 -> string^2), (arg of case 1 of find'2_mv_1586<103232>varname)));
      a_param_std_1581 = ((*((_tt107856*)FLX_VNP(_vI103232_find__apos_2_mv_1586))).mem_1.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 13 to 13
      //t_param_std_1580<103235>varname = apply((prj0:list * string^2 -> list), (arg of case 1 of find'2_mv_1586<103232>varname));
      t_param_std_1580 = (*((_tt107856*)FLX_VNP(_vI103232_find__apos_2_mv_1586))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 29 to 33
      //find'2_mv_1591<103238> := apply(eq_uncurry<89606>varname, a_param_std_1581<103234>varname);
      _vI103238_find__apos_2_mv_1591  = (_vI89606_eq_uncurry)->clone()
      ->apply(a_param_std_1581) /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 26 to 60
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 26 to 60
      if(!(_vI103238_find__apos_2_mv_1591%2==1) ) goto _ml1593_L103237;
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 26 to 60
      //return (Some<80915>struct b_param_std_1582<103233>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (b_param_std_1582));
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 26 to 60
    _ml1593_L103237:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 26 to 60
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 761, cols 3 to 4
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 761, cols 3 to 4
      //xs<89607> := t_param_std_1580<103235>varname;
      _vI89607_xs  = t_param_std_1580; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 761, cols 3 to 4
      goto start_103240_L103240;
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 7 to 21
    _ml1589_L103230:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 5 to 67
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 5 to 67
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",759,5,759,67);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",759,5,759,67);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",761,3,761,4); // HACK! 
}

//------------------------------
//FUNCTION <66612>: toolchain_gcc_osx::dynamic_object_extension: Apply method
_a14239t_107672 _fI66612_dynamic_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 974, cols 3 to 57
      //return "_dynamic.o";: type _a14239t_107672
      return ::std::string("_dynamic.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",974,3,974,57); // HACK! 
}

//------------------------------
//FUNCTION <93866>: generic_static_library_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93866__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <91090>: cat_uncurry::_lam_1444: Apply method
 ::flx::rtl::cl_t _lam_1444::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",474,9,474,17); // HACK! 
}

//------------------------------
//FUNCTION <66971>: toolchain_clang_osx::dynamic_executable_linker: Apply method
int _fI66971_dynamic_executable_linker::apply(_art107763 const &_arg ){
  _vI66974_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1639, cols 5 to 6
      //result<66973>varname = (generic_link_exe_dynamic_uncurry<89454>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<66896>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66974>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66974>varname)));
      _vI66973_result = generic_link_exe_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_clang_osx->_vI66896_linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_osx->_vI66979_config.library_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66974_spec.srcs, _vI66974_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1640, cols 5 to 18
      //return result<66973>varname;: type int
      return _vI66973_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1641,3,1641,4); // HACK! 
}

//------------------------------
//FUNCTION <66943>: toolchain_clang_osx::c_static_object_compiler: Apply method
int _fI66943_c_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66946_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1522, cols 5 to 6
      //result<66945>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_c_compile_flags<66898>varname, CCOBJ_STATIC_LIB:c_compiler<66894>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66946>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66946>varname)));
      _vI66945_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_osx->_vI66898_base_c_compile_flags, ptrtoolchain_clang_osx->_vI66894_c_compiler, ptrtoolchain_clang_osx->_vI66979_config.header_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.macros, ::std::string("-o "), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66946_spec.src, _vI66946_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1523, cols 5 to 18
      //return result<66945>varname;: type int
      return _vI66945_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1524,3,1524,4); // HACK! 
}

//------------------------------
//FUNCTION <106385>: flx_processing::cxx_link_shared_library::aux_uncurry: Apply method
void* _fI106385_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106386_inp_uncurry = _arg.data[0];
  _vI106387_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L106394:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<106390> := inp_uncurry<106386>varname;
      _vI106390_aux__apos_2_mv_1381  = _vI106386_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI106390_aux__apos_2_mv_1381)==0) ) goto _ml1383_L106389;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<106387>varname;: type void*
      return _vI106387_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L106389:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI106390_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI106393__lam_1385)(FLX_FPAR_PASS this, ptrcxx_link_shared_library, ptrflx_processing))) ) goto _ml1384_L106388;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<106391>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<106390>varname));
      _vI106391_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI106390_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<106392>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<106390>varname));
      _vI106392_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI106390_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<106387> := (Snoc<80397>struct (out<106387>varname, (_lam_66092<105859>stackfun h_param_std_1267<106391>varname)));
      _vI106387_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106387_out, _lam_66092(ptrcxx_link_shared_library, ptrflx_processing)
      .apply(_vI106391_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<106386> := t_param_std_1266<106392>varname;
      _vI106386_inp_uncurry  = _vI106392_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L106394;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L106388:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <89779>: toolchain_clang_apple_iOS_maker_uncurry::c_dynamic_object_compiler: Apply method
int _fI89779_c_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI89781_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2071, cols 5 to 6
      //result<89780>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_c_compile_flags<89748>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:c_compiler<89739>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<89781>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<89781>varname)));
      _vI89780_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89748_base_c_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89739_c_compiler, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.header_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.macros, ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89781_spec.src, _vI89781_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2072, cols 5 to 18
      //return result<89780>varname;: type int
      return _vI89780_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2073,3,2073,4); // HACK! 
}

//------------------------------
//FUNCTION <103163>: exts::aux_uncurry: Apply method
void* _fI103163_aux_uncurry::apply(_tt107865 const &_arg ){
  _vI103164_inp_uncurry = _arg.mem_0;
  _vI103165_out = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_103010_L103172:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<103168> := inp_uncurry<103164>varname;
      _vI103168_aux__apos_2_mv_1381  = _vI103164_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI103168_aux__apos_2_mv_1381)==0) ) goto _ml1383_L103167;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<103165>varname;: type void*
      return _vI103165_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L103167:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI103168_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI103171__lam_1385)(FLX_FPAR_PASS this, ptrexts))) ) goto _ml1384_L103166;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<103169>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<103168>varname));
      _vI103169_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI103168_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<103170>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<103168>varname));
      _vI103170_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI103168_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<103165> := (Snoc<81403>struct (out<103165>varname, (_lam_65654<68033>stackfun h_param_std_1267<103169>varname)));
      _vI103165_out  = FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(_vI103165_out, _lam_65654(ptrexts)
      .apply(_vI103169_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<103164> := t_param_std_1266<103170>varname;
      _vI103164_inp_uncurry  = _vI103170_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_103010_L103172;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L103166:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <91069>: cat_uncurry::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <104758>: parse::_lam_2832: Apply method
 ::flx::rtl::cl_t _lam_2832::apply(){
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/program.fdoc",1130,7,1130,11); // HACK! 
}

//------------------------------
//FUNCTION <106882>: flx_processing::cxx_link_static_exe: Apply method
int _fI106882_cxx_link_static_exe::apply(_pt107743* const &_arg ){
  _vI106896_ehandler = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107424>ref;
      {
      __timeb64* _tmp108337 = (__timeb64*)&_vI107424_tv;
      _ftime64_s(((_tmp108337)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv100034<107423> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107424>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107424>varname)), literal[double]("1.0e3")))));
      _vI107423__genout_urv100034  = (static_cast<double>((_vI107424_tv.time))) + ((static_cast<double>((_vI107424_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2617, cols 5 to 25
      //t0<106883>varname = _genout_urv100034<107423>varname;
      _vI106883_t0 = _vI107423__genout_urv100034; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2618, cols 5 to 36
      //pkg_sstrings<106884>varname = Empty<80385>varname;
      _vI106884_pkg_sstrings = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2619, cols 5 to 34
      //pkgs<106885>varname = apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname);
      _vI106885_pkgs = ptrflx_processing->_vI107004_control.extra_pkgs; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2635, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI106885_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65943_L106900;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_static] Adding packages ", (str<81092>stackfun pkgs<106885>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108338 = (::std::string("[flx:cxx_link_static] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106885_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108338)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<107425>varname = (aux_uncurry<107426>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI107425_r = _fI107426_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<107425>ref;
      {
      void** _tmp108339 = (void**)&_vI107425_r;
      _rev(((_tmp108339)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2625, cols 7 to 8
      //PKGCONFIG_PATH<106888>varname = r<107425>varname;
      _vI106888_PKGCONFIG_PATH = _vI107425_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2626, cols 7 to 126
      //allargs<106889>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<106888>varname, "-r")), "--field=provides_slib")), "--field=requires_slibs")), "--keepleftmost")), pkgs<106885>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106889_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI106888_PKGCONFIG_PATH, ::std::string("-r"))) /* apply_stack */, ::std::string("--field=provides_slib"))) /* apply_stack */, ::std::string("--field=requires_slibs"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI106885_pkgs)) /* apply_stack */, ptrflx_processing->_vI107004_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2627, cols 7 to 64
      //_genout_urv100075<107436> := (flx_pkgconfig<68435>stackfun allargs<106889>varname);
      _vI107436__genout_urv100075  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI106889_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2627, cols 7 to 64
      //_ds2_66107<106890>varname = _genout_urv100075<107436>varname;
      _vI106890__ds2_66107 = _vI107436__genout_urv100075; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2627, cols 7 to 64
      //ret<106891>varname = apply((prj0:int * list -> int), _ds2_66107<106890>varname);
      _vI106891_ret = _vI106890__ds2_66107.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2627, cols 7 to 64
      //mysstrings<106892>varname = apply((prj1:int * list -> list), _ds2_66107<106890>varname);
      _vI106892_mysstrings = _vI106890__ds2_66107.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2633, cols 7 to 11
      if(!(!((_vI106891_ret == 0)) ) ) goto _ifdoelse_bootflx_65945_L106898;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_static] Error ", (str<80203>primfun[int] ret<106891>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<106889>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108340 = (((::std::string("[flx:cxx_link_static] Error ") + ::flx::rtl::strutil::str<int>(_vI106891_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106889_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108340)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<106896>varname);
      {
      _a6258t_107873 _tmp108341 = (_a6258t_107873)(_vI106896_ehandler);
      throw ((_tmp108341));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2633, cols 7 to 11
    _ifdoelse_bootflx_65945_L106898:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2634, cols 7 to 31
      //pkg_sstrings<106884>varname = mysstrings<106892>varname;
      _vI106884_pkg_sstrings = _vI106892_mysstrings; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2635, cols 5 to 9
    _ifdoelse_bootflx_65943_L106900:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 22 to 36
      //cxx_link_static_exe_mv_66109<107438> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107438_cxx_link_static_exe_mv_66109  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      if(!(_vI107438_cxx_link_static_exe_mv_66109%2==1) ) goto _ml66111_L107439;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      //_urv100086<107437> := echoln<107006>closure;
      _vI107437__urv100086  = (FLX_NEWP(_pI107006_echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      goto _end_hash_45075375;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
    _ml66111_L107439:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      //_urv100086<107437> := debugln<107005>closure;
      _vI107437__urv100086  = (FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
    _end_hash_45075375:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 22 to 36
      //cxx_link_static_exe_mv_66109<107442> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107442_cxx_link_static_exe_mv_66109  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      if(!(_vI107442_cxx_link_static_exe_mv_66109%2==1) ) goto _ml66111_L107443;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      goto _end_hash_406434091;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
    _ml66111_L107443:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
    _end_hash_406434091:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2644, cols 5 to 6
      //tc<106893>varname = apply(toolchain<68911>varname, ( ccflags:apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), debugln:_urv100086<107437>varname, dynamic_libraries:apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), header_search_dirs:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), macros:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), static_libraries:(join_uncurry<89534>stackfun (apply((prj45:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), pkg_sstrings<106884>varname))));
      _vI106893_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(ptrflx_processing->_vI106705_dflt_clang_config.ccflags, _vI107437__urv100086, ptrflx_processing->_vI106705_dflt_clang_config.dynamic_libraries, ptrflx_processing->_vI106705_dflt_clang_config.header_search_dirs, ptrflx_processing->_vI106705_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI106705_dflt_clang_config.macros, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.LINK_STRINGS, _vI106884_pkg_sstrings)) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2645, cols 5 to 55
      //EXT_STATIC_OBJ<106894>varname = apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<106893>varname), ());
      _vI106894_EXT_STATIC_OBJ = (_vI106893_tc.static_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2665, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65946_L106901;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2656, cols 7 to 8
      //result<106895>varname = apply(apply((prj20:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<106893>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), srcs:(+<80787>stackfun ((+<80787>stackfun ((join_uncurry<89534>stackfun (apply((prj19:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname))), (+<14305>primfun ((+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), "_static_link_thunk")), EXT_STATIC_OBJ<106894>varname)))), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), EXT_STATIC_OBJ<106894>varname))))));
      _vI106895_result = (_vI106893_tc.static_executable_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.DRIVER_OBJS, ptrflx_processing->_vI107004_control.cppos)) /* apply_stack */, (ptrflx_processing->dvars.cpp_filebase + ::std::string("_static_link_thunk") ) + _vI106894_EXT_STATIC_OBJ )) /* apply_stack */, ptrflx_processing->dvars.cpp_filebase + _vI106894_EXT_STATIC_OBJ )) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2665, cols 5 to 9
      goto _ifdoelse_bootflx_65947_L106902;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2665, cols 5 to 9
    _ifdoend_bootflx_65946_L106901:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2663, cols 7 to 10
      //result<106895>varname = apply(apply((prj20:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<106893>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), srcs:apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106895_result = (_vI106893_tc.static_executable_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, ptrflx_processing->_vI107004_control.cppos)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2665, cols 5 to 9
    _ifdoelse_bootflx_65947_L106902:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _end_100123_L107452;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107451>ref;
      {
      __timeb64* _tmp108342 = (__timeb64*)&_vI107451_tv;
      _ftime64_s(((_tmp108342)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107450> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107451>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107451>varname)), literal[double]("1.0e3")))));
      _vI107450__genout_urv96124  = (static_cast<double>((_vI107451_tv.time))) + ((static_cast<double>((_vI107451_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107445>varname = (-<80547>primfun[double] (_genout_urv96124<107450>varname, t0<106883>varname));
      _vI107445_elapsed = _vI107450__genout_urv96124 - _vI106883_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107446>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107445>varname, literal[double]("60.0"))));
      _vI107446_minutes = ::std::floor((_vI107445_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107447>varname = (-<80547>primfun[double] (elapsed<107445>varname, (*<80818>primfun[double] (minutes<107446>varname, literal[double]("60.0")))));
      _vI107447_seconds = _vI107445_elapsed - (_vI107446_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107446>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107447>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Static executable link  : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108343 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107446_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107447_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Static executable link  : ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108343)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2666, cols 5 to 77
    _end_100123_L107452:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2669, cols 5 to 9
      if(!(!((_vI106895_result == 0)) ) ) goto _ifdoelse_bootflx_65949_L106904;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ static executable link ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108344 = ((::std::string("[flx] C++ static executable link ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108344)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2669, cols 5 to 9
    _ifdoelse_bootflx_65949_L106904:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2670, cols 5 to 18
      //return result<106895>varname;: type int
      return _vI106895_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2671,3,2671,4); // HACK! 
}

//------------------------------
//FUNCTION <66699>: toolchain_clang_linux::executable_extension: Apply method
_a14239t_107672 _fI66699_executable_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1220, cols 3 to 43
      //return "";: type _a14239t_107672
      return ::std::string("");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1220,3,1220,43); // HACK! 
}

//------------------------------
//FUNCTION <66691>: toolchain_clang_linux::host_os: Apply method
_a14239t_107672 _fI66691_host_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1215, cols 3 to 35
      //return "LINUX";: type _a14239t_107672
      return ::std::string("LINUX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1215,3,1215,35); // HACK! 
}

//------------------------------
//FUNCTION <91124>: runflx::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI91124__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <99082>: cxx_depcheck::==::_lam_66150: Apply method
 ::flx::rtl::cl_t _lam_66150::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 23 to 34
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",392,23,392,34); // HACK! 
}

//------------------------------
//FUNCTION <89478>: gramtime_uncurry: Apply method
double gramtime_uncurry::apply(_tt107889 const &_arg ){
  debugln_uncurry = _arg.mem_0;
  _vI89864_path = _arg.mem_1;
  _vI89865_s = _arg.mem_2;
    // # C:/projects/felix/src/packages/flx.fdoc: line 115, cols 5 to 9
      if(!((::flx::rtl::strutil::subscript(_vI89865_s,0) == ::flx::rtl::strutil::subscript(::std::string("@"),0))) ) goto _ifdoend_bootflx_65041_L89868;
    // # C:/projects/felix/src/packages/strings.fdoc: line 450, cols 3 to 61
      //gramtime'2_mv_65066<105001> := (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<81959>primfun[int] (s<89865>varname, 1)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      _vI105001_gramtime__apos_2_mv_65066  = lstrip(rstrip(::flx::rtl::strutil::substr(_vI89865_s,1,_vI89865_s.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 87, cols 13 to 13
/*match case 1:f_param_bootflx_65043*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 87, cols 13 to 13
      //f_param_bootflx_65043<105002>varname = gramtime'2_mv_65066<105001>varname;
      f_param_bootflx_65043 = _vI105001_gramtime__apos_2_mv_65066; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 139, cols 5 to 6
      //gramtime'2_mv_65070<105003> := (lor<5213>primfun ((==<81352>primfun[char] ((subscript<81183>primfun[int] (f_param_bootflx_65043<105002>varname, 0)), (subscript<81183>primfun[int] ("\", 0)))), (land<5211>primfun ((==<81352>primfun[char] ((subscript<81183>primfun[int] (f_param_bootflx_65043<105002>varname, 1)), (subscript<81183>primfun[int] (":", 0)))), (==<81352>primfun[char] ((subscript<81183>primfun[int] (f_param_bootflx_65043<105002>varname, 2)), (subscript<81183>primfun[int] ("\", 0))))))));
      _vI105003_gramtime__apos_2_mv_65070  = (::flx::rtl::strutil::subscript(f_param_bootflx_65043,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0)) || ((::flx::rtl::strutil::subscript(f_param_bootflx_65043,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0)) && (::flx::rtl::strutil::subscript(f_param_bootflx_65043,2) == ::flx::rtl::strutil::subscript(::std::string("\\"),0)) ) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 89, cols 9 to 71
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 89, cols 9 to 71
      if(!(_vI105003_gramtime__apos_2_mv_65070%2==1) ) goto _ml65072_L105004;
    // # C:/projects/felix/src/packages/flx.fdoc: line 89, cols 9 to 71
      //_urv105000<105000> := f_param_bootflx_65043<105002>varname;
      _urv105000  = f_param_bootflx_65043; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 89, cols 9 to 71
      goto _end_hash_1008334161;
    // # C:/projects/felix/src/packages/flx.fdoc: line 89, cols 9 to 71
    _ml65072_L105004:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 89, cols 9 to 71
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 89, cols 9 to 71
      //_urv105000<105000> := (mk_absolute_filename<17011>stackfun (join<82705>stackfun (path<89864>varname, f_param_bootflx_65043<105002>varname)));
      _urv105000  = mk_absolute_filename(_fI82705_join(_vI89864_path, f_param_bootflx_65043)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 89, cols 9 to 71
    _end_hash_1008334161:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 90, cols 7 to 8
      //file<89856>varname = _urv105000<105000>varname;
      _vI89856_file = _urv105000; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 91, cols 7 to 51
      //filetime<89857>varname = (dfiletime<82503>stackfun (file<89856>varname, literal[double]("0.0")));
      filetime = dfiletime(_vI89856_file, 0.0); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 96, cols 7 to 11
      if(!((filetime == 0.0)) ) goto _ifdoelse_bootflx_65045_L89867;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Grammar include file '", (+<14305>primfun (file<89856>varname, "' doesn't exist, exiting")))), "\x0A")));
      {
      _a14239t_107672 _tmp108345 = (::std::string("Grammar include file '") + (_vI89856_file + ::std::string("' doesn't exist, exiting") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108345)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 95, cols 9 to 23
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 96, cols 7 to 11
    _ifdoelse_bootflx_65045_L89867:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 97, cols 7 to 93
      //run procedure call debugln_uncurry<89871>varname (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Grammar include file '", file<89856>varname)), "' time=")), (strfiletime<82509>stackfun filetime<89857>varname)));
      {
        ::flx::rtl::con_t *_p = (debugln_uncurry)->clone()
      ->call(0, ((::std::string("Grammar include file '") + _vI89856_file ) + ::std::string("' time=") ) + strfiletime(FLX_FPAR_PASS filetime) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L105018;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", file<89856>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108346 = (::std::string("[load] ") + _vI89856_file ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108346)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L105018:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 98, cols 7 to 31
      //filetext<89858>varname = (raw_load<8396>primfun file<89856>varname);
      filetext = ::flx::rtl::ioutil::load_file(_vI89856_file); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 99, cols 7 to 41
      //files<89859>varname = (split<14933>stackfun (filetext<89858>varname, "\x0A"));
      _vI89859_files = split(FLX_FPAR_PASS_ONLY)
      .apply(_at107674(filetext, ::std::string("\n"))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<105024>varname = (aux_uncurry<105025>stackfun (files<89859>varname, Empty<80385>varname));
      _vI105024_r = _fI105025_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89859_files, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<105024>ref;
      {
      void** _tmp108347 = (void**)&_vI105024_r;
      _rev(((_tmp108347)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 100, cols 7 to 41
      //files<89859>varname = r<105024>varname;
      _vI89859_files = _vI105024_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 101, cols 7 to 54
      //files<89859>varname = (aux<105041>stackfun (files<89859>varname, Empty<80385>varname));
      _vI89859_files = _fI105041_aux(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89859_files, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<105069>varname = (aux_uncurry<105070>stackfun (files<89859>varname, Empty<80385>varname));
      _vI105069_r = _fI105070_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89859_files, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<105069>ref;
      {
      void** _tmp108348 = (void**)&_vI105069_r;
      _rev(((_tmp108348)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 102, cols 7 to 73
      //files<89859>varname = r<105069>varname;
      _vI89859_files = _vI105069_r; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 237, cols 7 to 24
      //return (aux_uncurry<105086>stackfun (filetime<89857>varname, files<89859>varname));: type double
      return _fI105086_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt108078(filetime, _vI89859_files)) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx.fdoc: line 115, cols 5 to 9
    _ifdoend_bootflx_65041_L89868:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 106, cols 7 to 36
      //file<89856>varname = (join<82705>stackfun (path<89864>varname, s<89865>varname));
      _vI89856_file = _fI82705_join(_vI89864_path, _vI89865_s); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 107, cols 7 to 46
      //filetime<89857>varname = (dfiletime<82503>stackfun (file<89856>varname, literal[double]("0.0")));
      filetime = dfiletime(_vI89856_file, 0.0); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 112, cols 7 to 11
      if(!((filetime == 0.0)) ) goto _ifdoelse_bootflx_65047_L89870;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Grammar file ", (+<14305>primfun (file<89856>varname, " doesn't exist, exiting")))), "\x0A")));
      {
      _a14239t_107672 _tmp108349 = (::std::string("Grammar file ") + (_vI89856_file + ::std::string(" doesn't exist, exiting") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108349)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 111, cols 9 to 23
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 112, cols 7 to 11
    _ifdoelse_bootflx_65047_L89870:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 113, cols 7 to 83
      //run procedure call debugln_uncurry<89871>varname (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Grammar file ", file<89856>varname)), " time=")), (strfiletime<82509>stackfun filetime<89857>varname)));
      {
        ::flx::rtl::con_t *_p = (debugln_uncurry)->clone()
      ->call(0, ((::std::string("Grammar file ") + _vI89856_file ) + ::std::string(" time=") ) + strfiletime(FLX_FPAR_PASS filetime) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 114, cols 7 to 22
      //return filetime<89857>varname;: type double
      return filetime;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",116,3,116,4); // HACK! 
}

//------------------------------
//FUNCTION <106943>: flx_processing::run_program_dynamic: Apply method
int _fI106943_run_program_dynamic::apply(_pt107743* const &_arg ){
  _vI106948_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2815, cols 5 to 19
      //result<106944>varname = 0;
      _vI106944_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65968_L106953;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2822, cols 7 to 8
      //xargs<106945>varname = (join_uncurry<89534>stackfun ((+<80787>stackfun ((Snoc<80397>struct (apply((prj1:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<106689>varname), apply((prj18:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), apply((prj7:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<106689>varname)));
      _vI106945_xargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrflx_processing->dvars.DEBUGSWITCH, ptrflx_processing->_vI107004_control.DRIVER_EXE))), ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME)) /* apply_stack */, ptrflx_processing->dvars.args)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<107571>varname = (aux_uncurry<107572>stackfun (apply((prj30:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), Empty<80385>varname));
      _vI107571_r = _fI107572_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697(ptrflx_processing->_vI107004_control.FLXRUN, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<107571>ref;
      {
      void** _tmp108350 = (void**)&_vI107571_r;
      _rev(((_tmp108350)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<107582>varname = (aux_uncurry<107583>stackfun (xargs<106945>varname, Empty<80385>varname));
      _vI107582_r = _fI107583_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697(_vI106945_xargs, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<107582>ref;
      {
      void** _tmp108351 = (void**)&_vI107582_r;
      _rev(((_tmp108351)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2823, cols 7 to 84
      //CMD<106946>varname = (+<14305>primfun ((+<14305>primfun ((cat_uncurry<89509>stackfun (" ", r<107571>varname)), " ")), (cat_uncurry<89509>stackfun (" ", r<107582>varname))));
      _vI106946_CMD = (cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI107571_r)) /* apply_stack */ + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI107582_r)) /* apply_stack */ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2824, cols 7 to 86
      if(!(!((ptrflx_processing->_vI107004_control.STDOUT == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65971_L106950;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2824, cols 34 to 80
      //CMD<106946>varname = (+<14305>primfun ((+<14305>primfun (CMD<106946>varname, " > ")), (+<14305>primfun ((+<14305>primfun (""", apply((prj69:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), """))));
      _vI106946_CMD = (_vI106946_CMD + ::std::string(" > ") ) + ((::std::string("\"") + ptrflx_processing->_vI107004_control.STDOUT ) + ::std::string("\"") ) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2824, cols 7 to 86
    _ifdoelse_bootflx_65971_L106950:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2825, cols 7 to 84
      if(!(!((ptrflx_processing->_vI107004_control.STDIN == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65973_L106952;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2825, cols 33 to 78
      //CMD<106946>varname = (+<14305>primfun ((+<14305>primfun (CMD<106946>varname, " < ")), (+<14305>primfun ((+<14305>primfun (""", apply((prj68:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), """))));
      _vI106946_CMD = (_vI106946_CMD + ::std::string(" < ") ) + ((::std::string("\"") + ptrflx_processing->_vI107004_control.STDIN ) + ::std::string("\"") ) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2825, cols 7 to 84
    _ifdoelse_bootflx_65973_L106952:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100433_L107595;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Run command=", CMD<106946>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108352 = (::std::string("[flx] ") + (::std::string("Run command=") + _vI106946_CMD ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108352)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2826, cols 7 to 34
    _end_100433_L107595:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107597>ref;
      {
      __timeb64* _tmp108353 = (__timeb64*)&_vI107597_tv;
      _ftime64_s(((_tmp108353)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv100434<107596> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107597>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107597>varname)), literal[double]("1.0e3")))));
      _vI107596__genout_urv100434  = (static_cast<double>((_vI107597_tv.time))) + ((static_cast<double>((_vI107597_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2827, cols 7 to 27
      //t0<106947>varname = _genout_urv100434<107596>varname;
      _vI106947_t0 = _vI107596__genout_urv100434; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2828, cols 7 to 26
      //_genout_urv100438<107598> := (system<106706>stackfun CMD<106946>varname);
      _vI107598__genout_urv100438  = _fI106706_system(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106946_CMD) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2828, cols 7 to 26
      //result<106944>varname = _genout_urv100438<107598>varname;
      _vI106944_result = _vI107598__genout_urv100438; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _ifdoelse_bootflx_65969_L106954;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107605>ref;
      {
      __timeb64* _tmp108354 = (__timeb64*)&_vI107605_tv;
      _ftime64_s(((_tmp108354)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107604> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107605>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107605>varname)), literal[double]("1.0e3")))));
      _vI107604__genout_urv96124  = (static_cast<double>((_vI107605_tv.time))) + ((static_cast<double>((_vI107605_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107599>varname = (-<80547>primfun[double] (_genout_urv96124<107604>varname, t0<106947>varname));
      _vI107599_elapsed = _vI107604__genout_urv96124 - _vI106947_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107600>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107599>varname, literal[double]("60.0"))));
      _vI107600_minutes = ::std::floor((_vI107599_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107601>varname = (-<80547>primfun[double] (elapsed<107599>varname, (*<80818>primfun[double] (minutes<107600>varname, literal[double]("60.0")))));
      _vI107601_seconds = _vI107599_elapsed - (_vI107600_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107600>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107601>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Dynamic Run : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108355 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107600_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107601_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Dynamic Run : ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108355)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
      goto _ifdoelse_bootflx_65969_L106954;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
      goto _ifdoelse_bootflx_65969_L106954;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
    _ifdoend_bootflx_65968_L106953:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Cannot run C++ dynamic library ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108356 = (::std::string("Cannot run C++ dynamic library ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108356)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
    _ifdoelse_bootflx_65969_L106954:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2833, cols 5 to 18
      //return result<106944>varname;: type int
      return _vI106944_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2834,3,2834,4); // HACK! 
}

//------------------------------
//FUNCTION <97773>: flx_pkgconfig::parse_args::aux::aux_uncurry: Apply method
void* _fI97773_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97774_x_uncurry = _arg.data[0];
  _vI97775_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97782:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97778> := x_uncurry<97774>varname;
      _vI97778_aux__apos_2_mv_1387  = _vI97774_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97778_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97777;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97775>varname;: type void*
      return _vI97775_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97777:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97778_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97781__lam_1391)(FLX_FPAR_PASS this, ptr_fI97765_aux, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1390_L97776;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97779>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97778>varname));
      _vI97779_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97778_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97780>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97778>varname));
      _vI97780_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97778_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97775> := (Snoc<80397>struct (y<97775>varname, h_param_std_1269<97779>varname));
      _vI97775_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97775_y, _vI97779_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97774> := t_param_std_1268<97780>varname;
      _vI97774_x_uncurry  = _vI97780_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97782;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97776:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <106234>: flx_processing::cxx_compile_dynamic1_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI106234__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <107583>: flx_processing::run_program_dynamic::aux_uncurry: Apply method
void* _fI107583_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107584_inp_uncurry = _arg.data[0];
  _vI107585_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L107592:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<107588> := inp_uncurry<107584>varname;
      _vI107588_aux__apos_2_mv_1381  = _vI107584_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI107588_aux__apos_2_mv_1381)==0) ) goto _ml1383_L107587;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<107585>varname;: type void*
      return _vI107585_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L107587:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI107588_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI107591__lam_1385)(FLX_FPAR_PASS this, ptr_fI106943_run_program_dynamic, ptrflx_processing))) ) goto _ml1384_L107586;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<107589>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<107588>varname));
      _vI107589_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI107588_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<107590>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<107588>varname));
      _vI107590_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI107588_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<107585> := (Snoc<80397>struct (out<107585>varname, (quote_arg<16873>stackfun h_param_std_1267<107589>varname)));
      _vI107585_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107585_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI107589_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<107584> := t_param_std_1266<107590>varname;
      _vI107584_inp_uncurry  = _vI107590_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L107592;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L107586:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <82151>: list_eq: Apply method
 ::flx::rtl::cl_t list_eq::apply(_at107697 const &_arg ){
  _vI82152_a = _arg.data[0];
  _vI82153_b = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 645, cols 3 to 4
    start_96264_L96264:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 643, cols 5 to 12
      //apply((prj0:list^2 -> list), list_eq_mv_1549<96254>varname) = a<82152>varname;
      (list_eq_mv_1549.data)[0] = _vI82152_a; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 643, cols 5 to 12
      //apply((prj1:list^2 -> list), list_eq_mv_1549<96254>varname) = b<82153>varname;
      (list_eq_mv_1549.data)[1] = _vI82153_b; //assign simple
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 637, cols 7 to 20
/*match case 1:(|Empty, |Empty)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 637, cols 7 to 20
      if(!(FLX_VNI((list_eq_mv_1549.data)[0])==0 && FLX_VNI((list_eq_mv_1549.data)[1])==0 ) ) goto _ml1551_L96253;
    // # C:/projects/felix/src/packages/lists.fdoc: line 643, cols 5 to 12
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 637, cols 7 to 20
    _ml1551_L96253:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 638, cols 7 to 15
/*match case 2:(|Empty, any)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 638, cols 7 to 15
      if(!(FLX_VNI((list_eq_mv_1549.data)[0])==0) ) goto _ml1552_L96252;
    // # C:/projects/felix/src/packages/lists.fdoc: line 643, cols 5 to 12
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 638, cols 7 to 15
    _ml1552_L96252:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 639, cols 7 to 14
/*match case 3:(any, |Empty)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 639, cols 7 to 14
      if(!(FLX_VNI((list_eq_mv_1549.data)[1])==0) ) goto _ml1553_L96251;
    // # C:/projects/felix/src/packages/lists.fdoc: line 643, cols 5 to 12
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 639, cols 7 to 14
    _ml1553_L96251:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 7 to 30
/*match case 4:(|Snoc (ta_param_std_1311, ha_param_std_1312), |Snoc (tb_param_std_1313, hb_param_std_1314))*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 7 to 30
      if(!(andthen(FLX_VNI((list_eq_mv_1549.data)[0])==1, (FLX_NEWP(_lam_1560)(FLX_FPAR_PASS this))) && andthen(FLX_VNI((list_eq_mv_1549.data)[1])==1, (FLX_NEWP(_lam_1561)(FLX_FPAR_PASS this))) ) ) goto _ml1554_L96250;
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 28 to 29
      //hb_param_std_1314<96255>varname = apply((prj1:list * string -> string), (arg of case 1 of apply((prj1:list^2 -> list), list_eq_mv_1549<96254>varname)));
      hb_param_std_1314 = (*((_tt107677*)FLX_VNP((list_eq_mv_1549.data)[1]))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 25 to 26
      //tb_param_std_1313<96256>varname = apply((prj0:list * string -> list), (arg of case 1 of apply((prj1:list^2 -> list), list_eq_mv_1549<96254>varname)));
      tb_param_std_1313 = (*((_tt107677*)FLX_VNP((list_eq_mv_1549.data)[1]))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 15 to 16
      //ha_param_std_1312<96257>varname = apply((prj1:list * string -> string), (arg of case 1 of apply((prj0:list^2 -> list), list_eq_mv_1549<96254>varname)));
      ha_param_std_1312 = (*((_tt107677*)FLX_VNP((list_eq_mv_1549.data)[0]))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 12 to 13
      //ta_param_std_1311<96258>varname = apply((prj0:list * string -> list), (arg of case 1 of apply((prj0:list^2 -> list), list_eq_mv_1549<96254>varname)));
      ta_param_std_1311 = (*((_tt107677*)FLX_VNP((list_eq_mv_1549.data)[0]))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 641, cols 10 to 23
      //list_eq_mv_1556<96262> := (lnot<5216>primfun (==<80464>primfun[string] (ha_param_std_1312<96257>varname, hb_param_std_1314<96255>varname)));
      list_eq_mv_1556  = !((ha_param_std_1312 == hb_param_std_1314)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 642, cols 7 to 28
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 642, cols 7 to 28
      if(!(list_eq_mv_1556%2==1) ) goto _ml1558_L96261;
    // # C:/projects/felix/src/packages/lists.fdoc: line 642, cols 7 to 28
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 642, cols 7 to 28
    _ml1558_L96261:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 642, cols 7 to 28
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 645, cols 3 to 4
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 645, cols 3 to 4
      //b<82153> := tb_param_std_1313<96256>varname;
      _vI82153_b  = tb_param_std_1313; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 645, cols 3 to 4
      //a<82152> := ta_param_std_1311<96258>varname;
      _vI82152_a  = ta_param_std_1311; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 645, cols 3 to 4
      goto start_96264_L96264;
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 7 to 30
    _ml1554_L96250:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 643, cols 5 to 12
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 643, cols 5 to 12
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",643,5,643,12);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",643,5,643,12);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",645,3,645,4); // HACK! 
}

//------------------------------
//FUNCTION <96771>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::aux_uncurry: Apply method
void* _fI96771_aux_uncurry::apply(_at107697 const &_arg ){
  _vI96772_x_uncurry = _arg.data[0];
  _vI96773_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L96780:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<96776> := x_uncurry<96772>varname;
      _vI96776_aux__apos_2_mv_1387  = _vI96772_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI96776_aux__apos_2_mv_1387)==0) ) goto _ml1389_L96775;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<96773>varname;: type void*
      return _vI96773_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L96775:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI96776_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI96779__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65288, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L96774;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<96777>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<96776>varname));
      _vI96777_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI96776_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<96778>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<96776>varname));
      _vI96778_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI96776_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<96773> := (Snoc<80397>struct (y<96773>varname, h_param_std_1269<96777>varname));
      _vI96773_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96773_y, _vI96777_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<96772> := t_param_std_1268<96778>varname;
      _vI96772_x_uncurry  = _vI96778_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L96780;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L96774:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <66289>: toolchain_msvc_win32::cxx_compiler_vendor: Apply method
_a14239t_107672 cxx_compiler_vendor::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1733, cols 3 to 51
      //return "microsoft";: type _a14239t_107672
      return ::std::string("microsoft");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1733,3,1733,51); // HACK! 
}

//------------------------------
//C PROC <16999>: mkdirs
void mkdirs(FLX_APAR_DECL _a14239t_107672 _vI17001_s){
  int _genout_urv100590;
  _a14239t_107672 _vI100587_d_param_std_676;
  _at107674 _vI100586_dirname_mv_730;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1098, cols 7 to 11
      if(!((((_vI17001_s == ::std::string("")) || (_vI17001_s == ::std::string(".")) ) || (_vI17001_s == ::std::string("..")) ) || (::flx::rtl::strutil::subscript(_vI17001_s,-1) == ::flx::rtl::strutil::subscript(::std::string("\\"),0)) ) ) goto _ifdoend_std_2853_L17002;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1097, cols 10 to 16
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1098, cols 7 to 11
    _ifdoend_std_2853_L17002:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 33 to 41
      //dirname_mv_730<100586> := (split1<84047>stackfun s<17001>varname);
      _vI100586_dirname_mv_730  = split1(FLX_FPAR_PASS_ONLY)
      .apply(_vI17001_s) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 50 to 52
/*match case 1:(d_param_std_676, any)*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 50 to 50
      //d_param_std_676<100587>varname = apply((prj0:string^2 -> string), dirname_mv_730<100586>varname);
      _vI100587_d_param_std_676 = (_vI100586_dirname_mv_730.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1101, cols 5 to 6
  mkdirs(FLX_FPAR_PASS _vI100587_d_param_std_676);
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1100, cols 7 to 30
      //_genout_urv100590<100590> := (mkdir<16998>primfun s<17001>varname);
      _genout_urv100590  = _mkdir(_vI17001_s.c_str()); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1100, cols 7 to 30
      // primcall ignore<84042>primproc[int] _genout_urv100590<100590>varname;
      (void)_genout_urv100590;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1101, cols 5 to 6
      return; // proc return from stackable 
}
//------------------------------
//C FUNC <7906>: init_lib
_a7876t_107991 init_lib(FLX_APAR_DECL _a14239t_107672 _vI7910_modulename){
  _a7876t_107991 _genout_urv94928;
  _a6258t_107873 init;
  _a7876t_107991 linstance;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1028, cols 5 to 44
      //_genout_urv94928<94928> := (prepare_lib<7895>stackfun modulename<7910>varname);
      _genout_urv94928  = prepare_lib(FLX_FPAR_PASS _vI7910_modulename); //init
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1028, cols 5 to 44
      //linstance<7908>varname = _genout_urv94928<94928>varname;
      linstance = _genout_urv94928; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1029, cols 5 to 34
      //init<7909>varname = (get_init<7892>primfun linstance<7908>varname);
      init = linstance->start_proc; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1030, cols 5 to 21
      // primcall run<6906>primproc init<7909>varname;
      ::flx::rtl::executil::run(init);
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1031, cols 5 to 21
      //return linstance<7908>varname;: type _a7876t_107991
      return linstance;
}
//------------------------------
//FUNCTION <107366>: flx_processing::cxx_link_shared_library::aux_uncurry: Apply method
void* _fI107366_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107367_inp_uncurry = _arg.data[0];
  _vI107368_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L107375:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<107371> := inp_uncurry<107367>varname;
      _vI107371_aux__apos_2_mv_1381  = _vI107367_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI107371_aux__apos_2_mv_1381)==0) ) goto _ml1383_L107370;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<107368>varname;: type void*
      return _vI107368_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L107370:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI107371_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI107374__lam_1385)(FLX_FPAR_PASS this, ptr_fI106836_cxx_link_shared_library, ptrflx_processing))) ) goto _ml1384_L107369;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<107372>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<107371>varname));
      _vI107372_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI107371_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<107373>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<107371>varname));
      _vI107373_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI107371_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<107368> := (Snoc<80397>struct (out<107368>varname, (_lam_66092<106840>stackfun h_param_std_1267<107372>varname)));
      _vI107368_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107368_out, _fI106840__lam_66092(ptr_fI106836_cxx_link_shared_library, ptrflx_processing)
      .apply(_vI107372_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<107367> := t_param_std_1266<107373>varname;
      _vI107367_inp_uncurry  = _vI107373_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L107375;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L107369:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <105708>: flx_processing::iterator'2: Apply method
void* _fI105708_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L105709:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<105713> := xs<105707>varname;
      _vI105713_iterator__apos_2_mv_1563  = ptrflx_processing->_vI105707_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105713_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI105716__lam_1566)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml1565_L105712;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<105714>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<105713>varname));
      _vI105714_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI105713_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<105715>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<105713>varname));
      _vI105715_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI105713_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<105707>varname = t_param_std_1318<105715>varname;
      ptrflx_processing->_vI105707_xs = _vI105715_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108362)
      //yield (Some<80915>struct h_param_std_1319<105714>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI105714_h_param_std_1319));//yield
    FLX_CASE_LABEL(108362)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L105709;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L105712:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI105713_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L105711;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L105711:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L105709;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <86068>: func1: Apply method
_ft107766* _fI86068_func1::apply(_tt107992 const &_arg ){
  _vI86069_linst = _arg.mem_0;
  _vI86070_sym = _arg.mem_1;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1117, cols 5 to 57
      //_ds2_580<86072>varname = (flx_dlsym<86071>stackfun (linst<86069>varname, sym<86070>varname));
      _vI86072__ds2_580 = flx_dlsym(FLX_FPAR_PASS _vI86069_linst, _vI86070_sym); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1117, cols 5 to 57
      //s<86073>varname = apply((prj0:(address * record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) --> record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string))) * address -> address * record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) --> record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string))), _ds2_580<86072>varname);
      _vI86073_s = _vI86072__ds2_580.mem_0; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1117, cols 5 to 57
      //tf<86074>varname = apply((prj1:(address * record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) --> record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string))) * address -> address), _ds2_580<86072>varname);
      _vI86074_tf = _vI86072__ds2_580.mem_1; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1118, cols 5 to 37
      //return _lam_581<86075>closure;: type _ft107766*
      return (FLX_NEWP(_lam_581)(FLX_FPAR_PASS this));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",1119,3,1119,4); // HACK! 
}

//------------------------------
//FUNCTION <5714>: isidstart: Apply method
 ::flx::rtl::cl_t isidstart::apply(char const &_arg ){
  x = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<96575> := (stl_find<14446>primfun (letters<5707>varname, x<5720>varname));
      find_mv_2105  = (PTF letters).find(x); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L96577;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //isidstart_mv_165<96572> := None<81378>varname;
      isidstart_mv_165  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_96563_L96578;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L96577:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<96576>varname = find_mv_2105<96575>varname;
      i_param_std_1893 = find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //isidstart_mv_165<96572> := (Some<81379>struct i_param_std_1893<96576>varname);
      isidstart_mv_165  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_96563_L96578:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 57 to 62
/*match case 1:|Some any*/
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 57 to 62
      if(!andthen(FLX_VNI(isidstart_mv_165)==1, (FLX_NEWP(_lam_168)(FLX_FPAR_PASS this))) ) goto _ml167_L96573;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 28 to 87
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 57 to 62
    _ml167_L96573:;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 74 to 78
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 74 to 78
      if(!(FLX_VNI(isidstart_mv_165)==0) ) goto _ml169_L96574;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 28 to 87
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 74 to 78
    _ml169_L96574:;
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 28 to 87
/*match failure*/
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 28 to 87
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/char.fdoc",66,28,66,87);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/char.fdoc",66,28,66,87);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/char.fdoc",66,3,66,97); // HACK! 
}

//------------------------------

//PROCEDURE <68967:> _init_: Call method
void _init_::stack_call(){
  ::flx::rtl::con_t *cc = call(0);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * _init_::call(::flx::rtl::con_t *_ptr_caller){
  _caller = _ptr_caller;
  INIT_PC
  return this;
}

//PROCEDURE <68967:> _init_: Resume method
::flx::rtl::con_t *_init_::resume(){
    // # C:/projects/felix/src/packages/char.fdoc: line 55, cols 3 to 43
      //upper<5705>varname = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
      PTF upper = ::std::string("ABCDEFGHIJKLMNOPQRSTUVWXYZ"); //assign simple
    // # C:/projects/felix/src/packages/char.fdoc: line 56, cols 3 to 43
      //lower<5706>varname = "abcdefghijklmnopqrstuvwxyz";
      PTF lower = ::std::string("abcdefghijklmnopqrstuvwxyz"); //assign simple
    // # C:/projects/felix/src/packages/char.fdoc: line 57, cols 3 to 30
      //letters<5707>varname = (+<14305>primfun (upper<5705>varname, lower<5706>varname));
      PTF letters = PTF upper + PTF lower ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("BOOTFLX", "\x0A")));
      {
      _a14239t_107672 _tmp108365 = ::std::string("BOOTFLX") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108365)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<90971>varname = (aux_uncurry<90972>stackfun ((range<11786>stackfun (0, argc<7608>varname, 1)), Empty<80385>varname));
      _vI90971_r = aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107682(range(FLX_FPAR_PASS 0, PTF argc, 1), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<90971>ref;
      {
      void** _tmp108366 = (void**)&_vI90971_r;
      _rev(((_tmp108366)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 3347, cols 1 to 45
      //_genout_urv107670<107670> := (runflx<68960>stackfun r<90971>varname);
      _genout_urv107670  = runflx(FLX_FPAR_PASS_ONLY)
      .apply(_vI90971_r) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 718, cols 5 to 6
  pexit(_genout_urv107670);
    FLX_RETURN
}
//------------------------------
//FUNCTION <106264>: flx_processing::cxx_compile_dynamic::iterator'2: Apply method
void* _fI106264_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L106265:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<106269> := xs<106263>varname;
      _vI106269_iterator__apos_2_mv_1563  = ptrcxx_compile_dynamic->_vI106263_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI106269_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI106272__lam_1566)(FLX_FPAR_PASS this, ptrcxx_compile_dynamic, ptrflx_processing))) ) goto _ml1565_L106268;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<106270>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<106269>varname));
      _vI106270_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI106269_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<106271>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<106269>varname));
      _vI106271_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI106269_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<106263>varname = t_param_std_1318<106271>varname;
      ptrcxx_compile_dynamic->_vI106263_xs = _vI106271_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108367)
      //yield (Some<80915>struct h_param_std_1319<106270>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI106270_h_param_std_1319));//yield
    FLX_CASE_LABEL(108367)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L106265;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L106268:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI106269_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L106267;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L106267:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L106265;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <68463>: flx_pkgconfig::lexstr: Apply method
void* lexstr::apply(_a14239t_107672 const &_arg ){
  _vI68477_s__apos_ = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 102, cols 7 to 17
      //s<68465>varname = s'<68477>varname;
      _vI68465_s = _vI68477_s__apos_; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 103, cols 7 to 35
      //first<68466>varname = (start_iterator<15975>primfun s<68465>varname);
      first = _vI68465_s.c_str(); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 104, cols 7 to 34
      //finish<68467>varname = (end_iterator<15976>primfun s<68465>varname);
      _vI68467_finish = _vI68465_s.c_str()+_vI68465_s.size(); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 105, cols 7 to 26
      //current<68468>varname = first<68466>varname;
      _vI68468_current = first; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 106, cols 7 to 32
      //words<68469>varname = Empty<80385>varname;
      words = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
    continue__ll_flx_pkgconfig_10812_L68478:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
      if(FLX_UNLIKELY(!(!((_vI68468_current == _vI68467_finish)) ) )) goto break__ll_flx_pkgconfig_10812_L68479;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 108, cols 15 to 35
      //lexstr_mv_65212<96886> := (lexit<68441>stackfun (current<68468>varname, finish<68467>varname));
      lexstr_mv_65212  = lexit(ptrflx_pkgconfig)
      .apply(_at107879(_vI68468_current, _vI68467_finish)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 109, cols 11 to 21
/*match case 1:(next_param_bootflx_65122, lexeme_param_bootflx_65123)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 109, cols 16 to 21
      //lexeme_param_bootflx_65123<96887>varname = apply((prj1:lex_iterator * string -> string), lexstr_mv_65212<96886>varname);
      lexeme_param_bootflx_65123 = lexstr_mv_65212.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 109, cols 11 to 14
      //next_param_bootflx_65122<96888>varname = apply((prj0:lex_iterator * string -> lex_iterator), lexstr_mv_65212<96886>varname);
      next_param_bootflx_65122 = lexstr_mv_65212.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 111, cols 13 to 26
      //current<68468>varname = next_param_bootflx_65122<96888>varname;
      _vI68468_current = next_param_bootflx_65122; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 112, cols 13 to 63
      if(!(!((lexeme_param_bootflx_65123 == ::std::string(""))) ) ) goto continue__ll_flx_pkgconfig_10812_L68478;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 112, cols 32 to 57
      //words<68469>varname = (Snoc<80397>struct (words<68469>varname, lexeme_param_bootflx_65123<96887>varname));
      words = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(words, lexeme_param_bootflx_65123))); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
      goto continue__ll_flx_pkgconfig_10812_L68478;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
      goto continue__ll_flx_pkgconfig_10812_L68478;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
      goto continue__ll_flx_pkgconfig_10812_L68478;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 115, cols 7 to 11
    break__ll_flx_pkgconfig_10812_L68479:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<96898>stackfun (words<68469>varname, Empty<80385>varname));: type void*
      return _fI96898_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(words, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",118,5,118,6); // HACK! 
}

//------------------------------

//PROCEDURE <68634:> flx_pkgconfig::add_val: Call method
::flx::rtl::con_t * add_val::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <68634:> flx_pkgconfig::add_val: Resume method
::flx::rtl::con_t *add_val::resume(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 514, cols 3 to 4
      //insert_unique'3_mv_1487<96378> := (mem_uncurry<89504>stackfun (_lam_1457<96379>closure, result<68598>varname));
      _vI96378_insert_unique__apos_3_mv_1487  = mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107790((FLX_NEWP(_fI96379__lam_1457)(FLX_FPAR_PASS this, ptrflx_pkgconfig)), ptrflx_pkgconfig->_vI68598_result)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      if(!(_vI96378_insert_unique__apos_3_mv_1487%2==1) ) goto _ml1489_L96377;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      //_urv96373<96373> := result<68598>varname;
      _urv96373  = ptrflx_pkgconfig->_vI68598_result; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      goto _end_hash_271339449;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
    _ml1489_L96377:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //_urv96373<96373> := (aux_uncurry<96391>stackfun ((Snoc<80397>struct ((aux_uncurry<96381>stackfun (result<68598>varname, Empty<80385>varname)), v<68636>varname)), Empty<80385>varname));
      _urv96373  = _fI96391_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI96381_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(ptrflx_pkgconfig->_vI68598_result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, v))), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 566, cols 3 to 4
    _end_hash_271339449:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 273, cols 6 to 42
      //result<68598>varname = _urv96373<96373>varname;
      ptrflx_pkgconfig->_vI68598_result = _urv96373; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 275, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <105577>: FlxPkgConfigQuery::aux_uncurry::_lam_65336: Apply method
 ::flx::rtl::cl_t _lam_65336::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 475, cols 13 to 22
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",475,13,475,22); // HACK! 
}

//------------------------------
//FUNCTION <106929>: flx_processing::run_linker_if_required: Apply method
int _fI106929_run_linker_if_required::apply(_pt107743* const &_arg ){
  _vI106932_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2766, cols 5 to 19
      //result<106930>varname = 0;
      _vI106930_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CCOMPILEIT == 0)) ) goto _ifdoend_bootflx_65958_L106933;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++ compilation (and linking and running) skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp108369 = (::std::string("[flx] ") + ::std::string("C++ compilation (and linking and running) skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108369)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
      goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
      goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
    _ifdoend_bootflx_65958_L106933:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2770, cols 7 to 44
      //_genout_urv100336<107557> := (check_binary_uptodate<106915>stackfun ());
      _vI107557__genout_urv100336  = _fI106915_check_binary_uptodate(FLX_FPAR_PASS ptrflx_processing)
      .apply() /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2770, cols 7 to 44
      //uptodate<106931>varname = _genout_urv100336<107557>varname;
      _vI106931_uptodate = _vI107557__genout_urv100336; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2789, cols 7 to 11
      if(!_vI106931_uptodate ) goto _ifdoend_bootflx_65960_L106934;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Linking skipped because binary is uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108370 = (::std::string("[flx] ") + ::std::string("Linking skipped because binary is uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108370)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2789, cols 7 to 11
      goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2789, cols 7 to 11
      goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2789, cols 7 to 11
    _ifdoend_bootflx_65960_L106934:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2788, cols 9 to 13
      if(!((ptrflx_processing->_vI107004_control.STATIC == 0)) ) goto _ifdoend_bootflx_65962_L106937;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100344_L107563;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Dynamic linkage")), "\x0A")));
      {
      _a14239t_107672 _tmp108371 = (::std::string("[flx] ") + ::std::string("Dynamic linkage") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108371)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2775, cols 11 to 36
    _end_100344_L107563:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2780, cols 11 to 15
      if(!((ptrflx_processing->_vI107004_control.LINKEXE == 1)) ) goto _ifdoend_bootflx_65964_L106935;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<106716>stackproc  ehandler<106932>varname;
      {
      _pI106716_calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI106932_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2609, cols 5 to 40
      //_genout_urv100345<107564> := (cxx_link_shared_exe<106859>stackfun ehandler<106932>varname);
      _vI107564__genout_urv100345  = _fI106859_cxx_link_shared_exe(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106932_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2777, cols 13 to 66
      //result<106930>varname = _genout_urv100345<107564>varname;
      _vI106930_result = _vI107564__genout_urv100345; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2788, cols 9 to 13
      goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2780, cols 11 to 15
    _ifdoend_bootflx_65964_L106935:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<106716>stackproc  ehandler<106932>varname;
      {
      _pI106716_calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI106932_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2537, cols 5 to 44
      //_genout_urv100349<107565> := (cxx_link_shared_library<106836>stackfun ehandler<106932>varname);
      _vI107565__genout_urv100349  = _fI106836_cxx_link_shared_library(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106932_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2779, cols 13 to 70
      //result<106930>varname = _genout_urv100349<107565>varname;
      _vI106930_result = _vI107565__genout_urv100349; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2788, cols 9 to 13
      goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2788, cols 9 to 13
    _ifdoend_bootflx_65962_L106937:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100356_L107568;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Static linkage")), "\x0A")));
      {
      _a14239t_107672 _tmp108374 = (::std::string("[flx] ") + ::std::string("Static linkage") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108374)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2782, cols 11 to 35
    _end_100356_L107568:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2787, cols 11 to 15
      if(!((ptrflx_processing->_vI107004_control.STATICLIB == 1)) ) goto _ifdoend_bootflx_65966_L106938;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2784, cols 13 to 48
      //_genout_urv100357<107569> := (cxx_static_library<106905>stackfun ehandler<106932>varname);
      _vI107569__genout_urv100357  = _fI106905_cxx_static_library(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106932_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2784, cols 13 to 48
      //result<106930>varname = _genout_urv100357<107569>varname;
      _vI106930_result = _vI107569__genout_urv100357; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2787, cols 11 to 15
      goto _ifdoelse_bootflx_65959_L106942;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2787, cols 11 to 15
    _ifdoend_bootflx_65966_L106938:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<106716>stackproc  ehandler<106932>varname;
      {
      _pI106716_calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI106932_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2676, cols 5 to 40
      //_genout_urv100358<107570> := (cxx_link_static_exe<106882>stackfun ehandler<106932>varname);
      _vI107570__genout_urv100358  = _fI106882_cxx_link_static_exe(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106932_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2786, cols 13 to 66
      //result<106930>varname = _genout_urv100358<107570>varname;
      _vI106930_result = _vI107570__genout_urv100358; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
    _ifdoelse_bootflx_65959_L106942:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2791, cols 5 to 18
      //return result<106930>varname;: type int
      return _vI106930_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2792,3,2792,4); // HACK! 
}

//------------------------------
//FUNCTION <93139>: toolchain_msvc_win32::dynamic_executable_linker::_lam_66270: Apply method
 ::flx::rtl::cl_t _lam_66270::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1915,5,1915,9); // HACK! 
}

//------------------------------
//FUNCTION <96762>: flx_pkgconfig::get_field::_lam_65257: Apply method
 ::flx::rtl::cl_t _lam_65257::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 255, cols 11 to 16
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",255,11,255,16); // HACK! 
}

//------------------------------
//FUNCTION <97747>: flx_pkgconfig::parse_args::aux::aux_uncurry: Apply method
void* _fI97747_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97748_x_uncurry = _arg.data[0];
  _vI97749_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97756:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97752> := x_uncurry<97748>varname;
      _vI97752_aux__apos_2_mv_1387  = _vI97748_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97752_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97751;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97749>varname;: type void*
      return _vI97749_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97751:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97752_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97755__lam_1391)(FLX_FPAR_PASS this, ptr_fI97739_aux, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1390_L97750;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97753>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97752>varname));
      _vI97753_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97752_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97754>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97752>varname));
      _vI97754_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97752_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97749> := (Snoc<80397>struct (y<97749>varname, h_param_std_1269<97753>varname));
      _vI97749_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97749_y, _vI97753_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97748> := t_param_std_1268<97754>varname;
      _vI97748_x_uncurry  = _vI97754_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97756;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97750:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <84047>: split1: Apply method
_at107674 split1::apply(_a14239t_107672 const &_arg ){
  _vI84049_s = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 62 to 84
      //find_last_of_mv_2205<95374> := (stl_find_last_of<14670>primfun (s<84049>varname, "\"));
      find_last_of_mv_2205  = _vI84049_s.find_last_of((::std::string("\\"))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 93 to 112
/*match case 1:(i_param_std_1932 when (== (i_param_std_1932, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 93 to 112
      if(!((find_last_of_mv_2205 == ::std::string::npos)) ) goto _ml2207_L95376;
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 56 to 140
      //split1_mv_686<95372> := None<81378>varname;
      split1_mv_686  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 56 to 140
      goto _end_inline_find_last_of_95353_L95377;
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 93 to 112
    _ml2207_L95376:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 130 to 130
/*match case 2:i_param_std_1933*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 130 to 130
      //i_param_std_1933<95375>varname = find_last_of_mv_2205<95374>varname;
      i_param_std_1933 = find_last_of_mv_2205; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 56 to 140
      //split1_mv_686<95372> := (Some<81379>struct i_param_std_1933<95375>varname);
      split1_mv_686  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (i_param_std_1933)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 331, cols 3 to 150
    _end_inline_find_last_of_95353_L95377:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 42, cols 7 to 14
/*match case 1:|Some pos_param_std_672*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 42, cols 7 to 14
      if(!andthen(FLX_VNI(split1_mv_686)==1, (FLX_NEWP(_lam_694)(FLX_FPAR_PASS this))) ) goto _ml688_L95371;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 42, cols 12 to 14
      //pos_param_std_672<95373>varname = (arg of case 1 of split1_mv_686<95372>varname);
      pos_param_std_672 = *((_a5094t_107688*)FLX_VNP(split1_mv_686)); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 43, cols 10 to 17
      //split1_mv_690<95381> := (==<81399>primfun[size] (pos_param_std_672<95373>varname, literal[size]("0")));
      split1_mv_690  = (pos_param_std_672 == 0); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 43, cols 7 to 43
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 43, cols 7 to 43
      if(!(split1_mv_690%2==1) ) goto _ml692_L95380;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 130, cols 5 to 22
      //_urv95358<95379> := "\";
      _urv95358  = ::std::string("\\"); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 130, cols 5 to 22
      goto _end_inline_split1_mf_689_95362_L95382;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 43, cols 7 to 43
    _ml692_L95380:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 43, cols 7 to 43
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 43, cols 7 to 43
      //_urv95358<95379> := (copyto<81376>primfun[size] (s<84049>varname, pos_param_std_672<95373>varname));
      _urv95358  = ::flx::rtl::strutil::substr(_vI84049_s,0,pos_param_std_672); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 43, cols 7 to 43
    _end_inline_split1_mf_689_95362_L95382:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 45, cols 26 to 20
      //return (_urv95358<95379>varname, (copyfrom<81377>primfun[size] (s<84049>varname, (+<80900>primfun[size] (pos_param_std_672<95373>varname, (len<14304>primfun "\"))))));: type _at107674
      return _at107674(_urv95358, ::flx::rtl::strutil::substr(_vI84049_s,pos_param_std_672 + ::std::string("\\").size() ,_vI84049_s.size()));
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 42, cols 7 to 14
    _ml688_L95371:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 45, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 45, cols 7 to 11
      if(!(FLX_VNI(split1_mv_686)==0) ) goto _ml695_L95370;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 45, cols 26 to 20
      //return ("", s<84049>varname);: type _at107674
      return _at107674(::std::string(""), _vI84049_s);
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 45, cols 7 to 11
    _ml695_L95370:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 45, cols 26 to 20
/*match failure*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 45, cols 26 to 20
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",45,26,45,20);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",45,26,45,20);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",47,3,47,4); // HACK! 
}

//------------------------------
//FUNCTION <66535>: toolchain_gcc_linux::c_dependency_generator: Apply method
_tt107757 _fI66535_c_dependency_generator::apply(_art107756 const &_arg ){
  _vI66540_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 761, cols 6 to 7
      //_ds2_66191<66537>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:c_compiler<66501>varname, CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), "-D_POSIX")), "-MM")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj0:record(src:(string)) -> string), spec<66540>varname)));
      _ds2_66191 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_gcc_linux->c_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_linux->_vI66586_config.ccflags, ::std::string("-D_POSIX")))), ::std::string("-MM")))), ptrtoolchain_gcc_linux->_vI66586_config.header_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.macros, ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66540_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 761, cols 6 to 7
      //result<66538>varname = apply((prj0:int * string -> int), _ds2_66191<66537>varname);
      _vI66538_result = _ds2_66191.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 761, cols 6 to 7
      //data<66539>varname = apply((prj1:int * string -> string), _ds2_66191<66537>varname);
      _vI66539_data = _ds2_66191.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 762, cols 6 to 25
      //return (result<66538>varname, data<66539>varname);: type _tt107757
      return _tt107757(_vI66538_result, _vI66539_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",763,3,763,4); // HACK! 
}

//------------------------------
//FUNCTION <93618>: generic_dependency_parser::aux_uncurry: Apply method
void* _fI93618_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93619_inp_uncurry = _arg.data[0];
  _vI93620_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93627:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93623> := inp_uncurry<93619>varname;
      _vI93623_aux__apos_2_mv_1381  = _vI93619_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93623_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93622;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93620>varname;: type void*
      return _vI93620_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93622:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93623_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93626__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_dependency_parser))) ) goto _ml1384_L93621;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93624>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93623>varname));
      _vI93624_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93623_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93625>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93623>varname));
      _vI93625_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93623_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93620> := (Snoc<80397>struct (out<93620>varname, (mk_absolute_filename<17011>stackfun h_param_std_1267<93624>varname)));
      _vI93620_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93620_out, mk_absolute_filename(_vI93624_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93619> := t_param_std_1266<93625>varname;
      _vI93619_inp_uncurry  = _vI93625_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93627;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93621:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <90351>: map_package_requirements_uncurry::pkgconfl: Apply method
void* pkgconfl::apply(void* const &_arg ){
  _vI90356_args = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 721, cols 7 to 8
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrmap_package_requirements_uncurry->_vI90375_spec.EXTRA_PACKAGES, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65082_L90358;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("calpackages, EXTRA_PACKAGES = ", (str<81092>stackfun apply((prj1:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108379 = (::std::string("calpackages, EXTRA_PACKAGES = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(ptrmap_package_requirements_uncurry->_vI90375_spec.EXTRA_PACKAGES) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108379)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 721, cols 7 to 8
    _ifdoelse_bootflx_65082_L90358:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 722, cols 7 to 67
      //allargs<90352>varname = (+<80787>stackfun ((join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (PKGCONFIG_PATH<90349>varname, args<90356>varname)), apply((prj1:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname))), RESH<90350>varname));
      allargs = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrmap_package_requirements_uncurry->PKGCONFIG_PATH, _vI90356_args)) /* apply_stack */, ptrmap_package_requirements_uncurry->_vI90375_spec.EXTRA_PACKAGES)) /* apply_stack */, ptrmap_package_requirements_uncurry->RESH)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 723, cols 7 to 55
      //_genout_urv97920<97920> := (flx_pkgconfig<68435>stackfun allargs<90352>varname);
      _genout_urv97920  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 723, cols 7 to 55
      //_ds2_65102<90353>varname = _genout_urv97920<97920>varname;
      _ds2_65102 = _genout_urv97920; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 723, cols 7 to 55
      //ret<90354>varname = apply((prj0:int * list -> int), _ds2_65102<90353>varname);
      ret = _ds2_65102.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 723, cols 7 to 55
      //s<90355>varname = apply((prj1:int * list -> list), _ds2_65102<90353>varname);
      _vI90355_s = _ds2_65102.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 729, cols 7 to 11
      if(!(!((ret == 0)) ) ) goto _ifdoelse_bootflx_65084_L90360;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[FlxPkg:map_package_requirements] Error ", (str<80203>primfun[int] ret<90354>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<90352>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108380 = (((::std::string("[FlxPkg:map_package_requirements] Error ") + ::flx::rtl::strutil::str<int>(ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108380)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler_uncurry<90386>varname);
      {
      _a6258t_107873 _tmp108381 = (_a6258t_107873)(ptrmap_package_requirements_uncurry->_vI90386_ehandler_uncurry);
      throw ((_tmp108381));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 729, cols 7 to 11
    _ifdoelse_bootflx_65084_L90360:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 730, cols 7 to 15
      //return s<90355>varname;: type void*
      return _vI90355_s;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",731,5,731,6); // HACK! 
}

//------------------------------
//FUNCTION <91116>: runflx::aux_uncurry: Apply method
void* _fI91116_aux_uncurry::apply(_at107697 const &_arg ){
  _vI91117_inp_uncurry = _arg.data[0];
  _vI91118_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L91125:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<91121> := inp_uncurry<91117>varname;
      _vI91121_aux__apos_2_mv_1381  = _vI91117_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI91121_aux__apos_2_mv_1381)==0) ) goto _ml1383_L91120;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<91118>varname;: type void*
      return _vI91118_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L91120:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI91121_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI91124__lam_1385)(FLX_FPAR_PASS this, ptrrunflx))) ) goto _ml1384_L91119;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<91122>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<91121>varname));
      _vI91122_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI91121_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<91123>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<91121>varname));
      _vI91123_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI91121_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<91118> := (Snoc<80397>struct (out<91118>varname, (str<15241>stackfun h_param_std_1267<91122>varname)));
      _vI91118_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI91118_out, _fI15241_str(_vI91122_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<91117> := t_param_std_1266<91123>varname;
      _vI91117_inp_uncurry  = _vI91123_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L91125;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L91119:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66744>: toolchain_clang_linux::cxx_static_library_object_compiler: Apply method
int _fI66744_cxx_static_library_object_compiler::apply(_art107759 const &_arg ){
  _vI66747_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1333, cols 5 to 6
      //result<66746>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_cxx_compile_flags<66687>varname, CCOBJ_STATIC_LIB:cxx_compiler<66684>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), MACROS:(Snoc<80397>struct (apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), "FLX_STATIC_LINK")), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66747>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66747>varname)));
      _vI66746_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_linux->_vI66687_base_cxx_compile_flags, ptrtoolchain_clang_linux->_vI66684_cxx_compiler, ptrtoolchain_clang_linux->_vI66768_config.header_search_dirs, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_linux->_vI66768_config.macros, ::std::string("FLX_STATIC_LINK")))), ::std::string("-o "), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66747_spec.src, _vI66747_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1334, cols 5 to 18
      //return result<66746>varname;: type int
      return _vI66746_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1335,3,1335,4); // HACK! 
}

//------------------------------
//FUNCTION <66711>: toolchain_clang_linux::debug_flags: Apply method
void* _fI66711_debug_flags::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 148, cols 3 to 44
      //return (Snoc<80397>struct (Empty<80385>varname, "-g"));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-g"))));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1226,3,1226,49); // HACK! 
}

//------------------------------
//FUNCTION <89467>: join_uncurry: Apply method
void* join_uncurry::apply(_at107867 const &_arg ){
  _vI89697_x_uncurry = _arg.data[0];
  _vI89698_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //is_empty_mv_1368<103075> := x_uncurry<89697>varname;
      _vI103075_is_empty_mv_1368  = _vI89697_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
      if(!(FLX_VNI(_vI103075_is_empty_mv_1368)==0) ) goto _ml1370_L103074;
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //_urv103072<103072> := (case 1 of bool);
      _urv103072  = 1; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      goto _end_inline_is_empty_103077_L103077;
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
    _ml1370_L103074:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 262, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //_urv103072<103072> := (case 0 of bool);
      _urv103072  = 0; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
    _end_inline_is_empty_103077_L103077:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 404, cols 5 to 9
      if(!_urv103072 ) goto _ifdoend_std_1274_L89699;
    // # C:/projects/felix/src/packages/lists.fdoc: line 397, cols 7 to 15
      //return y<89698>varname;: type void*
      return _vI89698_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 404, cols 5 to 9
    _ifdoend_std_1274_L89699:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 130, cols 5 to 18
      //(deref<89169>primfun[list] &z<89700>ref) = (aux_uncurry<103116>stackfun (x_uncurry<89697>varname, Empty<81156>varname));
      *((void**)&z)  = _fI103116_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107867(_vI89697_x_uncurry, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 131, cols 5 to 25
      // primcall rev_last<89170>primproc[string^2, &list] (&z<89700>ref, &last<89701>ref);
      {
      void** _tmp108383 = (void**)&z;
      void** _tmp108384 = (void**)&last;
      _rev_last(((_tmp108383)),((_tmp108384)),(_at107674*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 402, cols 7 to 24
      // primcall splice<89163>primproc[string^2] (&last<89701>ref, y<89698>varname);
      {
      void** _tmp108385 = (void**)&last;
      
    { // list splice
      //struct node_t { _at107674 elt; void *tail; };
      struct node_t { void *tail; _at107674 elt; };
      void **p = ((_tmp108385));
      while(*p) p = &((node_t*)FLX_VNP(*p))->tail;
      *p = _vI89698_y;
    }
    
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 403, cols 7 to 15
      //return z<89700>varname;: type void*
      return z;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",405,3,405,4); // HACK! 
}

//------------------------------
//FUNCTION <93800>: generic_cxx_compile_for_dynamic_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93800__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <96550>: flx_pkgconfig::check_id::_lam_65250: Apply method
 ::flx::rtl::cl_t _lam_65250::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",248,7,248,56); // HACK! 
}

//------------------------------

//PROCEDURE <85462:> cal_depvars::debugln: Call method
::flx::rtl::con_t * debugln::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI85573_x = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <85462:> cal_depvars::debugln: Resume method
::flx::rtl::con_t *debugln::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*ptrcal_depvars->control).DEBUG_FLX ) goto _ifdoelse_bootflx_65703_L85590;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", x<85573>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108386 = (::std::string("[flx] ") + _vI85573_x ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108386)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1694, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
    _ifdoelse_bootflx_65703_L85590:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1694, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <96159>: fmt::_lam_231: Apply method
 ::flx::rtl::cl_t _lam_231::apply(){
    // # C:/projects/felix/src/packages/numbers.fdoc: line 214, cols 7 to 21
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/numbers.fdoc",214,7,214,21); // HACK! 
}

//------------------------------

//PROCEDURE <67826:> handle_switch: Call method
::flx::rtl::con_t * handle_switch::call(::flx::rtl::con_t *_ptr_caller, _tt107852 const &_arg){
  _caller = _ptr_caller;
  _vI67852_config = _arg.mem_0;
  _vI67853_control = _arg.mem_1;
  arg = _arg.mem_2;
  INIT_PC
  return this;
}

//PROCEDURE <67826:> handle_switch: Resume method
::flx::rtl::con_t *handle_switch::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1321, cols 3 to 7
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--cmd=").size()) == ::std::string("--cmd="))) ) goto _ifdoend_bootflx_65432_L67855;
    // # C:/projects/felix/src/packages/flx.fdoc: line 975, cols 7 to 28
      //text<103368>varname = (copyfrom<81959>primfun[int] (arg<67854>varname, 6));
      _vI103368_text = ::flx::rtl::strutil::substr(arg,6,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_624_L103371;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_output] ", "cmd.flx")), "\x0A")));
      {
      _a14239t_107672 _tmp108387 = (::std::string("[Open_output] ") + ::std::string("cmd.flx") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108387)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
    _ifdoelse_std_624_L103371:;
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv103380<103380> := (raw_fopen_output<8432>primfun "cmd.flx");
      _genout_urv103380  = fopen((::std::string("cmd.flx")).c_str(),"wb"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv103324<103375> := _genout_urv103380<103380>varname;
      _genout_urv103324  = _genout_urv103380; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv103312<103374> := _genout_urv103324<103375>varname;
      _genout_urv103312  = _genout_urv103324; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98870<103373> := _genout_urv103312<103374>varname;
      _vI103373__genout_urv98870  = _genout_urv103312; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv103305<103370> := _genout_urv98870<103373>varname;
      _genout_urv103305  = _vI103373__genout_urv98870; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 419, cols 5 to 28
      //f<103369>varname = _genout_urv103305<103370>varname;
      _vI103369_f = _genout_urv103305; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 420, cols 5 to 15
      // primcall write<8439>primproc (f<103369>varname, (+<14305>primfun (text<103368>varname, ";\x0A")));
      {
      _a14239t_107672 _tmp108388 = _vI103368_text + ::std::string(";\n") ;
      ::flx::rtl::ioutil::write(_vI103369_f,((_tmp108388)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 421, cols 5 to 13
      // primcall fclose<8437>primproc f<103369>varname;
      (void)fclose(_vI103369_f);
    // # C:/projects/felix/src/packages/flx.fdoc: line 977, cols 7 to 35
      //(deref<87162>primfun[bool] apply((prj7:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &bool), control<67853>varname)) = (case 1 of bool);
      *(&_vI67853_control->CMDLINE_INPUT)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65433_L67990;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ("Running command '", text<103368>varname)), ";'")))), "\x0A")));
      {
      _a14239t_107672 _tmp108389 = (::std::string("[flx] ") + ((::std::string("Running command '") + _vI103368_text ) + ::std::string(";'") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108389)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1321, cols 3 to 7
    _ifdoend_bootflx_65432_L67855:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--repl"))) ) goto _ifdoend_bootflx_65434_L67856;
    // # C:/projects/felix/src/packages/flx.fdoc: line 981, cols 5 to 29
      //(deref<87162>primfun[bool] apply((prj57:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &bool), control<67853>varname)) = (case 1 of bool);
      *(&_vI67853_control->REPL_MODE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65433_L67990;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set REPL mode")), "\x0A")));
      {
      _a14239t_107672 _tmp108390 = (::std::string("[flx] ") + ::std::string("Set REPL mode") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108390)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65434_L67856:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--nostdimport"))) ) goto _ifdoend_bootflx_65436_L67857;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103388_L103388;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "No standard library import")), "\x0A")));
      {
      _a14239t_107672 _tmp108391 = (::std::string("[flx] ") + ::std::string("No standard library import") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108391)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 985, cols 5 to 41
    _end_103388_L103388:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 989, cols 5 to 27
      //(deref<85463>primfun[string] apply((prj67:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = "";
      *(&_vI67853_control->STDIMPORT)  = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65436_L67857:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--import=").size()) == ::std::string("--import="))) ) goto _ifdoend_bootflx_65438_L67858;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103398_L103398;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Add import")), "\x0A")));
      {
      _a14239t_107672 _tmp108392 = (::std::string("[flx] ") + ::std::string("Add import") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108392)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 992, cols 4 to 24
    _end_103398_L103398:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 993, cols 4 to 51
      //(deref<80855>primfun[list] apply((prj37:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (+<80787>stackfun (apply((prj37:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67853>varname)), (copyfrom<81959>primfun[int] (arg<67854>varname, 9))));
      *(&_vI67853_control->IMPORTS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67853_control).IMPORTS, ::flx::rtl::strutil::substr(arg,9,arg.size()))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65438_L67858:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--felix=").size()) == ::std::string("--felix="))) ) goto _ifdoend_bootflx_65440_L67859;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103408_L103408;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set install details")), "\x0A")));
      {
      _a14239t_107672 _tmp108393 = (::std::string("[flx] ") + ::std::string("Set install details") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108393)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 996, cols 5 to 34
    _end_103408_L103408:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 960, cols 1 to 2
      //jump to procedure direct tail call setup-from-file_uncurry<89521>directjump (debugln<88398>closure, config<67852>varname, control<67853>varname, (copyfrom<81959>primfun[int] (arg<67854>varname, 8)));
      {
      _pt107730* _tmp108394 = (FLX_NEWP(_pI88398_debugln)(FLX_FPAR_PASS this));
      _a14239t_107672 _tmp108395 = ::flx::rtl::strutil::substr(arg,8,arg.size());
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(_pI89521_setup__hyphen_from__hyphen_file_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(tmp, _tt107853((_tmp108394), _vI67852_config, _vI67853_control, (_tmp108395)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65440_L67859:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--target-subdir=").size()) == ::std::string("--target-subdir="))) ) goto _ifdoend_bootflx_65442_L67860;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103342_L103774;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set target subdirectory")), "\x0A")));
      {
      _a14239t_107672 _tmp108397 = (::std::string("[flx] ") + ::std::string("Set target subdirectory") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108397)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1001, cols 7 to 40
    _end_103342_L103774:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1002, cols 7 to 26
      //a<103771>varname = (copyfrom<81959>primfun[int] (arg<67854>varname, 16));
      _vI103771_a = ::flx::rtl::strutil::substr(arg,16,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1003, cols 7 to 36
      //(deref<85463>primfun[string] apply((prj34:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = a<103771>varname;
      *(&_vI67853_control->FLX_TARGET_SUBDIR)  = _vI103771_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), config<67852>varname)) = (join<82705>stackfun (apply((prj31:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67853>varname)), apply((prj34:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67853>varname))));
      *(&_vI67852_config->FLX_TARGET_DIR)  = _fI82705_join((*_vI67853_control).FLX_INSTALL_DIR, (*_vI67853_control).FLX_TARGET_SUBDIR); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<67852>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun ((join<82705>stackfun (apply((prj31:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67853>varname)), apply((prj34:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67853>varname)))), "config"))));
      *(&_vI67852_config->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(_fI82705_join((*_vI67853_control).FLX_INSTALL_DIR, (*_vI67853_control).FLX_TARGET_SUBDIR), ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS _vI67852_config);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65442_L67860:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--target-dir=").size()) == ::std::string("--target-dir="))) ) goto _ifdoend_bootflx_65444_L67861;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103785_L103785;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set target configuration directory")), "\x0A")));
      {
      _a14239t_107672 _tmp108398 = (::std::string("[flx] ") + ::std::string("Set target configuration directory") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108398)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1008, cols 5 to 49
    _end_103785_L103785:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), config<67852>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 13));
      *(&_vI67852_config->FLX_TARGET_DIR)  = ::flx::rtl::strutil::substr(arg,13,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<67852>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun ((copyfrom<81959>primfun[int] (arg<67854>varname, 13)), "config"))));
      *(&_vI67852_config->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(::flx::rtl::strutil::substr(arg,13,arg.size()), ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS _vI67852_config);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65444_L67861:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--pkgconfig-path+=").size()) == ::std::string("--pkgconfig-path+="))) ) goto _ifdoend_bootflx_65446_L67862;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103799_L103799;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Prepend extra flx_pkgconfig directory to standard path")), "\x0A")));
      {
      _a14239t_107672 _tmp108399 = (::std::string("[flx] ") + ::std::string("Prepend extra flx_pkgconfig directory to standard path") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108399)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1012, cols 5 to 69
    _end_103799_L103799:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1013, cols 5 to 67
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<67852>varname)) = (Snoc<80397>struct (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), *(config<67852>varname)), (copyfrom<81959>primfun[int] (arg<67854>varname, 18))));
      *(&_vI67852_config->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((*_vI67852_config).FLX_CONFIG_DIRS, ::flx::rtl::strutil::substr(arg,18,arg.size())))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65446_L67862:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--toolchain=").size()) == ::std::string("--toolchain="))) ) goto _ifdoend_bootflx_65448_L67863;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103815_L103815;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set toolchain")), "\x0A")));
      {
      _a14239t_107672 _tmp108400 = (::std::string("[flx] ") + ::std::string("Set toolchain") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108400)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1016, cols 5 to 28
    _end_103815_L103815:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1017, cols 5 to 39
      //(deref<85463>primfun[string] apply((prj35:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 12));
      *(&_vI67853_control->FLX_TOOLCHAIN)  = ::flx::rtl::strutil::substr(arg,12,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65448_L67863:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--test=").size()) == ::std::string("--test="))) ) goto _ifdoend_bootflx_65450_L67864;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1020, cols 5 to 23
      //a<67845>varname = (copyfrom<81959>primfun[int] (arg<67854>varname, 7));
      _vI67845_a = ::flx::rtl::strutil::substr(arg,7,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103825_L103825;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set test directory")), "\x0A")));
      {
      _a14239t_107672 _tmp108401 = (::std::string("[flx] ") + ::std::string("Set test directory") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108401)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1021, cols 5 to 33
    _end_103825_L103825:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), config<67852>varname)) = (join<82705>stackfun (a<67845>varname, "host"));
      *(&_vI67852_config->FLX_TARGET_DIR)  = _fI82705_join(_vI67845_a, ::std::string("host")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<67852>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun ((join<82705>stackfun (a<67845>varname, "host")), "config"))));
      *(&_vI67852_config->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(_fI82705_join(_vI67845_a, ::std::string("host")), ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS _vI67852_config);
    // # C:/projects/felix/src/packages/flx.fdoc: line 494, cols 5 to 24
      //(deref<85463>primfun[string] apply((prj7:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), config<67852>varname)) = (join<82705>stackfun (a<67845>varname, "share"));
      *(&_vI67852_config->FLX_SHARE_DIR)  = _fI82705_join(_vI67845_a, ::std::string("share")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS _vI67852_config);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1023, cols 5 to 32
      //(deref<85463>primfun[string] apply((prj31:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = a<67845>varname;
      *(&_vI67853_control->FLX_INSTALL_DIR)  = _vI67845_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1024, cols 5 to 39
      //(deref<85463>primfun[string] apply((prj34:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = "host";
      *(&_vI67853_control->FLX_TARGET_SUBDIR)  = ::std::string("host"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65450_L67864:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--test"))) ) goto _ifdoend_bootflx_65452_L67865;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103351_L103832;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set test directory")), "\x0A")));
      {
      _a14239t_107672 _tmp108402 = (::std::string("[flx] ") + ::std::string("Set test directory") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108402)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1028, cols 7 to 35
    _end_103351_L103832:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1029, cols 7 to 13
      //a<67845>varname = ".";
      _vI67845_a = ::std::string("."); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), config<67852>varname)) = (join<82705>stackfun (a<67845>varname, "host"));
      *(&_vI67852_config->FLX_TARGET_DIR)  = _fI82705_join(_vI67845_a, ::std::string("host")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<67852>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun ((join<82705>stackfun (a<67845>varname, "host")), "config"))));
      *(&_vI67852_config->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(_fI82705_join(_vI67845_a, ::std::string("host")), ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS _vI67852_config);
    // # C:/projects/felix/src/packages/flx.fdoc: line 494, cols 5 to 24
      //(deref<85463>primfun[string] apply((prj7:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), config<67852>varname)) = (join<82705>stackfun (a<67845>varname, "share"));
      *(&_vI67852_config->FLX_SHARE_DIR)  = _fI82705_join(_vI67845_a, ::std::string("share")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS _vI67852_config);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1031, cols 7 to 34
      //(deref<85463>primfun[string] apply((prj31:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = a<67845>varname;
      *(&_vI67853_control->FLX_INSTALL_DIR)  = _vI67845_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1032, cols 7 to 41
      //(deref<85463>primfun[string] apply((prj34:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = "host";
      *(&_vI67853_control->FLX_TARGET_SUBDIR)  = ::std::string("host"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65452_L67865:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--stdout=").size()) == ::std::string("--stdout="))) ) goto _ifdoend_bootflx_65454_L67866;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103843_L103843;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Redirect standard output")), "\x0A")));
      {
      _a14239t_107672 _tmp108403 = (::std::string("[flx] ") + ::std::string("Redirect standard output") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108403)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1036, cols 5 to 39
    _end_103843_L103843:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1039, cols 5 to 32
      //(deref<85463>primfun[string] apply((prj69:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 9));
      *(&_vI67853_control->STDOUT)  = ::flx::rtl::strutil::substr(arg,9,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65454_L67866:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--expect"))) ) goto _ifdoend_bootflx_65456_L67867;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103847_L103847;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "compare stdout with expect file (default name)")), "\x0A")));
      {
      _a14239t_107672 _tmp108404 = (::std::string("[flx] ") + ::std::string("compare stdout with expect file (default name)") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108404)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1042, cols 5 to 61
    _end_103847_L103847:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1045, cols 5 to 29
      //(deref<87163>primfun[int] apply((prj5:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->CHECK_EXPECT)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65456_L67867:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--expect=").size()) == ::std::string("--expect="))) ) goto _ifdoend_bootflx_65458_L67868;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103857_L103857;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "compare stdout with expect file")), "\x0A")));
      {
      _a14239t_107672 _tmp108405 = (::std::string("[flx] ") + ::std::string("compare stdout with expect file") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108405)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1048, cols 5 to 46
    _end_103857_L103857:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1051, cols 5 to 32
      //(deref<85463>primfun[string] apply((prj21:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 9));
      *(&_vI67853_control->EXPECT)  = ::flx::rtl::strutil::substr(arg,9,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1052, cols 5 to 29
      //(deref<87163>primfun[int] apply((prj5:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->CHECK_EXPECT)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65458_L67868:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--input"))) ) goto _ifdoend_bootflx_65460_L67869;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103861_L103861;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "redirect stdin to (default name)")), "\x0A")));
      {
      _a14239t_107672 _tmp108406 = (::std::string("[flx] ") + ::std::string("redirect stdin to (default name)") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108406)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1055, cols 5 to 47
    _end_103861_L103861:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1056, cols 5 to 26
      //(deref<87163>primfun[int] apply((prj60:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->SET_STDIN)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65460_L67869:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--input=").size()) == ::std::string("--input="))) ) goto _ifdoend_bootflx_65462_L67870;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103871_L103871;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "redirect stdin to file")), "\x0A")));
      {
      _a14239t_107672 _tmp108407 = (::std::string("[flx] ") + ::std::string("redirect stdin to file") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108407)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1059, cols 5 to 37
    _end_103871_L103871:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1060, cols 5 to 31
      //(deref<85463>primfun[string] apply((prj68:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 8));
      *(&_vI67853_control->STDIN)  = ::flx::rtl::strutil::substr(arg,8,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1061, cols 5 to 26
      //(deref<87163>primfun[int] apply((prj60:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->SET_STDIN)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65462_L67870:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--show"))) ) goto _ifdoend_bootflx_65464_L67871;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1065, cols 5 to 25
      //(deref<87163>primfun[int] apply((prj61:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->SHOWCODE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65464_L67871:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--clean"))) ) goto _ifdoend_bootflx_65466_L67872;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103875_L103875;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Clear caches")), "\x0A")));
      {
      _a14239t_107672 _tmp108408 = (::std::string("[flx] ") + ::std::string("Clear caches") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108408)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1068, cols 5 to 27
    _end_103875_L103875:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1069, cols 5 to 28
      //(deref<87163>primfun[int] apply((prj6:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->CLEAR_CACHE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65466_L67872:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--force"))) ) goto _ifdoend_bootflx_65468_L67873;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103879_L103879;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Force recompilation")), "\x0A")));
      {
      _a14239t_107672 _tmp108409 = (::std::string("[flx] ") + ::std::string("Force recompilation") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108409)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1072, cols 5 to 34
    _end_103879_L103879:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1075, cols 5 to 26
      //(deref<87163>primfun[int] apply((prj56:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->RECOMPILE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65468_L67873:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--force-compiler"))) ) goto _ifdoend_bootflx_65470_L67874;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103883_L103883;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Force flxg compiler to rebuild everything")), "\x0A")));
      {
      _a14239t_107672 _tmp108410 = (::std::string("[flx] ") + ::std::string("Force flxg compiler to rebuild everything") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108410)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1078, cols 5 to 56
    _end_103883_L103883:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1081, cols 5 to 26
      //(deref<87163>primfun[int] apply((prj56:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->RECOMPILE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1082, cols 5 to 26
      //(deref<87163>primfun[int] apply((prj28:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->FLXG_FORCE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65470_L67874:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--debug-flx"))) ) goto _ifdoend_bootflx_65472_L67875;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1085, cols 5 to 29
      //(deref<87162>primfun[bool] apply((prj14:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &bool), control<67853>varname)) = (case 1 of bool);
      *(&_vI67853_control->DEBUG_FLX)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1086, cols 5 to 21
      //(deref<87163>primfun[int] apply((prj20:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->ECHO)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103887_L103887;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "debug flx tool ON")), "\x0A")));
      {
      _a14239t_107672 _tmp108411 = (::std::string("[flx] ") + ::std::string("debug flx tool ON") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108411)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1087, cols 5 to 32
    _end_103887_L103887:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1088, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj12:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->DEBUG)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65472_L67875:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--debug"))) ) goto _ifdoend_bootflx_65474_L67876;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103891_L103891;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Enable runtime debugging")), "\x0A")));
      {
      _a14239t_107672 _tmp108412 = (::std::string("[flx] ") + ::std::string("Enable runtime debugging") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108412)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1091, cols 5 to 39
    _end_103891_L103891:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1092, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj12:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->DEBUG)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65474_L67876:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--debug-compiler"))) ) goto _ifdoend_bootflx_65476_L67877;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103895_L103895;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Enable compiler debugging")), "\x0A")));
      {
      _a14239t_107672 _tmp108413 = (::std::string("[flx] ") + ::std::string("Enable compiler debugging") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108413)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1095, cols 5 to 40
    _end_103895_L103895:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1096, cols 5 to 31
      //(deref<87163>primfun[int] apply((prj13:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->DEBUG_COMPILER)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65476_L67877:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--compiler-phase=").size()) == ::std::string("--compiler-phase="))) ) goto _ifdoend_bootflx_65478_L67878;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103905_L103905;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Change the compiler phase")), "\x0A")));
      {
      _a14239t_107672 _tmp108414 = (::std::string("[flx] ") + ::std::string("Change the compiler phase") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108414)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1099, cols 5 to 40
    _end_103905_L103905:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1100, cols 5 to 62
      //(deref<85463>primfun[string] apply((prj8:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = (copyfrom<81377>primfun[size] (arg<67854>varname, (len<14304>primfun "--compiler-phase=")));
      *(&_vI67853_control->COMPILER_PHASE)  = ::flx::rtl::strutil::substr(arg,::std::string("--compiler-phase=").size(),arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1101, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj58:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->RUNIT)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65478_L67878:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--nooptimise"))) ) goto _ifdoend_bootflx_65480_L67879;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103909_L103909;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Disable optimisation")), "\x0A")));
      {
      _a14239t_107672 _tmp108415 = (::std::string("[flx] ") + ::std::string("Disable optimisation") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108415)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1104, cols 5 to 35
    _end_103909_L103909:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1105, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj48:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->NOOPTIMISE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1106, cols 5 to 25
      //(deref<87163>primfun[int] apply((prj17:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->DOREDUCE)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65480_L67879:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 175, cols 5 to 18
      //n<103980>varname = arrayindexcount<84335>varname[bool];
      _vI103980_n = 2; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 182, cols 5 to 9
      if(!((0 < _vI103980_n)) ) goto _ifdoelse_std_1626_L103975;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      //i<103981>varname = literal[size]("0");
      _vI103981_i = 0; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
    redo__ll_arrays_5629_L103978:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      if(FLX_UNLIKELY(!(!((_vI103980_n - 1  < _vI103981_i)) ) )) goto _ifdoelse_std_1626_L103975;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //apply((prj0:string^2 -> string), a<103982>varname) = "--compiler-optimise";
      (_vI103982_a.data)[0] = ::std::string("--compiler-optimise"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //apply((prj1:string^2 -> string), a<103982>varname) = "--compiler-optimize";
      (_vI103982_a.data)[1] = ::std::string("--compiler-optimize"); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 180, cols 9 to 13
      if(!(((_vI103982_a.data)[reinterpret< ::flx::rtl::cl_t>(_vI103981_i)] == arg)) ) goto _ifdoend_std_1627_L103979;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 179, cols 11 to 22
      //_urv103972<103972> := (case 1 of bool);
      _urv103972  = 1; //init
    // # C:/projects/felix/src/packages/arrays.fdoc: line 179, cols 11 to 22
      goto _end_inline___bsol_in_103985_L103985;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 180, cols 9 to 13
    _ifdoend_std_1627_L103979:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      // primcall pre_incr<81537>primproc[size] &i<103981>ref;
      {
      _a5094t_107688* _tmp108416 = (_a5094t_107688*)&_vI103981_i;
      ++*((_tmp108416));
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      goto redo__ll_arrays_5629_L103978;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 182, cols 5 to 9
    _ifdoelse_std_1626_L103975:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 183, cols 5 to 17
      //_urv103972<103972> := (case 0 of bool);
      _urv103972  = 0; //init
    // # C:/projects/felix/src/packages/arrays.fdoc: line 204, cols 5 to 52
    _end_inline___bsol_in_103985_L103985:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!_urv103972 ) goto _ifdoend_bootflx_65482_L67880;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103989_L103989;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Enable heavy flxg optimisation")), "\x0A")));
      {
      _a14239t_107672 _tmp108417 = (::std::string("[flx] ") + ::std::string("Enable heavy flxg optimisation") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108417)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1108, cols 5 to 45
    _end_103989_L103989:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1109, cols 5 to 31
      //(deref<87163>primfun[int] apply((prj29:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->FLXG_OPTIMISE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65482_L67880:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--nostdlib"))) ) goto _ifdoend_bootflx_65484_L67881;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103993_L103993;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Do not load standard library")), "\x0A")));
      {
      _a14239t_107672 _tmp108418 = (::std::string("[flx] ") + ::std::string("Do not load standard library") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108418)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1112, cols 5 to 43
    _end_103993_L103993:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1113, cols 5 to 25
      //(deref<87163>primfun[int] apply((prj49:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->NOSTDLIB)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65484_L67881:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--echo"))) ) goto _ifdoend_bootflx_65486_L67882;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103997_L103997;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Echo commands sent to system")), "\x0A")));
      {
      _a14239t_107672 _tmp108419 = (::std::string("[flx] ") + ::std::string("Echo commands sent to system") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108419)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1116, cols 5 to 43
    _end_103997_L103997:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1117, cols 5 to 21
      //(deref<87163>primfun[int] apply((prj20:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->ECHO)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65486_L67882:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--noreduce"))) ) goto _ifdoend_bootflx_65488_L67883;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104001_L104001;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "do not perform reductions")), "\x0A")));
      {
      _a14239t_107672 _tmp108420 = (::std::string("[flx] ") + ::std::string("do not perform reductions") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108420)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1120, cols 5 to 40
    _end_104001_L104001:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1121, cols 5 to 25
      //(deref<87163>primfun[int] apply((prj17:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->DOREDUCE)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65488_L67883:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--doreduce"))) ) goto _ifdoend_bootflx_65490_L67884;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104005_L104005;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "do perform reductions")), "\x0A")));
      {
      _a14239t_107672 _tmp108421 = (::std::string("[flx] ") + ::std::string("do perform reductions") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108421)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1124, cols 5 to 36
    _end_104005_L104005:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1125, cols 5 to 25
      //(deref<87163>primfun[int] apply((prj17:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->DOREDUCE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65490_L67884:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--static"))) ) goto _ifdoend_bootflx_65492_L67885;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104009_L104009;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Compile a statically linked program")), "\x0A")));
      {
      _a14239t_107672 _tmp108422 = (::std::string("[flx] ") + ::std::string("Compile a statically linked program") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108422)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1129, cols 5 to 50
    _end_104009_L104009:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1130, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj64:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->STATIC)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1131, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj43:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->LINKEXE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65492_L67885:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--staticlib"))) ) goto _ifdoend_bootflx_65494_L67886;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104013_L104013;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "make a static link library (instead of a program)")), "\x0A")));
      {
      _a14239t_107672 _tmp108423 = (::std::string("[flx] ") + ::std::string("make a static link library (instead of a program)") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108423)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1134, cols 5 to 64
    _end_104013_L104013:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1135, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj64:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->STATIC)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1136, cols 5 to 26
      //(deref<87163>primfun[int] apply((prj65:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->STATICLIB)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1137, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj58:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->RUNIT)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1138, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj43:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->LINKEXE)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65494_L67886:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--exe"))) ) goto _ifdoend_bootflx_65496_L67887;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104017_L104017;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "make an executable")), "\x0A")));
      {
      _a14239t_107672 _tmp108424 = (::std::string("[flx] ") + ::std::string("make an executable") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108424)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1141, cols 5 to 33
    _end_104017_L104017:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1142, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj43:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->LINKEXE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65496_L67887:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--inline=").size()) == ::std::string("--inline="))) ) goto _ifdoend_bootflx_65498_L67888;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104027_L104027;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set inline aggressiveness")), "\x0A")));
      {
      _a14239t_107672 _tmp108425 = (::std::string("[flx] ") + ::std::string("Set inline aggressiveness") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108425)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1145, cols 5 to 40
    _end_104027_L104027:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1146, cols 5 to 37
      //(deref<87163>primfun[int] apply((prj39:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = (_ctor_int<5271>primfun (copyfrom<81959>primfun[int] (arg<67854>varname, 9)));
      *(&_vI67853_control->INLINE)  = static_cast<int>(::std::atoi((::flx::rtl::strutil::substr(arg,9,arg.size())).c_str())); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65498_L67888:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--inline"))) ) goto _ifdoend_bootflx_65500_L67889;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104031_L104031;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set inline aggressiveness")), "\x0A")));
      {
      _a14239t_107672 _tmp108426 = (::std::string("[flx] ") + ::std::string("Set inline aggressiveness") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108426)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1149, cols 5 to 40
    _end_104031_L104031:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1150, cols 5 to 25
      //(deref<87163>primfun[int] apply((prj39:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 100;
      *(&_vI67853_control->INLINE)  = 100; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65500_L67889:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--noinline"))) ) goto _ifdoend_bootflx_65502_L67890;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104035_L104035;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Disable inlining (NOT RECOMMENDED)")), "\x0A")));
      {
      _a14239t_107672 _tmp108427 = (::std::string("[flx] ") + ::std::string("Disable inlining (NOT RECOMMENDED)") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108427)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1153, cols 5 to 49
    _end_104035_L104035:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1154, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj39:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->INLINE)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65502_L67890:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--version"))) ) goto _ifdoend_bootflx_65504_L67891;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104039_L104039;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Print Felix version and exit")), "\x0A")));
      {
      _a14239t_107672 _tmp108428 = (::std::string("[flx] ") + ::std::string("Print Felix version and exit") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108428)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1157, cols 5 to 43
    _end_104039_L104039:;
    // # C:/projects/felix/src/packages/io.fdoc: line 440, cols 53 to 69
      // primcall write<8439>primproc (cstdout<8414>varname, "version ");
      ::flx::rtl::ioutil::write(stdout,(::std::string("version ")));
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun (felix_version<15994>varname, "\x0A")));
      {
      _a14239t_107672 _tmp108429 = ::std::string("2016.07.12-rc1") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108429)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1160, cols 5 to 20
      // primcall exit<7637>primproc 0;
      ::std::exit(0);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65504_L67891:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--config"))) ) goto _ifdoend_bootflx_65506_L67892;
    // # C:/projects/felix/src/packages/flx.fdoc: line 459, cols 7 to 17
      //s<104057>varname = "";
      _vI104057_s = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 460, cols 7 to 23
      // primcall reserve<87393>primproc[int] (&s<104057>ref, 1000);
      {
      _a14239t_107672* _tmp108430 = (_a14239t_107672*)&_vI104057_s;
      ((_tmp108430))->reserve(1000);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 461, cols 7 to 49
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("(FLX_SHARE_DIR=", apply((prj7:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108431 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108432 = (::std::string("(FLX_SHARE_DIR=") + (*_vI67852_config ).FLX_SHARE_DIR ) + ::std::string(",\n") ;
      ((_tmp108431))->append((_tmp108432));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 462, cols 7 to 51
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("FLX_TARGET_DIR=", apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108433 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108434 = (::std::string("FLX_TARGET_DIR=") + (*_vI67852_config ).FLX_TARGET_DIR ) + ::std::string(",\n") ;
      ((_tmp108433))->append((_tmp108434));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 463, cols 7 to 46
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("FLX_HOME_DIR=", apply((prj2:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108435 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108436 = (::std::string("FLX_HOME_DIR=") + (*_vI67852_config ).FLX_HOME_DIR ) + ::std::string(",\n") ;
      ((_tmp108435))->append((_tmp108436));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 464, cols 7 to 52
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("FLX_PROFILE_DIR=", apply((prj5:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108437 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108438 = (::std::string("FLX_PROFILE_DIR=") + (*_vI67852_config ).FLX_PROFILE_DIR ) + ::std::string(",\n") ;
      ((_tmp108437))->append((_tmp108438));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 465, cols 7 to 48
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("FLX_CACHE_DIR=", apply((prj0:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108439 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108440 = (::std::string("FLX_CACHE_DIR=") + (*_vI67852_config ).FLX_CACHE_DIR ) + ::std::string(",\n") ;
      ((_tmp108439))->append((_tmp108440));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 466, cols 7 to 50
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("FLX_OUTPUT_DIR=", apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp108441 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108442 = (::std::string("FLX_OUTPUT_DIR=") + (*_vI67852_config ).FLX_OUTPUT_DIR ) + ::std::string(",\n") ;
      ((_tmp108441))->append((_tmp108442));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 467, cols 7 to 50
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("FLX_LIB_DIRS=", (str<81092>stackfun apply((prj3:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname))))), ",\x0A")));
      {
      _a14239t_107672* _tmp108443 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108444 = (::std::string("FLX_LIB_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI67852_config ).FLX_LIB_DIRS) /* apply_stack */ ) + ::std::string(",\n") ;
      ((_tmp108443))->append((_tmp108444));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 468, cols 7 to 56
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("FLX_CONFIG_DIRS=", (str<81092>stackfun apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname))))), ",\x0A")));
      {
      _a14239t_107672* _tmp108445 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108446 = (::std::string("FLX_CONFIG_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI67852_config ).FLX_CONFIG_DIRS) /* apply_stack */ ) + ::std::string(",\n") ;
      ((_tmp108445))->append((_tmp108446));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 469, cols 7 to 50
      // primcall +=<14301>primproc (&s<104057>ref, (+<14305>primfun ((+<14305>primfun ("FLX_RTL_DIRS=", (str<81092>stackfun apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<67852>varname))))), ")\x0A")));
      {
      _a14239t_107672* _tmp108447 = (_a14239t_107672*)&_vI104057_s;
      _a14239t_107672 _tmp108448 = (::std::string("FLX_RTL_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI67852_config ).FLX_RTL_DIRS) /* apply_stack */ ) + ::std::string(")\n") ;
      ((_tmp108447))->append((_tmp108448));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun (s<104057>varname, "\x0A")));
      {
      _a14239t_107672 _tmp108449 = _vI104057_s + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108449)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1164, cols 5 to 20
      // primcall exit<7637>primproc 0;
      ::std::exit(0);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65506_L67892:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--options"))) ) goto _ifdoend_bootflx_65508_L67893;
    // # C:/projects/felix/src/packages/flx.fdoc: line 660, cols 1 to 2
      //run procedure stackcall print_options<68156>stackproc  (deref<80489>primfun[record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list))] control<67853>varname);
      {
      _art107702 _tmp108450 = *_vI67853_control ;
      print_options(FLX_FPAR_PASS_ONLY)
      .stack_call((_tmp108450));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1168, cols 5 to 20
      // primcall exit<7637>primproc 0;
      ::std::exit(0);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65508_L67893:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--where"))) ) goto _ifdoend_bootflx_65510_L67894;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104062_L104062;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Print location of install directory and exit")), "\x0A")));
      {
      _a14239t_107672 _tmp108452 = (::std::string("[flx] ") + ::std::string("Print location of install directory and exit") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108452)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1171, cols 5 to 59
    _end_104062_L104062:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun (apply((prj31:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67853>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108453 = (*_vI67853_control).FLX_INSTALL_DIR + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108453)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1173, cols 5 to 20
      // primcall exit<7637>primproc 0;
      ::std::exit(0);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65510_L67894:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--time"))) ) goto _ifdoend_bootflx_65512_L67895;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104068_L104068;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Time program execution and print after running")), "\x0A")));
      {
      _a14239t_107672 _tmp108454 = (::std::string("[flx] ") + ::std::string("Time program execution and print after running") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108454)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1176, cols 5 to 61
    _end_104068_L104068:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1177, cols 5 to 21
      //(deref<87163>primfun[int] apply((prj70:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->TIME)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65512_L67895:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--compile-time"))) ) goto _ifdoend_bootflx_65514_L67896;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104072_L104072;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Print time of Felix compiler phases")), "\x0A")));
      {
      _a14239t_107672 _tmp108455 = (::std::string("[flx] ") + ::std::string("Print time of Felix compiler phases") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108455)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1180, cols 5 to 50
    _end_104072_L104072:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1181, cols 5 to 30
      //(deref<87163>primfun[int] apply((prj9:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->COMPILER_TIME)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65514_L67896:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--output_dir=").size()) == ::std::string("--output_dir=")) || (::flx::rtl::strutil::substr(arg,0,::std::string("--output-dir=").size()) == ::std::string("--output-dir=")) ) ) goto _ifdoend_bootflx_65516_L67897;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104088_L104088;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set the directory for compiler generated C++ files")), "\x0A")));
      {
      _a14239t_107672 _tmp108456 = (::std::string("[flx] ") + ::std::string("Set the directory for compiler generated C++ files") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108456)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1185, cols 5 to 65
    _end_104088_L104088:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1186, cols 5 to 40
      //(deref<85463>primfun[string] apply((prj4:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), config<67852>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 13));
      *(&_vI67852_config->FLX_OUTPUT_DIR)  = ::flx::rtl::strutil::substr(arg,13,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65516_L67897:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--bundle_dir=").size()) == ::std::string("--bundle_dir=")) || (::flx::rtl::strutil::substr(arg,0,::std::string("--bundle-dir=").size()) == ::std::string("--bundle-dir=")) ) ) goto _ifdoend_bootflx_65518_L67898;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104104_L104104;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Output files needed for C++ compilation into this folder (directly by basename)")), "\x0A")));
      {
      _a14239t_107672 _tmp108457 = (::std::string("[flx] ") + ::std::string("Output files needed for C++ compilation into this folder (directly by basename)") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108457)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1189, cols 5 to 94
    _end_104104_L104104:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1190, cols 5 to 42
      //(deref<88401>primfun[opt] apply((prj1:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &opt), control<67853>varname)) = (Some<80915>struct (copyfrom<81959>primfun[int] (arg<67854>varname, 13)));
      *(&_vI67853_control->BUNDLE_DIR)  = FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (::flx::rtl::strutil::substr(arg,13,arg.size()))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65518_L67898:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--cache_dir=").size()) == ::std::string("--cache_dir=")) || (::flx::rtl::strutil::substr(arg,0,::std::string("--cache-dir=").size()) == ::std::string("--cache-dir=")) ) ) goto _ifdoend_bootflx_65520_L67899;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104120_L104120;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set the directory for compiler generated *.par files")), "\x0A")));
      {
      _a14239t_107672 _tmp108458 = (::std::string("[flx] ") + ::std::string("Set the directory for compiler generated *.par files") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108458)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1193, cols 5 to 67
    _end_104120_L104120:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1194, cols 5 to 39
      //(deref<85463>primfun[string] apply((prj0:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), config<67852>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 12));
      *(&_vI67852_config->FLX_CACHE_DIR)  = ::flx::rtl::strutil::substr(arg,12,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65520_L67899:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--usage=prototype"))) ) goto _ifdoend_bootflx_65522_L67900;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104124_L104124;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set usage prototyping")), "\x0A")));
      {
      _a14239t_107672 _tmp108459 = (::std::string("[flx] ") + ::std::string("Set usage prototyping") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108459)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1197, cols 5 to 36
    _end_104124_L104124:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1198, cols 5 to 34
      //(deref<85463>primfun[string] apply((prj72:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = "prototype";
      *(&_vI67853_control->USAGE)  = ::std::string("prototype"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1199, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj48:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->NOOPTIMISE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1200, cols 5 to 45
      //(deref<80855>primfun[list] apply((prj51:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (Snoc<80397>struct (Empty<80385>varname, "-O1"));
      *(&_vI67853_control->OPTIMISE)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-O1")))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1201, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj17:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->DOREDUCE)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1202, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj39:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 5;
      *(&_vI67853_control->INLINE)  = 5; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65522_L67900:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 175, cols 5 to 18
      //n<104137>varname = arrayindexcount<84335>varname[bool];
      _vI104137_n = 2; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 182, cols 5 to 9
      if(!((0 < _vI104137_n)) ) goto _ifdoelse_std_1626_L104132;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      //i<104138>varname = literal[size]("0");
      _vI104138_i = 0; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
    redo__ll_arrays_5629_L104135:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      if(FLX_UNLIKELY(!(!((_vI104137_n - 1  < _vI104138_i)) ) )) goto _ifdoelse_std_1626_L104132;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //apply((prj0:string^2 -> string), a<104139>varname) = "--usage=debugging";
      (_vI104139_a.data)[0] = ::std::string("--usage=debugging"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //apply((prj1:string^2 -> string), a<104139>varname) = "--usage=debug";
      (_vI104139_a.data)[1] = ::std::string("--usage=debug"); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 180, cols 9 to 13
      if(!(((_vI104139_a.data)[reinterpret< ::flx::rtl::cl_t>(_vI104138_i)] == arg)) ) goto _ifdoend_std_1627_L104136;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 179, cols 11 to 22
      //_urv104129<104129> := (case 1 of bool);
      _urv104129  = 1; //init
    // # C:/projects/felix/src/packages/arrays.fdoc: line 179, cols 11 to 22
      goto _end_inline___bsol_in_104142_L104142;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 180, cols 9 to 13
    _ifdoend_std_1627_L104136:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      // primcall pre_incr<81537>primproc[size] &i<104138>ref;
      {
      _a5094t_107688* _tmp108460 = (_a5094t_107688*)&_vI104138_i;
      ++*((_tmp108460));
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      goto redo__ll_arrays_5629_L104135;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 182, cols 5 to 9
    _ifdoelse_std_1626_L104132:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 183, cols 5 to 17
      //_urv104129<104129> := (case 0 of bool);
      _urv104129  = 0; //init
    // # C:/projects/felix/src/packages/arrays.fdoc: line 204, cols 5 to 52
    _end_inline___bsol_in_104142_L104142:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!_urv104129 ) goto _ifdoend_bootflx_65524_L67901;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104146_L104146;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set usage debugging")), "\x0A")));
      {
      _a14239t_107672 _tmp108461 = (::std::string("[flx] ") + ::std::string("Set usage debugging") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108461)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1205, cols 5 to 34
    _end_104146_L104146:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1206, cols 5 to 34
      //(deref<85463>primfun[string] apply((prj72:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = "debugging";
      *(&_vI67853_control->USAGE)  = ::std::string("debugging"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1207, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj48:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->NOOPTIMISE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1208, cols 5 to 24
      //(deref<87163>primfun[int] apply((prj12:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->DEBUG)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1209, cols 5 to 26
      //(deref<87163>primfun[int] apply((prj17:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->DOREDUCE)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1210, cols 5 to 45
      //(deref<80855>primfun[list] apply((prj51:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (Snoc<80397>struct (Empty<80385>varname, "-O0"));
      *(&_vI67853_control->OPTIMISE)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-O0")))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1211, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj39:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 5;
      *(&_vI67853_control->INLINE)  = 5; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65524_L67901:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--usage=production"))) ) goto _ifdoend_bootflx_65526_L67902;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104154_L104154;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set usage production")), "\x0A")));
      {
      _a14239t_107672 _tmp108462 = (::std::string("[flx] ") + ::std::string("Set usage production") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108462)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1214, cols 5 to 35
    _end_104154_L104154:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1215, cols 5 to 35
      //(deref<85463>primfun[string] apply((prj72:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = "production";
      *(&_vI67853_control->USAGE)  = ::std::string("production"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1216, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj17:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->DOREDUCE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1217, cols 5 to 45
      //(deref<80855>primfun[list] apply((prj51:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (Snoc<80397>struct (Empty<80385>varname, "-O2"));
      *(&_vI67853_control->OPTIMISE)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-O2")))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1218, cols 5 to 24
      //(deref<87163>primfun[int] apply((prj39:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 25;
      *(&_vI67853_control->INLINE)  = 25; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1219, cols 5 to 30
      //(deref<87163>primfun[int] apply((prj29:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->FLXG_OPTIMISE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65526_L67902:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--usage=hyperlight"))) ) goto _ifdoend_bootflx_65528_L67903;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104162_L104162;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set usage hyperlight")), "\x0A")));
      {
      _a14239t_107672 _tmp108463 = (::std::string("[flx] ") + ::std::string("Set usage hyperlight") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108463)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1222, cols 5 to 35
    _end_104162_L104162:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1223, cols 5 to 35
      //(deref<85463>primfun[string] apply((prj72:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = "hyperlight";
      *(&_vI67853_control->USAGE)  = ::std::string("hyperlight"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1224, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj17:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->DOREDUCE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1225, cols 5 to 45
      //(deref<80855>primfun[list] apply((prj51:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (Snoc<80397>struct (Empty<80385>varname, "-O2"));
      *(&_vI67853_control->OPTIMISE)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-O2")))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1226, cols 5 to 25
      //(deref<87163>primfun[int] apply((prj39:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 100;
      *(&_vI67853_control->INLINE)  = 100; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1227, cols 5 to 30
      //(deref<87163>primfun[int] apply((prj29:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->FLXG_OPTIMISE)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65528_L67903:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--help"))) ) goto _ifdoend_bootflx_65530_L67904;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1230, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj55:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->PRINT_HELP)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65530_L67904:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("-c"))) ) goto _ifdoend_bootflx_65532_L67905;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104170_L104170;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Compile program but do not run it")), "\x0A")));
      {
      _a14239t_107672 _tmp108464 = (::std::string("[flx] ") + ::std::string("Compile program but do not run it") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108464)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1233, cols 5 to 48
    _end_104170_L104170:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1234, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj58:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->RUNIT)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65532_L67905:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("-I").size()) == ::std::string("-I"))) ) goto _ifdoend_bootflx_65534_L67906;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104180_L104180;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set include directories for both Felix and C/C++")), "\x0A")));
      {
      _a14239t_107672 _tmp108465 = (::std::string("[flx] ") + ::std::string("Set include directories for both Felix and C/C++") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108465)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1237, cols 5 to 63
    _end_104180_L104180:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1238, cols 5 to 59
      //(deref<80855>primfun[list] apply((prj3:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<67852>varname)) = (+<80787>stackfun (apply((prj3:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), *(config<67852>varname)), (copyfrom<81959>primfun[int] (arg<67854>varname, 2))));
      *(&_vI67852_config->FLX_LIB_DIRS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67852_config).FLX_LIB_DIRS, ::flx::rtl::strutil::substr(arg,2,arg.size()))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1239, cols 5 to 59
      //(deref<80855>primfun[list] apply((prj6:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<67852>varname)) = (+<80787>stackfun (apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), *(config<67852>varname)), (copyfrom<81959>primfun[int] (arg<67854>varname, 2))));
      *(&_vI67852_config->FLX_RTL_DIRS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67852_config).FLX_RTL_DIRS, ::flx::rtl::strutil::substr(arg,2,arg.size()))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65534_L67906:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--nofelix"))) ) goto _ifdoend_bootflx_65536_L67907;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104184_L104184;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Do not translate Felix code, just compile generated C++ (used to debug at C++ level)")), "\x0A")));
      {
      _a14239t_107672 _tmp108466 = (::std::string("[flx] ") + ::std::string("Do not translate Felix code, just compile generated C++ (used to debug at C++ level)") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108466)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1242, cols 5 to 99
    _end_104184_L104184:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1243, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj26:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->FELIX)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65536_L67907:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--nocc"))) ) goto _ifdoend_bootflx_65538_L67908;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104188_L104188;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Do not run the C/C++ compiler, just generate C++ source code and exit; implies -c and --nolink")), "\x0A")));
      {
      _a14239t_107672 _tmp108467 = (::std::string("[flx] ") + ::std::string("Do not run the C/C++ compiler, just generate C++ source code and exit; implies -c and --nolink") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108467)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1246, cols 5 to 109
    _end_104188_L104188:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1247, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj3:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->CCOMPILEIT)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65538_L67908:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--nolink"))) ) goto _ifdoend_bootflx_65540_L67909;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104192_L104192;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Do not link object code to an executable, just generate and compile the C++ source code; implies -c")), "\x0A")));
      {
      _a14239t_107672 _tmp108468 = (::std::string("[flx] ") + ::std::string("Do not link object code to an executable, just generate and compile the C++ source code; implies -c") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108468)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1250, cols 5 to 114
    _end_104192_L104192:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1251, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj44:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->LINKIT)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65540_L67909:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--run-only"))) ) goto _ifdoend_bootflx_65542_L67910;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104196_L104196;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Run the binary executable without any compilation. Must exist!")), "\x0A")));
      {
      _a14239t_107672 _tmp108469 = (::std::string("[flx] ") + ::std::string("Run the binary executable without any compilation. Must exist!") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108469)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1254, cols 5 to 77
    _end_104196_L104196:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1255, cols 5 to 21
      //(deref<87163>primfun[int] apply((prj26:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->FELIX)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1256, cols 5 to 27
      //(deref<87163>primfun[int] apply((prj3:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->CCOMPILEIT)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1257, cols 5 to 23
      //(deref<87163>primfun[int] apply((prj44:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->LINKIT)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1258, cols 5 to 24
      //(deref<87163>primfun[int] apply((prj43:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->LINKEXE)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1259, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj58:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->RUNIT)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1260, cols 5 to 31
      //(deref<87163>primfun[int] apply((prj74:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->VALIDATE_CACHE)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1261, cols 5 to 35
      //(deref<87163>primfun[int] apply((prj4:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->CHECK_DEPENDENCIES)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1262, cols 5 to 24
      //(deref<87163>primfun[int] apply((prj59:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->RUNONLY)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65542_L67910:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("-l").size()) == ::std::string("-l")) || (::flx::rtl::strutil::substr(arg,0,::std::string("-L").size()) == ::std::string("-L")) ) ) goto _ifdoend_bootflx_65544_L67911;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104212_L104212;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set extra switched for linker")), "\x0A")));
      {
      _a14239t_107672 _tmp108470 = (::std::string("[flx] ") + ::std::string("Set extra switched for linker") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108470)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1265, cols 5 to 44
    _end_104212_L104212:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1266, cols 5 to 61
      //(deref<80855>primfun[list] apply((prj42:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (+<80787>stackfun (apply((prj42:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67853>varname)), arg<67854>varname));
      *(&_vI67853_control->LINKER_SWITCHES)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67853_control).LINKER_SWITCHES, arg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65544_L67911:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("-D").size()) == ::std::string("-D"))) ) goto _ifdoend_bootflx_65546_L67912;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104222_L104222;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Set extra macros for C++ compilation")), "\x0A")));
      {
      _a14239t_107672 _tmp108471 = (::std::string("[flx] ") + ::std::string("Set extra macros for C++ compilation") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108471)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1269, cols 5 to 51
    _end_104222_L104222:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1270, cols 5 to 43
      //(deref<80855>primfun[list] apply((prj46:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (+<80787>stackfun (apply((prj46:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67853>varname)), arg<67854>varname));
      *(&_vI67853_control->MACROS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67853_control).MACROS, arg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65546_L67912:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 175, cols 5 to 18
      //n<104293>varname = arrayindexcount<84297>varname[4];
      n = 4; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 182, cols 5 to 9
      if(!((0 < n)) ) goto _ifdoelse_std_1626_L104288;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      //i<104294>varname = literal[size]("0");
      _vI104294_i = 0; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
    redo__ll_arrays_5629_L104291:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      if(FLX_UNLIKELY(!(!((n - 1  < _vI104294_i)) ) )) goto _ifdoelse_std_1626_L104288;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //apply((prj0:string^4 -> string), a<104295>varname) = "-O0";
      (_vI104295_a.data)[0] = ::std::string("-O0"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //apply((prj1:string^4 -> string), a<104295>varname) = "-O1";
      (_vI104295_a.data)[1] = ::std::string("-O1"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //apply((prj2:string^4 -> string), a<104295>varname) = "-O2";
      (_vI104295_a.data)[2] = ::std::string("-O2"); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      //apply((prj3:string^4 -> string), a<104295>varname) = "-O3";
      (_vI104295_a.data)[3] = ::std::string("-O3"); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 180, cols 9 to 13
      if(!(((_vI104295_a.data)[reinterpret< ::flx::rtl::cl_t>(_vI104294_i)] == arg)) ) goto _ifdoend_std_1627_L104292;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 179, cols 11 to 22
      //_urv104285<104285> := (case 1 of bool);
      _urv104285  = 1; //init
    // # C:/projects/felix/src/packages/arrays.fdoc: line 179, cols 11 to 22
      goto _end_inline___bsol_in_104298_L104298;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 180, cols 9 to 13
    _ifdoend_std_1627_L104292:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      // primcall pre_incr<81537>primproc[size] &i<104294>ref;
      {
      _a5094t_107688* _tmp108472 = (_a5094t_107688*)&_vI104294_i;
      ++*((_tmp108472));
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 181, cols 7 to 11
      goto redo__ll_arrays_5629_L104291;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 182, cols 5 to 9
    _ifdoelse_std_1626_L104288:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 183, cols 5 to 17
      //_urv104285<104285> := (case 0 of bool);
      _urv104285  = 0; //init
    // # C:/projects/felix/src/packages/arrays.fdoc: line 204, cols 5 to 52
    _end_inline___bsol_in_104298_L104298:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!_urv104285 ) goto _ifdoend_bootflx_65548_L67913;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104302_L104302;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set C++ compilation optimisation ", arg<67854>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108473 = (::std::string("[flx] ") + (::std::string("Set C++ compilation optimisation ") + arg ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108473)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1273, cols 5 to 55
    _end_104302_L104302:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1274, cols 5 to 42
      //(deref<80855>primfun[list] apply((prj51:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (Snoc<80397>struct (Empty<80385>varname, arg<67854>varname));
      *(&_vI67853_control->OPTIMISE)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, arg))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65548_L67913:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("-f").size()) == ::std::string("-f"))) ) goto _ifdoend_bootflx_65550_L67914;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104316_L104316;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set C++ compilation switch ", arg<67854>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108474 = (::std::string("[flx] ") + (::std::string("Set C++ compilation switch ") + arg ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108474)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1277, cols 5 to 47
    _end_104316_L104316:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1278, cols 5 to 59
      //(deref<80855>primfun[list] apply((prj22:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (+<80787>stackfun (apply((prj22:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67853>varname)), arg<67854>varname));
      *(&_vI67853_control->EXTRA_CCFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67853_control).EXTRA_CCFLAGS, arg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65550_L67914:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--cflags=").size()) == ::std::string("--cflags="))) ) goto _ifdoend_bootflx_65552_L67915;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1282, cols 7 to 29
      //flags<104323>varname = (copyfrom<81959>primfun[int] (arg<67854>varname, 9));
      flags = ::flx::rtl::strutil::substr(arg,9,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_103360_L104326;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set C++ compilation switch ", flags<104323>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108475 = (::std::string("[flx] ") + (::std::string("Set C++ compilation switch ") + flags ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108475)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1283, cols 7 to 52
    _end_103360_L104326:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1284, cols 7 to 63
      //(deref<80855>primfun[list] apply((prj22:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (+<80787>stackfun (apply((prj22:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67853>varname)), flags<104323>varname));
      *(&_vI67853_control->EXTRA_CCFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67853_control).EXTRA_CCFLAGS, flags)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65552_L67915:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("-W").size()) == ::std::string("-W"))) ) goto _ifdoend_bootflx_65554_L67916;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104337_L104337;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set C++ warning switch ", arg<67854>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108476 = (::std::string("[flx] ") + (::std::string("Set C++ warning switch ") + arg ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108476)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1288, cols 5 to 43
    _end_104337_L104337:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1289, cols 5 to 59
      //(deref<80855>primfun[list] apply((prj22:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (+<80787>stackfun (apply((prj22:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67853>varname)), arg<67854>varname));
      *(&_vI67853_control->EXTRA_CCFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67853_control).EXTRA_CCFLAGS, arg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65554_L67916:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--pkg=").size()) == ::std::string("--pkg="))) ) goto _ifdoend_bootflx_65556_L67917;
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _end_104347_L104347;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Add pkgconfig package to link")), "\x0A")));
      {
      _a14239t_107672 _tmp108477 = (::std::string("[flx] ") + ::std::string("Add pkgconfig package to link") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108477)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1292, cols 5 to 44
    _end_104347_L104347:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1293, cols 5 to 46
      //(deref<80855>primfun[list] apply((prj80:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67853>varname)) = (+<80787>stackfun (apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67853>varname)), (copyfrom<81959>primfun[int] (arg<67854>varname, 6))));
      *(&_vI67853_control->pkgs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI67853_control).pkgs, ::flx::rtl::strutil::substr(arg,6,arg.size()))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65556_L67917:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--indir=").size()) == ::std::string("--indir="))) ) goto _ifdoend_bootflx_65558_L67918;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1296, cols 5 to 33
      //(deref<85463>primfun[string] apply((prj38:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 8));
      *(&_vI67853_control->INDIR)  = ::flx::rtl::strutil::substr(arg,8,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65433_L67990;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set input directory for regexp to ", apply((prj38:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67853>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108478 = (::std::string("[flx] ") + (::std::string("Set input directory for regexp to ") + (*_vI67853_control).INDIR ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108478)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65558_L67918:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((::flx::rtl::strutil::substr(arg,0,::std::string("--regex=").size()) == ::std::string("--regex="))) ) goto _ifdoend_bootflx_65560_L67919;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1300, cols 5 to 35
      //(deref<85463>primfun[string] apply((prj40:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67853>varname)) = (copyfrom<81959>primfun[int] (arg<67854>varname, 8));
      *(&_vI67853_control->INREGEX)  = ::flx::rtl::strutil::substr(arg,8,arg.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65433_L67990;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set input regex to ", apply((prj40:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67853>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108479 = (::std::string("[flx] ") + (::std::string("Set input regex to ") + (*_vI67853_control).INREGEX ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108479)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65560_L67919:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--nonstop"))) ) goto _ifdoend_bootflx_65562_L67920;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1304, cols 5 to 24
      //(deref<87163>primfun[int] apply((prj47:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->NONSTOP)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65433_L67990;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set batch processing mode to nonstop ", (str<80203>primfun[int] apply((prj47:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), *(control<67853>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp108480 = (::std::string("[flx] ") + (::std::string("Set batch processing mode to nonstop ") + ::flx::rtl::strutil::str<int>((*_vI67853_control).NONSTOP) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108480)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65562_L67920:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--c++"))) ) goto _ifdoend_bootflx_65564_L67921;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1308, cols 5 to 24
      //(deref<87163>primfun[int] apply((prj10:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->CXXONLY)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1309, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj26:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->FELIX)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65433_L67990;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++ only, no Felix")), "\x0A")));
      {
      _a14239t_107672 _tmp108481 = (::std::string("[flx] ") + ::std::string("C++ only, no Felix") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108481)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65564_L67921:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
      if(!((arg == ::std::string("--ocaml"))) ) goto _ifdoend_bootflx_65566_L67922;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1313, cols 5 to 26
      //(deref<87163>primfun[int] apply((prj50:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 1;
      *(&_vI67853_control->OCAMLONLY)  = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1314, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj26:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &int), control<67853>varname)) = 0;
      *(&_vI67853_control->FELIX)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*_vI67853_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65433_L67990;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Ocaml only, no Felix")), "\x0A")));
      {
      _a14239t_107672 _tmp108482 = (::std::string("[flx] ") + ::std::string("Ocaml only, no Felix") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108482)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 3 to 20
    _ifdoend_bootflx_65566_L67922:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Unknown switch '", arg<67854>varname)), "'")), "\x0A")));
      {
      _a14239t_107672 _tmp108483 = ((::std::string("Unknown switch '") + arg ) + ::std::string("'") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108483)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1320, cols 5 to 19
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1321, cols 3 to 7
    _ifdoelse_bootflx_65433_L67990:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1322, cols 9 to 2
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <97000>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI97000__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <106335>: flx_processing::ocaml_compile::iterator'2: Apply method
void* _fI106335_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L106336:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<106340> := xs<106334>varname;
      _vI106340_iterator__apos_2_mv_1563  = ptrocaml_compile->_vI106334_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI106340_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI106343__lam_1566)(FLX_FPAR_PASS this, ptrocaml_compile, ptrflx_processing))) ) goto _ml1565_L106339;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<106341>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<106340>varname));
      _vI106341_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI106340_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<106342>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<106340>varname));
      _vI106342_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI106340_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<106334>varname = t_param_std_1318<106342>varname;
      ptrocaml_compile->_vI106334_xs = _vI106342_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108484)
      //yield (Some<80915>struct h_param_std_1319<106341>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI106341_h_param_std_1319));//yield
    FLX_CASE_LABEL(108484)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L106336;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L106339:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI106340_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L106338;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L106338:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L106336;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <92963>: toolchain_msvc_win32::dependency_parser::_lam_1457: Apply method
 ::flx::rtl::cl_t _lam_1457::apply(_a14239t_107672 const &_arg ){
  _vI92964_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<81159>stackfun (x<92964>varname, name<66394>varname));: type  ::flx::rtl::cl_t
      return eq(_vI92964_x, ptrdependency_parser->name);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <92083>: +::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI92083__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <93680>: generic_cxx_compile_for_static_uncurry::aux_uncurry: Apply method
void* _fI93680_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93681_inp_uncurry = _arg.data[0];
  _vI93682_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93689:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93685> := inp_uncurry<93681>varname;
      _vI93685_aux__apos_2_mv_1381  = _vI93681_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93685_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93684;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93682>varname;: type void*
      return _vI93682_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93684:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93685_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93688__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_compile_for_static_uncurry))) ) goto _ml1384_L93683;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93686>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93685>varname));
      _vI93686_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93685_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93687>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93685>varname));
      _vI93687_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93685_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93682> := (Snoc<80397>struct (out<93682>varname, (quote_arg<16873>stackfun h_param_std_1267<93686>varname)));
      _vI93682_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93682_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI93686_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93681> := t_param_std_1266<93687>varname;
      _vI93681_inp_uncurry  = _vI93687_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93689;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93683:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93281>: toolchain_msvc_win32::aux::aux_uncurry: Apply method
void* _fI93281_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93282_x_uncurry = _arg.data[0];
  _vI93283_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L93290:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<93286> := x_uncurry<93282>varname;
      _vI93286_aux__apos_2_mv_1387  = _vI93282_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI93286_aux__apos_2_mv_1387)==0) ) goto _ml1389_L93285;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<93283>varname;: type void*
      return _vI93283_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L93285:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI93286_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI93289__lam_1391)(FLX_FPAR_PASS this, ptr_fI93273_aux, ptrtoolchain_msvc_win32))) ) goto _ml1390_L93284;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<93287>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<93286>varname));
      _vI93287_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI93286_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<93288>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<93286>varname));
      _vI93288_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI93286_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<93283> := (Snoc<80397>struct (y<93283>varname, h_param_std_1269<93287>varname));
      _vI93283_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93283_y, _vI93287_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<93282> := t_param_std_1268<93288>varname;
      _vI93282_x_uncurry  = _vI93288_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L93290;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L93284:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------

//PROCEDURE <89441:> regopen_uncurry: Call method
void regopen_uncurry::stack_call(_tt107999 const &_arg){
  ::flx::rtl::con_t *cc = call(0,_arg);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * regopen_uncurry::call(::flx::rtl::con_t *_ptr_caller, _tt107999 const &_arg){
  _caller = _ptr_caller;
  registry_uncurry = _arg.mem_0;
  _vI90435_lib = _arg.mem_1;
  modulename = _arg.mem_2;
  INIT_PC
  return this;
}

//PROCEDURE <89441:> regopen_uncurry: Resume method
::flx::rtl::con_t *regopen_uncurry::resume(){
    // # C:/projects/felix/src/packages/trees.fdoc: line 1257, cols 4 to 5
      //key<94865> := modulename<90436>varname;
      _vI94865_key  = modulename; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1255, cols 6 to 78
      // primcall JudySLGet<13904>primproc (registry_uncurry<90444>varname, (stl_begin<15218>primfun &key<94865>ref), &err<94866>ref, (cast<86134>primfun[&(&word), &(&(&JSLArray))] &slot<94867>ref));
      {
      char* _tmp108488 = ((char*)((_a14239t_107672*)&_vI94865_key)->c_str());
      JError_t* _tmp108489 = (JError_t*)&_vI94866_err;
      _a13829t_108015** _tmp108490 = (_a13829t_108015**)((_a13898t_107994***)&_vI94867_slot);
      *((_tmp108490))=(Word_t*)JudySLGet(*registry_uncurry,(unsigned char*)((_tmp108488)),((_tmp108489)));
      }
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 16 to 34
      //get'2_mv_1820<94869> := (isNULL<86140>primfun[&JSLArray] slot<94867>varname);
      _vI94869_get__apos_2_mv_1820  = (0==_vI94867_slot); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      if(!(_vI94869_get__apos_2_mv_1820%2==1) ) goto _ml1822_L94868;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      //_urv94863<94863> := None<86142>varname;
      _urv94863  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      goto _end_inline_get_uncurry_94872_L94872;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
    _ml1822_L94868:;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
/*match case 2:any*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      //_urv94863<94863> := (Some<86143>struct (deref<86144>primfun[JSLArray] (deref<86145>primfun[&JSLArray] slot<94867>varname)));
      _urv94863  = FLX_VNR(1, new(*PTF gcp, _a13898t_107994_ptr_map, true) _a13898t_107994 (*(*_vI94867_slot ) )); //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1257, cols 4 to 5
    _end_inline_get_uncurry_94872_L94872:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 780, cols 6 to 48
      //mod<90430>varname = _urv94863<94863>varname;
      mod = _urv94863; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 781, cols 12 to 14
      //regopen'2_mv_552<90427> := mod<90430>varname;
      _vI90427_regopen__apos_2_mv_552  = mod; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 782, cols 8 to 12
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 782, cols 8 to 12
      if(!(FLX_VNI(_vI90427_regopen__apos_2_mv_552)==0) ) goto _ml554_L90437;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 784, cols 8 to 81
      // primcall modopen<7806>primproc (lib<90435>varname, (+<14305>primfun (modulename<90436>varname, ".dll")), modulename<90436>varname);
      {
      _a14239t_107672 _tmp108491 = modulename + ::std::string(".dll") ;
      _vI90435_lib->dynamic_link_with_modulename(((_tmp108491)), modulename);
      }
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 799, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 782, cols 8 to 12
    _ml554_L90437:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 785, cols 8 to 16
/*match case 2:|Some dict_param_std_523*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 785, cols 8 to 16
      if(!andthen(FLX_VNI(_vI90427_regopen__apos_2_mv_552)==1, (FLX_NEWP(_lam_556)(FLX_FPAR_PASS this))) ) goto _ml555_L90442;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 785, cols 13 to 16
      //dict_param_std_523<90432>varname = (arg of case 1 of regopen'2_mv_552<90427>varname);
      dict_param_std_523 = *((_a13898t_107994*)FLX_VNP(_vI90427_regopen__apos_2_mv_552)); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 787, cols 8 to 73
      //tfc<90433>varname = (get_dflt_uncurry<89457>stackfun (dict_param_std_523<90432>varname, (+<14305>primfun (modulename<90436>varname, "_create_thread_frame")), NULL<5163>varname));
      tfc = get_dflt_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt108052(dict_param_std_523, modulename + ::std::string("_create_thread_frame") , NULL)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 791, cols 8 to 12
      if(!((tfc == NULL)) ) goto _ifdoelse_std_525_L90439;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 790, cols 10 to 152
      // primcall raise<86084>primproc[flx_link_failure_t] (_ctor_flx_link_failure_t<7797>primfun (modulename<90436>varname, "regopen", (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Cannot find symbol ", modulename<90436>varname)), "_create_thread_frame in module registry for ")), modulename<90436>varname))));
      {
      _a7796t_108012 _tmp108492 = ::flx::rtl::flx_link_failure_t(modulename,(::std::string("regopen")),(((::std::string("Cannot find symbol ") + modulename ) + ::std::string("_create_thread_frame in module registry for ") ) + modulename ));
      (throw ((_tmp108492)));
      }
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 791, cols 8 to 12
    _ifdoelse_std_525_L90439:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 792, cols 8 to 68
      //start_sym<90434>varname = (get_dflt_uncurry<89457>stackfun (dict_param_std_523<90432>varname, (+<14305>primfun (modulename<90436>varname, "_flx_start")), NULL<5163>varname));
      start_sym = get_dflt_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt108052(dict_param_std_523, modulename + ::std::string("_flx_start") , NULL)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 795, cols 8 to 12
      if(!((start_sym == NULL)) ) goto _ifdoelse_std_527_L90441;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 794, cols 10 to 140
      // primcall raise<86084>primproc[flx_link_failure_t] (_ctor_flx_link_failure_t<7797>primfun (modulename<90436>varname, "regopen", (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Cannot find symbol ", modulename<90436>varname)), "_flx_start in module registry for ")), modulename<90436>varname))));
      {
      _a7796t_108012 _tmp108493 = ::flx::rtl::flx_link_failure_t(modulename,(::std::string("regopen")),(((::std::string("Cannot find symbol ") + modulename ) + ::std::string("_flx_start in module registry for ") ) + modulename ));
      (throw ((_tmp108493)));
      }
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 795, cols 8 to 12
    _ifdoelse_std_527_L90441:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 797, cols 8 to 55
      // primcall set_entry_points<7807>primproc (lib<90435>varname, modulename<90436>varname, tfc<90433>varname, start_sym<90434>varname);
      _vI90435_lib->static_link(modulename,(::flx::dynlink::thread_frame_creator_t)tfc, (::flx::dynlink::start_t)start_sym, NULL);
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 799, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 785, cols 8 to 16
    _ml555_L90442:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 798, cols 6 to 15
/*match failure*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 798, cols 6 to 15
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",798,6,798,15);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",798,6,798,15);
;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 799, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <66626>: toolchain_gcc_osx::c_dependency_generator: Apply method
_tt107757 _fI66626_c_dependency_generator::apply(_art107756 const &_arg ){
  _vI66631_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 996, cols 6 to 7
      //_ds2_66189<66628>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:c_compiler<66592>varname, CCFLAGS:(Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), "-MM")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj0:record(src:(string)) -> string), spec<66631>varname)));
      _ds2_66189 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_gcc_osx->_vI66592_c_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_osx->_vI66677_config.ccflags, ::std::string("-MM")))), ptrtoolchain_gcc_osx->_vI66677_config.header_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.macros, ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66631_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 996, cols 6 to 7
      //result<66629>varname = apply((prj0:int * string -> int), _ds2_66189<66628>varname);
      _vI66629_result = _ds2_66189.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 996, cols 6 to 7
      //data<66630>varname = apply((prj1:int * string -> string), _ds2_66189<66628>varname);
      _vI66630_data = _ds2_66189.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 997, cols 6 to 26
      //return (result<66629>varname, data<66630>varname);: type _tt107757
      return _tt107757(_vI66629_result, _vI66630_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",998,3,998,4); // HACK! 
}

//------------------------------
//FUNCTION <68288>: run_felix_compiler: Apply method
int run_felix_compiler::apply(_art108159 const &_arg ){
  _vI68303_spec = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 331, cols 5 to 76
      //FLXFLAGS<68290>varname = (join_uncurry<89534>stackfun (apply((prj5:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> list), spec<68303>varname), (Snoc<80397>struct (Empty<80385>varname, (+<14305>primfun ("--inline=", (str<80203>primfun[int] apply((prj11:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> int), spec<68303>varname))))))));
      FLXFLAGS = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI68303_spec.FLAGS, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("--inline=") + ::flx::rtl::strutil::str<int>(_vI68303_spec.INLINE) ))))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 334, cols 5 to 9
      if(!(!((_vI68303_spec.OUTPUT_DIR == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65368_L68305;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &FLXFLAGS<68290>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &FLXFLAGS<68290>ref), (+<14305>primfun ("--output_dir=", apply((prj12:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string), spec<68303>varname)))));
      *((void**)&FLXFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&FLXFLAGS) , ::std::string("--output_dir=") + _vI68303_spec.OUTPUT_DIR )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 334, cols 5 to 9
    _ifdoelse_bootflx_65368_L68305:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 335, cols 11 to 25
      //run_felix_compiler_mv_65383<65383> := apply((prj1:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> opt), spec<68303>varname);
      run_felix_compiler_mv_65383  = _vI68303_spec.BUNDLE_DIR; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 336, cols 7 to 14
/*match case 1:|Some dir_param_bootflx_65370*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 336, cols 7 to 14
      if(!andthen(FLX_VNI(run_felix_compiler_mv_65383)==1, (FLX_NEWP(_lam_65386)(FLX_FPAR_PASS this))) ) goto _ml65385_L68306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 336, cols 12 to 14
      //dir_param_bootflx_65370<68293>varname = (arg of case 1 of run_felix_compiler_mv_65383<65383>varname);
      dir_param_bootflx_65370 = *((_a14239t_107672*)FLX_VNP(run_felix_compiler_mv_65383)); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &FLXFLAGS<68290>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &FLXFLAGS<68290>ref), (+<14305>primfun ("--bundle_dir=", dir_param_bootflx_65370<68293>varname))));
      *((void**)&FLXFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&FLXFLAGS) , ::std::string("--bundle_dir=") + dir_param_bootflx_65370 )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 336, cols 7 to 14
      goto _em65383_L68308;
    // # C:/projects/felix/src/packages/flx.fdoc: line 336, cols 7 to 14
    _ml65385_L68306:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 338, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 338, cols 7 to 11
      if(!(FLX_VNI(run_felix_compiler_mv_65383)==0) ) goto _ml65387_L68307;
    // # C:/projects/felix/src/packages/flx.fdoc: line 338, cols 7 to 11
      goto _em65383_L68308;
    // # C:/projects/felix/src/packages/flx.fdoc: line 338, cols 7 to 11
    _ml65387_L68307:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 339, cols 5 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 339, cols 5 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",339,5,339,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",339,5,339,14);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 339, cols 5 to 14
    _em65383_L68308:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 342, cols 5 to 9
      if(!(!((_vI68303_spec.CACHE_DIR == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65372_L68310;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &FLXFLAGS<68290>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &FLXFLAGS<68290>ref), (+<14305>primfun ("--cache_dir=", apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string), spec<68303>varname)))));
      *((void**)&FLXFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&FLXFLAGS) , ::std::string("--cache_dir=") + _vI68303_spec.CACHE_DIR )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 342, cols 5 to 9
    _ifdoelse_bootflx_65372_L68310:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 345, cols 5 to 9
      if(!(!((_vI68303_spec.COMPILER_PHASE == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65374_L68312;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &FLXFLAGS<68290>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &FLXFLAGS<68290>ref), (+<14305>primfun ("--compiler-phase=", apply((prj3:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string), spec<68303>varname)))));
      *((void**)&FLXFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&FLXFLAGS) , ::std::string("--compiler-phase=") + _vI68303_spec.COMPILER_PHASE )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 345, cols 5 to 9
    _ifdoelse_bootflx_65374_L68312:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 348, cols 5 to 9
      if(!((_vI68303_spec.DOREDUCE == 0)) ) goto _ifdoelse_bootflx_65376_L68314;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &FLXFLAGS<68290>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &FLXFLAGS<68290>ref), "--no-reduce"));
      *((void**)&FLXFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&FLXFLAGS) , ::std::string("--no-reduce"))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 348, cols 5 to 9
    _ifdoelse_bootflx_65376_L68314:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 351, cols 5 to 9
      if(!((_vI68303_spec.TIME == 1)) ) goto _ifdoelse_bootflx_65378_L68316;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &FLXFLAGS<68290>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &FLXFLAGS<68290>ref), "--time"));
      *((void**)&FLXFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&FLXFLAGS) , ::std::string("--time"))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 351, cols 5 to 9
    _ifdoelse_bootflx_65378_L68316:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 354, cols 5 to 9
      if(!((_vI68303_spec.FORCE == 1)) ) goto _ifdoelse_bootflx_65380_L68318;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &FLXFLAGS<68290>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &FLXFLAGS<68290>ref), "--force"));
      *((void**)&FLXFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&FLXFLAGS) , ::std::string("--force"))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 354, cols 5 to 9
    _ifdoelse_bootflx_65380_L68318:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<98759>varname = (aux_uncurry<98760>stackfun (apply((prj10:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> list), spec<68303>varname), Empty<80385>varname));
      _vI98759_r = _fI98760_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI68303_spec.INCLUDE_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<98759>ref;
      {
      void** _tmp108496 = (void**)&_vI98759_r;
      _rev(((_tmp108496)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<98782>varname = (aux_uncurry<98783>stackfun (apply((prj9:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> list), spec<68303>varname), Empty<80385>varname));
      _vI98782_r = _fI98783_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI68303_spec.IMPORTS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<98782>ref;
      {
      void** _tmp108497 = (void**)&_vI98782_r;
      _rev(((_tmp108497)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 365, cols 5 to 6
      //cmd<68300>varname = (Snoc<80397>struct ((+<80787>stackfun ((join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun ((join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (apply((prj15:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> list), spec<68303>varname), FLXFLAGS<68290>varname)), r<98759>varname)), (+<14305>primfun ("--syntax=", apply((prj13:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string), spec<68303>varname))))), (+<14305>primfun ("--automaton=", apply((prj0:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string), spec<68303>varname))))), r<98782>varname)), apply((prj7:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> list), spec<68303>varname))), (+<14305>primfun (apply((prj17:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string), spec<68303>varname), apply((prj18:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string), spec<68303>varname))))), apply((prj6:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string), spec<68303>varname)));
      _vI68300_cmd = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI68303_spec.VERBOSE, FLXFLAGS)) /* apply_stack */, _vI98759_r)) /* apply_stack */, ::std::string("--syntax=") + _vI68303_spec.STDGRAMMAR )) /* apply_stack */, ::std::string("--automaton=") + _vI68303_spec.AUTOMATON )) /* apply_stack */, _vI98782_r)) /* apply_stack */, _vI68303_spec.FLXLIBS)) /* apply_stack */, _vI68303_spec.filebase + _vI68303_spec.use_ext )) /* apply_stack */, _vI68303_spec.FLXG))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<98812>varname = (aux_uncurry<98813>stackfun (cmd<68300>varname, Empty<80385>varname));
      _vI98812_r = _fI98813_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI68300_cmd, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<98812>ref;
      {
      void** _tmp108498 = (void**)&_vI98812_r;
      _rev(((_tmp108498)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 367, cols 5 to 46
      //CMD<68301>varname = (cat_uncurry<89509>stackfun (" ", r<98812>varname));
      _vI68301_CMD = cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI98812_r)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 368, cols 5 to 39
      //run procedure call apply((prj16:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CACHE_DIR:(string),COMPILER_PHASE:(string),DOREDUCE:(int),FLAGS:(list),FLXG:(string),FLXLIBS:(list),FORCE:(int),IMPORTS:(list),INCLUDE_DIRS:(list),INLINE:(int),OUTPUT_DIR:(string),STDGRAMMAR:(string),TIME:(int),VERBOSE:(list),debugln:(string -> void),filebase:(string),use_ext:(string)) -> string -> void), spec<68303>varname) (+<14305>primfun ("Felix command=", CMD<68301>varname));
      {
        ::flx::rtl::con_t *_p = (_vI68303_spec.debugln)->clone()
      ->call(0, ::std::string("Felix command=") + _vI68301_CMD );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L98828;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", CMD<68301>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108499 = (::std::string("[system] ") + _vI68301_CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108499)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L98828:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv98835<98835> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", CMD<68301>varname)), """)));
      _genout_urv98835  = ::std::system(((::std::string("\"") + _vI68301_CMD ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<98832> := _genout_urv98835<98835>varname;
      _genout_urv93723  = _genout_urv98835; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<98831> := _genout_urv93723<98832>varname;
      _genout_urv93715  = _genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<98830> := _genout_urv93715<98831>varname;
      _genout_urv93710  = _genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv98826<98826> := _genout_urv93710<98830>varname;
      _genout_urv98826  = _genout_urv93710; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 370, cols 5 to 35
      //result<68302>varname = _genout_urv98826<98826>varname;
      _vI68302_result = _genout_urv98826; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 373, cols 5 to 9
      if(!(!((_vI68302_result == 0)) ) ) goto _ifdoelse_bootflx_65382_L68320;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Felix compilation ", CMD<68301>varname)), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108500 = ((::std::string("Felix compilation ") + _vI68301_CMD ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108500)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 373, cols 5 to 9
    _ifdoelse_bootflx_65382_L68320:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 374, cols 5 to 18
      //return result<68302>varname;: type int
      return _vI68302_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",375,3,375,4); // HACK! 
}

//------------------------------
//FUNCTION <66525>: toolchain_gcc_linux::dynamic_library_extension: Apply method
_a14239t_107672 _fI66525_dynamic_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 741, cols 3 to 51
      //return ".so";: type _a14239t_107672
      return ::std::string(".so");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",741,3,741,51); // HACK! 
}

//------------------------------
//FUNCTION <66466>: toolchain_msvc_win32::dynamic_executable_linker: Apply method
int dynamic_executable_linker::apply(_art107763 const &_arg ){
  _vI66477_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1906, cols 5 to 35
      //link_specs<66468>varname = Empty<80385>varname;
      _vI66468_link_specs = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1907, cols 5 to 34
      //obj_specs<66469>varname = Empty<80385>varname;
      _vI66469_obj_specs = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<93126> := (join_uncurry<89534>stackfun (apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66477>varname), static_link_strings<66329>varname));
      _vI93126_xs  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI66477_spec.srcs, ptrtoolchain_msvc_win32->static_link_strings)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv93125<93125> := iterator'2<93127>closure;
      _genout_urv93125  = (FLX_NEWP(_fI93127_iterator__apos_2)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)); //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      //_generator_toolchain_4199<66470>varname = _genout_urv93125<93125>varname;
      _generator_toolchain_4199 = _genout_urv93125; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
    continue__ll_toolchain_4176_L66478:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      //dynamic_executable_linker_mv_66267<66267> := apply(_generator_toolchain_4199<66470>varname, ());
      dynamic_executable_linker_mv_66267  = (_generator_toolchain_4199)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
/*match case 1:|Some term_param_bootflx_66220*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      if(!andthen(FLX_VNI(dynamic_executable_linker_mv_66267)==1, (FLX_NEWP(_lam_66270)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml66269_L66485;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      //term_param_bootflx_66220<66473>varname = (arg of case 1 of dynamic_executable_linker_mv_66267<66267>varname);
      term_param_bootflx_66220 = *((_a14239t_107672*)FLX_VNP(dynamic_executable_linker_mv_66267)); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1914, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(term_param_bootflx_66220,0,::std::string("/DEFAULTLIB:").size()) == ::std::string("/DEFAULTLIB:"))) ) goto _ifdoend_bootflx_66221_L66479;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &link_specs<66468>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &link_specs<66468>ref), term_param_bootflx_66220<66473>varname));
      *((void**)&_vI66468_link_specs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI66468_link_specs) , term_param_bootflx_66220)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      goto continue__ll_toolchain_4176_L66478;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1914, cols 7 to 11
    _ifdoend_bootflx_66221_L66479:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1913, cols 7 to 27
      if(!((::flx::rtl::strutil::substr(term_param_bootflx_66220,0,::std::string("/LIBPATH:").size()) == ::std::string("/LIBPATH:"))) ) goto _ifdoend_bootflx_66223_L66480;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &link_specs<66468>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &link_specs<66468>ref), term_param_bootflx_66220<66473>varname));
      *((void**)&_vI66468_link_specs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI66468_link_specs) , term_param_bootflx_66220)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      goto continue__ll_toolchain_4176_L66478;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1913, cols 7 to 27
    _ifdoend_bootflx_66223_L66480:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1913, cols 7 to 27
      if(!((::flx::rtl::strutil::substr(term_param_bootflx_66220,- ::std::string(".obj").size() ,term_param_bootflx_66220.size()) == ::std::string(".obj")) || (::flx::rtl::strutil::substr(term_param_bootflx_66220,- ::std::string(".obj").size() ,term_param_bootflx_66220.size()) == ::std::string(".obj")) ) ) goto _ifdoend_bootflx_66225_L66481;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &obj_specs<66469>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &obj_specs<66469>ref), term_param_bootflx_66220<66473>varname));
      *((void**)&_vI66469_obj_specs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI66469_obj_specs) , term_param_bootflx_66220)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      goto continue__ll_toolchain_4176_L66478;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1913, cols 7 to 27
    _ifdoend_bootflx_66225_L66481:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &obj_specs<66469>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &obj_specs<66469>ref), term_param_bootflx_66220<66473>varname));
      *((void**)&_vI66469_obj_specs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI66469_obj_specs) , term_param_bootflx_66220)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      goto continue__ll_toolchain_4176_L66478;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
    _ml66269_L66485:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      if(!(FLX_VNI(dynamic_executable_linker_mv_66267)==0) ) goto _ml66271_L66486;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      goto _em66267_L66487;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
    _ml66271_L66486:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1915,5,1915,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1915,5,1915,9);
;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1915, cols 5 to 9
    _em66267_L66487:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1916, cols 5 to 114
      //_genout_urv93191<93191> := (xpopen<66338>stackfun (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun (obj_specs<66469>varname, (+<14305>primfun ("/Fe", apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66477>varname))))), "/link")), link_specs<66468>varname)), "/MDd")), "/nologo")), "cl.exe")));
      _genout_urv93191  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI66469_obj_specs, ::std::string("/Fe") + _vI66477_spec.dst )) /* apply_stack */, ::std::string("/link"))) /* apply_stack */, _vI66468_link_specs)) /* apply_stack */, ::std::string("/MDd")))), ::std::string("/nologo")))), ::std::string("cl.exe"))))) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1916, cols 5 to 114
      //_ds2_66272<66474>varname = _genout_urv93191<93191>varname;
      _ds2_66272 = _genout_urv93191; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1916, cols 5 to 114
      //result<66475>varname = apply((prj0:int * string -> int), _ds2_66272<66474>varname);
      _vI66475_result = _ds2_66272.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1916, cols 5 to 114
      //text<66476>varname = apply((prj1:int * string -> string), _ds2_66272<66474>varname);
      _vI66476_text = _ds2_66272.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66475>varname, text<66476>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66475_result, _vI66476_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1918, cols 5 to 18
      //return result<66475>varname;: type int
      return _vI66475_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1919,3,1919,4); // HACK! 
}

//------------------------------
//FUNCTION <105559>: FlxPkgConfigQuery::aux_uncurry: Apply method
void* _fI105559_aux_uncurry::apply(_at107697 const &_arg ){
  lst_uncurry = _arg.data[0];
  _vI105560_out = _arg.data[1];
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 9 to 44
    start_105313_L105578:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 9 to 44
      //aux'2_mv_65332<105562> := lst_uncurry<105561>varname;
      _vI105562_aux__apos_2_mv_65332  = lst_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 474, cols 13 to 18
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 474, cols 13 to 18
      if(!(FLX_VNI(_vI105562_aux__apos_2_mv_65332)==0) ) goto _ml65334_L105565;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<105567>stackfun (out<105560>varname, Empty<80385>varname));: type void*
      return _fI105567_aux_uncurry(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery)
      .apply(_at107697(_vI105560_out, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 474, cols 13 to 18
    _ml65334_L105565:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 475, cols 13 to 22
/*match case 2:|Cons (h_param_bootflx_65311, t_param_bootflx_65312)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 475, cols 13 to 22
      if(!andthen(!!_vI105562_aux__apos_2_mv_65332 , (FLX_NEWP(_lam_65336)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery))) ) goto _ml65335_L105566;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 475, cols 21 to 21
      //t_param_bootflx_65312<105563>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] aux'2_mv_65332<105562>varname));
      t_param_bootflx_65312 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(_vI105562_aux__apos_2_mv_65332))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 475, cols 19 to 19
      //h_param_bootflx_65311<105564>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] aux'2_mv_65332<105562>varname));
      h_param_bootflx_65311 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(_vI105562_aux__apos_2_mv_65332))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 9 to 44
/*parallel assignment*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 9 to 44
      //out<105560> := (Snoc<80397>struct (out<105560>varname, (+<14305>primfun ("--path+=", h_param_bootflx_65311<105564>varname))));
      _vI105560_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105560_out, ::std::string("--path+=") + h_param_bootflx_65311 ))); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 9 to 44
      //lst_uncurry<105561> := t_param_bootflx_65312<105563>varname;
      lst_uncurry  = t_param_bootflx_65312; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 9 to 44
      goto start_105313_L105578;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 475, cols 13 to 22
    _ml65335_L105566:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 475, cols 11 to 53
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 475, cols 11 to 53
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",475,11,475,53);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",475,11,475,53);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",478,9,478,44); // HACK! 
}

//------------------------------
//FUNCTION <98708>: run_felix_compiler::_lam_65386: Apply method
 ::flx::rtl::cl_t _lam_65386::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 336, cols 7 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",336,7,336,14); // HACK! 
}

//------------------------------
//FUNCTION <103124>: join_uncurry::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI103124__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <89797>: toolchain_clang_apple_iOS_maker_uncurry::dynamic_executable_linker: Apply method
int _fI89797_dynamic_executable_linker::apply(_art107763 const &_arg ){
  _vI89799_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2171, cols 5 to 6
      //result<89798>varname = (generic_link_exe_dynamic_uncurry<89454>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<89741>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<89799>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<89799>varname)));
      _vI89798_result = generic_link_exe_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89741_linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.library_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89799_spec.srcs, _vI89799_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2172, cols 5 to 18
      //return result<89798>varname;: type int
      return _vI89798_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2173,3,2173,4); // HACK! 
}

//------------------------------

//PROCEDURE <68650:> flx_pkgconfig::handle_pkg::_lam_65277: Call method
::flx::rtl::con_t * _lam_65277::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  dir = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <68650:> flx_pkgconfig::handle_pkg::_lam_65277: Resume method
::flx::rtl::con_t *_lam_65277::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 15 to 21
      //_lam_65277_mv_65279<97037> := (==<80464>primfun[string] (dir<68691>varname, ""));
      _lam_65277_mv_65279  = (dir == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
      if(!(_lam_65277_mv_65279%2==1) ) goto _ml65281_L97038;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
      //_urv97036<97036> := ".";
      _urv97036  = ::std::string("."); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
      goto _end_hash_926213391;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
    _ml65281_L97038:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
      //_urv97036<97036> := dir<68691>varname;
      _urv97036  = dir; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 294, cols 12 to 39
    _end_hash_926213391:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 295, cols 10 to 11
      //filename<68654>varname = (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun (_urv97036<97036>varname, "\")), pkg<68708>varname)), ".")), extension<68500>varname));
      filename = (((_urv97036 + ::std::string("\\") ) + ptrhandle_pkg->_vI68708_pkg ) + ::std::string(".") ) + ptrflx_pkgconfig->extension ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 314, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_621_L97056;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_input] ", filename<68654>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108504 = (::std::string("[Open_input] ") + filename ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108504)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 314, cols 5 to 6
    _ifdoelse_std_621_L97056:;
    // # C:/projects/felix/src/packages/io.fdoc: line 315, cols 5 to 29
      //_genout_urv97061<97061> := (raw_fopen_input<8420>primfun filename<68654>varname);
      _genout_urv97061  = fopen(filename.c_str(),"rb"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 315, cols 5 to 29
      //_genout_urv97052<97058> := _genout_urv97061<97061>varname;
      _genout_urv97052  = _genout_urv97061; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 315, cols 5 to 29
      //_genout_urv97054<97054> := _genout_urv97052<97058>varname;
      _genout_urv97054  = _genout_urv97052; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 299, cols 10 to 37
      //file<68655>varname = _genout_urv97054<97054>varname;
      file = _genout_urv97054; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 356, cols 10 to 14
      //_genout_urv97062<97062> := (valid<8422>primfun file<68655>varname);
      _genout_urv97062  = file!=(FILE*)0; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 356, cols 10 to 14
      if(!_genout_urv97062 ) goto _ifdoelse_bootflx_65186_L68706;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
      if(!ptrflx_pkgconfig->dolist ) goto _ifdoelse_bootflx_65188_L68697;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 302, cols 20 to 23
      //_lam_65277_mv_65283<65283> := keep<68499>varname;
      _lam_65277_mv_65283  = ptrflx_pkgconfig->keep; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 303, cols 16 to 28
/*match case 1:|keepleftmost*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 303, cols 16 to 28
      if(!(_lam_65277_mv_65283%3==1) ) goto _ml65285_L68692;
    // # C:/projects/felix/src/packages/lists.fdoc: line 514, cols 3 to 4
      //insert_unique'3_mv_1487<97069> := (mem_uncurry<89504>stackfun (_lam_1457<97070>closure, result<68598>varname));
      _vI97069_insert_unique__apos_3_mv_1487  = mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107790((FLX_NEWP(_fI97070__lam_1457)(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->_vI68598_result)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      if(!(_vI97069_insert_unique__apos_3_mv_1487%2==1) ) goto _ml1489_L97068;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      //_urv96373<97067> := result<68598>varname;
      _vI97067__urv96373  = ptrflx_pkgconfig->_vI68598_result; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      goto _end_hash_271371326;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
    _ml1489_L97068:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //_urv96373<97067> := (aux_uncurry<97082>stackfun ((Snoc<80397>struct ((aux_uncurry<97072>stackfun (result<68598>varname, Empty<80385>varname)), pkg<68708>varname)), Empty<80385>varname));
      _vI97067__urv96373  = _fI97082_aux_uncurry(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI97072_aux_uncurry(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at107697(ptrflx_pkgconfig->_vI68598_result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, ptrhandle_pkg->_vI68708_pkg))), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 566, cols 3 to 4
    _end_hash_271371326:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 273, cols 6 to 42
      //result<68598>varname = _urv96373<97067>varname;
      ptrflx_pkgconfig->_vI68598_result = _vI97067__urv96373; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
      goto _ifdoelse_bootflx_65188_L68697;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 303, cols 16 to 28
    _ml65285_L68692:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 304, cols 16 to 29
/*match case 2:|keeprightmost*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 304, cols 16 to 29
      if(!(_lam_65277_mv_65283%3==2) ) goto _ml65286_L68693;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 278, cols 8 to 44
      //result<68598>varname = (aux<97098>stackfun (result<68598>varname, Empty<80385>varname));
      ptrflx_pkgconfig->_vI68598_result = _fI97098_aux(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at107697(ptrflx_pkgconfig->_vI68598_result, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
      goto _ifdoelse_bootflx_65188_L68697;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 304, cols 16 to 29
    _ml65286_L68693:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 305, cols 16 to 23
/*match case 3:|keepall*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 305, cols 16 to 23
      if(!(_lam_65277_mv_65283%3==0) ) goto _ml65287_L68694;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 283, cols 7 to 25
      //result<68598>varname = (+<80787>stackfun (result<68598>varname, pkg<68708>varname));
      ptrflx_pkgconfig->_vI68598_result = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_pkgconfig->_vI68598_result, ptrhandle_pkg->_vI68708_pkg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
      goto _ifdoelse_bootflx_65188_L68697;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 305, cols 16 to 23
    _ml65287_L68694:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 306, cols 14 to 23
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 306, cols 14 to 23
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",306,14,306,23);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",306,14,306,23);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 307, cols 12 to 16
    _ifdoelse_bootflx_65188_L68697:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 308, cols 12 to 37
      //lines<68656>varname = Empty<80385>varname;
      _vI68656_lines = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 309, cols 12 to 34
      //_genout_urv97126<97126> := (readln<8425>primfun file<68655>varname);
      _genout_urv97126  = ::flx::rtl::ioutil::readln(file); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 309, cols 12 to 34
      //line<68657>varname = _genout_urv97126<97126>varname;
      _vI68657_line = _genout_urv97126; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 316, cols 12 to 16
    continue__ll_flx_pkgconfig_11046_L68698:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 316, cols 12 to 16
      if(FLX_UNLIKELY(!(!((_vI68657_line == ::std::string(""))) ) )) goto break__ll_flx_pkgconfig_11046_L68701;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 311, cols 14 to 30
      //line<68657>varname = (lstrip<14855>stackfun ((rstrip<14873>stackfun (line<68657>varname, " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      _vI68657_line = lstrip(rstrip(_vI68657_line, ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 314, cols 14 to 18
      if(!(!((_vI68657_line == ::std::string("")))  && !((::flx::rtl::strutil::subscript(_vI68657_line,0) == ::flx::rtl::strutil::subscript(::std::string("#"),0)))  ) ) goto _ifdoelse_bootflx_65191_L68700;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 313, cols 16 to 39
      //lines<68656>varname = (Snoc<80397>struct (lines<68656>varname, line<68657>varname));
      _vI68656_lines = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI68656_lines, _vI68657_line))); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 314, cols 14 to 18
    _ifdoelse_bootflx_65191_L68700:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 315, cols 14 to 31
      //_genout_urv97159<97159> := (readln<8425>primfun file<68655>varname);
      _genout_urv97159  = ::flx::rtl::ioutil::readln(file); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 315, cols 14 to 31
      //line<68657>varname = _genout_urv97159<97159>varname;
      _vI68657_line = _genout_urv97159; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 316, cols 12 to 16
      goto continue__ll_flx_pkgconfig_11046_L68698;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 316, cols 12 to 16
    break__ll_flx_pkgconfig_11046_L68701:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 317, cols 12 to 54
      if(ptrflx_pkgconfig->backwards) goto _ifdoelse_bootflx_65193_L68703;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 317, cols 32 to 48
      //lines<68656>varname = (aux_uncurry<97162>stackfun (lines<68656>varname, Empty<80385>varname));
      _vI68656_lines = _fI97162_aux_uncurry(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at107697(_vI68656_lines, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 317, cols 12 to 54
    _ifdoelse_bootflx_65193_L68703:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<89522>directproc (_lam_65288<68658>closure, lines<68656>varname);
      {
      _pt107730* _tmp108506 = (FLX_NEWP(_lam_65288)(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig));
      FLX_SET_PC(108507)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt107731((_tmp108506), _vI68656_lines));
      }
    FLX_CASE_LABEL(108507)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 353, cols 12 to 23
      // primcall fclose<8423>primproc file<68655>varname;
      (void)fclose(file);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 354, cols 12 to 23
      //found<68649>varname = (case 1 of bool);
      ptrhandle_pkg->found = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 355, cols 12 to 26
      if(!ptrflx_pkgconfig->hide ) goto _ifdoelse_bootflx_65186_L68706;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 355, cols 12 to 26
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 357, cols 13 to 9
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 356, cols 10 to 14
    _ifdoelse_bootflx_65186_L68706:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 357, cols 13 to 9
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <66379>: toolchain_msvc_win32::cxx_dependency_generator: Apply method
_tt107757 cxx_dependency_generator::apply(_art107756 const &_arg ){
  _vI66385_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1812, cols 5 to 53
      //cmd<66381>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (macros<66321>varname, "/EHs")), "/c")), "/showIncludes")), "/Zs")), "/MDd")), "/wd4190")), "/nologo")), "cl.exe")), include_switches<66314>varname)), (Snoc<80397>struct (Empty<80385>varname, apply((prj0:record(src:(string)) -> string), spec<66385>varname)))));
      _vI66381_cmd = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_msvc_win32->macros, ::std::string("/EHs")))), ::std::string("/c")))), ::std::string("/showIncludes")))), ::std::string("/Zs")))), ::std::string("/MDd")))), ::std::string("/wd4190")))), ::std::string("/nologo")))), ::std::string("cl.exe")))), ptrtoolchain_msvc_win32->include_switches)) /* apply_stack */, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _vI66385_spec.src))))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1813, cols 5 to 32
      //_genout_urv92823<92823> := (xpopen<66338>stackfun cmd<66381>varname);
      _genout_urv92823  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(_vI66381_cmd) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1813, cols 5 to 32
      //_ds2_66249<66382>varname = _genout_urv92823<92823>varname;
      _ds2_66249 = _genout_urv92823; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1813, cols 5 to 32
      //result<66383>varname = apply((prj0:int * string -> int), _ds2_66249<66382>varname);
      _vI66383_result = _ds2_66249.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1813, cols 5 to 32
      //text<66384>varname = apply((prj1:int * string -> string), _ds2_66249<66382>varname);
      _vI66384_text = _ds2_66249.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1814, cols 5 to 23
      //return (result<66383>varname, text<66384>varname);: type _tt107757
      return _tt107757(_vI66383_result, _vI66384_text);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1815,3,1815,4); // HACK! 
}

//------------------------------
//FUNCTION <105547>: FlxPkgConfigQuery::getclosure::getclosure'2::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI105547__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <96978>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::search_and_replace'2::_lam_2363: Apply method
 ::flx::rtl::cl_t _fI96978__lam_2363::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9); // HACK! 
}

//------------------------------
//FUNCTION <66574>: toolchain_gcc_linux::static_executable_linker: Apply method
int _fI66574_static_executable_linker::apply(_art107763 const &_arg ){
  _vI66577_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 900, cols 5 to 6
      //result<66576>varname = (generic_link_exe_static_uncurry<89531>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<66503>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66577>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66577>varname)));
      _vI66576_result = generic_link_exe_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_gcc_linux->linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_gcc_linux->_vI66586_config.library_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.static_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66577_spec.srcs, _vI66577_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 901, cols 5 to 18
      //return result<66576>varname;: type int
      return _vI66576_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",902,3,902,4); // HACK! 
}

//------------------------------
//FUNCTION <97098>: flx_pkgconfig::handle_pkg::_lam_65277::aux: Apply method
void* _fI97098_aux::apply(_at107697 const &_arg ){
  _vI97099_inp = _arg.data[0];
  _vI97100_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
    start_96482_L97119:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //aux_mv_1493<97103> := inp<97099>varname;
      _vI97103_aux_mv_1493  = _vI97099_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
      if(!(FLX_VNI(_vI97103_aux_mv_1493)==0) ) goto _ml1495_L97102;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<97106>stackfun ((Snoc<80397>struct (out<97100>varname, pkg<68708>varname)), Empty<80385>varname));: type void*
      return _fI97106_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97100_out, ptrhandle_pkg->_vI68708_pkg))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
    _ml1495_L97102:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1301, h_param_std_1302)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      if(!andthen(FLX_VNI(_vI97103_aux_mv_1493)==1, (FLX_NEWP(_fI97116__lam_1502)(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1496_L97101;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 16 to 16
      //h_param_std_1302<97104>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1493<97103>varname));
      _vI97104_h_param_std_1302 = (*((_tt107677*)FLX_VNP(_vI97103_aux_mv_1493))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 14 to 14
      //t_param_std_1301<97105>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1493<97103>varname));
      _vI97105_t_param_std_1301 = (*((_tt107677*)FLX_VNP(_vI97103_aux_mv_1493))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 580, cols 12 to 24
      //aux_mv_1498<97118> := (lnot<5216>primfun (eq<81159>stackfun (h_param_std_1302<97104>varname, pkg<68708>varname)));
      _vI97118_aux_mv_1498  = !eq(_vI97104_h_param_std_1302, ptrhandle_pkg->_vI68708_pkg) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
      if(!(_vI97118_aux_mv_1498%2==1) ) goto _ml1500_L97117;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //out<97100> := (Snoc<80397>struct (out<97100>varname, h_param_std_1302<97104>varname));
      _vI97100_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97100_out, _vI97104_h_param_std_1302))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<97099> := t_param_std_1301<97105>varname;
      _vI97099_inp  = _vI97105_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_96482_L97119;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
    _ml1500_L97117:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<97099> := t_param_std_1301<97105>varname;
      _vI97099_inp  = _vI97105_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_96482_L97119;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
    _ml1496_L97101:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",584,5,584,6); // HACK! 
}

//------------------------------
//FUNCTION <66307>: toolchain_msvc_win32::get_base_c_compile_flags: Apply method
void* get_base_c_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1743, cols 3 to 65
      //return base_c_compile_flags<66281>varname;: type void*
      return ptrtoolchain_msvc_win32->base_c_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1743,3,1743,65); // HACK! 
}

//------------------------------
//FUNCTION <93061>: toolchain_msvc_win32::static_executable_linker::_lam_66264: Apply method
 ::flx::rtl::cl_t _lam_66264::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1896,5,1896,9); // HACK! 
}

//------------------------------
//FUNCTION <66519>: toolchain_gcc_linux::static_object_extension: Apply method
_a14239t_107672 _fI66519_static_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 738, cols 3 to 55
      //return "_static.o";: type _a14239t_107672
      return ::std::string("_static.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",738,3,738,55); // HACK! 
}

//------------------------------
//C FUNC <11786>: range
void* range(FLX_APAR_DECL  int low, int high, int step){
   ::flx::rtl::cl_t inner_mv_1400;
  void* _vI90897_values;
  int _vI90896_step;
  int _vI90895_high;
  int _vI90894_low;
   ::flx::rtl::cl_t range_mv_1411;
   ::flx::rtl::cl_t range_mv_1406;
  _at107684 _urv90887;
  int _vI11802_n;
  int _vI11801_s;
  int hi;
  int lo;
  _at107684 _ds1_1404;
    // # C:/projects/felix/src/packages/lists.fdoc: line 363, cols 21 to 30
      //range_mv_1406<90888> := (<<80337>primfun[int] (low<11805>varname, high<11806>varname));
      range_mv_1406  = (low < high); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
      if(!(range_mv_1406%2==1) ) goto _ml1408_L90889;
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj0:int^3 -> int), _urv90887<90887>varname) = low<11805>varname;
      (_urv90887.data)[0] = low; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj1:int^3 -> int), _urv90887<90887>varname) = high<11806>varname;
      (_urv90887.data)[1] = high; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj2:int^3 -> int), _urv90887<90887>varname) = step<11807>varname;
      (_urv90887.data)[2] = step; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
      goto _end_inline_range_mf_1405_90891_L90891;
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
    _ml1408_L90889:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj0:int^3 -> int), _urv90887<90887>varname) = high<11806>varname;
      (_urv90887.data)[0] = high; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj1:int^3 -> int), _urv90887<90887>varname) = low<11805>varname;
      (_urv90887.data)[1] = low; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 377, cols 3 to 4
      //apply((prj2:int^3 -> int), _urv90887<90887>varname) = (neg<80373>primfun[int] step<11807>varname);
      (_urv90887.data)[2] = - step ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 365, cols 18 to 28
    _end_inline_range_mf_1405_90891_L90891:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 366, cols 5 to 12
      //_ds1_1404<11798>varname = _urv90887<90887>varname;
      _ds1_1404 = _urv90887; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 366, cols 5 to 12
      //lo<11799>varname = apply((prj0:int^3 -> int), _ds1_1404<11798>varname);
      lo = (_ds1_1404.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 366, cols 5 to 12
      //hi<11800>varname = apply((prj1:int^3 -> int), _ds1_1404<11798>varname);
      hi = (_ds1_1404.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 366, cols 5 to 12
      //s<11801>varname = apply((prj2:int^3 -> int), _ds1_1404<11798>varname);
      _vI11801_s = (_ds1_1404.data)[2]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 370, cols 5 to 20
      //n<11802>varname = (-<80305>primfun[int] ((-<80305>primfun[int] (hi<11800>varname, lo<11799>varname)), 1));
      _vI11802_n = (hi - lo ) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 398, cols 3 to 39
      //range_mv_1411<90892> := (lnot<5216>primfun (<<80337>primfun[int] (0, s<11801>varname)));
      range_mv_1411  = !((0 < _vI11801_s)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
      if(!(range_mv_1411%2==1) ) goto _ml1413_L90893;
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
      //return Empty<80314>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
    _ml1413_L90893:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 374, cols 12 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //low<90894> := lo<11799>varname;
      _vI90894_low  = lo; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //high<90895> := (+<80315>primfun[int] (lo<11799>varname, (-<80305>primfun[int] (n<11802>varname, (%<80316>primfun[int] (n<11802>varname, s<11801>varname))))));
      _vI90895_high  = lo + (_vI11802_n - (_vI11802_n % _vI11801_s ) ) ; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //step<90896> := s<11801>varname;
      _vI90896_step  = _vI11801_s; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //values<90897> := Empty<80314>varname;
      _vI90897_values  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
    start_90876_L90900:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 355, cols 12 to 21
      //inner_mv_1400<90898> := (<<80337>primfun[int] (high<90895>varname, low<90894>varname));
      inner_mv_1400  = (_vI90895_high < _vI90894_low); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
      if(!(inner_mv_1400%2==1) ) goto _ml1402_L90899;
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
      //return values<90897>varname;: type void*
      return _vI90897_values;
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
    _ml1402_L90899:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 357, cols 9 to 64
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //values<90897> := (Snoc<80338>struct (values<90897>varname, high<90895>varname));
      _vI90897_values  = FLX_VNR(1, new(*PTF gcp, _tt107680_ptr_map, true) _tt107680 (_tt107680(_vI90897_values, _vI90895_high))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      //high<90895> := (-<80305>primfun[int] (high<90895>varname, step<90896>varname));
      _vI90895_high  = _vI90895_high - _vI90896_step ; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 360, cols 5 to 6
      goto start_90876_L90900;
}
//------------------------------
//FUNCTION <105983>: flx_processing::run_program_if_required: Apply method
int run_program_if_required::apply(_pt107743* const &_arg ){
  _vI105985_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2861, cols 5 to 19
      //result<105984>varname = 0;
      _vI105984_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2870, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.STATIC == 0)) ) goto _ifdoend_bootflx_65978_L105986;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100522_L106653;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Running dynamic program")), "\x0A")));
      {
      _a14239t_107672 _tmp108509 = (::std::string("[flx] ") + ::std::string("Running dynamic program") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108509)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2863, cols 7 to 41
    _end_100522_L106653:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<105735>stackproc  ehandler<105985>varname;
      {
      calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI105985_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2856, cols 5 to 40
      //_genout_urv100523<106654> := (run_program_dynamic<105962>stackfun ehandler<105985>varname);
      _genout_urv100523  = run_program_dynamic(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105985_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2864, cols 7 to 52
      //result<105984>varname = _genout_urv100523<106654>varname;
      _vI105984_result = _genout_urv100523; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2870, cols 5 to 9
      goto _ifdoelse_bootflx_65979_L105987;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2870, cols 5 to 9
    _ifdoend_bootflx_65978_L105986:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100530_L106657;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Running static program")), "\x0A")));
      {
      _a14239t_107672 _tmp108511 = (::std::string("[flx] ") + ::std::string("Running static program") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108511)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2868, cols 7 to 40
    _end_100530_L106657:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2869, cols 7 to 42
      //_genout_urv100531<106658> := (run_program_static<105974>stackfun ehandler<105985>varname);
      _genout_urv100531  = run_program_static(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105985_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2869, cols 7 to 42
      //result<105984>varname = _genout_urv100531<106658>varname;
      _vI105984_result = _genout_urv100531; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2870, cols 5 to 9
    _ifdoelse_bootflx_65979_L105987:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2871, cols 5 to 18
      //return result<105984>varname;: type int
      return _vI105984_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2872,3,2872,4); // HACK! 
}

//------------------------------
//FUNCTION <103675>: setup-from-file_uncurry::iterator'2: Apply method
void* _fI103675_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L103676:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<103680> := xs<103674>varname;
      _vI103680_iterator__apos_2_mv_1563  = ptr_pI89521_setup__hyphen_from__hyphen_file_uncurry->_vI103674_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI103680_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI103683__lam_1566)(FLX_FPAR_PASS this, ptr_pI89521_setup__hyphen_from__hyphen_file_uncurry))) ) goto _ml1565_L103679;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<103681>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<103680>varname));
      _vI103681_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI103680_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<103682>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<103680>varname));
      _vI103682_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI103680_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<103674>varname = t_param_std_1318<103682>varname;
      ptr_pI89521_setup__hyphen_from__hyphen_file_uncurry->_vI103674_xs = _vI103682_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108512)
      //yield (Some<80915>struct h_param_std_1319<103681>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI103681_h_param_std_1319));//yield
    FLX_CASE_LABEL(108512)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L103676;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L103679:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI103680_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L103678;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L103678:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L103676;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <92232>: join_uncurry::aux_uncurry: Apply method
void* _fI92232_aux_uncurry::apply(_at107697 const &_arg ){
  _vI92233_x_uncurry = _arg.data[0];
  _vI92234_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L92241:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<92237> := x_uncurry<92233>varname;
      _vI92237_aux__apos_2_mv_1387  = _vI92233_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI92237_aux__apos_2_mv_1387)==0) ) goto _ml1389_L92236;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<92234>varname;: type void*
      return _vI92234_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L92236:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI92237_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI92240__lam_1391)(FLX_FPAR_PASS this, ptr_fI89534_join_uncurry))) ) goto _ml1390_L92235;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<92238>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<92237>varname));
      _vI92238_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI92237_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<92239>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<92237>varname));
      _vI92239_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI92237_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<92234> := (Snoc<80397>struct (y<92234>varname, h_param_std_1269<92238>varname));
      _vI92234_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92234_y, _vI92238_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<92233> := t_param_std_1268<92239>varname;
      _vI92233_x_uncurry  = _vI92239_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L92241;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L92235:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <92770>: toolchain_msvc_win32::checkwarn::iterator'2: Apply method
void* _fI92770_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L92771:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<92775> := xs<92769>varname;
      _vI92775_iterator__apos_2_mv_1563  = ptrcheckwarn->xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI92775_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI92778__lam_1566)(FLX_FPAR_PASS this, ptrcheckwarn, ptrtoolchain_msvc_win32))) ) goto _ml1565_L92774;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<92776>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<92775>varname));
      _vI92776_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI92775_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<92777>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<92775>varname));
      _vI92777_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI92775_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<92769>varname = t_param_std_1318<92777>varname;
      ptrcheckwarn->xs = _vI92777_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108515)
      //yield (Some<80915>struct h_param_std_1319<92776>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI92776_h_param_std_1319));//yield
    FLX_CASE_LABEL(108515)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L92771;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L92774:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI92775_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L92773;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L92773:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L92771;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <66967>: toolchain_clang_osx::static_executable_linker: Apply method
int _fI66967_static_executable_linker::apply(_art107763 const &_arg ){
  _vI66970_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1623, cols 5 to 6
      //result<66969>varname = (generic_link_exe_static_uncurry<89531>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<66896>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66970>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66970>varname)));
      _vI66969_result = generic_link_exe_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_clang_osx->_vI66896_linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_osx->_vI66979_config.library_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.static_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66970_spec.srcs, _vI66970_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1624, cols 5 to 18
      //return result<66969>varname;: type int
      return _vI66969_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1625,3,1625,4); // HACK! 
}

//------------------------------

//PROCEDURE <89522:> iter_uncurry: Call method
::flx::rtl::con_t * iter_uncurry::call(::flx::rtl::con_t *_ptr_caller, _tt107731 const &_arg){
  _caller = _ptr_caller;
  _f_uncurry = _arg.mem_0;
  _vI89714_x = _arg.mem_1;
  INIT_PC
  return this;
}

//PROCEDURE <89522:> iter_uncurry: Resume method
::flx::rtl::con_t *iter_uncurry::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //iter'2_mv_1348<96420> := x<89714>varname;
      _vI96420_iter__apos_2_mv_1348  = _vI89714_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 220, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 220, cols 9 to 14
      if(!(FLX_VNI(_vI96420_iter__apos_2_mv_1348)==0) ) goto _ml1350_L96419;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/lists.fdoc: line 220, cols 9 to 14
    _ml1350_L96419:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1256, h_param_std_1257)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 9 to 17
      if(!andthen(FLX_VNI(_vI96420_iter__apos_2_mv_1348)==1, (FLX_NEWP(_lam_1354)(FLX_FPAR_PASS this))) ) goto _ml1352_L96418;
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 16 to 16
      //h_param_std_1257<96422>varname = apply((prj1:list * string -> string), (arg of case 1 of iter'2_mv_1348<96420>varname));
      h_param_std_1257 = (*((_tt107677*)FLX_VNP(_vI96420_iter__apos_2_mv_1348))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 14 to 14
      //t_param_std_1256<96423>varname = apply((prj0:list * string -> list), (arg of case 1 of iter'2_mv_1348<96420>varname));
      t_param_std_1256 = (*((_tt107677*)FLX_VNP(_vI96420_iter__apos_2_mv_1348))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 24 to 28
      //call _f_uncurry<89713>varname h_param_std_1257<96422>varname;
      FLX_SET_PC(108517)
      return (_f_uncurry)->clone()
      ->call(this, h_param_std_1257);
    FLX_CASE_LABEL(108517)
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //jump to procedure direct tail call iter_uncurry<89522>directjump (_f_uncurry<89713>varname, t_param_std_1256<96423>varname);
      {
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(tmp, _tt107731(_f_uncurry, t_param_std_1256));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 9 to 17
    _ml1352_L96418:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 7 to 42
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 7 to 42
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",221,7,221,42);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",221,7,221,42);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <93769>: generic_cxx_compile_for_dynamic_uncurry::aux_uncurry: Apply method
void* _fI93769_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93770_inp_uncurry = _arg.data[0];
  _vI93771_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93778:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93774> := inp_uncurry<93770>varname;
      _vI93774_aux__apos_2_mv_1381  = _vI93770_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93774_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93773;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93771>varname;: type void*
      return _vI93771_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93773:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93774_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93777__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_compile_for_dynamic_uncurry))) ) goto _ml1384_L93772;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93775>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93774>varname));
      _vI93775_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93774_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93776>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93774>varname));
      _vI93776_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93774_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93771> := (Snoc<80397>struct (out<93771>varname, (mkmac<68179>stackfun h_param_std_1267<93775>varname)));
      _vI93771_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93771_out, mkmac(_vI93775_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93770> := t_param_std_1266<93776>varname;
      _vI93770_inp_uncurry  = _vI93776_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93778;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93772:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <105924>: flx_processing::cxx_static_library: Apply method
int cxx_static_library::apply(_pt107743* const &_arg ){
  _vI105929_ehandler = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106473>ref;
      {
      __timeb64* _tmp108521 = (__timeb64*)&_vI106473_tv;
      _ftime64_s(((_tmp108521)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv100140<106472> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106473>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106473>varname)), literal[double]("1.0e3")))));
      _genout_urv100140  = (static_cast<double>((_vI106473_tv.time))) + ((static_cast<double>((_vI106473_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2685, cols 5 to 25
      //t0<105925>varname = _genout_urv100140<106472>varname;
      _vI105925_t0 = _genout_urv100140; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 22 to 36
      //cxx_static_library_mv_66114<106475> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      cxx_static_library_mv_66114  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
      if(!(cxx_static_library_mv_66114%2==1) ) goto _ml66116_L106476;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
      //_urv100144<106474> := echoln<106025>closure;
      _urv100144  = (FLX_NEWP(echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
      goto _end_hash_481058512;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
    _ml66116_L106476:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
      //_urv100144<106474> := debugln<106024>closure;
      _urv100144  = (FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
    _end_hash_481058512:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2693, cols 5 to 6
      //tc<105926>varname = apply(toolchain<68911>varname, ( ccflags:apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), debugln:_urv100144<106474>varname, dynamic_libraries:apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), header_search_dirs:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), macros:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname)));
      _vI105926_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(ptrflx_processing->_vI105724_dflt_clang_config.ccflags, _urv100144, ptrflx_processing->_vI105724_dflt_clang_config.dynamic_libraries, ptrflx_processing->_vI105724_dflt_clang_config.header_search_dirs, ptrflx_processing->_vI105724_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI105724_dflt_clang_config.macros, ptrflx_processing->_vI105724_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2694, cols 5 to 55
      //EXT_STATIC_OBJ<105927>varname = apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<105926>varname), ());
      _vI105927_EXT_STATIC_OBJ = (_vI105926_tc.static_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2709, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65950_L105930;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2701, cols 7 to 8
      //result<105928>varname = apply(apply((prj22:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<105926>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), srcs:(+<80787>stackfun (apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), EXT_STATIC_OBJ<105927>varname))))));
      _vI105928_result = (_vI105926_tc.static_library_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_processing->_vI106023_control.cppos, ptrflx_processing->_vI105620_dvars.cpp_filebase + _vI105927_EXT_STATIC_OBJ )) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2709, cols 5 to 9
      goto _ifdoelse_bootflx_65951_L105931;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2709, cols 5 to 9
    _ifdoend_bootflx_65950_L105930:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2707, cols 7 to 10
      //result<105928>varname = apply(apply((prj22:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<105926>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), srcs:apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI105928_result = (_vI105926_tc.static_library_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, ptrflx_processing->_vI106023_control.cppos)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2709, cols 5 to 9
    _ifdoelse_bootflx_65951_L105931:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _end_100158_L106485;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106484>ref;
      {
      __timeb64* _tmp108522 = (__timeb64*)&_vI106484_tv;
      _ftime64_s(((_tmp108522)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106483> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106484>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106484>varname)), literal[double]("1.0e3")))));
      _vI106483__genout_urv96124  = (static_cast<double>((_vI106484_tv.time))) + ((static_cast<double>((_vI106484_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106478>varname = (-<80547>primfun[double] (_genout_urv96124<106483>varname, t0<105925>varname));
      _vI106478_elapsed = _vI106483__genout_urv96124 - _vI105925_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106479>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106478>varname, literal[double]("60.0"))));
      _vI106479_minutes = ::std::floor((_vI106478_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106480>varname = (-<80547>primfun[double] (elapsed<106478>varname, (*<80818>primfun[double] (minutes<106479>varname, literal[double]("60.0")))));
      _vI106480_seconds = _vI106478_elapsed - (_vI106479_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106479>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106480>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Static lib   : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108523 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106479_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106480_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Static lib   : ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108523)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2710, cols 5 to 66
    _end_100158_L106485:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2713, cols 5 to 9
      if(!(!((_vI105928_result == 0)) ) ) goto _ifdoelse_bootflx_65953_L105933;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ static library link ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108524 = ((::std::string("[flx] C++ static library link ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108524)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2713, cols 5 to 9
    _ifdoelse_bootflx_65953_L105933:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2714, cols 5 to 18
      //return result<105928>varname;: type int
      return _vI105928_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2715,3,2715,4); // HACK! 
}

//------------------------------
//FUNCTION <97030>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI97030__lam_1457::apply(_a14239t_107672 const &_arg ){
  _vI97031_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<81159>stackfun (x<97031>varname, key<68665>varname));: type  ::flx::rtl::cl_t
      return eq(_vI97031_x, ptr_lam_65288->_vI68665_key);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <94961>: find_sym::_lam_572: Apply method
 ::flx::rtl::cl_t _lam_572::apply(){
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 888, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",888,9,888,17); // HACK! 
}

//------------------------------

//PROCEDURE <68646:> flx_pkgconfig::handle_pkg: Call method
::flx::rtl::con_t * handle_pkg::call(::flx::rtl::con_t *_ptr_caller, _tt107698 const &_arg){
  _caller = _ptr_caller;
  _vI68708_pkg = _arg.mem_0;
  trace = _arg.mem_1;
  INIT_PC
  return this;
}

//PROCEDURE <68646:> flx_pkgconfig::handle_pkg: Resume method
::flx::rtl::con_t *handle_pkg::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 288, cols 8 to 46
      //variables<68648>varname = Empty<81156>varname;
      variables = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 290, cols 8 to 37
      if(!mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107790((FLX_NEWP(_fI97179__lam_1457)(FLX_FPAR_PASS this, ptrflx_pkgconfig)), trace)) /* apply_stack */ ) goto _ifret_bootflx_65184_L68710;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 290, cols 8 to 37
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 290, cols 8 to 37
    _ifret_bootflx_65184_L68710:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 291, cols 8 to 25
      //found<68649>varname = (case 0 of bool);
      found = 0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //call procedure directcall iter_uncurry<89522>directproc (_lam_65277<68650>closure, dirs<68597>varname);
      {
      _pt107730* _tmp108525 = (FLX_NEWP(_lam_65277)(FLX_FPAR_PASS this, ptrflx_pkgconfig));
      FLX_SET_PC(108526)
      return (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
      ->call(this, _tt107731((_tmp108525), ptrflx_pkgconfig->dirs));
      }
    FLX_CASE_LABEL(108526)
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 363, cols 8 to 12
      if(found) goto _ifdoelse_bootflx_65204_L68716;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("package not found: ", pkg<68708>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108527 = (::std::string("package not found: ") + _vI68708_pkg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108527)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 361, cols 10 to 55
      if(!ptrflx_pkgconfig->require_pkg_exists ) goto _ifdoelse_bootflx_65206_L68712;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 361, cols 35 to 49
      //return_code<68490>varname = 1;
      ptrflx_pkgconfig->return_code = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 361, cols 10 to 55
    _ifdoelse_bootflx_65206_L68712:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 362, cols 10 to 38
      if(!ptrflx_pkgconfig->missing ) goto _ifdoelse_bootflx_65204_L68716;
    // # C:/projects/felix/src/packages/lists.fdoc: line 514, cols 3 to 4
      //insert_unique'3_mv_1487<97189> := (mem_uncurry<89504>stackfun (_lam_1457<97190>closure, result<68598>varname));
      _vI97189_insert_unique__apos_3_mv_1487  = mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107790((FLX_NEWP(_fI97190__lam_1457)(FLX_FPAR_PASS this, ptrflx_pkgconfig)), ptrflx_pkgconfig->_vI68598_result)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      if(!(_vI97189_insert_unique__apos_3_mv_1487%2==1) ) goto _ml1489_L97188;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      //_urv96373<97187> := result<68598>varname;
      _vI97187__urv96373  = ptrflx_pkgconfig->_vI68598_result; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
      goto _end_hash_271373240;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
    _ml1489_L97188:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 565, cols 5 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //_urv96373<97187> := (aux_uncurry<97202>stackfun ((Snoc<80397>struct ((aux_uncurry<97192>stackfun (result<68598>varname, Empty<80385>varname)), pkg<68708>varname)), Empty<80385>varname));
      _vI97187__urv96373  = _fI97202_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI97192_aux_uncurry(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(ptrflx_pkgconfig->_vI68598_result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, _vI68708_pkg))), (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 566, cols 3 to 4
    _end_hash_271373240:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 273, cols 6 to 42
      //result<68598>varname = _urv96373<97187>varname;
      ptrflx_pkgconfig->_vI68598_result = _vI97187__urv96373; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 363, cols 8 to 12
    _ifdoelse_bootflx_65204_L68716:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <68403>: FlxPkgConfigQuery::getpkgfielddflt::getpkgfielddflt'2: Apply method
_a14239t_107672 _fI68403_getpkgfielddflt__apos_2::apply(_at107674 const &_arg ){
  _vI68410_pkg = _arg.data[0];
  _vI68411_field = _arg.data[1];
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 539, cols 13 to 48
      //getpkgfielddflt'2_mv_65361<105519> := (getpkgfieldopt_uncurry<89461>stackfun (ehandler<68412>varname, pkg<68410>varname, field<68411>varname));
      _vI105519_getpkgfielddflt__apos_2_mv_65361  = getpkgfieldopt_uncurry(FLX_FPAR_PASS ptrFlxPkgConfigQuery)
      .apply(_tt107874(ptrgetpkgfielddflt->_vI68412_ehandler, _vI68410_pkg, _vI68411_field)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 540, cols 9 to 14
/*match case 1:|Some h_param_bootflx_65322*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 540, cols 9 to 14
      if(!andthen(FLX_VNI(_vI105519_getpkgfielddflt__apos_2_mv_65361)==1, (FLX_NEWP(_lam_65364)(FLX_FPAR_PASS this, ptrgetpkgfielddflt, ptrFlxPkgConfigQuery))) ) goto _ml65363_L105521;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 540, cols 14 to 14
      //h_param_bootflx_65322<105520>varname = (arg of case 1 of getpkgfielddflt'2_mv_65361<105519>varname);
      h_param_bootflx_65322 = *((_a14239t_107672*)FLX_VNP(_vI105519_getpkgfielddflt__apos_2_mv_65361)); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 541, cols 7 to 20
      //return h_param_bootflx_65322<105520>varname;: type _a14239t_107672
      return h_param_bootflx_65322;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 540, cols 9 to 14
    _ml65363_L105521:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 541, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 541, cols 9 to 13
      if(!(FLX_VNI(_vI105519_getpkgfielddflt__apos_2_mv_65361)==0) ) goto _ml65365_L105522;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 541, cols 7 to 20
      //return "";: type _a14239t_107672
      return ::std::string("");
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 541, cols 9 to 13
    _ml65365_L105522:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 541, cols 7 to 20
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 541, cols 7 to 20
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",541,7,541,20);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",541,7,541,20);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",543,5,543,6); // HACK! 
}

//------------------------------
//FUNCTION <96992>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::aux_uncurry: Apply method
void* _fI96992_aux_uncurry::apply(_at107697 const &_arg ){
  _vI96993_inp_uncurry = _arg.data[0];
  _vI96994_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L97001:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<96997> := inp_uncurry<96993>varname;
      _vI96997_aux__apos_2_mv_1381  = _vI96993_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI96997_aux__apos_2_mv_1381)==0) ) goto _ml1383_L96996;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<96994>varname;: type void*
      return _vI96994_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L96996:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI96997_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI97000__lam_1385)(FLX_FPAR_PASS this, ptr_lam_65288, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1384_L96995;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<96998>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<96997>varname));
      _vI96998_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI96997_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<96999>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<96997>varname));
      _vI96999_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI96997_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<96994> := (Snoc<80397>struct (out<96994>varname, (search_and_replace'2<96956>stackfun h_param_std_1267<96998>varname)));
      _vI96994_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96994_out, _fI96956_search_and_replace__apos_2(FLX_FPAR_PASS ptr_lam_65288, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_vI96998_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<96993> := t_param_std_1266<96999>varname;
      _vI96993_inp_uncurry  = _vI96999_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L97001;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L96995:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <91821>: process_config_text_uncurry::_lam_2973: Apply method
 ::flx::rtl::cl_t _lam_2973::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 537, cols 9 to 34
      //return (==<80201>primfun[int] ((_ctor_int<81465>primfun[size] (len<83436>primfun[string] (arg of case 1 of process_config_text'2_mv_2955<90278>varname))), 3));: type  ::flx::rtl::cl_t
      return ((static_cast<int>((PTF gcp->collector->get_used((*((_poly_80462t_107729*)FLX_VNP(ptrprocess_config_text_uncurry->_vI90278_process_config_text__apos_2_mv_2955))))))/*int.flx: ctor*/) == 3);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",537,9,537,34); // HACK! 
}

//------------------------------
//FUNCTION <96391>: flx_pkgconfig::add_val::aux_uncurry: Apply method
void* _fI96391_aux_uncurry::apply(_at107697 const &_arg ){
  _vI96392_x_uncurry = _arg.data[0];
  _vI96393_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L96400:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<96396> := x_uncurry<96392>varname;
      _vI96396_aux__apos_2_mv_1387  = _vI96392_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI96396_aux__apos_2_mv_1387)==0) ) goto _ml1389_L96395;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<96393>varname;: type void*
      return _vI96393_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L96395:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI96396_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI96399__lam_1391)(FLX_FPAR_PASS this, ptradd_val, ptrflx_pkgconfig))) ) goto _ml1390_L96394;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<96397>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<96396>varname));
      _vI96397_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI96396_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<96398>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<96396>varname));
      _vI96398_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI96396_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<96393> := (Snoc<80397>struct (y<96393>varname, h_param_std_1269<96397>varname));
      _vI96393_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96393_y, _vI96397_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<96392> := t_param_std_1268<96398>varname;
      _vI96392_x_uncurry  = _vI96398_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L96400;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L96394:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <107496>: flx_processing::check_binary_uptodate::aux_uncurry: Apply method
double _fI107496_aux_uncurry::apply(_tt108078 const &_arg ){
  _vI107497_init_uncurry = _arg.mem_0;
  _vI107498_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_98507_L107505:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<107501> := x<107498>varname;
      _vI107501_aux__apos_2_mv_1356  = _vI107498_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI107501_aux__apos_2_mv_1356)==0) ) goto _ml1358_L107500;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<107497>varname;: type double
      return _vI107497_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L107500:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI107501_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI107504__lam_1360)(FLX_FPAR_PASS this, ptr_fI106915_check_binary_uptodate, ptrflx_processing))) ) goto _ml1359_L107499;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<107502>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<107501>varname));
      _vI107502_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI107501_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<107503>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<107501>varname));
      _vI107503_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI107501_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<107498> := t_param_std_1258<107503>varname;
      _vI107498_x  = _vI107503_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<107497> := apply((maxf<106916>flxfun init_uncurry<107497>varname), h_param_std_1259<107502>varname);
      _vI107497_init_uncurry  = ((FLX_NEWP(_fI106916_maxf)(FLX_FPAR_PASS ptr_fI106915_check_binary_uptodate, ptrflx_processing))
      ->apply(_vI107497_init_uncurry))->clone()
      ->apply(_vI107502_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_98507_L107505;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L107499:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <89762>: toolchain_clang_apple_iOS_maker_uncurry::get_base_c_compile_flags: Apply method
void* _fI89762_get_base_c_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2000, cols 3 to 65
      //return base_c_compile_flags<89748>varname;: type void*
      return ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89748_base_c_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2000,3,2000,65); // HACK! 
}

//------------------------------
//FUNCTION <103281>: handle_filename::_lam_65659: Apply method
 ::flx::rtl::cl_t _lam_65659::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1388, cols 5 to 12
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1388,5,1388,12); // HACK! 
}

//------------------------------
//FUNCTION <106378>: flx_processing::ocaml_compile::dxqt'2::_lam_66015: Apply method
 ::flx::rtl::cl_t _fI106378__lam_66015::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1949,9,1949,14); // HACK! 
}

//------------------------------
//FUNCTION <66558>: toolchain_gcc_linux::cxx_static_object_compiler: Apply method
int _fI66558_cxx_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66561_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 835, cols 5 to 6
      //result<66560>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (cxx_compile_warning_flags<66499>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname))), "-D_GLIBCXX_USE_CXX11_ABI=1")), "-std=gnu++11")), "-D_POSIX")), "-fno-strict-aliasing")), "-fno-common")), "-O1")), "-c")), "-g")), "-fvisibility=hidden")), CCOBJ_STATIC_LIB:cxx_compiler<66502>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66561>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66561>varname)));
      _vI66560_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_gcc_linux->cxx_compile_warning_flags, ptrtoolchain_gcc_linux->_vI66586_config.ccflags)) /* apply_stack */, ::std::string("-D_GLIBCXX_USE_CXX11_ABI=1")))), ::std::string("-std=gnu++11")))), ::std::string("-D_POSIX")))), ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))), ::std::string("-fvisibility=hidden")))), ptrtoolchain_gcc_linux->cxx_compiler, ptrtoolchain_gcc_linux->_vI66586_config.header_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.macros, ::std::string("-o "), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66561_spec.src, _vI66561_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 836, cols 5 to 18
      //return result<66560>varname;: type int
      return _vI66560_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",837,3,837,4); // HACK! 
}

//------------------------------
//FUNCTION <89800>: toolchain_clang_apple_iOS_maker_uncurry::dynamic_library_linker: Apply method
int _fI89800_dynamic_library_linker::apply(_art107763 const &_arg ){
  _vI89802_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2189, cols 5 to 6
      //result<89801>varname = (generic_link_lib_dynamic_uncurry<89472>stackfun (( CCFLAGS:ccflags_for_dynamic_link<89747>varname, CCLINK_DLLIB:linker<89741>varname, EXT_SHARED_OBJ:".dylib", LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<89802>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<89802>varname)));
      _vI89801_result = generic_link_lib_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107813(_art107812(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89747_ccflags_for_dynamic_link, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89741_linker, ::std::string(".dylib"), _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.library_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89802_spec.srcs, _vI89802_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2190, cols 5 to 18
      //return result<89801>varname;: type int
      return _vI89801_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2191,3,2191,4); // HACK! 
}

//------------------------------
//FUNCTION <93858>: generic_static_library_uncurry::aux_uncurry: Apply method
void* _fI93858_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93859_inp_uncurry = _arg.data[0];
  _vI93860_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93867:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93863> := inp_uncurry<93859>varname;
      _vI93863_aux__apos_2_mv_1381  = _vI93859_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93863_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93862;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93860>varname;: type void*
      return _vI93860_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93862:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93863_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93866__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_static_library_uncurry))) ) goto _ml1384_L93861;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93864>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93863>varname));
      _vI93864_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93863_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93865>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93863>varname));
      _vI93865_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93863_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93860> := (Snoc<80397>struct (out<93860>varname, (quote_arg<16873>stackfun h_param_std_1267<93864>varname)));
      _vI93860_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93860_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI93864_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93859> := t_param_std_1266<93865>varname;
      _vI93859_inp_uncurry  = _vI93865_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93867;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93861:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <106453>: flx_processing::cxx_link_static_exe::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI106453__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <106836>: flx_processing::cxx_link_shared_library: Apply method
int _fI106836_cxx_link_shared_library::apply(_pt107743* const &_arg ){
  _vI106850_ehandler = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107364>ref;
      {
      __timeb64* _tmp108533 = (__timeb64*)&_vI107364_tv;
      _ftime64_s(((_tmp108533)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99824<107363> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107364>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107364>varname)), literal[double]("1.0e3")))));
      _vI107363__genout_urv99824  = (static_cast<double>((_vI107364_tv.time))) + ((static_cast<double>((_vI107364_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2482, cols 5 to 25
      //t0<106837>varname = _genout_urv99824<107363>varname;
      _vI106837_t0 = _vI107363__genout_urv99824; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2483, cols 5 to 36
      //pkg_dstrings<106838>varname = Empty<80385>varname;
      _vI106838_pkg_dstrings = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2484, cols 5 to 34
      //pkgs<106839>varname = apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname);
      _vI106839_pkgs = ptrflx_processing->_vI107004_control.extra_pkgs; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2500, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI106839_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65927_L106854;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_shared_library] Adding packages ", (str<81092>stackfun pkgs<106839>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108534 = (::std::string("[flx:cxx_link_shared_library] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106839_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108534)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<107365>varname = (aux_uncurry<107366>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI107365_r = _fI107366_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<107365>ref;
      {
      void** _tmp108535 = (void**)&_vI107365_r;
      _rev(((_tmp108535)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2490, cols 7 to 8
      //PKGCONFIG_PATH<106842>varname = r<107365>varname;
      _vI106842_PKGCONFIG_PATH = _vI107365_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2491, cols 7 to 126
      //allargs<106843>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<106842>varname, "-r")), "--field=provides_dlib")), "--field=requires_dlibs")), "--keepleftmost")), pkgs<106839>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106843_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI106842_PKGCONFIG_PATH, ::std::string("-r"))) /* apply_stack */, ::std::string("--field=provides_dlib"))) /* apply_stack */, ::std::string("--field=requires_dlibs"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI106839_pkgs)) /* apply_stack */, ptrflx_processing->_vI107004_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2492, cols 7 to 64
      //_genout_urv99865<107376> := (flx_pkgconfig<68435>stackfun allargs<106843>varname);
      _vI107376__genout_urv99865  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI106843_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2492, cols 7 to 64
      //_ds2_66093<106844>varname = _genout_urv99865<107376>varname;
      _vI106844__ds2_66093 = _vI107376__genout_urv99865; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2492, cols 7 to 64
      //ret<106845>varname = apply((prj0:int * list -> int), _ds2_66093<106844>varname);
      _vI106845_ret = _vI106844__ds2_66093.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2492, cols 7 to 64
      //mydstrings<106846>varname = apply((prj1:int * list -> list), _ds2_66093<106844>varname);
      _vI106846_mydstrings = _vI106844__ds2_66093.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2498, cols 7 to 11
      if(!(!((_vI106845_ret == 0)) ) ) goto _ifdoelse_bootflx_65929_L106852;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_shared_library] Error ", (str<80203>primfun[int] ret<106845>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<106843>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108536 = (((::std::string("[flx:cxx_link_shared_library] Error ") + ::flx::rtl::strutil::str<int>(_vI106845_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106843_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108536)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<106850>varname);
      {
      _a6258t_107873 _tmp108537 = (_a6258t_107873)(_vI106850_ehandler);
      throw ((_tmp108537));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2498, cols 7 to 11
    _ifdoelse_bootflx_65929_L106852:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2499, cols 7 to 31
      //pkg_dstrings<106838>varname = mydstrings<106846>varname;
      _vI106838_pkg_dstrings = _vI106846_mydstrings; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2500, cols 5 to 9
    _ifdoelse_bootflx_65927_L106854:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 22 to 36
      //cxx_link_shared_library_mv_66095<107378> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107378_cxx_link_shared_library_mv_66095  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      if(!(_vI107378_cxx_link_shared_library_mv_66095%2==1) ) goto _ml66097_L107379;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      //_urv99876<107377> := echoln<107006>closure;
      _vI107377__urv99876  = (FLX_NEWP(_pI107006_echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      goto _end_hash_855703743;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
    _ml66097_L107379:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      //_urv99876<107377> := debugln<107005>closure;
      _vI107377__urv99876  = (FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
    _end_hash_855703743:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 22 to 36
      //cxx_link_shared_library_mv_66095<107382> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107382_cxx_link_shared_library_mv_66095  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      if(!(_vI107382_cxx_link_shared_library_mv_66095%2==1) ) goto _ml66097_L107383;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      goto _end_hash_730378459;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
    _ml66097_L107383:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
    _end_hash_730378459:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2509, cols 5 to 6
      //tc<106847>varname = apply(toolchain<68911>varname, ( ccflags:apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), debugln:_urv99876<107377>varname, dynamic_libraries:(join_uncurry<89534>stackfun (apply((prj45:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), pkg_dstrings<106838>varname)), header_search_dirs:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), macros:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname)));
      _vI106847_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(ptrflx_processing->_vI106705_dflt_clang_config.ccflags, _vI107377__urv99876, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.LINK_STRINGS, _vI106838_pkg_dstrings)) /* apply_stack */, ptrflx_processing->_vI106705_dflt_clang_config.header_search_dirs, ptrflx_processing->_vI106705_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI106705_dflt_clang_config.macros, ptrflx_processing->_vI106705_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2510, cols 5 to 56
      //EXT_SHARED_OBJ<106848>varname = apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<106847>varname), ());
      _vI106848_EXT_SHARED_OBJ = (_vI106847_tc.dynamic_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2525, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65930_L106855;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2517, cols 7 to 8
      //result<106849>varname = apply(apply((prj13:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<106847>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), srcs:(+<80787>stackfun (apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), EXT_SHARED_OBJ<106848>varname))))));
      _vI106849_result = (_vI106847_tc.dynamic_library_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_processing->_vI107004_control.cppos, ptrflx_processing->dvars.cpp_filebase + _vI106848_EXT_SHARED_OBJ )) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2525, cols 5 to 9
      goto _ifdoelse_bootflx_65931_L106856;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2525, cols 5 to 9
    _ifdoend_bootflx_65930_L106855:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2523, cols 7 to 10
      //result<106849>varname = apply(apply((prj13:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<106847>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), srcs:apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106849_result = (_vI106847_tc.dynamic_library_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, ptrflx_processing->_vI107004_control.cppos)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2525, cols 5 to 9
    _ifdoelse_bootflx_65931_L106856:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _end_99907_L107392;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107391>ref;
      {
      __timeb64* _tmp108538 = (__timeb64*)&_vI107391_tv;
      _ftime64_s(((_tmp108538)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107390> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107391>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107391>varname)), literal[double]("1.0e3")))));
      _vI107390__genout_urv96124  = (static_cast<double>((_vI107391_tv.time))) + ((static_cast<double>((_vI107391_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107385>varname = (-<80547>primfun[double] (_genout_urv96124<107390>varname, t0<106837>varname));
      _vI107385_elapsed = _vI107390__genout_urv96124 - _vI106837_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107386>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107385>varname, literal[double]("60.0"))));
      _vI107386_minutes = ::std::floor((_vI107385_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107387>varname = (-<80547>primfun[double] (elapsed<107385>varname, (*<80818>primfun[double] (minutes<107386>varname, literal[double]("60.0")))));
      _vI107387_seconds = _vI107385_elapsed - (_vI107386_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107386>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107387>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Dynamic link : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108539 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107386_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107387_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Dynamic link : ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108539)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2527, cols 5 to 66
    _end_99907_L107392:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2530, cols 5 to 9
      if(!(!((_vI106849_result == 0)) ) ) goto _ifdoelse_bootflx_65933_L106858;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ clink ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108540 = ((::std::string("[flx] C++ clink ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108540)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2530, cols 5 to 9
    _ifdoelse_bootflx_65933_L106858:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2531, cols 5 to 18
      //return result<106849>varname;: type int
      return _vI106849_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2532,3,2532,4); // HACK! 
}

//------------------------------
//FUNCTION <106324>: flx_processing::cxx_compile_static::_lam_66077: Apply method
 ::flx::rtl::cl_t _lam_66077::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2325,5,2325,9); // HACK! 
}

//------------------------------
//FUNCTION <95834>: cal_depvars::_lam_65797: Apply method
 ::flx::rtl::cl_t _lam_65797::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1740, cols 7 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1740,7,1740,14); // HACK! 
}

//------------------------------
//FUNCTION <105688>: flx_processing::aux_uncurry: Apply method
_a5094t_107688 _fI105688_aux_uncurry::apply(_tt107728 const &_arg ){
  _vI105689_acc_uncurry = _arg.mem_0;
  _vI105690_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
    start_95253_L105696:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //aux'2_mv_1335<105693> := x<105690>varname;
      _vI105693_aux__apos_2_mv_1335  = _vI105690_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
      if(!(FLX_VNI(_vI105693_aux__apos_2_mv_1335)==0) ) goto _ml1337_L105692;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
      //return acc_uncurry<105689>varname;: type _a5094t_107688
      return _vI105689_acc_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
    _ml1337_L105692:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1252, any)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105693_aux__apos_2_mv_1335)==1, (FLX_NEWP(_fI105695__lam_1339)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml1338_L105691;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 16 to 16
      //t_param_std_1252<105694>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1335<105693>varname));
      _vI105694_t_param_std_1252 = (*((_tt107677*)FLX_VNP(_vI105693_aux__apos_2_mv_1335))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //x<105690> := t_param_std_1252<105694>varname;
      _vI105690_x  = _vI105694_t_param_std_1252; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //acc_uncurry<105689> := (+<80900>primfun[size] (acc_uncurry<105689>varname, literal[size]("1")));
      _vI105689_acc_uncurry  = _vI105689_acc_uncurry + 1 ; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      goto start_95253_L105696;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
    _ml1338_L105691:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,9,202,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,9,202,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",204,7,204,8); // HACK! 
}

//------------------------------
//C FUNC <17507>: std_config
_art107699 std_config(FLX_APAR_DECL_ONLY){
  _a14239t_107672 INSTALL_ROOT;
  _a14239t_107672 INSTALL_ROOT_TOPDIR;
  _a14239t_107672 PREFIX;
  _art107699 _vI91461_cfg;
  _art107708 profile;
  _art107699 _vI17509_cfg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 514, cols 5 to 45
      //profile<91460>varname = (dflt_profile<17513>stackfun ());
      profile = dflt_profile(); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 507, cols 5 to 44
      //(deref<85463>primfun[string] apply((prj2:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), &cfg<91461>ref)) = apply((prj1:record(FLX_CACHE_DIR:(string),FLX_HOME_DIR:(string),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string)) -> string), profile<91460>varname);
      *(&((_art107699*)&_vI91461_cfg)->FLX_HOME_DIR)  = profile.FLX_HOME_DIR; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 508, cols 5 to 50
      //(deref<85463>primfun[string] apply((prj5:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), &cfg<91461>ref)) = apply((prj3:record(FLX_CACHE_DIR:(string),FLX_HOME_DIR:(string),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string)) -> string), profile<91460>varname);
      *(&((_art107699*)&_vI91461_cfg)->FLX_PROFILE_DIR)  = profile.FLX_PROFILE_DIR; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 509, cols 5 to 46
      //(deref<85463>primfun[string] apply((prj0:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), &cfg<91461>ref)) = apply((prj0:record(FLX_CACHE_DIR:(string),FLX_HOME_DIR:(string),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string)) -> string), profile<91460>varname);
      *(&((_art107699*)&_vI91461_cfg)->FLX_CACHE_DIR)  = profile.FLX_CACHE_DIR; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 510, cols 5 to 48
      //(deref<85463>primfun[string] apply((prj4:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), &cfg<91461>ref)) = apply((prj2:record(FLX_CACHE_DIR:(string),FLX_HOME_DIR:(string),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string)) -> string), profile<91460>varname);
      *(&((_art107699*)&_vI91461_cfg)->FLX_OUTPUT_DIR)  = profile.FLX_OUTPUT_DIR; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 519, cols 5 to 59
      //PREFIX<91462>varname = (join<82705>stackfun ((join<82705>stackfun ((+<14305>primfun ("C:\", "usr")), "local")), "lib"));
      PREFIX = _fI82705_join(_fI82705_join(::std::string("C:\\") + ::std::string("usr") , ::std::string("local")), ::std::string("lib")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 521, cols 5 to 44
      //INSTALL_ROOT_TOPDIR<91463>varname = (join<82705>stackfun (PREFIX<91462>varname, "felix"));
      INSTALL_ROOT_TOPDIR = _fI82705_join(PREFIX, ::std::string("felix")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 522, cols 5 to 78
      //INSTALL_ROOT<91464>varname = (join<82705>stackfun (INSTALL_ROOT_TOPDIR<91463>varname, (+<14305>primfun ("felix-", felix_version<15994>varname))));
      INSTALL_ROOT = _fI82705_join(INSTALL_ROOT_TOPDIR, ::std::string("felix-") + ::std::string("2016.07.12-rc1") ); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), &cfg<91461>ref)) = (join<82705>stackfun (INSTALL_ROOT<91464>varname, "host"));
      *(&((_art107699*)&_vI91461_cfg)->FLX_TARGET_DIR)  = _fI82705_join(INSTALL_ROOT, ::std::string("host")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), &cfg<91461>ref)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun ((join<82705>stackfun (INSTALL_ROOT<91464>varname, "host")), "config"))));
      *(&((_art107699*)&_vI91461_cfg)->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(_fI82705_join(INSTALL_ROOT, ::std::string("host")), ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS (_art107699*)&_vI91461_cfg);
    // # C:/projects/felix/src/packages/flx.fdoc: line 494, cols 5 to 24
      //(deref<85463>primfun[string] apply((prj7:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), &cfg<91461>ref)) = (join<82705>stackfun (INSTALL_ROOT<91464>varname, "share"));
      *(&((_art107699*)&_vI91461_cfg)->FLX_SHARE_DIR)  = _fI82705_join(INSTALL_ROOT, ::std::string("share")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS (_art107699*)&_vI91461_cfg);
    // # C:/projects/felix/src/packages/flx.fdoc: line 612, cols 5 to 27
      //cfg<17509>varname = cfg<91461>varname;
      _vI17509_cfg = _vI91461_cfg; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L91485;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", (join<82705>stackfun (apply((prj5:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), cfg<17509>varname), "felix.fpc")))), "\x0A")));
      {
      _a14239t_107672 _tmp108542 = (::std::string("[load] ") + _fI82705_join(_vI17509_cfg.FLX_PROFILE_DIR, ::std::string("felix.fpc")) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108542)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L91485:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 568, cols 3 to 4
      //run procedure stackcall process_config_text_uncurry<89494>stackproc  (&cfg<17509>ref, (raw_load<8396>primfun (join<82705>stackfun (apply((prj5:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), cfg<17509>varname), "felix.fpc"))));
      {
      _art107699* _tmp108543 = (_art107699*)&_vI17509_cfg;
      _a14239t_107672 _tmp108544 = ::flx::rtl::ioutil::load_file((_fI82705_join(_vI17509_cfg.FLX_PROFILE_DIR, ::std::string("felix.fpc"))));
      process_config_text_uncurry(FLX_FPAR_PASS_ONLY)
      .stack_call(_tt107714((_tmp108543), (_tmp108544)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 603, cols 3 to 4
  config_env_overrides(FLX_FPAR_PASS (_art107699*)&_vI17509_cfg);
    // # C:/projects/felix/src/packages/flx.fdoc: line 614, cols 5 to 15
      //return cfg<17509>varname;: type _art107699
      return _vI17509_cfg;
}
//------------------------------
//FUNCTION <97170>: flx_pkgconfig::handle_pkg::_lam_65277::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97170__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <105033>: gramtime_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI105033__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <98768>: run_felix_compiler::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI98768__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <92102>: respectful_parse_uncurry_uncurry::iterator'2: Apply method
void* _fI92102_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      //i<92103>varname = 0;
      _vI92103_i = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
    redo__ll_strings_7200_L92104:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      if(FLX_UNLIKELY(!(!(((static_cast<int>((ptrrespectful_parse_uncurry_uncurry->_vI92106_x.size()))/*int.flx: ctor*/) - 1  < _vI92103_i)) ) )) goto break__ll_strings_7200_L92105;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 44 to 62
      FLX_SET_PC(108546)
      //yield (Some<81466>struct (subscript<81183>primfun[int] (x<92106>varname, i<92103>varname)));: type void*
      return FLX_VNR(1, new(*PTF gcp, char_ptr_map, true) char (::flx::rtl::strutil::subscript(ptrrespectful_parse_uncurry_uncurry->_vI92106_x,_vI92103_i)));//yield
    FLX_CASE_LABEL(108546)
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      // primcall pre_incr<81467>primproc[int] &i<92103>ref;
      {
      int* _tmp108547 = (int*)&_vI92103_i;
      ++*((_tmp108547));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      goto redo__ll_strings_7200_L92104;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
    break__ll_strings_7200_L92105:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 364, cols 7 to 24
      //return None<81468>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",365,5,365,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <106840>: flx_processing::cxx_link_shared_library::_lam_66092: Apply method
_a14239t_107672 _fI106840__lam_66092::apply(_a14239t_107672 const &_arg ){
  _vI106841_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2488, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<106841>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI106841_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2488,11,2488,40); // HACK! 
}

//------------------------------
//FUNCTION <106114>: flx_processing::find_cxx_pkgs::aux_uncurry: Apply method
void* _fI106114_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106115_x_uncurry = _arg.data[0];
  _vI106116_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L106123:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<106119> := x_uncurry<106115>varname;
      _vI106119_aux__apos_2_mv_1387  = _vI106115_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI106119_aux__apos_2_mv_1387)==0) ) goto _ml1389_L106118;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<106116>varname;: type void*
      return _vI106116_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L106118:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI106119_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI106122__lam_1391)(FLX_FPAR_PASS this, ptrfind_cxx_pkgs, ptrflx_processing))) ) goto _ml1390_L106117;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<106120>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<106119>varname));
      _vI106120_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI106119_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<106121>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<106119>varname));
      _vI106121_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI106119_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<106116> := (Snoc<80397>struct (y<106116>varname, h_param_std_1269<106120>varname));
      _vI106116_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106116_y, _vI106120_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<106115> := t_param_std_1268<106121>varname;
      _vI106115_x_uncurry  = _vI106121_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L106123;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L106117:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <86158>: func1::_lam_581: Apply method
int _fI86158__lam_581::apply(_a14239t_107672 const &_arg ){
  _vI86159_a0 = _arg;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1118, cols 12 to 36
      //return apply(s<86156>varname, (tf<86157>varname, a0<86159>varname));: type int
      return ptrfunc1->_vI86156_s(ptrfunc1->tf, _vI86159_a0);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",1118,12,1118,36); // HACK! 
}

//------------------------------
//FUNCTION <105575>: FlxPkgConfigQuery::aux_uncurry::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI105575__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <66372>: toolchain_msvc_win32::c_dependency_generator: Apply method
_tt107757 c_dependency_generator::apply(_art107756 const &_arg ){
  spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1804, cols 5 to 25
      //cmd<66374>varname = (join_uncurry<89534>stackfun ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (macros<66321>varname, (+<14305>primfun ("/Tc", apply((prj0:record(src:(string)) -> string), spec<66378>varname))))), "/c")), "/showIncludes")), "/Zs")), "/MDd")), "/nologo")), "cl.exe")), include_switches<66314>varname));
      _vI66374_cmd = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_msvc_win32->macros, ::std::string("/Tc") + spec.src ))), ::std::string("/c")))), ::std::string("/showIncludes")))), ::std::string("/Zs")))), ::std::string("/MDd")))), ::std::string("/nologo")))), ::std::string("cl.exe")))), ptrtoolchain_msvc_win32->include_switches)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1805, cols 5 to 32
      //_genout_urv92809<92809> := (xpopen<66338>stackfun cmd<66374>varname);
      _genout_urv92809  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(_vI66374_cmd) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1805, cols 5 to 32
      //_ds2_66248<66375>varname = _genout_urv92809<92809>varname;
      _ds2_66248 = _genout_urv92809; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1805, cols 5 to 32
      //result<66376>varname = apply((prj0:int * string -> int), _ds2_66248<66375>varname);
      _vI66376_result = _ds2_66248.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1805, cols 5 to 32
      //text<66377>varname = apply((prj1:int * string -> string), _ds2_66248<66375>varname);
      _vI66377_text = _ds2_66248.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1806, cols 5 to 23
      //return (result<66376>varname, text<66377>varname);: type _tt107757
      return _tt107757(_vI66376_result, _vI66377_text);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1807,3,1807,4); // HACK! 
}

//------------------------------
//FUNCTION <107095>: flx_processing::find_cxx_pkgs::aux_uncurry: Apply method
void* _fI107095_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107096_x_uncurry = _arg.data[0];
  _vI107097_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L107104:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<107100> := x_uncurry<107096>varname;
      _vI107100_aux__apos_2_mv_1387  = _vI107096_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI107100_aux__apos_2_mv_1387)==0) ) goto _ml1389_L107099;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<107097>varname;: type void*
      return _vI107097_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L107099:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI107100_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI107103__lam_1391)(FLX_FPAR_PASS this, ptr_fI106722_find_cxx_pkgs, ptrflx_processing))) ) goto _ml1390_L107098;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<107101>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<107100>varname));
      _vI107101_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI107100_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<107102>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<107100>varname));
      _vI107102_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI107100_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<107097> := (Snoc<80397>struct (y<107097>varname, h_param_std_1269<107101>varname));
      _vI107097_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107097_y, _vI107101_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<107096> := t_param_std_1268<107102>varname;
      _vI107096_x_uncurry  = _vI107102_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L107104;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L107098:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <91083>: cat_uncurry::_lam_1445: Apply method
 ::flx::rtl::cl_t _lam_1445::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",469,7,469,23); // HACK! 
}

//------------------------------
//FUNCTION <106273>: flx_processing::cxx_compile_dynamic::_lam_66072: Apply method
 ::flx::rtl::cl_t _lam_66072::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2293,5,2293,9); // HACK! 
}

//------------------------------
//FUNCTION <66883>: toolchain_clang_apple_iPhoneOS_armv7_arm64: Apply method
_art107765 _fI66883_tool_hash_1053775159::apply(_art107755 const &_arg ){
  _vI66885_config = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94465>varname = Empty<80385>varname;
      _vI94465_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L94461;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94466>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI94466_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94466>ref;
      {
      int* _tmp108550 = (int*)&_vI94466_i;
      ++*((_tmp108550));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94464:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94466_i)) )) goto _ifdoelse_std_1250_L94461;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94466>ref;
      {
      int* _tmp108551 = (int*)&_vI94466_i;
      --*((_tmp108551));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94465>varname = (Snoc<80397>struct (o<94465>varname, apply(aprj(i<94466>varname : bool), ("armv7", "arm64"))));
      _vI94465_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94465_o, (_at107674(::std::string("armv7"), ::std::string("arm64")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94466_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94464;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94461:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2196, cols 1 to 2
      //return (toolchain_clang_apple_iOS_maker_uncurry<89530>flxfun ("iphoneos", o<94465>varname, config<66885>varname));: type _art107765
      return (FLX_NEWP(toolchain_clang_apple_iOS_maker_uncurry)(FLX_FPAR_PASS_ONLY))
      ->apply(_tt107818(::std::string("iphoneos"), _vI94465_o, _vI66885_config));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2196,1,2196,2); // HACK! 
}

//------------------------------
//FUNCTION <107580>: flx_processing::run_program_dynamic::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI107580__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <98120>: map_package_requirements_uncurry::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI98120__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//C PROC <7641>: pexit
void pexit(int _vI7644_e){
  _a14239t_107672 _vI99624_bad;
  _at107693 _vI99623_b;
  _a14239t_107672 _urv99622;
  _a14239t_107672 bad;
  _at107693 _vI99617_b;
  _a14239t_107672 _urv99615;
  _a16063t_107687 _vI7643_err;
    // # C:/projects/felix/src/packages/program.fdoc: line 716, cols 7 to 11
      if(!(!((_vI7644_e == 0)) ) ) goto _ifdoelse_std_494_L7648;
    // # C:/projects/felix/src/packages/program.fdoc: line 715, cols 9 to 13
      if(!((_vI7644_e == -1)) ) goto _ifdoend_std_495_L7645;
    // # C:/projects/felix/src/packages/program.fdoc: line 709, cols 11 to 23
      //err<7643>varname = errno<16069>varname;
      _vI7643_err = errno; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 304, cols 5 to 9
      if(!(((_vI7643_err ) == 0)) ) goto _ifdoend_std_2515_L99619;
    // # C:/projects/felix/src/packages/program.fdoc: line 297, cols 7 to 18
      //_urv99615<99615> := "OK";
      _urv99615  = ::std::string("OK"); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 297, cols 7 to 18
      goto _end_inline_str_99621_L99621;
    // # C:/projects/felix/src/packages/program.fdoc: line 304, cols 5 to 9
    _ifdoend_std_2515_L99619:;
    // # C:/projects/felix/src/packages/program.fdoc: line 300, cols 7 to 81
      //bad<99618>varname = (+<14305>primfun ("[strerror_r] Failed to find text for error number ", (str<80203>primfun[int] (_ctor_int<16064>primfun err<7643>varname))));
      bad = ::std::string("[strerror_r] Failed to find text for error number ") + ::flx::rtl::strutil::str<int>((_vI7643_err )) ; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 301, cols 7 to 55
      // primcall strncpy<80271>primproc[size] ((_ctor_carray<80269>primfun[char, 1000] &b<99617>ref), (_unsafe_cstr<15217>primfun bad<99618>varname), (_ctor_size<80270>primfun[int] 1000));
      {
      char* _tmp108552 = (((_at107693*)&_vI99617_b))->data;
      char* _tmp108553 = ((char*)bad.c_str());
      _a5094t_107688 _tmp108554 = static_cast<_a5094t_107688>(1000)/*int.flx: ctor size from _a5094t_107688*/;
      (void)::std::strncpy(((_tmp108552)),((_tmp108553)),((_tmp108554)));
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 302, cols 7 to 44
      // primcall strerror_r<16095>primproc (err<7643>varname, (_ctor_carray<80269>primfun[char, 1000] &b<99617>ref), (_ctor_size<5394>primfun arrayindexcount<80274>varname[1000]));
      {
      char* _tmp108555 = (((_at107693*)&_vI99617_b))->data;
      _a5094t_107688 _tmp108556 = (1000)/*int.flx: ctor size IDENT*/;
      (void)strerror_s(((_tmp108555)), ((_tmp108556)), _vI7643_err);
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 303, cols 7 to 34
      //_urv99615<99615> := (_ctor_string<14330>primfun (_ctor_carray<80269>primfun[char, 1000] &b<99617>ref));
      _urv99615  = ::std::string(((((_at107693*)&_vI99617_b))->data)); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 309, cols 27 to 60
    _end_inline_str_99621_L99621:;
    // # C:/projects/felix/src/packages/program.fdoc: line 304, cols 5 to 9
      if(!(((_vI7643_err ) == 0)) ) goto _ifdoend_std_2515_L99626;
    // # C:/projects/felix/src/packages/program.fdoc: line 297, cols 7 to 18
      //_urv99622<99622> := "OK";
      _urv99622  = ::std::string("OK"); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 297, cols 7 to 18
      goto _end_inline_strerror_99628_L99628;
    // # C:/projects/felix/src/packages/program.fdoc: line 304, cols 5 to 9
    _ifdoend_std_2515_L99626:;
    // # C:/projects/felix/src/packages/program.fdoc: line 300, cols 7 to 81
      //bad<99624>varname = (+<14305>primfun ("[strerror_r] Failed to find text for error number ", (str<80203>primfun[int] (_ctor_int<16064>primfun err<7643>varname))));
      _vI99624_bad = ::std::string("[strerror_r] Failed to find text for error number ") + ::flx::rtl::strutil::str<int>((_vI7643_err )) ; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 301, cols 7 to 55
      // primcall strncpy<80271>primproc[size] ((_ctor_carray<80269>primfun[char, 1000] &b<99623>ref), (_unsafe_cstr<15217>primfun bad<99624>varname), (_ctor_size<80270>primfun[int] 1000));
      {
      char* _tmp108557 = (((_at107693*)&_vI99623_b))->data;
      char* _tmp108558 = ((char*)_vI99624_bad.c_str());
      _a5094t_107688 _tmp108559 = static_cast<_a5094t_107688>(1000)/*int.flx: ctor size from _a5094t_107688*/;
      (void)::std::strncpy(((_tmp108557)),((_tmp108558)),((_tmp108559)));
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 302, cols 7 to 44
      // primcall strerror_r<16095>primproc (err<7643>varname, (_ctor_carray<80269>primfun[char, 1000] &b<99623>ref), (_ctor_size<5394>primfun arrayindexcount<80274>varname[1000]));
      {
      char* _tmp108560 = (((_at107693*)&_vI99623_b))->data;
      _a5094t_107688 _tmp108561 = (1000)/*int.flx: ctor size IDENT*/;
      (void)strerror_s(((_tmp108560)), ((_tmp108561)), _vI7643_err);
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 303, cols 7 to 34
      //_urv99622<99622> := (_ctor_string<14330>primfun (_ctor_carray<80269>primfun[char, 1000] &b<99623>ref));
      _urv99622  = ::std::string(((((_at107693*)&_vI99623_b))->data)); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 305, cols 3 to 4
    _end_inline_strerror_99628_L99628:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Error ", _urv99615<99615>varname)), " in flx: ")), _urv99622<99622>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108562 = (((::std::string("Error ") + _urv99615 ) + ::std::string(" in flx: ") ) + _urv99622 ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108562)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 711, cols 11 to 31
      // primcall exit<7637>primproc (_ctor_int<16064>primfun err<7643>varname);
      {
      int _tmp108563 = _vI7643_err ;
      ::std::exit(((_tmp108563)));
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 716, cols 7 to 11
      goto _ifdoelse_std_494_L7648;
    // # C:/projects/felix/src/packages/program.fdoc: line 715, cols 9 to 13
    _ifdoend_std_495_L7645:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("Unknown error in shell ", (str<80203>primfun[int] e<7644>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108564 = (::std::string("Unknown error in shell ") + ::flx::rtl::strutil::str<int>(_vI7644_e) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108564)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 714, cols 11 to 25
      // primcall exit<7637>primproc 3;
      ::std::exit(3);
    // # C:/projects/felix/src/packages/program.fdoc: line 716, cols 7 to 11
    _ifdoelse_std_494_L7648:;
    // # C:/projects/felix/src/packages/program.fdoc: line 717, cols 7 to 21
      // primcall exit<7637>primproc e<7644>varname;
      ::std::exit(_vI7644_e);
    // # C:/projects/felix/src/packages/program.fdoc: line 718, cols 5 to 6
      return; // proc return from stackable 
}
//------------------------------
//FUNCTION <99166>: cxx_depcheck::aux::_lam_1480: Apply method
 ::flx::rtl::cl_t _fI99166__lam_1480::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",547,9,547,17); // HACK! 
}

//------------------------------
//FUNCTION <107092>: flx_processing::find_cxx_pkgs::_lam_66026: Apply method
 ::flx::rtl::cl_t _fI107092__lam_66026::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2093,7,2093,11); // HACK! 
}

//------------------------------
//FUNCTION <107316>: flx_processing::ocaml_compile::iterator'2: Apply method
void* _fI107316_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L107317:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<107321> := xs<107315>varname;
      _vI107321_iterator__apos_2_mv_1563  = ptr_fI106819_ocaml_compile->_vI107315_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI107321_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI107324__lam_1566)(FLX_FPAR_PASS this, ptr_fI106819_ocaml_compile, ptrflx_processing))) ) goto _ml1565_L107320;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<107322>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<107321>varname));
      _vI107322_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI107321_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<107323>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<107321>varname));
      _vI107323_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI107321_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<107315>varname = t_param_std_1318<107323>varname;
      ptr_fI106819_ocaml_compile->_vI107315_xs = _vI107323_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108565)
      //yield (Some<80915>struct h_param_std_1319<107322>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI107322_h_param_std_1319));//yield
    FLX_CASE_LABEL(108565)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L107317;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L107320:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI107321_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L107319;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L107319:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L107317;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <66309>: toolchain_msvc_win32::get_base_cxx_compile_flags: Apply method
void* get_base_cxx_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1744, cols 3 to 69
      //return base_cxx_compile_flags<66282>varname;: type void*
      return ptrtoolchain_msvc_win32->base_cxx_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1744,3,1744,69); // HACK! 
}

//------------------------------
//FUNCTION <7860>: find_sym: Apply method
_a5106t_107998 find_sym::apply(_tt108011 const &_arg ){
  lib = _arg.mem_0;
  sym = _arg.mem_1;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 896, cols 5 to 9
      if(!(((lib->filename) == ::std::string(""))) ) goto _ifdoend_std_530_L7875;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 767, cols 5 to 73
      //ppregistry<94939>varname = (get_module_registry_address_address<7810>primfun ());
      ppregistry = (void****)(void*)&(PTF gcp->collector->module_registry); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 768, cols 5 to 46
      //pregistry<94940>varname = (deref<86146>primfun[&JSLArray] ppregistry<94939>varname);
      pregistry = *ppregistry ; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 773, cols 5 to 9
      if(!(0==pregistry) ) goto _ifdoelse_std_521_L94942;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1234, cols 4 to 48
      //_genout_urv94947<94947> := (_ctor_JSLArray<13899>primfun ());
      _genout_urv94947  = _mkjudy(FLX_POINTER_TO_THREAD_FRAME, &_a13896t_107995_ptr_map); //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1234, cols 4 to 48
      //_genout_urv94839<94944> := _genout_urv94947<94947>varname;
      _genout_urv94839  = _genout_urv94947; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1234, cols 4 to 48
      //_genout_urv94833<94943> := _genout_urv94839<94944>varname;
      _genout_urv94833  = _genout_urv94839; //init
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 770, cols 7 to 64
      //pregistry<94940>varname = new _genout_urv94833<94943>varname;
      pregistry = (_a13898t_107994*)new(*PTF gcp, _a13898t_107994_ptr_map, true) _a13898t_107994 (_genout_urv94833); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 771, cols 7 to 29
      //(deref<86146>primfun[&JSLArray] ppregistry<94939>varname) = pregistry<94940>varname;
      *ppregistry  = pregistry; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 772, cols 7 to 55
      // primcall add_root<8206>primproc (cast<86149>primfun[address, &JSLArray] pregistry<94940>varname);
      {
      _a5106t_107998 _tmp108567 = (_a5106t_107998)(pregistry);
      PTF gcp->collector->add_root (((_tmp108567)));
      }
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 773, cols 5 to 9
    _ifdoelse_std_521_L94942:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 774, cols 5 to 22
      //_genout_urv94938<94938> := (deref<86150>primfun[JSLArray] pregistry<94940>varname);
      _genout_urv94938  = *pregistry ; //init
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 885, cols 7 to 37
      //reg<7862>varname = _genout_urv94938<94938>varname;
      reg = _genout_urv94938; //assign simple
    // # C:/projects/felix/src/packages/trees.fdoc: line 1257, cols 4 to 5
      //key<94949> := (modulename<7839>primfun lib<7869>varname);
      _vI94949_key  = lib->modulename; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1255, cols 6 to 78
      // primcall JudySLGet<13904>primproc (reg<7862>varname, (stl_begin<15218>primfun &key<94949>ref), &err<94950>ref, (cast<86134>primfun[&(&word), &(&(&JSLArray))] &slot<94951>ref));
      {
      char* _tmp108568 = ((char*)((_a14239t_107672*)&_vI94949_key)->c_str());
      JError_t* _tmp108569 = (JError_t*)&_vI94950_err;
      _a13829t_108015** _tmp108570 = (_a13829t_108015**)((_a13898t_107994***)&_vI94951_slot);
      *((_tmp108570))=(Word_t*)JudySLGet(*reg,(unsigned char*)((_tmp108568)),((_tmp108569)));
      }
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 16 to 34
      //get'2_mv_1820<94953> := (isNULL<86140>primfun[&JSLArray] slot<94951>varname);
      _vI94953_get__apos_2_mv_1820  = (0==_vI94951_slot); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      if(!(_vI94953_get__apos_2_mv_1820%2==1) ) goto _ml1822_L94952;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      //find_sym_mv_563<563> := None<86142>varname;
      find_sym_mv_563  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      goto _end_inline_get_uncurry_94956_L94956;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
    _ml1822_L94952:;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
/*match case 2:any*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      //find_sym_mv_563<563> := (Some<86143>struct (deref<86144>primfun[JSLArray] (deref<86145>primfun[&JSLArray] slot<94951>varname)));
      find_sym_mv_563  = FLX_VNR(1, new(*PTF gcp, _a13898t_107994_ptr_map, true) _a13898t_107994 (*(*_vI94951_slot ) )); //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1257, cols 4 to 5
    _end_inline_get_uncurry_94956_L94956:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 887, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 887, cols 9 to 13
      if(!(FLX_VNI(find_sym_mv_563)==0) ) goto _ml565_L7871;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 887, cols 18 to 29
      //return NULL<5163>varname;: type _a5106t_107998
      return NULL;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 887, cols 9 to 13
    _ml565_L7871:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 888, cols 9 to 17
/*match case 2:|Some dict_param_std_533*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 888, cols 9 to 17
      if(!andthen(FLX_VNI(find_sym_mv_563)==1, (FLX_NEWP(_lam_572)(FLX_FPAR_PASS this))) ) goto _ml566_L7874;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 888, cols 14 to 17
      //dict_param_std_533<7865>varname = (arg of case 1 of find_sym_mv_563<563>varname);
      dict_param_std_533 = *((_a13898t_107994*)FLX_VNP(find_sym_mv_563)); //assign simple
    // # C:/projects/felix/src/packages/trees.fdoc: line 1257, cols 4 to 5
      //key<94965> := sym<7870>varname;
      key  = sym; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1255, cols 6 to 78
      // primcall JudySLGet<13904>primproc (dict_param_std_533<7865>varname, (stl_begin<15218>primfun &key<94965>ref), &err<94966>ref, (cast<86117>primfun[&(&word), &(&(&address))] &slot<94967>ref));
      {
      char* _tmp108571 = ((char*)((_a14239t_107672*)&key)->c_str());
      JError_t* _tmp108572 = (JError_t*)&err;
      _a13829t_108015** _tmp108573 = (_a13829t_108015**)((_a5106t_107998***)&slot);
      *((_tmp108573))=(Word_t*)JudySLGet(*dict_param_std_533,(unsigned char*)((_tmp108571)),((_tmp108572)));
      }
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 16 to 34
      //get'2_mv_1820<94969> := (isNULL<86123>primfun[&address] slot<94967>varname);
      _vI94969_get__apos_2_mv_1820  = (0==slot); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      if(!(_vI94969_get__apos_2_mv_1820%2==1) ) goto _ml1822_L94968;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      //find_sym_mv_567<567> := None<86125>varname;
      find_sym_mv_567  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      goto _end_inline_get_uncurry_94972_L94972;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
    _ml1822_L94968:;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
/*match case 2:any*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      //find_sym_mv_567<567> := (Some<86126>struct (deref<86127>primfun[address] (deref<86128>primfun[&address] slot<94967>varname)));
      find_sym_mv_567  = FLX_VNR(1, new(*PTF gcp, _a5106t_107998_ptr_map, true) _a5106t_107998 (*(*slot ) )); //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1257, cols 4 to 5
    _end_inline_get_uncurry_94972_L94972:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 890, cols 11 to 15
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 890, cols 11 to 15
      if(!(FLX_VNI(find_sym_mv_567)==0) ) goto _ml569_L7872;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 890, cols 20 to 31
      //return NULL<5163>varname;: type _a5106t_107998
      return NULL;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 890, cols 11 to 15
    _ml569_L7872:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 891, cols 11 to 18
/*match case 2:|Some sym_param_std_535_param_std_537*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 891, cols 11 to 18
      if(!andthen(FLX_VNI(find_sym_mv_567)==1, (FLX_NEWP(_lam_571)(FLX_FPAR_PASS this))) ) goto _ml570_L7873;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 891, cols 16 to 18
      //sym_param_std_535_param_std_537<7868>varname = (arg of case 1 of find_sym_mv_567<567>varname);
      sym_param_std_535_param_std_537 = *((_a5106t_107998*)FLX_VNP(find_sym_mv_567)); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 891, cols 23 to 33
      //return sym_param_std_535_param_std_537<7868>varname;: type _a5106t_107998
      return sym_param_std_535_param_std_537;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 891, cols 11 to 18
    _ml570_L7873:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 892, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 892, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",892,9,892,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",892,9,892,18);
;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 888, cols 9 to 17
    _ml566_L7874:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 893, cols 7 to 16
/*match failure*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 893, cols 7 to 16
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",893,7,893,16);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",893,7,893,16);
;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 896, cols 5 to 9
    _ifdoend_std_530_L7875:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 895, cols 7 to 33
      //return (raw_dlsym<7859>primfun (lib<7869>varname, sym<7870>varname));: type _a5106t_107998
      return FLX_NATIVE_SDLSYM(lib->library,sym.c_str());
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",897,3,897,4); // HACK! 
}

//------------------------------
//FUNCTION <92778>: toolchain_msvc_win32::checkwarn::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI92778__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <68347>: FlxPkgConfigQuery::query: Apply method
_tt107751 query::apply(void* const &_arg ){
  _vI68349_args = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 485, cols 5 to 6
      //return (flx_pkgconfig<68435>stackfun (join_uncurry<89534>stackfun (paths<68346>varname, args<68349>varname)));: type _tt107751
      return flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrFlxPkgConfigQuery->paths, _vI68349_args)) /* apply_stack */) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",485,5,485,6); // HACK! 
}

//------------------------------
//FUNCTION <93688>: generic_cxx_compile_for_static_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93688__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <89851>: gramtime_uncurry::maxtime::maxtime'2: Apply method
double _fI89851_maxtime__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI89852_s = _arg;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<104973> := (<<82604>primfun[double] (x<89853>varname, (gramtime_uncurry<89478>stackfun (debugln_uncurry<89871>varname, path<89864>varname, s<89852>varname))));
      _vI104973_max_mv_106  = (ptrmaxtime->_vI89853_x < gramtime_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107889(ptrgramtime_uncurry->debugln_uncurry, ptrgramtime_uncurry->_vI89864_path, _vI89852_s)) /* apply_stack */); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI104973_max_mv_106%2==1) ) goto _ml108_L104972;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return (gramtime_uncurry<89478>stackfun (debugln_uncurry<89871>varname, path<89864>varname, s<89852>varname));: type double
      return gramtime_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107889(ptrgramtime_uncurry->debugln_uncurry, ptrgramtime_uncurry->_vI89864_path, _vI89852_s)) /* apply_stack */;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L104972:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return x<89853>varname;: type double
      return ptrmaxtime->_vI89853_x;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",84,5,84,77); // HACK! 
}

//------------------------------
//FUNCTION <93213>: toolchain_msvc_win32::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93213__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <96158>: fmt::_lam_229: Apply method
 ::flx::rtl::cl_t _lam_229::apply(){
    // # C:/projects/felix/src/packages/numbers.fdoc: line 213, cols 7 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/numbers.fdoc",213,7,213,17); // HACK! 
}

//------------------------------
//FUNCTION <105665>: flx_processing::rfi::_lam_875: Apply method
 ::flx::rtl::cl_t _lam_875::apply(){
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 587, cols 9 to 18
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",587,9,587,18); // HACK! 
}

//------------------------------
//FUNCTION <94046>: generic_link_exe_dynamic_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI94046__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <89769>: toolchain_clang_apple_iOS_maker_uncurry::cxx_dependency_generator: Apply method
_tt107757 _fI89769_cxx_dependency_generator::apply(_art107756 const &_arg ){
  _vI89773_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2033, cols 6 to 7
      //_ds2_66186<89770>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:cxx_compiler<89740>varname, CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), "-MM")), sdk<89736>varname)), "-isysroot")), "-std=c++11")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj0:record(src:(string)) -> string), spec<89773>varname)));
      _ds2_66186 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89740_cxx_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.ccflags, ::std::string("-MM")))), ptrtoolchain_clang_apple_iOS_maker_uncurry->sdk))), ::std::string("-isysroot")))), ::std::string("-std=c++11")))), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.header_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.macros, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89773_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2033, cols 6 to 7
      //result<89771>varname = apply((prj0:int * string -> int), _ds2_66186<89770>varname);
      _vI89771_result = _ds2_66186.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2033, cols 6 to 7
      //data<89772>varname = apply((prj1:int * string -> string), _ds2_66186<89770>varname);
      _vI89772_data = _ds2_66186.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2034, cols 6 to 25
      //return (result<89771>varname, data<89772>varname);: type _tt107757
      return _tt107757(_vI89771_result, _vI89772_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2035,3,2035,4); // HACK! 
}

//------------------------------
//FUNCTION <105094>: gramtime_uncurry::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI105094__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//C FUNC <81159>: eq
 ::flx::rtl::cl_t eq( _a14239t_107672 _vI81677_x, _a14239t_107672 _vI81678_y){
    // # C:/projects/felix/src/packages/algebra.fdoc: line 275, cols 3 to 28
      //return (==<80464>primfun[string] (x<81677>varname, y<81678>varname));: type  ::flx::rtl::cl_t
      return (_vI81677_x == _vI81678_y);
}
//------------------------------
//FUNCTION <106226>: flx_processing::cxx_compile_dynamic1_uncurry::aux_uncurry: Apply method
void* _fI106226_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106227_inp_uncurry = _arg.data[0];
  _vI106228_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L106235:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<106231> := inp_uncurry<106227>varname;
      _vI106231_aux__apos_2_mv_1381  = _vI106227_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI106231_aux__apos_2_mv_1381)==0) ) goto _ml1383_L106230;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<106228>varname;: type void*
      return _vI106228_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L106230:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI106231_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI106234__lam_1385)(FLX_FPAR_PASS this, ptrcxx_compile_dynamic1_uncurry, ptrflx_processing))) ) goto _ml1384_L106229;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<106232>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<106231>varname));
      _vI106232_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI106231_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<106233>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<106231>varname));
      _vI106233_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI106231_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<106228> := (Snoc<80397>struct (out<106228>varname, (_lam_66062<106059>stackfun h_param_std_1267<106232>varname)));
      _vI106228_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106228_out, _lam_66062(ptrcxx_compile_dynamic1_uncurry, ptrflx_processing)
      .apply(_vI106232_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<106227> := t_param_std_1266<106233>varname;
      _vI106227_inp_uncurry  = _vI106233_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L106235;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L106229:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66729>: toolchain_clang_linux::dependency_parser: Apply method
void* _fI66729_dependency_parser::apply(_a14239t_107672 const &_arg ){
  _vI66731_data = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1266, cols 3 to 4
      //return (generic_dependency_parser<68198>stackfun data<66731>varname);: type void*
      return generic_dependency_parser(FLX_FPAR_PASS_ONLY)
      .apply(_vI66731_data) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1266,3,1266,4); // HACK! 
}

//------------------------------
//FUNCTION <92753>: toolchain_msvc_win32::checkwarn::aux::_lam_2289: Apply method
 ::flx::rtl::cl_t _fI92753__lam_2289::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,9,478,14); // HACK! 
}

//------------------------------
//FUNCTION <107245>: flx_processing::cxx_compile_dynamic::iterator'2: Apply method
void* _fI107245_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L107246:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<107250> := xs<107244>varname;
      _vI107250_iterator__apos_2_mv_1563  = ptr_fI106776_cxx_compile_dynamic->_vI107244_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI107250_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI107253__lam_1566)(FLX_FPAR_PASS this, ptr_fI106776_cxx_compile_dynamic, ptrflx_processing))) ) goto _ml1565_L107249;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<107251>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<107250>varname));
      _vI107251_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI107250_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<107252>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<107250>varname));
      _vI107252_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI107250_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<107244>varname = t_param_std_1318<107252>varname;
      ptr_fI106776_cxx_compile_dynamic->_vI107244_xs = _vI107252_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108577)
      //yield (Some<80915>struct h_param_std_1319<107251>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI107251_h_param_std_1319));//yield
    FLX_CASE_LABEL(108577)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L107246;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L107249:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI107250_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L107248;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L107248:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L107246;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <106272>: flx_processing::cxx_compile_dynamic::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI106272__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <66641>: toolchain_gcc_osx::c_static_object_compiler: Apply method
int _fI66641_c_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66644_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1033, cols 5 to 6
      //result<66643>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_c_compile_flags<66596>varname, CCOBJ_STATIC_LIB:c_compiler<66592>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66644>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66644>varname)));
      _vI66643_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_gcc_osx->_vI66596_base_c_compile_flags, ptrtoolchain_gcc_osx->_vI66592_c_compiler, ptrtoolchain_gcc_osx->_vI66677_config.header_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.macros, ::std::string("-o "), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66644_spec.src, _vI66644_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1034, cols 5 to 18
      //return result<66643>varname;: type int
      return _vI66643_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1035,3,1035,4); // HACK! 
}

//------------------------------
//FUNCTION <103041>: exts::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI103041__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <89457>: get_dflt_uncurry: Apply method
_a5106t_107998 get_dflt_uncurry::apply(_tt108052 const &_arg ){
  x_uncurry = _arg.mem_0;
  _vI90044_key = _arg.mem_1;
  dflt = _arg.mem_2;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1257, cols 4 to 5
      //key<94917> := key<90044>varname;
      _vI94917_key  = _vI90044_key; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1255, cols 6 to 78
      // primcall JudySLGet<13904>primproc (x_uncurry<90043>varname, (stl_begin<15218>primfun &key<94917>ref), &err<94918>ref, (cast<86117>primfun[&(&word), &(&(&address))] &slot<94919>ref));
      {
      char* _tmp108579 = ((char*)((_a14239t_107672*)&_vI94917_key)->c_str());
      JError_t* _tmp108580 = (JError_t*)&_vI94918_err;
      _a13829t_108015** _tmp108581 = (_a13829t_108015**)((_a5106t_107998***)&_vI94919_slot);
      *((_tmp108581))=(Word_t*)JudySLGet(*x_uncurry,(unsigned char*)((_tmp108579)),((_tmp108580)));
      }
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 16 to 34
      //get'2_mv_1820<94921> := (isNULL<86123>primfun[&address] slot<94919>varname);
      _vI94921_get__apos_2_mv_1820  = (0==_vI94919_slot); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      if(!(_vI94921_get__apos_2_mv_1820%2==1) ) goto _ml1822_L94920;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      //get_dflt'2_mv_1825<94915> := None<86125>varname;
      _vI94915_get_dflt__apos_2_mv_1825  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      goto _end_inline_get_uncurry_94904_L94922;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
    _ml1822_L94920:;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
/*match case 2:any*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1256, cols 13 to 66
      //get_dflt'2_mv_1825<94915> := (Some<86126>struct (deref<86127>primfun[address] (deref<86128>primfun[&address] slot<94919>varname)));
      _vI94915_get_dflt__apos_2_mv_1825  = FLX_VNR(1, new(*PTF gcp, _a5106t_107998_ptr_map, true) _a5106t_107998 (*(*_vI94919_slot ) )); //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1257, cols 4 to 5
    _end_inline_get_uncurry_94904_L94922:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1274, cols 7 to 12
/*match case 1:|Some v_param_std_1788*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1274, cols 7 to 12
      if(!andthen(FLX_VNI(_vI94915_get_dflt__apos_2_mv_1825)==1, (FLX_NEWP(_lam_1828)(FLX_FPAR_PASS this))) ) goto _ml1827_L94914;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1274, cols 12 to 12
      //v_param_std_1788<94916>varname = (arg of case 1 of get_dflt'2_mv_1825<94915>varname);
      v_param_std_1788 = *((_a5106t_107998*)FLX_VNP(_vI94915_get_dflt__apos_2_mv_1825)); //assign simple
    // # C:/projects/felix/src/packages/trees.fdoc: line 1275, cols 5 to 20
      //return v_param_std_1788<94916>varname;: type _a5106t_107998
      return v_param_std_1788;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1274, cols 7 to 12
    _ml1827_L94914:;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1275, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1275, cols 7 to 11
      if(!(FLX_VNI(_vI94915_get_dflt__apos_2_mv_1825)==0) ) goto _ml1829_L94913;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1275, cols 5 to 20
      //return dflt<90045>varname;: type _a5106t_107998
      return dflt;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1275, cols 7 to 11
    _ml1829_L94913:;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1275, cols 5 to 20
/*match failure*/
    // # C:/projects/felix/src/packages/trees.fdoc: line 1275, cols 5 to 20
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/trees.fdoc",1275,5,1275,20);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/trees.fdoc",1275,5,1275,20);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/trees.fdoc",1277,3,1277,4); // HACK! 
}

//------------------------------
//FUNCTION <95943>: cal_depvars::_lam_65808: Apply method
 ::flx::rtl::cl_t _lam_65808::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1789, cols 7 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1789,7,1789,14); // HACK! 
}

//------------------------------
//FUNCTION <105761>: flx_processing::cal_time_from_flxdepfile: Apply method
double cal_time_from_flxdepfile::apply(_tt108171 const &_arg ){
  _vI105772_debugln = _arg.mem_0;
  df = _arg.mem_1;
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_634_L106137;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load_text] ", df<105773>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108583 = (::std::string("[load_text] ") + df ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108583)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
    _ifdoelse_std_634_L106137:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2126, cols 5 to 31
      //deptext<105769>varname = (raw_load_text<8398>primfun df<105773>varname);
      deptext = ::flx::rtl::ioutil::load_text_file(df); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2127, cols 5 to 38
      //lines<105770>varname = (split<14933>stackfun (deptext<105769>varname, "\x0A"));
      _vI105770_lines = split(FLX_FPAR_PASS_ONLY)
      .apply(_at107674(deptext, ::std::string("\n"))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2128, cols 5 to 34
      //run procedure call debugln<105772>varname (+<14305>primfun ("Deps=", (str<81092>stackfun lines<105770>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI105772_debugln)->clone()
      ->call(0, ::std::string("Deps=") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI105770_lines) /* apply_stack */ );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 237, cols 7 to 24
      //cal_time_from_flxdepfile_mv_66039<106139> := (aux_uncurry<106141>stackfun ((neg<82781>primfun[double] literal[double]("1.0")), lines<105770>varname));
      cal_time_from_flxdepfile_mv_66039  = _fI106141_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_tt108078(- 1.0 , _vI105770_lines)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2130, cols 11 to 12
/*match case 1:ft_param_bootflx_65861*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2130, cols 11 to 12
      //ft_param_bootflx_65861<106140>varname = cal_time_from_flxdepfile_mv_66039<106139>varname;
      ft_param_bootflx_65861 = cal_time_from_flxdepfile_mv_66039; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 10 to 35
      //cal_time_from_flxdepfile_mv_66043<106151> := (==<82539>primfun[double] (ft_param_bootflx_65861<106140>varname, (neg<82781>primfun[double] literal[double]("1.0"))));
      cal_time_from_flxdepfile_mv_66043  = (ft_param_bootflx_65861 == - 1.0 ); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
      if(!(cal_time_from_flxdepfile_mv_66043%2==1) ) goto _ml66045_L106152;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 289, cols 3 to 42
      //_urv98557<106138> := (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1));
      _urv98557  = static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 289, cols 3 to 42
      goto _end_hash_658190826;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
    _ml66045_L106152:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
      //_urv98557<106138> := ft_param_bootflx_65861<106140>varname;
      _urv98557  = ft_param_bootflx_65861; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 78
    _end_hash_658190826:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2132, cols 5 to 6
      //deptime<105771>varname = _urv98557<106138>varname;
      deptime = _urv98557; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2133, cols 5 to 57
      //run procedure call debugln<105772>varname (+<14305>primfun ("Deptime=", (strfiletime<82509>stackfun deptime<105771>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI105772_debugln)->clone()
      ->call(0, ::std::string("Deptime=") + strfiletime(FLX_FPAR_PASS deptime) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2134, cols 5 to 19
      //return deptime<105771>varname;: type double
      return deptime;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2135,3,2135,4); // HACK! 
}

//------------------------------
//FUNCTION <93665>: generic_cxx_compile_for_static_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93665__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <106915>: flx_processing::check_binary_uptodate: Apply method
 ::flx::rtl::cl_t _fI106915_check_binary_uptodate::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100188_L107471;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Check C++->binary uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108584 = (::std::string("[flx] ") + ::std::string("Check C++->binary uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108584)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2725, cols 5 to 41
    _end_100188_L107471:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2760, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.RECOMPILE == 1)) ) goto _ifdoend_bootflx_65954_L106927;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100192_L107474;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++->binary dependency checking skipped due to switch RECOMPILE=1: forced not uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108585 = (::std::string("[flx] ") + ::std::string("C++->binary dependency checking skipped due to switch RECOMPILE=1: forced not uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108585)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2727, cols 7 to 104
    _end_100192_L107474:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2728, cols 7 to 19
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2760, cols 5 to 9
    _ifdoend_bootflx_65954_L106927:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2759, cols 5 to 19
      if(!((ptrflx_processing->_vI107004_control.CHECK_DEPENDENCIES == 1)) ) goto _ifdoend_bootflx_65956_L106928;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100196_L107477;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Checking C++->binary dependencies since CHECK_DEPENDENCIES=1 to see if the output is uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108586 = (::std::string("[flx] ") + ::std::string("Checking C++->binary dependencies since CHECK_DEPENDENCIES=1 to see if the output is uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108586)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2730, cols 7 to 110
    _end_100196_L107477:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2732, cols 7 to 91
      //xtime<106920>varname = (dfiletime<82503>stackfun (apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), (neg<82781>primfun[double] literal[double]("1.0"))));
      _vI106920_xtime = dfiletime(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, - 1.0 ); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<107479> := (+<14305>primfun (apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".dep"));
      _vI107479_f  = ptrflx_processing->dvars.filebase + ::std::string(".dep") ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI107479_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L107480;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<107479>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<107479>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<107479>varname, 2))));
      _vI107479_f = ::flx::rtl::strutil::substr(_vI107479_f,0,1) + ::flx::rtl::strutil::substr(_vI107479_f,2,_vI107479_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L107483;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L107480:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI107479_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L107483;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<107479>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<107479>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<107479>varname, 2))));
      _vI107479_f = (::flx::rtl::strutil::substr(_vI107479_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI107479_f,2,_vI107479_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L107483:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI107479_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L107485;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<107479>varname = (copyfrom<81959>primfun[int] (f<107479>varname, 1));
      _vI107479_f = ::flx::rtl::strutil::substr(_vI107479_f,1,_vI107479_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L107485:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<107478>varname = (join<82705>stackfun (apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), f<107479>varname));
      _vI107478_k = _fI82705_join((*ptrflx_processing->_vI68947_config ).FLX_OUTPUT_DIR, _vI107479_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2733, cols 7 to 82
      //depfilename<106921>varname = k<107478>varname;
      _vI106921_depfilename = _vI107478_k; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2734, cols 7 to 81
      //flx_srctime<106922>varname = (dfiletime<82503>stackfun (depfilename<106921>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));
      _vI106922_flx_srctime = dfiletime(_vI106921_depfilename, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2735, cols 7 to 73
      //cpp_srctime<106923>varname = (aux_uncurry<107486>stackfun ((neg<82781>primfun[double] literal[double]("1.0")), apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106923_cpp_srctime = _fI107486_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_tt108078(- 1.0 , ptrflx_processing->_vI107004_control.cpps)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2736, cols 7 to 74
      //obj_srctime<106924>varname = (aux_uncurry<107496>stackfun ((neg<82781>primfun[double] literal[double]("1.0")), apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106924_obj_srctime = _fI107496_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_tt108078(- 1.0 , ptrflx_processing->_vI107004_control.cppos)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<107508> := (<<82604>primfun[double] (flx_srctime<106922>varname, cpp_srctime<106923>varname));
      _vI107508_max_mv_106  = (_vI106922_flx_srctime < _vI106923_cpp_srctime); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI107508_max_mv_106%2==1) ) goto _ml108_L107507;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv100256<107506> := cpp_srctime<106923>varname;
      _vI107506__urv100256  = _vI106923_cpp_srctime; //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      goto _end_inline_max_100263_L107509;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L107507:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv100256<107506> := flx_srctime<106922>varname;
      _vI107506__urv100256  = _vI106922_flx_srctime; //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 3 to 52
    _end_inline_max_100263_L107509:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<107512> := (<<82604>primfun[double] (_urv100256<107506>varname, obj_srctime<106924>varname));
      _vI107512_max_mv_106  = (_vI107506__urv100256 < _vI106924_obj_srctime); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI107512_max_mv_106%2==1) ) goto _ml108_L107511;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv100264<107510> := obj_srctime<106924>varname;
      _vI107510__urv100264  = _vI106924_obj_srctime; //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      goto _end_inline_max_100271_L107513;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L107511:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv100264<107510> := _urv100256<107506>varname;
      _vI107510__urv100264  = _vI107506__urv100256; //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 3 to 52
    _end_inline_max_100271_L107513:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2737, cols 7 to 70
      //deptime<106925>varname = _urv100264<107510>varname;
      _vI106925_deptime = _vI107510__urv100264; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2738, cols 7 to 37
      //uptodate<106926>varname = (<<82604>primfun[double] (deptime<106925>varname, xtime<106920>varname));
      _vI106926_uptodate = (_vI106925_deptime < _vI106920_xtime); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100281_L107516;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Extra c++ sources  ", (str<81092>stackfun apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108587 = (::std::string("[flx] ") + (::std::string("Extra c++ sources  ") + str(FLX_FPAR_PASS_ONLY)
      .apply(ptrflx_processing->_vI107004_control.cpps) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108587)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2741, cols 7 to 55
    _end_100281_L107516:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100285_L107519;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Extra object files ", (str<81092>stackfun apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108588 = (::std::string("[flx] ") + (::std::string("Extra object files ") + str(FLX_FPAR_PASS_ONLY)
      .apply(ptrflx_processing->_vI107004_control.cppos) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108588)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2742, cols 7 to 56
    _end_100285_L107519:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100289_L107522;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Extra ocaml files  ", (str<81092>stackfun apply((prj79:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108589 = (::std::string("[flx] ") + (::std::string("Extra ocaml files  ") + str(FLX_FPAR_PASS_ONLY)
      .apply(ptrflx_processing->_vI107004_control.ocamls) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108589)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2744, cols 7 to 57
    _end_100289_L107522:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100293_L107525;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Filebase = ", apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108590 = (::std::string("[flx] ") + (::std::string("Filebase = ") + ptrflx_processing->dvars.filebase ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108590)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2746, cols 7 to 46
    _end_100293_L107525:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100297_L107528;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("cache   time = ", (strfiletime<82509>stackfun apply((prj75:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> double), control<107004>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp108591 = (::std::string("[flx] ") + (::std::string("cache   time = ") + strfiletime(FLX_FPAR_PASS ptrflx_processing->_vI107004_control.cache_time) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108591)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2748, cols 7 to 78
    _end_100297_L107528:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100301_L107531;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("flx_src time = ", (strfiletime<82509>stackfun flx_srctime<106922>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108592 = (::std::string("[flx] ") + (::std::string("flx_src time = ") + strfiletime(FLX_FPAR_PASS _vI106922_flx_srctime) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108592)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2749, cols 7 to 71
    _end_100301_L107531:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100305_L107534;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("cpp_src time = ", (strfiletime<82509>stackfun cpp_srctime<106923>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108593 = (::std::string("[flx] ") + (::std::string("cpp_src time = ") + strfiletime(FLX_FPAR_PASS _vI106923_cpp_srctime) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108593)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2750, cols 7 to 71
    _end_100305_L107534:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100309_L107537;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("obj_src time = ", (strfiletime<82509>stackfun obj_srctime<106924>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108594 = (::std::string("[flx] ") + (::std::string("obj_src time = ") + strfiletime(FLX_FPAR_PASS _vI106924_obj_srctime) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108594)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2751, cols 7 to 71
    _end_100309_L107537:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100313_L107540;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("dep     time = ", (strfiletime<82509>stackfun deptime<106925>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108595 = (::std::string("[flx] ") + (::std::string("dep     time = ") + strfiletime(FLX_FPAR_PASS _vI106925_deptime) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108595)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2753, cols 7 to 67
    _end_100313_L107540:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100317_L107543;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Binary  time = ", (strfiletime<82509>stackfun xtime<106920>varname))), " for ")), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108596 = (::std::string("[flx] ") + (((::std::string("Binary  time = ") + strfiletime(FLX_FPAR_PASS _vI106920_xtime) ) + ::std::string(" for ") ) + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108596)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2754, cols 7 to 108
    _end_100317_L107543:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 34 to 41
      //check_binary_uptodate_mv_66119<107545> := uptodate<106926>varname;
      _vI107545_check_binary_uptodate_mv_66119  = _vI106926_uptodate; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
      if(!(_vI107545_check_binary_uptodate_mv_66119%2==1) ) goto _ml66121_L107546;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
      //_urv100318<107544> := "";
      _vI107544__urv100318  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
      goto _end_hash_94588153;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
    _ml66121_L107546:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
      //_urv100318<107544> := " NOT ";
      _vI107544__urv100318  = ::std::string(" NOT "); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
    _end_hash_94588153:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100326_L107550;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ("output is ", _urv100318<107544>varname)), " up to date")))), "\x0A")));
      {
      _a14239t_107672 _tmp108597 = (::std::string("[flx] ") + ((::std::string("output is ") + _vI107544__urv100318 ) + ::std::string(" up to date") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108597)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 7 to 85
    _end_100326_L107550:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2756, cols 7 to 22
      //return uptodate<106926>varname;: type  ::flx::rtl::cl_t
      return _vI106926_uptodate;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2759, cols 5 to 19
    _ifdoend_bootflx_65956_L106928:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100330_L107553;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++->binary dependency checking skipped due to switch CHECK_DEPENDENCIES=0: forced uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108598 = (::std::string("[flx] ") + ::std::string("C++->binary dependency checking skipped due to switch CHECK_DEPENDENCIES=0: forced uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108598)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2758, cols 7 to 109
    _end_100330_L107553:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2759, cols 7 to 18
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2761,3,2761,4); // HACK! 
}

//------------------------------
//FUNCTION <66614>: toolchain_gcc_osx::static_library_extension: Apply method
_a14239t_107672 _fI66614_static_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 975, cols 3 to 49
      //return ".a";: type _a14239t_107672
      return ::std::string(".a");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",975,3,975,49); // HACK! 
}

//------------------------------

//PROCEDURE <107005:> flx_processing::debugln: Call method
::flx::rtl::con_t * _pI107005_debugln::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI107010_x = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <107005:> flx_processing::debugln: Resume method
::flx::rtl::con_t *_pI107005_debugln::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65838_L107011;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", x<107010>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108599 = (::std::string("[flx] ") + _vI107010_x ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108599)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1997, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
    _ifdoelse_bootflx_65838_L107011:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1997, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <66665>: toolchain_gcc_osx::static_executable_linker: Apply method
int _fI66665_static_executable_linker::apply(_art107763 const &_arg ){
  _vI66668_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1134, cols 5 to 6
      //result<66667>varname = (generic_link_exe_static_uncurry<89531>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<66594>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66668>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66668>varname)));
      _vI66667_result = generic_link_exe_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_gcc_osx->_vI66594_linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_gcc_osx->_vI66677_config.library_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.static_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66668_spec.srcs, _vI66668_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1135, cols 5 to 18
      //return result<66667>varname;: type int
      return _vI66667_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1136,3,1136,4); // HACK! 
}

//------------------------------
//FUNCTION <106505>: flx_processing::check_binary_uptodate::aux_uncurry: Apply method
double _fI106505_aux_uncurry::apply(_tt108078 const &_arg ){
  _vI106506_init_uncurry = _arg.mem_0;
  _vI106507_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_98507_L106514:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<106510> := x<106507>varname;
      _vI106510_aux__apos_2_mv_1356  = _vI106507_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI106510_aux__apos_2_mv_1356)==0) ) goto _ml1358_L106509;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<106506>varname;: type double
      return _vI106506_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L106509:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI106510_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI106513__lam_1360)(FLX_FPAR_PASS this, ptrcheck_binary_uptodate, ptrflx_processing))) ) goto _ml1359_L106508;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<106511>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<106510>varname));
      _vI106511_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI106510_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<106512>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<106510>varname));
      _vI106512_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI106510_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<106507> := t_param_std_1258<106512>varname;
      _vI106507_x  = _vI106512_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<106506> := apply((maxf<105935>flxfun init_uncurry<106506>varname), h_param_std_1259<106511>varname);
      _vI106506_init_uncurry  = ((FLX_NEWP(_fI105935_maxf)(FLX_FPAR_PASS ptrcheck_binary_uptodate, ptrflx_processing))
      ->apply(_vI106506_init_uncurry))->clone()
      ->apply(_vI106511_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_98507_L106514;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L106508:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <105962>: flx_processing::run_program_dynamic: Apply method
int run_program_dynamic::apply(_pt107743* const &_arg ){
  _vI105967_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2815, cols 5 to 19
      //result<105963>varname = 0;
      _vI105963_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65968_L105972;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2822, cols 7 to 8
      //xargs<105964>varname = (join_uncurry<89534>stackfun ((+<80787>stackfun ((Snoc<80397>struct (apply((prj1:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<105620>varname), apply((prj18:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), apply((prj7:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<105620>varname)));
      xargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrflx_processing->_vI105620_dvars.DEBUGSWITCH, ptrflx_processing->_vI106023_control.DRIVER_EXE))), ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME)) /* apply_stack */, ptrflx_processing->_vI105620_dvars.args)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<106590>varname = (aux_uncurry<106591>stackfun (apply((prj30:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), Empty<80385>varname));
      _vI106590_r = _fI106591_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697(ptrflx_processing->_vI106023_control.FLXRUN, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<106590>ref;
      {
      void** _tmp108601 = (void**)&_vI106590_r;
      _rev(((_tmp108601)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<106601>varname = (aux_uncurry<106602>stackfun (xargs<105964>varname, Empty<80385>varname));
      _vI106601_r = _fI106602_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697(xargs, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<106601>ref;
      {
      void** _tmp108602 = (void**)&_vI106601_r;
      _rev(((_tmp108602)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2823, cols 7 to 84
      //CMD<105965>varname = (+<14305>primfun ((+<14305>primfun ((cat_uncurry<89509>stackfun (" ", r<106590>varname)), " ")), (cat_uncurry<89509>stackfun (" ", r<106601>varname))));
      _vI105965_CMD = (cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI106590_r)) /* apply_stack */ + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI106601_r)) /* apply_stack */ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2824, cols 7 to 86
      if(!(!((ptrflx_processing->_vI106023_control.STDOUT == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65971_L105969;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2824, cols 34 to 80
      //CMD<105965>varname = (+<14305>primfun ((+<14305>primfun (CMD<105965>varname, " > ")), (+<14305>primfun ((+<14305>primfun (""", apply((prj69:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), """))));
      _vI105965_CMD = (_vI105965_CMD + ::std::string(" > ") ) + ((::std::string("\"") + ptrflx_processing->_vI106023_control.STDOUT ) + ::std::string("\"") ) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2824, cols 7 to 86
    _ifdoelse_bootflx_65971_L105969:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2825, cols 7 to 84
      if(!(!((ptrflx_processing->_vI106023_control.STDIN == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65973_L105971;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2825, cols 33 to 78
      //CMD<105965>varname = (+<14305>primfun ((+<14305>primfun (CMD<105965>varname, " < ")), (+<14305>primfun ((+<14305>primfun (""", apply((prj68:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), """))));
      _vI105965_CMD = (_vI105965_CMD + ::std::string(" < ") ) + ((::std::string("\"") + ptrflx_processing->_vI106023_control.STDIN ) + ::std::string("\"") ) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2825, cols 7 to 84
    _ifdoelse_bootflx_65973_L105971:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100433_L106614;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Run command=", CMD<105965>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108603 = (::std::string("[flx] ") + (::std::string("Run command=") + _vI105965_CMD ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108603)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2826, cols 7 to 34
    _end_100433_L106614:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106616>ref;
      {
      __timeb64* _tmp108604 = (__timeb64*)&_vI106616_tv;
      _ftime64_s(((_tmp108604)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv100434<106615> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106616>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106616>varname)), literal[double]("1.0e3")))));
      _genout_urv100434  = (static_cast<double>((_vI106616_tv.time))) + ((static_cast<double>((_vI106616_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2827, cols 7 to 27
      //t0<105966>varname = _genout_urv100434<106615>varname;
      _vI105966_t0 = _genout_urv100434; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2828, cols 7 to 26
      //_genout_urv100438<106617> := (system<105725>stackfun CMD<105965>varname);
      _genout_urv100438  = system(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105965_CMD) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2828, cols 7 to 26
      //result<105963>varname = _genout_urv100438<106617>varname;
      _vI105963_result = _genout_urv100438; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _ifdoelse_bootflx_65969_L105973;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106624>ref;
      {
      __timeb64* _tmp108605 = (__timeb64*)&_vI106624_tv;
      _ftime64_s(((_tmp108605)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106623> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106624>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106624>varname)), literal[double]("1.0e3")))));
      _vI106623__genout_urv96124  = (static_cast<double>((_vI106624_tv.time))) + ((static_cast<double>((_vI106624_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106618>varname = (-<80547>primfun[double] (_genout_urv96124<106623>varname, t0<105966>varname));
      _vI106618_elapsed = _vI106623__genout_urv96124 - _vI105966_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106619>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106618>varname, literal[double]("60.0"))));
      _vI106619_minutes = ::std::floor((_vI106618_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106620>varname = (-<80547>primfun[double] (elapsed<106618>varname, (*<80818>primfun[double] (minutes<106619>varname, literal[double]("60.0")))));
      _vI106620_seconds = _vI106618_elapsed - (_vI106619_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106619>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106620>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Dynamic Run : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108606 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106619_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106620_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Dynamic Run : ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108606)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
      goto _ifdoelse_bootflx_65969_L105973;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
      goto _ifdoelse_bootflx_65969_L105973;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
    _ifdoend_bootflx_65968_L105972:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Cannot run C++ dynamic library ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108607 = (::std::string("Cannot run C++ dynamic library ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108607)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2832, cols 5 to 9
    _ifdoelse_bootflx_65969_L105973:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2833, cols 5 to 18
      //return result<105963>varname;: type int
      return _vI105963_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2834,3,2834,4); // HACK! 
}

//------------------------------
//FUNCTION <98112>: map_package_requirements_uncurry::aux_uncurry: Apply method
_a14239t_107672 _fI98112_aux_uncurry::apply(_tt107698 const &_arg ){
  _vI98113_init_uncurry = _arg.mem_0;
  _vI98114_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_95735_L98121:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<98117> := x<98114>varname;
      _vI98117_aux__apos_2_mv_1356  = _vI98114_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI98117_aux__apos_2_mv_1356)==0) ) goto _ml1358_L98116;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<98113>varname;: type _a14239t_107672
      return _vI98113_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L98116:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI98117_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI98120__lam_1360)(FLX_FPAR_PASS this, ptrmap_package_requirements_uncurry))) ) goto _ml1359_L98115;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<98118>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<98117>varname));
      _vI98118_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI98117_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<98119>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<98117>varname));
      _vI98119_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI98117_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<98114> := t_param_std_1258<98119>varname;
      _vI98114_x  = _vI98119_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<98113> := apply((join<84379>flxfun init_uncurry<98113>varname), h_param_std_1259<98118>varname);
      _vI98113_init_uncurry  = ((FLX_NEWP(join)(FLX_FPAR_PASS_ONLY))
      ->apply(_vI98113_init_uncurry))->clone()
      ->apply(_vI98118_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_95735_L98121;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L98115:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <68352>: FlxPkgConfigQuery::getpkgfield::getpkgfield'2: Apply method
void* _fI68352_getpkgfield__apos_2::apply(_at107674 const &_arg ){
  pkg = _arg.data[0];
  field = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<105361>varname = Empty<80385>varname;
      _vI105361_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L105357;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<105362>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI105362_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<105362>ref;
      {
      int* _tmp108609 = (int*)&_vI105362_i;
      ++*((_tmp108609));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L105360:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI105362_i)) )) goto _ifdoelse_std_1250_L105357;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<105362>ref;
      {
      int* _tmp108610 = (int*)&_vI105362_i;
      --*((_tmp108610));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<105361>varname = (Snoc<80397>struct (o<105361>varname, apply(aprj(i<105362>varname : bool), ((+<14305>primfun ("--field=", field<68362>varname)), pkg<68361>varname))));
      _vI105361_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105361_o, (_at107674(::std::string("--field=") + field , pkg).data)[reinterpret< ::flx::rtl::cl_t>(_vI105362_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L105360;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L105357:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 485, cols 5 to 6
      //_genout_urv105365<105365> := (flx_pkgconfig<68435>stackfun (join_uncurry<89534>stackfun (paths<68346>varname, o<105361>varname)));
      _genout_urv105365  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrFlxPkgConfigQuery->paths, _vI105361_o)) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 489, cols 7 to 63
      //_ds2_65342<68354>varname = _genout_urv105365<105365>varname;
      _ds2_65342 = _genout_urv105365; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 489, cols 7 to 63
      //result<68355>varname = apply((prj0:int * list -> int), _ds2_65342<68354>varname);
      _vI68355_result = _ds2_65342.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 489, cols 7 to 63
      //values<68356>varname = apply((prj1:int * list -> list), _ds2_65342<68354>varname);
      values = _ds2_65342.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 499, cols 7 to 11
      if(!(!((_vI68355_result == 0)) ) ) goto _ifdoelse_bootflx_65315_L68369;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Can't find package ", pkg<68361>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108611 = (::std::string("Can't find package ") + pkg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108611)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Searching in paths:", "\x0A")));
      {
      _a14239t_107672 _tmp108612 = ::std::string("Searching in paths:") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108612)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<105380> := paths<68346>varname;
      _vI105380_xs  = ptrFlxPkgConfigQuery->paths; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv105379<105379> := iterator'2<105381>closure;
      _genout_urv105379  = (FLX_NEWP(_fI105381_iterator__apos_2)(FLX_FPAR_PASS this, ptrgetpkgfield, ptrFlxPkgConfigQuery)); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      //_generator_flx_pkgconfig_11224<68357>varname = _genout_urv105379<105379>varname;
      _generator_flx_pkgconfig_11224 = _genout_urv105379; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
    continue__ll_flx_pkgconfig_11218_L68363:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      //getpkgfield'2_mv_65343<65343> := apply(_generator_flx_pkgconfig_11224<68357>varname, ());
      _vI65343_getpkgfield__apos_2_mv_65343  = (_generator_flx_pkgconfig_11224)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
/*match case 1:|Some path_param_bootflx_65317*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      if(!andthen(FLX_VNI(_vI65343_getpkgfield__apos_2_mv_65343)==1, (FLX_NEWP(_lam_65346)(FLX_FPAR_PASS this, ptrgetpkgfield, ptrFlxPkgConfigQuery))) ) goto _ml65345_L68364;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      //path_param_bootflx_65317<68360>varname = (arg of case 1 of getpkgfield'2_mv_65343<65343>varname);
      path_param_bootflx_65317 = *((_a14239t_107672*)FLX_VNP(_vI65343_getpkgfield__apos_2_mv_65343)); //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("  ", path_param_bootflx_65317<68360>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108613 = (::std::string("  ") + path_param_bootflx_65317 ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108613)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      goto continue__ll_flx_pkgconfig_11218_L68363;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
    _ml65345_L68364:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      if(!(FLX_VNI(_vI65343_getpkgfield__apos_2_mv_65343)==0) ) goto _ml65347_L68365;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      goto _em65343_L68366;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
    _ml65347_L68365:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",495,9,495,13);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",495,9,495,13);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
    _em65343_L68366:;
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<68370>varname);
      {
      _a6258t_107873 _tmp108615 = (_a6258t_107873)(ptrgetpkgfield->_vI68370_ehandler);
      throw ((_tmp108615));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 499, cols 7 to 11
    _ifdoelse_bootflx_65315_L68369:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 500, cols 7 to 20
      //return values<68356>varname;: type void*
      return values;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",501,5,501,6); // HACK! 
}

//------------------------------
//FUNCTION <106776>: flx_processing::cxx_compile_dynamic: Apply method
int _fI106776_cxx_compile_dynamic::apply(_pt107743* const &_arg ){
  _vI106782_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2262, cols 5 to 83
      //EXT_SHARED_OBJ<106777>varname = apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), apply(toolchain<68911>varname, dflt_clang_config<106705>varname)), ());
      _vI106777_EXT_SHARED_OBJ = ((ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(ptrflx_processing->_vI106705_dflt_clang_config) /* general apply */.dynamic_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2276, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0) && ((ptrflx_processing->_vI107004_control.LINKIT == 1) || ((ptrflx_processing->_vI107004_control.OUTPUT_FILENAME_SPECIFIED == 0) && (ptrflx_processing->_vI107004_control.OUTP_hash_48688961 == 0) ) ) ) ) goto _ifdoelse_bootflx_65879_L106785;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2274, cols 7 to 9
      //result<106778>varname = (cxx_compile_dynamic1_uncurry<107013>stackfun (ehandler<106782>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), "_static_link_thunk.cpp")), (+<14305>primfun ((+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), "_static_link_thunk")), EXT_SHARED_OBJ<106777>varname))));
      _vI106778_result = _fI107013_cxx_compile_dynamic1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI106782_ehandler, ptrflx_processing->dvars.cpp_filebase + ::std::string("_static_link_thunk.cpp") , (ptrflx_processing->dvars.cpp_filebase + ::std::string("_static_link_thunk") ) + _vI106777_EXT_SHARED_OBJ )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2275, cols 7 to 35
      if(!(!((_vI106778_result == 0)) ) ) goto _ifdoelse_bootflx_65879_L106785;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2275, cols 7 to 35
      //return result<106778>varname;: type int
      return _vI106778_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2276, cols 5 to 9
    _ifdoelse_bootflx_65879_L106785:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2286, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0)) ) goto _ifdoelse_bootflx_65883_L106791;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2285, cols 7 to 11
      if(!((ptrflx_processing->_vI107004_control.LINKIT == 0)) ) goto _ifdoend_bootflx_65884_L106787;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2280, cols 9 to 106
      //result<106778>varname = (cxx_compile_dynamic1_uncurry<107013>stackfun (ehandler<106782>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".cpp")), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname)));
      _vI106778_result = _fI107013_cxx_compile_dynamic1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI106782_ehandler, ptrflx_processing->dvars.cpp_filebase + ::std::string(".cpp") , ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2281, cols 9 to 37
      if(!(!((_vI106778_result == 0)) ) ) goto _ifdoelse_bootflx_65883_L106791;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2281, cols 9 to 37
      //return result<106778>varname;: type int
      return _vI106778_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2286, cols 5 to 9
      goto _ifdoelse_bootflx_65883_L106791;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2285, cols 7 to 11
    _ifdoend_bootflx_65884_L106787:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2283, cols 9 to 109
      //result<106778>varname = (cxx_compile_dynamic1_uncurry<107013>stackfun (ehandler<106782>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".cpp")), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), EXT_SHARED_OBJ<106777>varname))));
      _vI106778_result = _fI107013_cxx_compile_dynamic1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI106782_ehandler, ptrflx_processing->dvars.cpp_filebase + ::std::string(".cpp") , ptrflx_processing->dvars.cpp_filebase + _vI106777_EXT_SHARED_OBJ )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2284, cols 9 to 37
      if(!(!((_vI106778_result == 0)) ) ) goto _ifdoelse_bootflx_65883_L106791;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2284, cols 9 to 37
      //return result<106778>varname;: type int
      return _vI106778_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2286, cols 5 to 9
    _ifdoelse_bootflx_65883_L106791:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<107244> := apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname);
      _vI107244_xs  = ptrflx_processing->_vI107004_control.cpps; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv99242<107243> := iterator'2<107245>closure;
      _vI107243__genout_urv99242  = (FLX_NEWP(_fI107245_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      //_generator_flx_2483<106779>varname = _genout_urv99242<107243>varname;
      _vI106779__generator_flx_2483 = _vI107243__genout_urv99242; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
    continue__ll_flx_2471_L106792:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      //cxx_compile_dynamic_mv_66069<106702> := apply(_generator_flx_2483<106779>varname, ());
      _vI106702_cxx_compile_dynamic_mv_66069  = (_vI106779__generator_flx_2483)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
/*match case 1:|Some src_param_bootflx_65891*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      if(!andthen(FLX_VNI(_vI106702_cxx_compile_dynamic_mv_66069)==1, (FLX_NEWP(_fI107254__lam_66072)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66071_L106794;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      //src_param_bootflx_65891<106780>varname = (arg of case 1 of cxx_compile_dynamic_mv_66069<106702>varname);
      _vI106780_src_param_bootflx_65891 = *((_a14239t_107672*)FLX_VNP(_vI106702_cxx_compile_dynamic_mv_66069)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2289, cols 7 to 63
      //dst<106781>varname = (+<14305>primfun (apply((prj0:string^2 -> string), (split_extension<83124>stackfun src_param_bootflx_65891<106780>varname)), EXT_SHARED_OBJ<106777>varname));
      _vI106781_dst = (split_extension(_vI106780_src_param_bootflx_65891).data)[0] + _vI106777_EXT_SHARED_OBJ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2290, cols 7 to 54
      //result<106778>varname = (cxx_compile_dynamic1_uncurry<107013>stackfun (ehandler<106782>varname, src_param_bootflx_65891<106780>varname, dst<106781>varname));
      _vI106778_result = _fI107013_cxx_compile_dynamic1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI106782_ehandler, _vI106780_src_param_bootflx_65891, _vI106781_dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2291, cols 7 to 35
      if(!(!((_vI106778_result == 0)) ) ) goto _ifdoend_bootflx_65892_L106793;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2291, cols 7 to 35
      //return result<106778>varname;: type int
      return _vI106778_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2291, cols 7 to 35
    _ifdoend_bootflx_65892_L106793:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<107004>ref))) = (+<80787>stackfun ((deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<107004>ref))), dst<106781>varname));
      *(&(*(&((_art107702*)&ptrflx_processing->_vI107004_control)->cppos) ))  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*(&(*(&((_art107702*)&ptrflx_processing->_vI107004_control)->cppos) )) , _vI106781_dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      goto continue__ll_flx_2471_L106792;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
    _ml66071_L106794:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      if(!(FLX_VNI(_vI106702_cxx_compile_dynamic_mv_66069)==0) ) goto _ml66073_L106795;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      goto _em66069_L106796;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
    _ml66073_L106795:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2293,5,2293,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2293,5,2293,9);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
    _em66069_L106796:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2294, cols 5 to 13
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2295,3,2295,4); // HACK! 
}

//------------------------------
//FUNCTION <90347>: map_package_requirements_uncurry::_lam_65101: Apply method
_a14239t_107672 _lam_65101::apply(_a14239t_107672 const &_arg ){
  _vI90348_s = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 712, cols 9 to 38
      //return (+<14305>primfun ("--path+=", s<90348>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI90348_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",712,9,712,38); // HACK! 
}

//------------------------------
//FUNCTION <66934>: toolchain_clang_osx::cxx_dependency_generator: Apply method
_tt107757 _fI66934_cxx_dependency_generator::apply(_art107756 const &_arg ){
  _vI66939_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1501, cols 6 to 7
      //_ds2_66180<66936>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:cxx_compiler<66895>varname, CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), "-std=c++11")), "-MM")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj0:record(src:(string)) -> string), spec<66939>varname)));
      _ds2_66180 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_clang_osx->_vI66895_cxx_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_osx->_vI66979_config.ccflags, ::std::string("-std=c++11")))), ::std::string("-MM")))), ptrtoolchain_clang_osx->_vI66979_config.header_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.macros, ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66939_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1501, cols 6 to 7
      //result<66937>varname = apply((prj0:int * string -> int), _ds2_66180<66936>varname);
      _vI66937_result = _ds2_66180.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1501, cols 6 to 7
      //data<66938>varname = apply((prj1:int * string -> string), _ds2_66180<66936>varname);
      _vI66938_data = _ds2_66180.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1502, cols 6 to 25
      //return (result<66937>varname, data<66938>varname);: type _tt107757
      return _tt107757(_vI66937_result, _vI66938_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1503,3,1503,4); // HACK! 
}

//------------------------------
//FUNCTION <105686>: flx_processing::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI105686__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <96692>: search_and_replace_uncurry::_lam_2363: Apply method
 ::flx::rtl::cl_t _lam_2363::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9); // HACK! 
}

//------------------------------
//FUNCTION <102672>: flx_processing::aux_uncurry::_lam_1339: Apply method
 ::flx::rtl::cl_t _lam_1339::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,11,202,19); // HACK! 
}

//------------------------------
//FUNCTION <68198>: generic_dependency_parser: Apply method
void* generic_dependency_parser::apply(_a14239t_107672 const &_arg ){
  _vI68208_data = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 54 to 68
      //find_mv_2085<93567> := (stl_find<14442>primfun (data<68208>varname, ":"));
      find_mv_2085  = _vI68208_data.find((::std::string(":"))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
/*match case 1:(i_param_std_1884 when (== (i_param_std_1884, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
      if(!((find_mv_2085 == ::std::string::npos)) ) goto _ml2087_L93569;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      //generic_dependency_parser_mv_65407<93563> := None<81378>varname;
      generic_dependency_parser_mv_65407  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      goto _end_inline_find_93506_L93570;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
    _ml2087_L93569:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 114 to 114
/*match case 2:i_param_std_1885*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 114 to 114
      //i_param_std_1885<93568>varname = find_mv_2085<93567>varname;
      i_param_std_1885 = find_mv_2085; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      //generic_dependency_parser_mv_65407<93563> := (Some<81379>struct i_param_std_1885<93568>varname);
      generic_dependency_parser_mv_65407  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (i_param_std_1885)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 3 to 134
    _end_inline_find_93506_L93570:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 48 to 53
/*match case 1:|Some i_param_bootflx_65392*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 48 to 53
      if(!andthen(FLX_VNI(generic_dependency_parser_mv_65407)==1, (FLX_NEWP(_lam_65410)(FLX_FPAR_PASS this))) ) goto _ml65409_L93565;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 53 to 53
      //i_param_bootflx_65392<93564>varname = (arg of case 1 of generic_dependency_parser_mv_65407<93563>varname);
      i_param_bootflx_65392 = *((_a5094t_107688*)FLX_VNP(generic_dependency_parser_mv_65407)); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 18 to 77
      //_urv93562<93562> := (+<80900>primfun[size] (i_param_bootflx_65392<93564>varname, literal[size]("1")));
      _urv93562  = i_param_bootflx_65392 + 1 ; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 18 to 77
      goto _end_hash_177184641;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 48 to 53
    _ml65409_L93565:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 66 to 70
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 66 to 70
      if(!(FLX_VNI(generic_dependency_parser_mv_65407)==0) ) goto _ml65411_L93566;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 18 to 77
      //_urv93562<93562> := literal[size]("0");
      _urv93562  = 0; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 18 to 77
      goto _end_hash_177184641;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 66 to 70
    _ml65411_L93566:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 18 to 77
/*match failure*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 18 to 77
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",146,18,146,77);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",146,18,146,77);
;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 18 to 77
    _end_hash_177184641:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 5 to 78
      //pcolon<68205>varname = _urv93562<93562>varname;
      pcolon = _urv93562; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 147, cols 5 to 31
      //txt<68206>varname = (copyfrom<81377>primfun[size] (data<68208>varname, pcolon<68205>varname));
      txt = ::flx::rtl::strutil::substr(_vI68208_data,pcolon,_vI68208_data.size()); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 734, cols 3 to 4
      //spos<93600> := literal[size]("0");
      spos  = 0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 724, cols 5 to 18
      //m<93597>varname = (len<14304>primfun "\\x0A");
      m = ::std::string("\\\n").size(); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 725, cols 5 to 24
      //o<93598>varname = (copyto<81376>primfun[size] (txt<68206>varname, spos<93600>varname));
      _vI93598_o = ::flx::rtl::strutil::substr(txt,0,spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 726, cols 5 to 32
      //n<93599>varname = (stl_find<14443>primfun (txt<68206>varname, "\\x0A", spos<93600>varname));
      _vI93599_n = txt.find((::std::string("\\\n")),spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    continue__ll_strings_7537_L93601:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      if(FLX_UNLIKELY(!(!((_vI93599_n == ::std::string::npos)) ) )) goto break__ll_strings_7537_L93602;
    // # C:/projects/felix/src/packages/strings.fdoc: line 728, cols 7 to 24
      // primcall +=<14301>primproc (&o<93598>ref, (+<14305>primfun ((substring<81415>primfun[size, size] (txt<68206>varname, spos<93600>varname, n<93599>varname)), "")));
      {
      _a14239t_107672* _tmp108618 = (_a14239t_107672*)&_vI93598_o;
      _a14239t_107672 _tmp108619 = ::flx::rtl::strutil::substr(txt,spos,_vI93599_n) + ::std::string("") ;
      ((_tmp108618))->append((_tmp108619));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 729, cols 7 to 16
      //spos<93600>varname = (+<80900>primfun[size] (n<93599>varname, m<93597>varname));
      spos = _vI93599_n + m ; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 730, cols 7 to 34
      //n<93599>varname = (_ctor_size<5394>primfun (stl_find<14443>primfun (txt<68206>varname, "\\x0A", spos<93600>varname)));
      _vI93599_n = ((txt.find((::std::string("\\\n")),spos)))/*int.flx: ctor size IDENT*/; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      goto continue__ll_strings_7537_L93601;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    break__ll_strings_7537_L93602:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 732, cols 5 to 18
      // primcall +=<14301>primproc (&o<93598>ref, (copyfrom<81377>primfun[size] (txt<68206>varname, spos<93600>varname)));
      {
      _a14239t_107672* _tmp108620 = (_a14239t_107672*)&_vI93598_o;
      _a14239t_107672 _tmp108621 = ::flx::rtl::strutil::substr(txt,spos,txt.size());
      ((_tmp108620))->append((_tmp108621));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 148, cols 5 to 44
      //txt<68206>varname = o<93598>varname;
      txt = _vI93598_o; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 677, cols 5 to 6
      //state<93609>varname = (respectful_parse_uncurry_uncurry<90457>stackfun (( dquote:keep-dquote<14987>varname, escape:keep-escape<14994>varname, quote:keep-quote<14980>varname), ( current:"", mode:skipping<15002>varname, parsed:Empty<80385>varname), txt<68206>varname));
      state = respectful_parse_uncurry_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107724(_art107723(/*VR_int*/1, /*VR_int*/1, /*VR_int*/1), _art107719(::std::string(""), /*VR_int*/1, (void* /*VR_nullptr*/ )0), txt)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 679, cols 11 to 20
      //respectful_split'2_mv_2356<93608> := apply((prj1:record(current:(string),mode:(mode_t),parsed:(list)) -> mode_t), state<93609>varname);
      _vI93608_respectful_split__apos_2_mv_2356  = state.mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
/*match case 1:|skipping*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      if(!(_vI93608_respectful_split__apos_2_mv_2356%7==1) ) goto _ml2358_L93610;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      goto _em2356_L93611;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
    _ml2358_L93610:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 12 to 54
      //apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<93609>varname) = (+<80787>stackfun (apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<93609>varname), apply((prj0:record(current:(string),mode:(mode_t),parsed:(list)) -> string), state<93609>varname)));
      state.parsed = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(state.parsed, state.current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 682, cols 5 to 14
    _em2356_L93611:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 149, cols 5 to 37
      //files<68207>varname = apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<93609>varname);
      _vI68207_files = state.parsed; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93617>varname = (aux_uncurry<93618>stackfun (files<68207>varname, Empty<80385>varname));
      _vI93617_r = _fI93618_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI68207_files, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93617>ref;
      {
      void** _tmp108622 = (void**)&_vI93617_r;
      _rev(((_tmp108622)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 150, cols 5 to 53
      //files<68207>varname = r<93617>varname;
      _vI68207_files = _vI93617_r; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 151, cols 5 to 17
      //return files<68207>varname;: type void*
      return _vI68207_files;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",152,3,152,4); // HACK! 
}

//------------------------------
//FUNCTION <97896>: flx_pkgconfig::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97896__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <91820>: process_config_text_uncurry::_lam_2972: Apply method
 ::flx::rtl::cl_t _lam_2972::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 537, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",537,9,537,14); // HACK! 
}

//------------------------------
//FUNCTION <107215>: flx_processing::cxx_compile_dynamic1_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI107215__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <97114>: flx_pkgconfig::handle_pkg::_lam_65277::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97114__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <105216>: flx_processing::dxqt'2: Apply method
_a14239t_107672 _fI105216_dxqt__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI105223_cmd = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1943, cols 3 to 45
      if(!(((*ptrflx_processing->_vI68948_control).ECHO == 1) || (*ptrflx_processing->_vI68948_control).DEBUG_FLX ) ) goto _ifdoelse_bootflx_65827_L105225;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("cmd=", cmd<105223>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108623 = (::std::string("cmd=") + _vI105223_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108623)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1943, cols 3 to 45
    _ifdoelse_bootflx_65827_L105225:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<105233>ref;
      {
      __timeb64* _tmp108624 = (__timeb64*)&_vI105233_tv;
      _ftime64_s(((_tmp108624)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99556<105232> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<105233>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<105233>varname)), literal[double]("1.0e3")))));
      _genout_urv99556  = (static_cast<double>((_vI105233_tv.time))) + ((static_cast<double>((_vI105233_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1944, cols 3 to 24
      //now<105217>varname = _genout_urv99556<105232>varname;
      now = _genout_urv99556; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_507_L105235;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[get_stdout] ", cmd<105223>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108625 = (::std::string("[get_stdout] ") + _vI105223_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108625)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
    _ifdoelse_std_507_L105235:;
    // # C:/projects/felix/src/packages/program.fdoc: line 812, cols 5 to 32
      //_genout_urv99560<105234> := (basic_get_stdout<82955>stackfun cmd<105223>varname);
      _genout_urv99560  = basic_get_stdout(_vI105223_cmd); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //_ds2_66010<105218>varname = _genout_urv99560<105234>varname;
      _ds2_66010 = _genout_urv99560; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //result<105219>varname = apply((prj0:int * string -> int), _ds2_66010<105218>varname);
      _vI105219_result = _ds2_66010.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //output<105220>varname = apply((prj1:int * string -> string), _ds2_66010<105218>varname);
      output = _ds2_66010.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      if(!((_vI105219_result == 0)) ) goto _ifdoend_bootflx_65828_L105228;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 61 to 84
      //find_first_of_mv_2165<105242> := (stl_find_first_of<14560>primfun (output<105220>varname, (subscript<81183>primfun[int] ("\x0A", 0))));
      find_first_of_mv_2165  = output.find_first_of((::flx::rtl::strutil::subscript(::std::string("\n"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
/*match case 1:(i_param_std_1916 when (== (i_param_std_1916, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
      if(!((find_first_of_mv_2165 == ::std::string::npos)) ) goto _ml2167_L105244;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      //dxqt'2_mv_66012<105238> := None<81378>varname;
      _vI105238_dxqt__apos_2_mv_66012  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      goto _end_inline_find_first_of_99543_L105245;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
    _ml2167_L105244:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 130 to 130
/*match case 2:i_param_std_1917*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 130 to 130
      //i_param_std_1917<105243>varname = find_first_of_mv_2165<105242>varname;
      i_param_std_1917 = find_first_of_mv_2165; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      //dxqt'2_mv_66012<105238> := (Some<81379>struct i_param_std_1917<105243>varname);
      _vI105238_dxqt__apos_2_mv_66012  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (i_param_std_1917)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 3 to 150
    _end_inline_find_first_of_99543_L105245:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
/*match case 1:|Some n_param_bootflx_65830*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
      if(!andthen(FLX_VNI(_vI105238_dxqt__apos_2_mv_66012)==1, (FLX_NEWP(_lam_66015)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66014_L105240;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 14 to 14
      //n_param_bootflx_65830<105239>varname = (arg of case 1 of dxqt'2_mv_66012<105238>varname);
      n_param_bootflx_65830 = *((_a5094t_107688*)FLX_VNP(_vI105238_dxqt__apos_2_mv_66012)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      //_urv99566<105237> := n_param_bootflx_65830<105239>varname;
      _urv99566  = n_param_bootflx_65830; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      goto _end_hash_4852573;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
    _ml66014_L105240:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
      if(!(FLX_VNI(_vI105238_dxqt__apos_2_mv_66012)==0) ) goto _ml66016_L105241;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      //_urv99566<105237> := (len<14304>primfun output<105220>varname);
      _urv99566  = output.size(); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      goto _end_hash_4852573;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
    _ml66016_L105241:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1950,7,1950,28);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1950,7,1950,28);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
    _end_hash_4852573:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1951, cols 5 to 15
      //n<105221>varname = _urv99566<105237>varname;
      _vI105221_n = _urv99566; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1953, cols 5 to 26
      //output<105220>varname = (copyto<81376>primfun[size] (output<105220>varname, n<105221>varname));
      output = ::flx::rtl::strutil::substr(output,0,_vI105221_n); //assign simple
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<105249>ref;
      {
      __timeb64* _tmp108627 = (__timeb64*)&tv;
      _ftime64_s(((_tmp108627)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99578<105248> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<105249>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<105249>varname)), literal[double]("1.0e3")))));
      _genout_urv99578  = (static_cast<double>((tv.time))) + ((static_cast<double>((tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1954, cols 5 to 36
      //elapsed<105222>varname = (-<80547>primfun[double] (_genout_urv99578<105248>varname, now<105217>varname));
      elapsed = _genout_urv99578 - now ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1955, cols 5 to 108
      if(!(((*ptrflx_processing->_vI68948_control).ECHO == 1) || (*ptrflx_processing->_vI68948_control).DEBUG_FLX ) ) goto _ifdoelse_bootflx_65829_L105231;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Popen:Elapsed: ", (fmt<80548>stackfun (elapsed<105222>varname, (fixed<5838>struct (9, 3)))))), ", output='")), output<105220>varname)), "'")), "\x0A")));
      {
      _a14239t_107672 _tmp108628 = ((((::std::string("Popen:Elapsed: ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(elapsed, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(9, 3))))) /* apply_stack */ ) + ::std::string(", output='") ) + output ) + ::std::string("'") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108628)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      goto _ifdoelse_bootflx_65829_L105231;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      goto _ifdoelse_bootflx_65829_L105231;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
    _ifdoend_bootflx_65828_L105228:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1957, cols 5 to 42
      if(!(((*ptrflx_processing->_vI68948_control).ECHO == 1) || (*ptrflx_processing->_vI68948_control).DEBUG_FLX ) ) goto _ifdoelse_bootflx_65834_L105230;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("COMMAND FAILED", "\x0A")));
      {
      _a14239t_107672 _tmp108629 = ::std::string("COMMAND FAILED") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108629)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1957, cols 5 to 42
    _ifdoelse_bootflx_65834_L105230:;
    // # C:/projects/felix/src/packages/io.fdoc: line 440, cols 53 to 69
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Error ", (+<14305>primfun ((str<80203>primfun[int] result<105219>varname), "")))), " executing command ")), cmd<105223>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108630 = (((::std::string("Error ") + (::flx::rtl::strutil::str<int>(_vI105219_result) + ::std::string("") ) ) + ::std::string(" executing command ") ) + _vI105223_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108630)));
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 718, cols 5 to 6
  pexit(_vI105219_result);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
    _ifdoelse_bootflx_65829_L105231:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1961, cols 3 to 16
      //return output<105220>varname;: type _a14239t_107672
      return output;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1962,1,1962,2); // HACK! 
}

//------------------------------
//FUNCTION <95761>: str::_lam_1578::_lam_1578'2: Apply method
_a14239t_107672 _fI95761__lam_1578__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI95762_b = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 870, cols 5 to 16
      //o<95763>varname = "'";
      _vI95763_o = ::std::string("'"); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 875, cols 5 to 9
      if(!((0 < _vI95762_b.size())) ) goto _ifdoelse_std_2036_L95768;
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
      //i<95764>varname = literal[size]("0");
      _vI95764_i = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
    redo__ll_strings_7703_L95765:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
      if(FLX_UNLIKELY(!(!((_vI95762_b.size() - 1  < _vI95764_i)) ) )) goto _ifdoelse_std_2036_L95768;
    // # C:/projects/felix/src/packages/strings.fdoc: line 873, cols 9 to 23
      // primcall +=<14301>primproc (&o<95763>ref, (repr<82067>stackfun (subscript<81540>primfun[size] (b<95762>varname, i<95764>varname))));
      {
      _a14239t_107672* _tmp108631 = (_a14239t_107672*)&_vI95763_o;
      _a14239t_107672 _tmp108632 = repr(::flx::rtl::strutil::subscript(_vI95762_b,_vI95764_i));
      ((_tmp108631))->append((_tmp108632));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
      // primcall pre_incr<81537>primproc[size] &i<95764>ref;
      {
      _a5094t_107688* _tmp108633 = (_a5094t_107688*)&_vI95764_i;
      ++*((_tmp108633));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
      goto redo__ll_strings_7703_L95765;
    // # C:/projects/felix/src/packages/strings.fdoc: line 875, cols 5 to 9
    _ifdoelse_std_2036_L95768:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 706, cols 13 to 62
      //return (+<14305>primfun ((+<14305>primfun (a<95760>varname, ", ")), (+<14305>primfun (o<95763>varname, "'"))));: type _a14239t_107672
      return (ptr_lam_1578->_vI95760_a + ::std::string(", ") ) + (_vI95763_o + ::std::string("'") ) ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",706,13,706,62); // HACK! 
}

//------------------------------
//FUNCTION <107434>: flx_processing::cxx_link_static_exe::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI107434__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <106315>: flx_processing::cxx_compile_static::iterator'2: Apply method
void* _fI106315_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L106316:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<106320> := xs<106314>varname;
      _vI106320_iterator__apos_2_mv_1563  = ptrcxx_compile_static->_vI106314_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI106320_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI106323__lam_1566)(FLX_FPAR_PASS this, ptrcxx_compile_static, ptrflx_processing))) ) goto _ml1565_L106319;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<106321>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<106320>varname));
      _vI106321_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI106320_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<106322>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<106320>varname));
      _vI106322_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI106320_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<106314>varname = t_param_std_1318<106322>varname;
      ptrcxx_compile_static->_vI106314_xs = _vI106322_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108634)
      //yield (Some<80915>struct h_param_std_1319<106321>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI106321_h_param_std_1319));//yield
    FLX_CASE_LABEL(108634)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L106316;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L106319:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI106320_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L106318;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L106318:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L106316;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <16889>: parse: Apply method
void* parse::apply(_a14239t_107672 const &_arg ){
  _vI16909_s = _arg;
    // # C:/projects/felix/src/packages/program.fdoc: line 1076, cols 7 to 31
      //args<16891>varname = Empty<80385>varname;
      args = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1077, cols 7 to 23
      //current<16892>varname = "";
      current = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1079, cols 7 to 22
      //mode<16904>varname = skip<16896>varname;
      mode = /*VR_int*/1; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 365, cols 5 to 6
      //x<104754> := s<16909>varname;
      _vI104754_x  = _vI16909_s; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 365, cols 5 to 6
      //_genout_urv104749<104749> := iterator'2<104750>closure;
      _genout_urv104749  = (FLX_NEWP(_fI104750_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      //_generator_program_9354<16905>varname = _genout_urv104749<104749>varname;
      _generator_program_9354 = _genout_urv104749; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
    continue__ll_program_9279_L16910:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      //parse_mv_2822<2822> := apply(_generator_program_9354<16905>varname, ());
      parse_mv_2822  = (_generator_program_9354)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
/*match case 1:|Some ch_param_std_2798*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      if(!andthen(FLX_VNI(parse_mv_2822)==1, (FLX_NEWP(_lam_2832)(FLX_FPAR_PASS this))) ) goto _ml2824_L16937;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      //ch_param_std_2798<16908>varname = (arg of case 1 of parse_mv_2822<2822>varname);
      ch_param_std_2798 = *((char*)FLX_VNP(parse_mv_2822)); //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1081, cols 15 to 18
      //parse_mv_2825<2825> := mode<16904>varname;
      parse_mv_2825  = mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1082, cols 11 to 15
/*match case 1:|skip*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1082, cols 11 to 15
      if(!(parse_mv_2825%5==1) ) goto _ml2827_L16917;
    // # C:/projects/felix/src/packages/program.fdoc: line 1090, cols 11 to 15
      if(!((ch_param_std_2798 == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoend_std_2800_L16911;
    // # C:/projects/felix/src/packages/program.fdoc: line 1084, cols 13 to 30
      //mode<16904>varname = escape-copy<16900>varname;
      mode = /*VR_int*/3; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1090, cols 11 to 15
    _ifdoend_std_2800_L16911:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1089, cols 11 to 25
      if(!((ch_param_std_2798 == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_std_2802_L16912;
    // # C:/projects/felix/src/packages/program.fdoc: line 1086, cols 13 to 25
      //mode<16904>varname = dquote<16898>varname;
      mode = /*VR_int*/2; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1089, cols 11 to 25
    _ifdoend_std_2802_L16912:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1089, cols 11 to 25
      if(!((((int)(::flx::rtl::strutil::subscript(::std::string(" "),0)) ) < ((int)ch_param_std_2798 ))) ) goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1088, cols 13 to 25
      // primcall +=<14303>primproc (&current<16892>ref, ch_param_std_2798<16908>varname);
      {
      _a14239t_107672* _tmp108636 = (_a14239t_107672*)&current;
      *((_tmp108636)) += ch_param_std_2798;
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 1089, cols 13 to 23
      //mode<16904>varname = copy<16894>varname;
      mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1082, cols 11 to 15
    _ml2827_L16917:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1092, cols 11 to 15
/*match case 2:|copy*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1092, cols 11 to 15
      if(!(parse_mv_2825%5==0) ) goto _ml2828_L16924;
    // # C:/projects/felix/src/packages/program.fdoc: line 1103, cols 11 to 15
      if(!((ch_param_std_2798 == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoend_std_2806_L16918;
    // # C:/projects/felix/src/packages/program.fdoc: line 1094, cols 13 to 30
      //mode<16904>varname = escape-copy<16900>varname;
      mode = /*VR_int*/3; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1103, cols 11 to 15
    _ifdoend_std_2806_L16918:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1102, cols 11 to 27
      if(!(!((((int)(::flx::rtl::strutil::subscript(::std::string(" "),0)) ) < ((int)ch_param_std_2798 ))) ) ) goto _ifdoend_std_2808_L16919;
    // # C:/projects/felix/src/packages/program.fdoc: line 1096, cols 13 to 23
      //mode<16904>varname = skip<16896>varname;
      mode = /*VR_int*/1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &args<16891>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &args<16891>ref), current<16892>varname));
      *((void**)&args)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&args) , current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1098, cols 13 to 24
      //current<16892>varname = "";
      current = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1102, cols 11 to 27
    _ifdoend_std_2808_L16919:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1102, cols 11 to 27
      if(!((ch_param_std_2798 == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_std_2810_L16920;
    // # C:/projects/felix/src/packages/program.fdoc: line 1100, cols 13 to 25
      //mode<16904>varname = dquote<16898>varname;
      mode = /*VR_int*/2; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1102, cols 11 to 27
    _ifdoend_std_2810_L16920:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1102, cols 13 to 25
      // primcall +=<14303>primproc (&current<16892>ref, ch_param_std_2798<16908>varname);
      {
      _a14239t_107672* _tmp108637 = (_a14239t_107672*)&current;
      *((_tmp108637)) += ch_param_std_2798;
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1092, cols 11 to 15
    _ml2828_L16924:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1105, cols 11 to 22
/*match case 3:|escape-copy*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1105, cols 11 to 22
      if(!(parse_mv_2825%5==3) ) goto _ml2829_L16927;
    // # C:/projects/felix/src/packages/program.fdoc: line 1106, cols 11 to 21
      //mode<16904>varname = copy<16894>varname;
      mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1111, cols 11 to 15
      if(!((ch_param_std_2798 == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_std_2812_L16925;
    // # C:/projects/felix/src/packages/program.fdoc: line 1108, cols 13 to 25
      // primcall +=<14303>primproc (&current<16892>ref, ch_param_std_2798<16908>varname);
      {
      _a14239t_107672* _tmp108638 = (_a14239t_107672*)&current;
      *((_tmp108638)) += ch_param_std_2798;
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1111, cols 11 to 15
    _ifdoend_std_2812_L16925:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1110, cols 13 to 32
      // primcall +=<14301>primproc (&current<16892>ref, (+<14307>primfun ("\", ch_param_std_2798<16908>varname)));
      {
      _a14239t_107672* _tmp108639 = (_a14239t_107672*)&current;
      _a14239t_107672 _tmp108640 = ::std::string("\\") + ch_param_std_2798 ;
      ((_tmp108639))->append((_tmp108640));
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1105, cols 11 to 22
    _ml2829_L16927:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1113, cols 11 to 24
/*match case 4:|escape-dquote*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1113, cols 11 to 24
      if(!(parse_mv_2825%5==4) ) goto _ml2830_L16930;
    // # C:/projects/felix/src/packages/program.fdoc: line 1114, cols 11 to 23
      //mode<16904>varname = dquote<16898>varname;
      mode = /*VR_int*/2; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1119, cols 11 to 15
      if(!((ch_param_std_2798 == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_std_2814_L16928;
    // # C:/projects/felix/src/packages/program.fdoc: line 1116, cols 13 to 25
      // primcall +=<14303>primproc (&current<16892>ref, ch_param_std_2798<16908>varname);
      {
      _a14239t_107672* _tmp108641 = (_a14239t_107672*)&current;
      *((_tmp108641)) += ch_param_std_2798;
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1119, cols 11 to 15
    _ifdoend_std_2814_L16928:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1118, cols 13 to 32
      // primcall +=<14301>primproc (&current<16892>ref, (+<14307>primfun ("\", ch_param_std_2798<16908>varname)));
      {
      _a14239t_107672* _tmp108642 = (_a14239t_107672*)&current;
      _a14239t_107672 _tmp108643 = ::std::string("\\") + ch_param_std_2798 ;
      ((_tmp108642))->append((_tmp108643));
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1113, cols 11 to 24
    _ml2830_L16930:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1121, cols 11 to 17
/*match case 5:|dquote*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1121, cols 11 to 17
      if(!(parse_mv_2825%5==2) ) goto _ml2831_L16935;
    // # C:/projects/felix/src/packages/program.fdoc: line 1128, cols 11 to 15
      if(!((ch_param_std_2798 == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_std_2816_L16931;
    // # C:/projects/felix/src/packages/program.fdoc: line 1123, cols 13 to 23
      //mode<16904>varname = copy<16894>varname;
      mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1128, cols 11 to 15
    _ifdoend_std_2816_L16931:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1127, cols 11 to 27
      if(!((ch_param_std_2798 == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoend_std_2818_L16932;
    // # C:/projects/felix/src/packages/program.fdoc: line 1125, cols 13 to 32
      //mode<16904>varname = escape-dquote<16902>varname;
      mode = /*VR_int*/4; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1127, cols 11 to 27
    _ifdoend_std_2818_L16932:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1127, cols 13 to 25
      // primcall +=<14303>primproc (&current<16892>ref, ch_param_std_2798<16908>varname);
      {
      _a14239t_107672* _tmp108644 = (_a14239t_107672*)&current;
      *((_tmp108644)) += ch_param_std_2798;
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1121, cols 11 to 17
    _ml2831_L16935:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1129, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1129, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/program.fdoc",1129,9,1129,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/program.fdoc",1129,9,1129,18);
;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto continue__ll_program_9279_L16910;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
    _ml2824_L16937:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      if(!(FLX_VNI(parse_mv_2822)==0) ) goto _ml2833_L16938;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      goto _em2822_L16939;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
    _ml2833_L16938:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
/*match failure*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/program.fdoc",1130,7,1130,11);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/program.fdoc",1130,7,1130,11);
;
    // # C:/projects/felix/src/packages/program.fdoc: line 1130, cols 7 to 11
    _em2822_L16939:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1131, cols 13 to 16
      //parse_mv_2834<2834> := mode<16904>varname;
      parse_mv_2834  = mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1132, cols 9 to 13
/*match case 1:|skip*/
    // # C:/projects/felix/src/packages/program.fdoc: line 1132, cols 9 to 13
      if(!(parse_mv_2834%5==1) ) goto _ml2836_L16941;
    // # C:/projects/felix/src/packages/program.fdoc: line 1132, cols 9 to 13
      goto _em2834_L16943;
    // # C:/projects/felix/src/packages/program.fdoc: line 1132, cols 9 to 13
    _ml2836_L16941:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1133, cols 9 to 9
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &args<16891>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &args<16891>ref), current<16892>varname));
      *((void**)&args)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&args) , current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1134, cols 7 to 16
    _em2834_L16943:;
    // # C:/projects/felix/src/packages/program.fdoc: line 1135, cols 7 to 18
      //return args<16891>varname;: type void*
      return args;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/program.fdoc",1136,5,1136,6); // HACK! 
}

//------------------------------
//FUNCTION <105078>: gramtime_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI105078__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <95776>: str::aux_uncurry: Apply method
_a14239t_107672 _fI95776_aux_uncurry::apply(_tt107698 const &_arg ){
  _vI95777_init_uncurry = _arg.mem_0;
  _vI95778_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_95735_L95785:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<95781> := x<95778>varname;
      _vI95781_aux__apos_2_mv_1356  = _vI95778_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI95781_aux__apos_2_mv_1356)==0) ) goto _ml1358_L95780;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<95777>varname;: type _a14239t_107672
      return _vI95777_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L95780:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI95781_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI95784__lam_1360)(FLX_FPAR_PASS this, ptrstr))) ) goto _ml1359_L95779;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<95782>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<95781>varname));
      _vI95782_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI95781_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<95783>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<95781>varname));
      _vI95783_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI95781_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<95778> := t_param_std_1258<95783>varname;
      _vI95778_x  = _vI95783_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<95777> := apply((_lam_1578<95759>flxfun init_uncurry<95777>varname), h_param_std_1259<95782>varname);
      _vI95777_init_uncurry  = ((FLX_NEWP(_lam_1578)(FLX_FPAR_PASS ptrstr))
      ->apply(_vI95777_init_uncurry))->clone()
      ->apply(_vI95782_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_95735_L95785;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L95779:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <68024>: exts::_lam_65651: Apply method
_at107674 _lam_65651::apply(_a14239t_107672 const &_arg ){
  _vI68026_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1378, cols 10 to 36
      //return (s<68026>varname, "ocaml");: type _at107674
      return _at107674(_vI68026_s, ::std::string("ocaml"));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1378,10,1378,36); // HACK! 
}

//------------------------------
//FUNCTION <93135>: toolchain_msvc_win32::dynamic_executable_linker::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI93135__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <89756>: toolchain_clang_apple_iOS_maker_uncurry::static_object_extension: Apply method
_a14239t_107672 _fI89756_static_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1994, cols 3 to 55
      //return "_static.o";: type _a14239t_107672
      return ::std::string("_static.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1994,3,1994,55); // HACK! 
}

//------------------------------
//FUNCTION <107304>: flx_processing::cxx_compile_static::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI107304__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <105859>: flx_processing::cxx_link_shared_library::_lam_66092: Apply method
_a14239t_107672 _lam_66092::apply(_a14239t_107672 const &_arg ){
  _vI105860_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2488, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<105860>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI105860_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2488,11,2488,40); // HACK! 
}

//------------------------------
//FUNCTION <98005>: map_package_requirements_uncurry::_lam_65103::_lam_65103'2::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI98005__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <106149>: flx_processing::cal_time_from_flxdepfile::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI106149__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <66709>: toolchain_clang_linux::pathname_separator: Apply method
_a14239t_107672 _fI66709_pathname_separator::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1225, cols 3 to 42
      //return "/";: type _a14239t_107672
      return ::std::string("/");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1225,3,1225,42); // HACK! 
}

//------------------------------
//FUNCTION <106122>: flx_processing::find_cxx_pkgs::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI106122__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//C FUNC <83124>: split_extension
_at107674 split_extension(_a14239t_107672 _vI83125_s){
  char _vI83186_ch;
  _a5094t_107688 _vI83185_i;
  _a5094t_107688 _vI83184_n;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 106, cols 6 to 19
      //n<83184>varname = (len<14304>primfun s<83125>varname);
      _vI83184_n = _vI83125_s.size(); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 113, cols 6 to 10
      if(!((0 < _vI83184_n)) ) goto _ifdoelse_std_680_L83177;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 112, cols 8 to 12
      //i<83185>varname = (-<81536>primfun[size] ((len<14304>primfun s<83125>varname), literal[size]("1")));
      _vI83185_i = _vI83125_s.size() - 1 ; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 112, cols 8 to 12
      // primcall pre_incr<81537>primproc[size] &i<83185>ref;
      {
      _a5094t_107688* _tmp108648 = (_a5094t_107688*)&_vI83185_i;
      ++*((_tmp108648));
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 112, cols 8 to 12
    redo__ll_filesystem_3917_L83180:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 112, cols 8 to 12
      if(FLX_UNLIKELY(!((0 < _vI83185_i)) )) goto _ifdoelse_std_680_L83177;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 112, cols 8 to 12
      // primcall pre_decr<81538>primproc[size] &i<83185>ref;
      {
      _a5094t_107688* _tmp108649 = (_a5094t_107688*)&_vI83185_i;
      --*((_tmp108649));
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 109, cols 10 to 24
      //ch<83186>varname = (subscript<81540>primfun[size] (s<83125>varname, i<83185>varname));
      _vI83186_ch = ::flx::rtl::strutil::subscript(_vI83125_s,_vI83185_i); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 110, cols 10 to 52
      if(!((_vI83186_ch == ::flx::rtl::strutil::subscript(::std::string("."),0))) ) goto _ifdoend_std_681_L83183;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 110, cols 10 to 52
      //return ((copyto<81376>primfun[size] (s<83125>varname, i<83185>varname)), (copyfrom<81377>primfun[size] (s<83125>varname, i<83185>varname)));: type _at107674
      return _at107674(::flx::rtl::strutil::substr(_vI83125_s,0,_vI83185_i), ::flx::rtl::strutil::substr(_vI83125_s,_vI83185_i,_vI83125_s.size()));
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 110, cols 10 to 52
    _ifdoend_std_681_L83183:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 111, cols 10 to 40
      if(!((_vI83186_ch == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto redo__ll_filesystem_3917_L83180;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 111, cols 10 to 40
      //return (s<83125>varname, "");: type _at107674
      return _at107674(_vI83125_s, ::std::string(""));
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 112, cols 8 to 12
      goto redo__ll_filesystem_3917_L83180;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 113, cols 6 to 10
    _ifdoelse_std_680_L83177:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 114, cols 6 to 17
      //return (s<83125>varname, "");: type _at107674
      return _at107674(_vI83125_s, ::std::string(""));
}
//------------------------------
//FUNCTION <66693>: toolchain_clang_linux::target_os: Apply method
_a14239t_107672 _fI66693_target_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1216, cols 3 to 37
      //return "LINUX";: type _a14239t_107672
      return ::std::string("LINUX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1216,3,1216,37); // HACK! 
}

//------------------------------
//FUNCTION <103197>: +::aux_uncurry: Apply method
void* _fI103197_aux_uncurry::apply(_at107867 const &_arg ){
  _vI103198_x_uncurry = _arg.data[0];
  _vI103199_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_103096_L103206:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<103202> := x_uncurry<103198>varname;
      _vI103202_aux__apos_2_mv_1387  = _vI103198_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI103202_aux__apos_2_mv_1387)==0) ) goto _ml1389_L103201;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<103199>varname;: type void*
      return _vI103199_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L103201:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI103202_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI103205__lam_1391)(FLX_FPAR_PASS this, ptr_fI89126___plus_))) ) goto _ml1390_L103200;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<103203>varname = apply((prj1:list * string^2 -> string^2), (arg of case 1 of aux'2_mv_1387<103202>varname));
      _vI103203_h_param_std_1269 = (*((_tt107856*)FLX_VNP(_vI103202_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<103204>varname = apply((prj0:list * string^2 -> list), (arg of case 1 of aux'2_mv_1387<103202>varname));
      _vI103204_t_param_std_1268 = (*((_tt107856*)FLX_VNP(_vI103202_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<103199> := (Snoc<81403>struct (y<103199>varname, h_param_std_1269<103203>varname));
      _vI103199_y  = FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(_vI103199_y, _vI103203_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<103198> := t_param_std_1268<103204>varname;
      _vI103198_x_uncurry  = _vI103204_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_103096_L103206;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L103200:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <98235>: map_package_requirements_uncurry::aux_uncurry: Apply method
void* _fI98235_aux_uncurry::apply(_at107697 const &_arg ){
  _vI98236_init_uncurry = _arg.data[0];
  _vI98237_x = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_94620_L98244:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<98240> := x<98237>varname;
      _vI98240_aux__apos_2_mv_1356  = _vI98237_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI98240_aux__apos_2_mv_1356)==0) ) goto _ml1358_L98239;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<98236>varname;: type void*
      return _vI98236_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L98239:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI98240_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI98243__lam_1360)(FLX_FPAR_PASS this, ptrmap_package_requirements_uncurry))) ) goto _ml1359_L98238;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<98241>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<98240>varname));
      _vI98241_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI98240_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<98242>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<98240>varname));
      _vI98242_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI98240_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<98237> := t_param_std_1258<98242>varname;
      _vI98237_x  = _vI98242_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<98236> := apply((_lam_65103<90370>flxfun init_uncurry<98236>varname), h_param_std_1259<98241>varname);
      _vI98236_init_uncurry  = ((FLX_NEWP(_lam_65103)(FLX_FPAR_PASS ptrmap_package_requirements_uncurry))
      ->apply(_vI98236_init_uncurry))->clone()
      ->apply(_vI98241_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_94620_L98244;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L98238:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <106423>: flx_processing::cxx_link_shared_exe::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI106423__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <89776>: toolchain_clang_apple_iOS_maker_uncurry::c_static_object_compiler: Apply method
int _fI89776_c_static_object_compiler::apply(_art107759 const &_arg ){
  _vI89778_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2054, cols 5 to 6
      //result<89777>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_c_compile_flags<89748>varname, CCOBJ_STATIC_LIB:c_compiler<89739>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<89778>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<89778>varname)));
      _vI89777_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89748_base_c_compile_flags, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89739_c_compiler, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.header_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.macros, ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89778_spec.src, _vI89778_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2055, cols 5 to 18
      //return result<89777>varname;: type int
      return _vI89777_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2056,3,2056,4); // HACK! 
}

//------------------------------

//PROCEDURE <67992:> handle_filename: Call method
void handle_filename::stack_call(_tt107851 const &_arg){
  ::flx::rtl::con_t *cc = call(0,_arg);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * handle_filename::call(::flx::rtl::con_t *_ptr_caller, _tt107851 const &_arg){
  _caller = _ptr_caller;
  ploopctl = _arg.mem_0;
  _vI68006_config = _arg.mem_1;
  _vI68007_control = _arg.mem_2;
  _vI68008_arg = _arg.mem_3;
  INIT_PC
  return this;
}

//PROCEDURE <67992:> handle_filename: Resume method
::flx::rtl::con_t *handle_filename::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1337, cols 3 to 26
      //(deref<85463>primfun[string] apply((prj6:&record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> &string), ploopctl<68005>varname)) = arg<68008>varname;
      *(&ploopctl->progname)  = _vI68008_arg; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1338, cols 3 to 63
      //_ds1_65640<68003>varname = (split_extension<83124>stackfun arg<68008>varname);
      _ds1_65640 = split_extension(_vI68008_arg); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1338, cols 3 to 63
      //apply((prj5:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(ploopctl<68005>varname)) = apply((prj0:string^2 -> string), _ds1_65640<68003>varname);
      (*ploopctl).path = (_ds1_65640.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1338, cols 3 to 63
      //apply((prj3:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(ploopctl<68005>varname)) = apply((prj1:string^2 -> string), _ds1_65640<68003>varname);
      (*ploopctl).ext = (_ds1_65640.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1339, cols 3 to 65
      //_ds1_65641<68004>varname = (split1<84047>stackfun apply((prj5:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(ploopctl<68005>varname)));
      _ds1_65641 = split1(FLX_FPAR_PASS_ONLY)
      .apply((*ploopctl).path) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1339, cols 3 to 65
      //apply((prj2:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(ploopctl<68005>varname)) = apply((prj0:string^2 -> string), _ds1_65641<68004>varname);
      (*ploopctl).dir = (_ds1_65641.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1339, cols 3 to 65
      //apply((prj1:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(ploopctl<68005>varname)) = apply((prj1:string^2 -> string), _ds1_65641<68004>varname);
      (*ploopctl).base = (_ds1_65641.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 766, cols 3 to 38
      //check_ext_mv_65656<103275> := (find_uncurry<89508>stackfun (_lam_1596<103279>closure, (exts<68018>stackfun ())));
      check_ext_mv_65656  = find_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107858((FLX_NEWP(_lam_1596)(FLX_FPAR_PASS this)), exts(FLX_FPAR_PASS_ONLY)
      .apply() /* apply_stack */)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1388, cols 5 to 12
/*match case 1:|Some tag_param_bootflx_65571*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1388, cols 5 to 12
      if(!andthen(FLX_VNI(check_ext_mv_65656)==1, (FLX_NEWP(_lam_65659)(FLX_FPAR_PASS this))) ) goto _ml65658_L103277;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1388, cols 10 to 12
      //tag_param_bootflx_65571<103276>varname = (arg of case 1 of check_ext_mv_65656<103275>varname);
      tag_param_bootflx_65571 = *((_a14239t_107672*)FLX_VNP(check_ext_mv_65656)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 37 to 23
      //handle_filename_mv_65642<65642> := tag_param_bootflx_65571<103276>varname;
      handle_filename_mv_65642  = tag_param_bootflx_65571; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 37 to 23
      goto _end_inline_check_ext_103283_L103283;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1388, cols 5 to 12
    _ml65658_L103277:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 5 to 9
      if(!(FLX_VNI(check_ext_mv_65656)==0) ) goto _ml65660_L103278;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 37 to 23
      //handle_filename_mv_65642<65642> := "unknown";
      handle_filename_mv_65642  = ::std::string("unknown"); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 37 to 23
      goto _end_inline_check_ext_103283_L103283;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 5 to 9
    _ml65660_L103278:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 37 to 23
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1389, cols 37 to 23
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1389,37,1389,23);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1389,37,1389,23);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1390, cols 9 to 2
    _end_inline_check_ext_103283_L103283:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1342, cols 5 to 13
/*match case 1:"compile"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1342, cols 5 to 13
      if(!((::std::string("compile") == handle_filename_mv_65642)) ) goto _ml65644_L68009;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1343, cols 6 to 40
      //(deref<80855>primfun[list] apply((prj77:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68007>varname)) = (+<80787>stackfun (apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68007>varname)), arg<68008>varname));
      *(&_vI68007_control->cpps)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI68007_control).cpps, _vI68008_arg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1342, cols 5 to 13
    _ml65644_L68009:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1345, cols 5 to 10
/*match case 2:"link"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1345, cols 5 to 10
      if(!((::std::string("link") == handle_filename_mv_65642)) ) goto _ml65645_L68010;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1346, cols 6 to 42
      //(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68007>varname)) = (+<80787>stackfun (apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68007>varname)), arg<68008>varname));
      *(&_vI68007_control->cppos)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI68007_control).cppos, _vI68008_arg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1345, cols 5 to 10
    _ml65645_L68010:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1348, cols 5 to 11
/*match case 3:"felix"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1348, cols 5 to 11
      if(!((::std::string("felix") == handle_filename_mv_65642)) ) goto _ml65646_L68011;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1349, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj4:&record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> &int), ploopctl<68005>varname)) = 0;
      *(&ploopctl->grab)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1348, cols 5 to 11
    _ml65646_L68011:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1351, cols 5 to 10
/*match case 4:"none"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1351, cols 5 to 10
      if(!((::std::string("none") == handle_filename_mv_65642)) ) goto _ml65647_L68012;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1352, cols 5 to 22
      //(deref<87163>primfun[int] apply((prj4:&record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> &int), ploopctl<68005>varname)) = 0;
      *(&ploopctl->grab)  = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1351, cols 5 to 10
    _ml65647_L68012:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1354, cols 5 to 13
/*match case 5:"unknown"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1354, cols 5 to 13
      if(!((::std::string("unknown") == handle_filename_mv_65642)) ) goto _ml65648_L68013;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("Unknown file extension in ", arg<68008>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108653 = (::std::string("Unknown file extension in ") + _vI68008_arg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108653)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1356, cols 5 to 19
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1354, cols 5 to 13
    _ml65648_L68013:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1358, cols 5 to 11
/*match case 6:"ocaml"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1358, cols 5 to 11
      if(!((::std::string("ocaml") == handle_filename_mv_65642)) ) goto _ml65649_L68014;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1359, cols 5 to 42
      //(deref<80855>primfun[list] apply((prj79:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68007>varname)) = (+<80787>stackfun (apply((prj79:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68007>varname)), arg<68008>varname));
      *(&_vI68007_control->ocamls)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI68007_control).ocamls, _vI68008_arg)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1358, cols 5 to 11
    _ml65649_L68014:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1361, cols 5 to 5
/*match case 7:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1361, cols 10 to 22
      {if(FLX_UNLIKELY(!(0)))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1361,10,1361,22);}
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1364, cols 9 to 2
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <89454>: generic_link_exe_dynamic_uncurry: Apply method
int generic_link_exe_dynamic_uncurry::apply(_tt107811 const &_arg ){
  _vI89639_spec_uncurry = _arg.mem_0;
  cppos = _arg.mem_1;
  LINKER_OUTPUT_FILENAME = _arg.mem_2;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<94015>varname = (aux_uncurry<94016>stackfun (apply((prj0:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89639>varname), Empty<80385>varname));
      _vI94015_r = _fI94016_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89639_spec_uncurry.CCFLAGS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<94015>ref;
      {
      void** _tmp108654 = (void**)&_vI94015_r;
      _rev(((_tmp108654)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<94037>varname = (aux_uncurry<94038>stackfun (cppos<89635>varname, Empty<80385>varname));
      _vI94037_r = _fI94038_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(cppos, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<94037>ref;
      {
      void** _tmp108655 = (void**)&_vI94037_r;
      _rev(((_tmp108655)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<94055>varname = (aux_uncurry<94056>stackfun (apply((prj2:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89639>varname), Empty<80385>varname));
      _vI94055_r = _fI94056_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89639_spec_uncurry.LINK_STRINGS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<94055>ref;
      {
      void** _tmp108656 = (void**)&_vI94055_r;
      _rev(((_tmp108656)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 296, cols 5 to 6
      //CMD<89633>varname = (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun (""", apply((prj1:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89639>varname))), """)), " ")), (cat_uncurry<89509>stackfun (" ", r<94015>varname)))), " ")), (+<14305>primfun (apply((prj3:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89639>varname), (+<14305>primfun ((+<14305>primfun (""", LINKER_OUTPUT_FILENAME<89636>varname)), """)))))), " ")), (cat_uncurry<89509>stackfun (" ", r<94037>varname)))), " ")), (cat_uncurry<89509>stackfun (" ", r<94055>varname))));
      _vI89633_CMD = (((((((((::std::string("\"") + _vI89639_spec_uncurry.CCLINK_STATIC ) + ::std::string("\"") ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI94015_r)) /* apply_stack */ ) + ::std::string(" ") ) + (_vI89639_spec_uncurry.SPEC_EXE_FILENAME + ((::std::string("\"") + LINKER_OUTPUT_FILENAME ) + ::std::string("\"") ) ) ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI94037_r)) /* apply_stack */ ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI94055_r)) /* apply_stack */ ; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 298, cols 5 to 38
      //run procedure call apply((prj4:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string -> void), spec_uncurry<89639>varname) (+<14305>primfun ("Link command=", CMD<89633>varname));
      {
        ::flx::rtl::con_t *_p = (_vI89639_spec_uncurry.debugln)->clone()
      ->call(0, ::std::string("Link command=") + _vI89633_CMD );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L94071;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", CMD<89633>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108657 = (::std::string("[system] ") + _vI89633_CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108657)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L94071:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv94078<94078> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", CMD<89633>varname)), """)));
      _genout_urv94078  = ::std::system(((::std::string("\"") + _vI89633_CMD ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<94075> := _genout_urv94078<94078>varname;
      _vI94075__genout_urv93723  = _genout_urv94078; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<94074> := _genout_urv93723<94075>varname;
      _vI94074__genout_urv93715  = _vI94075__genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<94073> := _genout_urv93715<94074>varname;
      _vI94073__genout_urv93710  = _vI94074__genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv94069<94069> := _genout_urv93710<94073>varname;
      _genout_urv94069  = _vI94073__genout_urv93710; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 299, cols 5 to 35
      //result<89634>varname = _genout_urv94069<94069>varname;
      _vI89634_result = _genout_urv94069; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 302, cols 5 to 9
      if(!(!((_vI89634_result == 0)) ) ) goto _ifdoelse_bootflx_65400_L89638;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Link command=", CMD<89633>varname)), " FAILED")), "\x0A")));
      {
      _a14239t_107672 _tmp108658 = ((::std::string("Link command=") + _vI89633_CMD ) + ::std::string(" FAILED") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108658)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 302, cols 5 to 9
    _ifdoelse_bootflx_65400_L89638:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 303, cols 5 to 18
      //return result<89634>varname;: type int
      return _vI89634_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",304,3,304,4); // HACK! 
}

//------------------------------
//FUNCTION <66533>: toolchain_gcc_linux::get_base_cxx_compile_flags: Apply method
void* _fI66533_get_base_cxx_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 745, cols 3 to 69
      //return base_cxx_compile_flags<66506>varname;: type void*
      return ptrtoolchain_gcc_linux->_vI66506_base_cxx_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",745,3,745,69); // HACK! 
}

//------------------------------
//FUNCTION <89763>: toolchain_clang_apple_iOS_maker_uncurry::get_base_cxx_compile_flags: Apply method
void* _fI89763_get_base_cxx_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2001, cols 3 to 69
      //return base_cxx_compile_flags<89749>varname;: type void*
      return ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89749_base_cxx_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2001,3,2001,69); // HACK! 
}

//------------------------------
//FUNCTION <66338>: toolchain_msvc_win32::xpopen: Apply method
_tt107757 xpopen::apply(void* const &_arg ){
  cmd = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<92636>varname = (aux_uncurry<92637>stackfun (cmd<66344>varname, Empty<80385>varname));
      _vI92636_r = _fI92637_aux_uncurry(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)
      .apply(_at107697(cmd, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<92636>ref;
      {
      void** _tmp108659 = (void**)&_vI92636_r;
      _rev(((_tmp108659)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1766, cols 5 to 29
      //CMD<66340>varname = (cat_uncurry<89509>stackfun (" ", r<92636>varname));
      CMD = cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI92636_r)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_507_L92700;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[get_stdout] ", CMD<66340>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108660 = (::std::string("[get_stdout] ") + CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108660)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
    _ifdoelse_std_507_L92700:;
    // # C:/projects/felix/src/packages/program.fdoc: line 812, cols 5 to 32
      //_genout_urv92698<92698> := (basic_get_stdout<82955>stackfun CMD<66340>varname);
      _genout_urv92698  = basic_get_stdout(CMD); //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1767, cols 5 to 47
      //_ds2_66242<66341>varname = _genout_urv92698<92698>varname;
      _ds2_66242 = _genout_urv92698; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1767, cols 5 to 47
      //result<66342>varname = apply((prj0:int * string -> int), _ds2_66242<66341>varname);
      result = _ds2_66242.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1767, cols 5 to 47
      //data<66343>varname = apply((prj1:int * string -> string), _ds2_66242<66341>varname);
      data = _ds2_66242.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1770, cols 5 to 9
      if(!(!((result == 0)) ) ) goto _ifdoelse_bootflx_66194_L66346;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Shell command=", CMD<66340>varname)), " FAILED")), "\x0A")));
      {
      _a14239t_107672 _tmp108661 = ((::std::string("Shell command=") + CMD ) + ::std::string(" FAILED") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108661)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1770, cols 5 to 9
    _ifdoelse_bootflx_66194_L66346:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1771, cols 5 to 24
      //return (result<66342>varname, data<66343>varname);: type _tt107757
      return _tt107757(result, data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1772,3,1772,4); // HACK! 
}

//------------------------------
//C FUNC <82705>: _fI82705_join
_a14239t_107672 _fI82705_join( _a14239t_107672 _vI82706_p, _a14239t_107672 _vI82707_b){
   ::flx::rtl::cl_t join_mv_721;
   ::flx::rtl::cl_t join_mv_716;
   ::flx::rtl::cl_t join_mv_711;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 68, cols 8 to 14
      //join_mv_711<91180> := (==<80464>primfun[string] (p<82706>varname, ""));
      join_mv_711  = (_vI82706_p == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
      if(!(join_mv_711%2==1) ) goto _ml713_L91179;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
      //return b<82707>varname;: type _a14239t_107672
      return _vI82707_b;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
    _ml713_L91179:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 69, cols 10 to 18
      //join_mv_716<91182> := (==<80464>primfun[string] (p<82706>varname, "\"));
      join_mv_716  = (_vI82706_p == ::std::string("\\")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
      if(!(join_mv_716%2==1) ) goto _ml718_L91181;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
      //return (+<14305>primfun (p<82706>varname, b<82707>varname));: type _a14239t_107672
      return _vI82706_p + _vI82707_b ;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
    _ml718_L91181:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 70, cols 10 to 27
      //join_mv_721<91184> := (==<81352>primfun[char] ((subscript<81183>primfun[int] (p<82706>varname, -1)), (subscript<81183>primfun[int] ("\", 0))));
      join_mv_721  = (::flx::rtl::strutil::subscript(_vI82706_p,-1) == ::flx::rtl::strutil::subscript(::std::string("\\"),0)); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
      if(!(join_mv_721%2==1) ) goto _ml723_L91183;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
      //return (+<14305>primfun (p<82706>varname, b<82707>varname));: type _a14239t_107672
      return _vI82706_p + _vI82707_b ;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
    _ml723_L91183:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 71, cols 5 to 18
      //return (+<14305>primfun ((+<14305>primfun (p<82706>varname, "\")), b<82707>varname));: type _a14239t_107672
      return (_vI82706_p + ::std::string("\\") ) + _vI82707_b ;
}
//------------------------------
//C FUNC <90817>: _a90817_argv
_a14239t_107672 _a90817_argv(FLX_APAR_DECL int _a90818){
    // # C:/projects/felix/src/packages/program.fdoc: line 670, cols 3 to 35
      //return (argv<7610>primfun _a90818<90818>varname);: type _a14239t_107672
      return ::std::string(_a90818<0||_a90818>=PTF argc?"":PTF argv[_a90818]);
}
//------------------------------
//FUNCTION <66291>: toolchain_msvc_win32::dependency_extension: Apply method
_a14239t_107672 dependency_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1735, cols 3 to 45
      //return ".d";: type _a14239t_107672
      return ::std::string(".d");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1735,3,1735,45); // HACK! 
}

//------------------------------
//FUNCTION <89759>: toolchain_clang_apple_iOS_maker_uncurry::dynamic_library_extension: Apply method
_a14239t_107672 _fI89759_dynamic_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1997, cols 3 to 54
      //return ".dylib";: type _a14239t_107672
      return ::std::string(".dylib");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1997,3,1997,54); // HACK! 
}

//------------------------------
//FUNCTION <97863>: flx_pkgconfig::reattach_drive_letters::_lam_65244::_lam_65245: Apply method
 ::flx::rtl::cl_t _lam_65245::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 18 to 31
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",231,18,231,31); // HACK! 
}

//------------------------------
//FUNCTION <89526>: search_and_replace_uncurry: Apply method
_a14239t_107672 search_and_replace_uncurry::apply(_tt107877 const &_arg ){
  vs_uncurry = _arg.mem_0;
  _vI90337_v = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<96679> := vs_uncurry<90343>varname;
      _vI96679_xs  = vs_uncurry; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv96678<96678> := iterator'2<96680>closure;
      _genout_urv96678  = (FLX_NEWP(_fI96680_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //_generator_strings_7556<90332>varname = _genout_urv96678<96678>varname;
      _generator_strings_7556 = _genout_urv96678; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    continue__ll_strings_7551_L90338:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //search_and_replace'2_mv_2360<90328> := apply(_generator_strings_7556<90332>varname, ());
      _vI90328_search_and_replace__apos_2_mv_2360  = (_generator_strings_7556)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 1:|Some (k_param_std_2017, b_param_std_2018)*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!andthen(FLX_VNI(_vI90328_search_and_replace__apos_2_mv_2360)==1, (FLX_NEWP(_lam_2363)(FLX_FPAR_PASS this))) ) goto _ml2362_L90339;
    // # C:/projects/felix/src/packages/strings.fdoc: line 738, cols 13 to 13
      //b_param_std_2018<90334>varname = apply((prj1:string^2 -> string), (arg of case 1 of search_and_replace'2_mv_2360<90328>varname));
      b_param_std_2018 = ((*((_at107674*)FLX_VNP(_vI90328_search_and_replace__apos_2_mv_2360))).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 738, cols 11 to 11
      //k_param_std_2017<90335>varname = apply((prj0:string^2 -> string), (arg of case 1 of search_and_replace'2_mv_2360<90328>varname));
      k_param_std_2017 = ((*((_at107674*)FLX_VNP(_vI90328_search_and_replace__apos_2_mv_2360))).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 734, cols 3 to 4
      //spos<96702> := literal[size]("0");
      _vI96702_spos  = 0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 724, cols 5 to 18
      //m<96699>varname = (len<14304>primfun k_param_std_2017<90335>varname);
      _vI96699_m = k_param_std_2017.size(); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 725, cols 5 to 24
      //o<96700>varname = (copyto<81376>primfun[size] (v<90337>varname, spos<96702>varname));
      _vI96700_o = ::flx::rtl::strutil::substr(_vI90337_v,0,_vI96702_spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 726, cols 5 to 32
      //n<96701>varname = (stl_find<14443>primfun (v<90337>varname, k_param_std_2017<90335>varname, spos<96702>varname));
      _vI96701_n = _vI90337_v.find(k_param_std_2017,_vI96702_spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    continue__ll_strings_7537_L96703:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      if(FLX_UNLIKELY(!(!((_vI96701_n == ::std::string::npos)) ) )) goto break__ll_strings_7537_L96704;
    // # C:/projects/felix/src/packages/strings.fdoc: line 728, cols 7 to 24
      // primcall +=<14301>primproc (&o<96700>ref, (+<14305>primfun ((substring<81415>primfun[size, size] (v<90337>varname, spos<96702>varname, n<96701>varname)), b_param_std_2018<90334>varname)));
      {
      _a14239t_107672* _tmp108662 = (_a14239t_107672*)&_vI96700_o;
      _a14239t_107672 _tmp108663 = ::flx::rtl::strutil::substr(_vI90337_v,_vI96702_spos,_vI96701_n) + b_param_std_2018 ;
      ((_tmp108662))->append((_tmp108663));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 729, cols 7 to 16
      //spos<96702>varname = (+<80900>primfun[size] (n<96701>varname, m<96699>varname));
      _vI96702_spos = _vI96701_n + _vI96699_m ; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 730, cols 7 to 34
      //n<96701>varname = (_ctor_size<5394>primfun (stl_find<14443>primfun (v<90337>varname, k_param_std_2017<90335>varname, spos<96702>varname)));
      _vI96701_n = ((_vI90337_v.find(k_param_std_2017,_vI96702_spos)))/*int.flx: ctor size IDENT*/; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      goto continue__ll_strings_7537_L96703;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    break__ll_strings_7537_L96704:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 732, cols 5 to 18
      // primcall +=<14301>primproc (&o<96700>ref, (copyfrom<81377>primfun[size] (v<90337>varname, spos<96702>varname)));
      {
      _a14239t_107672* _tmp108664 = (_a14239t_107672*)&_vI96700_o;
      _a14239t_107672 _tmp108665 = ::flx::rtl::strutil::substr(_vI90337_v,_vI96702_spos,_vI90337_v.size());
      ((_tmp108664))->append((_tmp108665));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 739, cols 7 to 36
      //v<90337>varname = o<96700>varname;
      _vI90337_v = _vI96700_o; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto continue__ll_strings_7551_L90338;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2362_L90339:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 2:|Some any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!andthen(FLX_VNI(_vI90328_search_and_replace__apos_2_mv_2360)==1, (FLX_NEWP(_lam_2365)(FLX_FPAR_PASS this))) ) goto _ml2364_L90340;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto continue__ll_strings_7551_L90338;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2364_L90340:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 3:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!(FLX_VNI(_vI90328_search_and_replace__apos_2_mv_2360)==0) ) goto _ml2366_L90341;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto _em2360_L90342;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2366_L90341:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _em2360_L90342:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 741, cols 5 to 13
      //return v<90337>varname;: type _a14239t_107672
      return _vI90337_v;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",742,3,742,4); // HACK! 
}

//------------------------------
//FUNCTION <103691>: setup-from-file_uncurry::_lam_65632: Apply method
 ::flx::rtl::cl_t _lam_65632::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 920, cols 7 to 12
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",920,7,920,12); // HACK! 
}

//------------------------------
//FUNCTION <107207>: flx_processing::cxx_compile_dynamic1_uncurry::aux_uncurry: Apply method
void* _fI107207_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107208_inp_uncurry = _arg.data[0];
  _vI107209_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L107216:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<107212> := inp_uncurry<107208>varname;
      _vI107212_aux__apos_2_mv_1381  = _vI107208_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI107212_aux__apos_2_mv_1381)==0) ) goto _ml1383_L107211;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<107209>varname;: type void*
      return _vI107209_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L107211:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI107212_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI107215__lam_1385)(FLX_FPAR_PASS this, ptr_fI107013_cxx_compile_dynamic1_uncurry, ptrflx_processing))) ) goto _ml1384_L107210;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<107213>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<107212>varname));
      _vI107213_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI107212_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<107214>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<107212>varname));
      _vI107214_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI107212_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<107209> := (Snoc<80397>struct (out<107209>varname, (_lam_66062<107040>stackfun h_param_std_1267<107213>varname)));
      _vI107209_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107209_out, _fI107040__lam_66062(ptr_fI107013_cxx_compile_dynamic1_uncurry, ptrflx_processing)
      .apply(_vI107213_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<107208> := t_param_std_1266<107214>varname;
      _vI107208_inp_uncurry  = _vI107214_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L107216;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L107210:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93322>: toolchain_msvc_win32::fixup: Apply method
_a14239t_107672 fixup::apply(_a14239t_107672 const &_arg ){
  _vI93323_s = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 373, cols 3 to 4
      //fixup_mv_66232<93324> := (==<80464>primfun[string] ((copyto<81376>primfun[size] (s<93323>varname, (len<14304>primfun "-L"))), "-L"));
      fixup_mv_66232  = (::flx::rtl::strutil::substr(_vI93323_s,0,::std::string("-L").size()) == ::std::string("-L")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1755, cols 33 to 83
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1755, cols 33 to 83
      if(!(fixup_mv_66232%2==1) ) goto _ml66234_L93325;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1755, cols 33 to 83
      //return (+<14305>primfun ("/LIBPATH:", (copyfrom<81959>primfun[int] (s<93323>varname, 2))));: type _a14239t_107672
      return ::std::string("/LIBPATH:") + ::flx::rtl::strutil::substr(_vI93323_s,2,_vI93323_s.size()) ;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1755, cols 33 to 83
    _ml66234_L93325:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1755, cols 33 to 83
/*match case 2:any*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1755, cols 33 to 83
      //return s<93323>varname;: type _a14239t_107672
      return _vI93323_s;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1756,5,1756,69); // HACK! 
}

//------------------------------
//FUNCTION <106742>: flx_processing::cal_time_from_flxdepfile: Apply method
double _fI106742_cal_time_from_flxdepfile::apply(_tt108171 const &_arg ){
  _vI106753_debugln = _arg.mem_0;
  _vI106754_df = _arg.mem_1;
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_634_L107118;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load_text] ", df<106754>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108668 = (::std::string("[load_text] ") + _vI106754_df ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108668)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
    _ifdoelse_std_634_L107118:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2126, cols 5 to 31
      //deptext<106750>varname = (raw_load_text<8398>primfun df<106754>varname);
      _vI106750_deptext = ::flx::rtl::ioutil::load_text_file(_vI106754_df); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2127, cols 5 to 38
      //lines<106751>varname = (split<14933>stackfun (deptext<106750>varname, "\x0A"));
      _vI106751_lines = split(FLX_FPAR_PASS_ONLY)
      .apply(_at107674(_vI106750_deptext, ::std::string("\n"))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2128, cols 5 to 34
      //run procedure call debugln<106753>varname (+<14305>primfun ("Deps=", (str<81092>stackfun lines<106751>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI106753_debugln)->clone()
      ->call(0, ::std::string("Deps=") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106751_lines) /* apply_stack */ );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 237, cols 7 to 24
      //cal_time_from_flxdepfile_mv_66039<107120> := (aux_uncurry<107122>stackfun ((neg<82781>primfun[double] literal[double]("1.0")), lines<106751>varname));
      _vI107120_cal_time_from_flxdepfile_mv_66039  = _fI107122_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_tt108078(- 1.0 , _vI106751_lines)) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2130, cols 11 to 12
/*match case 1:ft_param_bootflx_65861*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2130, cols 11 to 12
      //ft_param_bootflx_65861<107121>varname = cal_time_from_flxdepfile_mv_66039<107120>varname;
      _vI107121_ft_param_bootflx_65861 = _vI107120_cal_time_from_flxdepfile_mv_66039; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 10 to 35
      //cal_time_from_flxdepfile_mv_66043<107132> := (==<82539>primfun[double] (ft_param_bootflx_65861<107121>varname, (neg<82781>primfun[double] literal[double]("1.0"))));
      _vI107132_cal_time_from_flxdepfile_mv_66043  = (_vI107121_ft_param_bootflx_65861 == - 1.0 ); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
      if(!(_vI107132_cal_time_from_flxdepfile_mv_66043%2==1) ) goto _ml66045_L107133;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 289, cols 3 to 42
      //_urv98557<107119> := (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1));
      _vI107119__urv98557  = static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 289, cols 3 to 42
      goto _end_hash_658226698;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
    _ml66045_L107133:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 71
      //_urv98557<107119> := ft_param_bootflx_65861<107121>varname;
      _vI107119__urv98557  = _vI107121_ft_param_bootflx_65861; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2131, cols 7 to 78
    _end_hash_658226698:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2132, cols 5 to 6
      //deptime<106752>varname = _urv98557<107119>varname;
      _vI106752_deptime = _vI107119__urv98557; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2133, cols 5 to 57
      //run procedure call debugln<106753>varname (+<14305>primfun ("Deptime=", (strfiletime<82509>stackfun deptime<106752>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI106753_debugln)->clone()
      ->call(0, ::std::string("Deptime=") + strfiletime(FLX_FPAR_PASS _vI106752_deptime) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2134, cols 5 to 19
      //return deptime<106752>varname;: type double
      return _vI106752_deptime;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2135,3,2135,4); // HACK! 
}

//------------------------------
//FUNCTION <105437>: FlxPkgConfigQuery::getpkgfield_uncurry::iterator'2: Apply method
void* _fI105437_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L105438:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<105442> := xs<105436>varname;
      _vI105442_iterator__apos_2_mv_1563  = ptrgetpkgfield_uncurry->_vI105436_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105442_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI105445__lam_1566)(FLX_FPAR_PASS this, ptrgetpkgfield_uncurry, ptrFlxPkgConfigQuery))) ) goto _ml1565_L105441;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<105443>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<105442>varname));
      _vI105443_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI105442_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<105444>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<105442>varname));
      _vI105444_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI105442_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<105436>varname = t_param_std_1318<105444>varname;
      ptrgetpkgfield_uncurry->_vI105436_xs = _vI105444_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108669)
      //yield (Some<80915>struct h_param_std_1319<105443>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI105443_h_param_std_1319));//yield
    FLX_CASE_LABEL(108669)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L105438;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L105441:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI105442_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L105440;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L105440:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L105438;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <96789>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI96789__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------

//PROCEDURE <106024:> flx_processing::debugln: Call method
::flx::rtl::con_t * _pI106024_debugln::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI106029_x = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <106024:> flx_processing::debugln: Resume method
::flx::rtl::con_t *_pI106024_debugln::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65838_L106030;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", x<106029>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108671 = (::std::string("[flx] ") + _vI106029_x ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108671)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1997, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
    _ifdoelse_bootflx_65838_L106030:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1997, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <66489>: toolchain_msvc_win32::dynamic_library_linker: Apply method
int dynamic_library_linker::apply(_art107763 const &_arg ){
  _vI66494_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1923, cols 5 to 134
      //_genout_urv93199<93199> := (xpopen<66338>stackfun (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66494>varname), (+<14305>primfun ("/Fe", apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66494>varname))))), "/link")), "/DLL")), dynamic_link_strings<66337>varname)), "/MDd")), "/nologo")), "cl.exe")));
      _genout_urv93199  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI66494_spec.srcs, ::std::string("/Fe") + _vI66494_spec.dst )) /* apply_stack */, ::std::string("/link"))) /* apply_stack */, ::std::string("/DLL"))) /* apply_stack */, ptrtoolchain_msvc_win32->dynamic_link_strings)) /* apply_stack */, ::std::string("/MDd")))), ::std::string("/nologo")))), ::std::string("cl.exe"))))) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1923, cols 5 to 134
      //_ds2_66273<66491>varname = _genout_urv93199<93199>varname;
      _ds2_66273 = _genout_urv93199; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1923, cols 5 to 134
      //result<66492>varname = apply((prj0:int * string -> int), _ds2_66273<66491>varname);
      _vI66492_result = _ds2_66273.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1923, cols 5 to 134
      //text<66493>varname = apply((prj1:int * string -> string), _ds2_66273<66491>varname);
      _vI66493_text = _ds2_66273.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66492>varname, text<66493>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66492_result, _vI66493_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1925, cols 5 to 18
      //return result<66492>varname;: type int
      return _vI66492_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1926,3,1926,4); // HACK! 
}

//------------------------------
//FUNCTION <66908>: toolchain_clang_osx::dependency_extension: Apply method
_a14239t_107672 _fI66908_dependency_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1460, cols 3 to 45
      //return ".d";: type _a14239t_107672
      return ::std::string(".d");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1460,3,1460,45); // HACK! 
}

//------------------------------
//FUNCTION <66689>: toolchain_clang_linux::whatami: Apply method
_a14239t_107672 _fI66689_whatami::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1214, cols 3 to 63
      //return "toolchain_clang_linux (version 2)";: type _a14239t_107672
      return ::std::string("toolchain_clang_linux (version 2)");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1214,3,1214,63); // HACK! 
}

//------------------------------
//FUNCTION <96157>: fmt::_lam_227: Apply method
 ::flx::rtl::cl_t _lam_227::apply(){
    // # C:/projects/felix/src/packages/numbers.fdoc: line 212, cols 7 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/numbers.fdoc",212,7,212,19); // HACK! 
}

//------------------------------
//FUNCTION <66531>: toolchain_gcc_linux::get_base_c_compile_flags: Apply method
void* _fI66531_get_base_c_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 744, cols 3 to 65
      //return base_c_compile_flags<66505>varname;: type void*
      return ptrtoolchain_gcc_linux->_vI66505_base_c_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",744,3,744,65); // HACK! 
}

//------------------------------
//FUNCTION <107374>: flx_processing::cxx_link_shared_library::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI107374__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66673>: toolchain_gcc_osx::dynamic_library_linker: Apply method
int _fI66673_dynamic_library_linker::apply(_art107763 const &_arg ){
  _vI66676_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1168, cols 5 to 6
      //result<66675>varname = (generic_link_lib_dynamic_uncurry<89472>stackfun (( CCFLAGS:ccflags_for_dynamic_link<66595>varname, CCLINK_DLLIB:linker<66594>varname, EXT_SHARED_OBJ:".dylib", LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66676>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66676>varname)));
      _vI66675_result = generic_link_lib_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107813(_art107812(ptrtoolchain_gcc_osx->_vI66595_ccflags_for_dynamic_link, ptrtoolchain_gcc_osx->_vI66594_linker, ::std::string(".dylib"), _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_gcc_osx->_vI66677_config.library_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66676_spec.srcs, _vI66676_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1169, cols 5 to 18
      //return result<66675>varname;: type int
      return _vI66675_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1170,3,1170,4); // HACK! 
}

//------------------------------
//FUNCTION <98178>: map_package_requirements_uncurry::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI98178__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <105558>: FlxPkgConfigQuery::_lam_65337: Apply method
 ::flx::rtl::cl_t _lam_65337::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 470, cols 9 to 18
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",470,9,470,18); // HACK! 
}

//------------------------------
//FUNCTION <68401>: FlxPkgConfigQuery::getpkgfielddflt: Apply method
_ft107717* getpkgfielddflt::apply(_pt107743* const &_arg ){
  _vI68412_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 543, cols 5 to 6
      //return getpkgfielddflt'2<68403>closure;: type _ft107717*
      return (FLX_NEWP(_fI68403_getpkgfielddflt__apos_2)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",543,5,543,6); // HACK! 
}

//------------------------------
//FUNCTION <66299>: toolchain_msvc_win32::static_library_extension: Apply method
_a14239t_107672 static_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1739, cols 3 to 51
      //return ".lib";: type _a14239t_107672
      return ::std::string(".lib");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1739,3,1739,51); // HACK! 
}

//------------------------------
//FUNCTION <107014>: flx_processing::cxx_compile_static1_uncurry: Apply method
int _fI107014_cxx_compile_static1_uncurry::apply(_tt107874 const &_arg ){
  _vI107028_ehandler_uncurry = _arg.mem_0;
  _vI107019_src = _arg.mem_1;
  _vI107018_dst = _arg.mem_2;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107256>ref;
      {
      __timeb64* _tmp108673 = (__timeb64*)&_vI107256_tv;
      _ftime64_s(((_tmp108673)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99286<107255> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107256>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107256>varname)), literal[double]("1.0e3")))));
      _vI107255__genout_urv99286  = (static_cast<double>((_vI107256_tv.time))) + ((static_cast<double>((_vI107256_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2348, cols 5 to 25
      //t0<107036>varname = _genout_urv99286<107255>varname;
      _vI107036_t0 = _vI107255__genout_urv99286; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2349, cols 5 to 33
      //pkgs<107032>varname = (find_cxx_pkgs<106722>stackfun src<107019>varname);
      _vI107032_pkgs = _fI106722_find_cxx_pkgs(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI107019_src) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2350, cols 5 to 52
      //(deref<80855>primfun[list] apply((prj78:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<107004>ref)) = (join_uncurry<89534>stackfun (apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), pkgs<107032>varname));
      *(&((_art107702*)&ptrflx_processing->_vI107004_control)->extra_pkgs)  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.extra_pkgs, _vI107032_pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2351, cols 5 to 35
      //pkg_cflags<107017>varname = Empty<80385>varname;
      _vI107017_pkg_cflags = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2366, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI107032_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65907_L107030;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_compile_static1] Adding packages ", (str<81092>stackfun pkgs<107032>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108674 = (::std::string("[flx:cxx_compile_static1] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI107032_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108674)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<107257>varname = (aux_uncurry<107258>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI107257_r = _fI107258_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<107257>ref;
      {
      void** _tmp108675 = (void**)&_vI107257_r;
      _rev(((_tmp108675)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2357, cols 7 to 8
      //PKGCONFIG_PATH<107026>varname = r<107257>varname;
      _vI107026_PKGCONFIG_PATH = _vI107257_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2358, cols 7 to 87
      //allargs<107016>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<107026>varname, "--field=cflags")), "--keepleftmost")), pkgs<107032>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI107016_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI107026_PKGCONFIG_PATH, ::std::string("--field=cflags"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI107032_pkgs)) /* apply_stack */, ptrflx_processing->_vI107004_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2359, cols 7 to 62
      //_genout_urv99333<107268> := (flx_pkgconfig<68435>stackfun allargs<107016>varname);
      _vI107268__genout_urv99333  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI107016_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2359, cols 7 to 62
      //_ds2_66081<107020>varname = _genout_urv99333<107268>varname;
      _vI107020__ds2_66081 = _vI107268__genout_urv99333; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2359, cols 7 to 62
      //ret<107022>varname = apply((prj0:int * list -> int), _ds2_66081<107020>varname);
      _vI107022_ret = _vI107020__ds2_66081.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2359, cols 7 to 62
      //mycflags<107015>varname = apply((prj1:int * list -> list), _ds2_66081<107020>varname);
      _vI107015_mycflags = _vI107020__ds2_66081.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2364, cols 7 to 11
      if(!(!((_vI107022_ret == 0)) ) ) goto _ifdoelse_bootflx_65909_L107031;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_compile_static1] Error ", (str<80203>primfun[int] ret<107022>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<107016>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108676 = (((::std::string("[flx:cxx_compile_static1] Error ") + ::flx::rtl::strutil::str<int>(_vI107022_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI107016_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108676)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2363, cols 9 to 25
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2364, cols 7 to 11
    _ifdoelse_bootflx_65909_L107031:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2365, cols 7 to 27
      //pkg_cflags<107017>varname = mycflags<107015>varname;
      _vI107017_pkg_cflags = _vI107015_mycflags; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2366, cols 5 to 9
    _ifdoelse_bootflx_65907_L107030:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 22 to 36
      //cxx_compile_static1'2_mv_66083<107271> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107271_cxx_compile_static1__apos_2_mv_66083  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      if(!(_vI107271_cxx_compile_static1__apos_2_mv_66083%2==1) ) goto _ml66085_L107270;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      goto _end_hash_13970270;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _ml66085_L107270:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _end_hash_13970270:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 22 to 36
      //cxx_compile_static1'2_mv_66083<107275> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107275_cxx_compile_static1__apos_2_mv_66083  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      if(!(_vI107275_cxx_compile_static1__apos_2_mv_66083%2==1) ) goto _ml66085_L107274;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      //_urv99365<107273> := echoln<107006>closure;
      _vI107273__urv99365  = (FLX_NEWP(_pI107006_echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      goto _end_hash_877109298;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _ml66085_L107274:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      //_urv99365<107273> := debugln<107005>closure;
      _vI107273__urv99365  = (FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _end_hash_877109298:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 22 to 36
      //cxx_compile_static1'2_mv_66083<107279> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107279_cxx_compile_static1__apos_2_mv_66083  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      if(!(_vI107279_cxx_compile_static1__apos_2_mv_66083%2==1) ) goto _ml66085_L107278;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      goto _end_hash_518566371;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _ml66085_L107278:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _end_hash_518566371:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 22 to 36
      //cxx_compile_static1'2_mv_66083<107283> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107283_cxx_compile_static1__apos_2_mv_66083  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      if(!(_vI107283_cxx_compile_static1__apos_2_mv_66083%2==1) ) goto _ml66085_L107282;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
      goto _end_hash_646707421;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _ml66085_L107282:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2374, cols 19 to 77
    _end_hash_646707421:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2377, cols 5 to 6
      //tc<107021>varname = apply(toolchain<68911>varname, ( ccflags:(join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), pkg_cflags<107017>varname)), debugln:_urv99365<107273>varname, dynamic_libraries:apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), header_search_dirs:(join_uncurry<89534>stackfun (apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), apply((prj23:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname))), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), macros:apply((prj46:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname)));
      _vI107021_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.CCFLAGS, _vI107017_pkg_cflags)) /* apply_stack */, _vI107273__urv99365, ptrflx_processing->_vI106705_dflt_clang_config.dynamic_libraries, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_RTL_DIRS, ptrflx_processing->_vI107004_control.EXTRA_INCLUDE_DIRS)) /* apply_stack */, ptrflx_processing->_vI106705_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI107004_control.MACROS, ptrflx_processing->_vI106705_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2387, cols 5 to 9
      //_genout_urv99410<107285> := (cxx_depcheck<66985>stackfun (tc<107021>varname, src<107019>varname, dst<107018>varname));
      _vI107285__genout_urv99410  = cxx_depcheck(FLX_FPAR_PASS_ONLY)
      .apply(_tt108175(_vI107021_tc, _vI107019_src, _vI107018_dst)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2387, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.RECOMPILE == 1) || !_vI107285__genout_urv99410  ) ) goto _ifdoend_bootflx_65910_L107024;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2379, cols 7 to 67
      //result<107023>varname = apply(apply((prj7:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),src:(string)) -> int), tc<107021>varname), ( dst:dst<107018>varname, src:src<107019>varname));
      _vI107023_result = (_vI107021_tc.cxx_static_object_compiler)->clone()
      ->apply(_art107759(_vI107018_dst, _vI107019_src)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _end_99420_L107293;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107292>ref;
      {
      __timeb64* _tmp108677 = (__timeb64*)&_vI107292_tv;
      _ftime64_s(((_tmp108677)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107291> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107292>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107292>varname)), literal[double]("1.0e3")))));
      _vI107291__genout_urv96124  = (static_cast<double>((_vI107292_tv.time))) + ((static_cast<double>((_vI107292_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107286>varname = (-<80547>primfun[double] (_genout_urv96124<107291>varname, t0<107036>varname));
      _vI107286_elapsed = _vI107291__genout_urv96124 - _vI107036_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107287>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107286>varname, literal[double]("60.0"))));
      _vI107287_minutes = ::std::floor((_vI107286_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107288>varname = (-<80547>primfun[double] (elapsed<107286>varname, (*<80818>primfun[double] (minutes<107287>varname, literal[double]("60.0")))));
      _vI107288_seconds = _vI107286_elapsed - (_vI107287_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107287>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107288>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Static c++   : ", src<107019>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108678 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107287_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107288_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Static c++   : ") + _vI107019_src ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108678)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2380, cols 7 to 41
    _end_99420_L107293:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2383, cols 7 to 11
      if(!(!((_vI107023_result == 0)) ) ) goto _ifdoelse_bootflx_65913_L107033;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ compilation ", src<107019>varname)), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108679 = ((::std::string("[flx] C++ compilation ") + _vI107019_src ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108679)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2383, cols 7 to 11
    _ifdoelse_bootflx_65913_L107033:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2384, cols 7 to 20
      //return result<107023>varname;: type int
      return _vI107023_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2387, cols 5 to 9
    _ifdoend_bootflx_65910_L107024:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2386, cols 7 to 15
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2389,3,2389,4); // HACK! 
}

//------------------------------
//FUNCTION <97202>: flx_pkgconfig::handle_pkg::aux_uncurry: Apply method
void* _fI97202_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97203_x_uncurry = _arg.data[0];
  _vI97204_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97211:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97207> := x_uncurry<97203>varname;
      _vI97207_aux__apos_2_mv_1387  = _vI97203_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97207_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97206;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97204>varname;: type void*
      return _vI97204_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97206:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97207_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97210__lam_1391)(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L97205;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97208>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97207>varname));
      _vI97208_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97207_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97209>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97207>varname));
      _vI97209_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97207_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97204> := (Snoc<80397>struct (y<97204>varname, h_param_std_1269<97208>varname));
      _vI97204_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97204_y, _vI97208_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97203> := t_param_std_1268<97209>varname;
      _vI97203_x_uncurry  = _vI97209_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97211;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97205:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <66608>: toolchain_gcc_osx::executable_extension: Apply method
_a14239t_107672 _fI66608_executable_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 972, cols 3 to 43
      //return "";: type _a14239t_107672
      return ::std::string("");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",972,3,972,43); // HACK! 
}

//------------------------------
//FUNCTION <93308>: toolchain_msvc_win32::aux_uncurry: Apply method
void* _fI93308_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93309_inp_uncurry = _arg.data[0];
  _vI93310_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93317:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93313> := inp_uncurry<93309>varname;
      _vI93313_aux__apos_2_mv_1381  = _vI93309_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93313_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93312;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93310>varname;: type void*
      return _vI93310_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93312:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93313_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93316__lam_1385)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml1384_L93311;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93314>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93313>varname));
      _vI93314_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93313_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93315>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93313>varname));
      _vI93315_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93313_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93310> := (Snoc<80397>struct (out<93310>varname, (_lam_66229<66318>stackfun h_param_std_1267<93314>varname)));
      _vI93310_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93310_out, _lam_66229(ptrtoolchain_msvc_win32)
      .apply(_vI93314_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93309> := t_param_std_1266<93315>varname;
      _vI93309_inp_uncurry  = _vI93315_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93317;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93311:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66297>: toolchain_msvc_win32::dynamic_object_extension: Apply method
_a14239t_107672 dynamic_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1738, cols 3 to 59
      //return "_dynamic.obj";: type _a14239t_107672
      return ::std::string("_dynamic.obj");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1738,3,1738,59); // HACK! 
}

//------------------------------
//FUNCTION <97090>: flx_pkgconfig::handle_pkg::_lam_65277::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97090__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <66717>: toolchain_clang_linux::c_dependency_generator: Apply method
_tt107757 _fI66717_c_dependency_generator::apply(_art107756 const &_arg ){
  _vI66722_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1244, cols 6 to 7
      //_ds2_66187<66719>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:c_compiler<66683>varname, CCFLAGS:(Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), "-MM")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj0:record(src:(string)) -> string), spec<66722>varname)));
      _ds2_66187 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_clang_linux->_vI66683_c_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_linux->_vI66768_config.ccflags, ::std::string("-MM")))), ptrtoolchain_clang_linux->_vI66768_config.header_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.macros, ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66722_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1244, cols 6 to 7
      //result<66720>varname = apply((prj0:int * string -> int), _ds2_66187<66719>varname);
      _vI66720_result = _ds2_66187.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1244, cols 6 to 7
      //data<66721>varname = apply((prj1:int * string -> string), _ds2_66187<66719>varname);
      _vI66721_data = _ds2_66187.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1245, cols 6 to 25
      //return (result<66720>varname, data<66721>varname);: type _tt107757
      return _tt107757(_vI66720_result, _vI66721_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1246,3,1246,4); // HACK! 
}

//------------------------------
//FUNCTION <68435>: flx_pkgconfig: Apply method
_tt107751 flx_pkgconfig::apply(void* const &_arg ){
  _vI68729_args = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 122, cols 5 to 44
      //path<68480>varname = (getenv<80578>primfun[Win32] "PKG_CONFIG_PATH");
      _vI68480_path = ::flx::rtl::strutil::atostr(std::getenv((::std::string("PKG_CONFIG_PATH")).c_str())); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 125, cols 5 to 31
      //fields<68481>varname = Empty<80385>varname;
      fields = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 126, cols 5 to 29
      //pkgs<68482>varname = Empty<80385>varname;
      pkgs = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 128, cols 5 to 21
      //hide<68483>varname = (case 0 of bool);
      hide = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 129, cols 5 to 34
      //require_pkg_exists<68484>varname = (case 1 of bool);
      require_pkg_exists = 1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 130, cols 5 to 24
      //missing<68485>varname = (case 0 of bool);
      missing = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 132, cols 5 to 34
      //recfields<68487>varname = Empty<80385>varname;
      recfields = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 133, cols 5 to 23
      //dolist<68488>varname = (case 0 of bool);
      dolist = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 134, cols 5 to 25
      //listkeys<68489>varname = (case 0 of bool);
      listkeys = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 135, cols 5 to 24
      //return_code<68490>varname = 0;
      return_code = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 136, cols 5 to 26
      //backwards<68491>varname = (case 0 of bool);
      backwards = 0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 138, cols 5 to 27
      //keep<68499>varname = keepleftmost<68495>varname;
      keep = /*VR_int*/1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 139, cols 5 to 26
      //extension<68500>varname = "fpc";
      extension = ::std::string("fpc"); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 223, cols 5 to 6
      //run procedure stackcall parse_args<68513>stackproc  args<68729>varname;
      {
      parse_args(FLX_FPAR_PASS this)
      .stack_call(_vI68729_args);
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 240, cols 5 to 59
      //dirs<68597>varname = (reattach_drive_letters<68582>stackfun (aux_uncurry<97888>stackfun ((aux<97875>stackfun (path<68480>varname, Empty<80385>varname)), Empty<80385>varname)));
      dirs = reattach_drive_letters(FLX_FPAR_PASS this)
      .apply(_fI97888_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_fI97875_aux(FLX_FPAR_PASS this)
      .apply(_tt107698(_vI68480_path, (void* /*VR_nullptr*/ )0)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 244, cols 5 to 31
      //result<68598>varname = Empty<80385>varname;
      _vI68598_result = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
    continue__ll_flx_pkgconfig_11162_L68730:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //is_empty_mv_1368<97904> := pkgs<68482>varname;
      is_empty_mv_1368  = pkgs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
      if(!(FLX_VNI(is_empty_mv_1368)==0) ) goto _ml1370_L97903;
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //_urv97901<97901> := (case 1 of bool);
      _urv97901  = 1; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      goto _end_inline_is_empty_97906_L97906;
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
    _ml1370_L97903:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 262, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //_urv97901<97901> := (case 0 of bool);
      _urv97901  = 0; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
    _end_inline_is_empty_97906_L97906:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
      if(FLX_UNLIKELY(_urv97901)) goto break__ll_flx_pkgconfig_11162_L68731;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 370, cols 13 to 16
      //flx_pkgconfig_mv_65302<97907> := pkgs<68482>varname;
      flx_pkgconfig_mv_65302  = pkgs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 371, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 371, cols 9 to 14
      if(!(FLX_VNI(flx_pkgconfig_mv_65302)==0) ) goto _ml65304_L97912;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
      goto continue__ll_flx_pkgconfig_11162_L68730;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 371, cols 9 to 14
    _ml65304_L97912:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 9 to 23
/*match case 2:|Cons (pkg_param_bootflx_65209, tail_param_bootflx_65210)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 9 to 23
      if(!andthen(!!flx_pkgconfig_mv_65302 , (FLX_NEWP(_lam_65308)(FLX_FPAR_PASS this))) ) goto _ml65306_L97913;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 19 to 22
      //tail_param_bootflx_65210<97909>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] flx_pkgconfig_mv_65302<97907>varname));
      tail_param_bootflx_65210 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(flx_pkgconfig_mv_65302))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 15 to 17
      //pkg_param_bootflx_65209<97910>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] flx_pkgconfig_mv_65302<97907>varname));
      pkg_param_bootflx_65209 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(flx_pkgconfig_mv_65302))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 375, cols 11 to 21
      //pkgs<68482>varname = tail_param_bootflx_65210<97909>varname;
      pkgs = tail_param_bootflx_65210; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      //run procedure directcall handle_pkg<68646>directproc (pkg_param_bootflx_65209<97910>varname, Empty<80385>varname);
      {
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(handle_pkg)(FLX_FPAR_PASS this))
          ->call(0, _tt107698(pkg_param_bootflx_65209, (void* /*VR_nullptr*/ )0));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller flx_pkgconfig\n");
            fprintf(stderr,"Calls  handle_pkg\n");
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
      goto continue__ll_flx_pkgconfig_11162_L68730;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 9 to 23
    _ml65306_L97913:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 378, cols 7 to 10
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 378, cols 7 to 10
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",378,7,378,10);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",378,7,378,10);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
      goto continue__ll_flx_pkgconfig_11162_L68730;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 380, cols 5 to 9
    break__ll_flx_pkgconfig_11162_L68731:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 384, cols 5 to 31
      //return (return_code<68490>varname, result<68598>varname);: type _tt107751
      return _tt107751(return_code, _vI68598_result);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",385,3,385,4); // HACK! 
}

//------------------------------
//FUNCTION <89466>: generic_cxx_compile_for_static_uncurry: Apply method
int generic_cxx_compile_for_static_uncurry::apply(_tt107805 const &_arg ){
  _vI89682_spec_uncurry = _arg.mem_0;
  _vI89678_src = _arg.mem_1;
  _vI89679_dst = _arg.mem_2;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93635>varname = (aux_uncurry<93636>stackfun (apply((prj2:record(CCFLAGS:(list),CCOBJ_STATIC_LIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89682>varname), Empty<80385>varname));
      _vI93635_r = _fI93636_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89682_spec_uncurry.INCLUDE_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93635>ref;
      {
      void** _tmp108685 = (void**)&_vI93635_r;
      _rev(((_tmp108685)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93656>varname = (aux_uncurry<93657>stackfun (apply((prj3:record(CCFLAGS:(list),CCOBJ_STATIC_LIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89682>varname), Empty<80385>varname));
      _vI93656_r = _fI93657_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89682_spec_uncurry.MACROS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93656>ref;
      {
      void** _tmp108686 = (void**)&_vI93656_r;
      _rev(((_tmp108686)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 213, cols 5 to 6
      //cmd<89675>varname = (Snoc<80397>struct ((+<80787>stackfun ((join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (apply((prj0:record(CCFLAGS:(list),CCOBJ_STATIC_LIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89682>varname), r<93635>varname)), r<93656>varname)), src<89678>varname)), apply((prj1:record(CCFLAGS:(list),CCOBJ_STATIC_LIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89682>varname)));
      _vI89675_cmd = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI89682_spec_uncurry.CCFLAGS, _vI93635_r)) /* apply_stack */, _vI93656_r)) /* apply_stack */, _vI89678_src)) /* apply_stack */, _vI89682_spec_uncurry.CCOBJ_STATIC_LIB))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93679>varname = (aux_uncurry<93680>stackfun (cmd<89675>varname, Empty<80385>varname));
      _vI93679_r = _fI93680_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89675_cmd, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93679>ref;
      {
      void** _tmp108687 = (void**)&_vI93679_r;
      _rev(((_tmp108687)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 216, cols 5 to 6
      //CMD<89676>varname = (+<14305>primfun ((+<14305>primfun ((cat_uncurry<89509>stackfun (" ", r<93679>varname)), " ")), (+<14305>primfun (apply((prj4:record(CCFLAGS:(list),CCOBJ_STATIC_LIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89682>varname), (+<14305>primfun ((+<14305>primfun (""", dst<89679>varname)), """))))));
      _vI89676_CMD = (cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI93679_r)) /* apply_stack */ + ::std::string(" ") ) + (_vI89682_spec_uncurry.SPEC_OBJ_FILENAME + ((::std::string("\"") + _vI89679_dst ) + ::std::string("\"") ) ) ; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 218, cols 5 to 37
      //run procedure call apply((prj5:record(CCFLAGS:(list),CCOBJ_STATIC_LIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> string -> void), spec_uncurry<89682>varname) (+<14305>primfun ("C++ command=", CMD<89676>varname));
      {
        ::flx::rtl::con_t *_p = (_vI89682_spec_uncurry.debugln)->clone()
      ->call(0, ::std::string("C++ command=") + _vI89676_CMD );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L93727;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", CMD<89676>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108688 = (::std::string("[system] ") + _vI89676_CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108688)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L93727:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93734<93734> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", CMD<89676>varname)), """)));
      _genout_urv93734  = ::std::system(((::std::string("\"") + _vI89676_CMD ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<93731> := _genout_urv93734<93734>varname;
      _vI93731__genout_urv93723  = _genout_urv93734; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<93730> := _genout_urv93723<93731>varname;
      _vI93730__genout_urv93715  = _vI93731__genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<93729> := _genout_urv93715<93730>varname;
      _vI93729__genout_urv93710  = _vI93730__genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93725<93725> := _genout_urv93710<93729>varname;
      _genout_urv93725  = _vI93729__genout_urv93710; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 219, cols 5 to 35
      //result<89677>varname = _genout_urv93725<93725>varname;
      _vI89677_result = _genout_urv93725; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 223, cols 5 to 9
      if(!(!((_vI89677_result == 0)) ) ) goto _ifdoelse_bootflx_65396_L89681;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("C++ compilation ", src<89678>varname)), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108689 = ((::std::string("C++ compilation ") + _vI89678_src ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108689)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 223, cols 5 to 9
    _ifdoelse_bootflx_65396_L89681:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 224, cols 5 to 18
      //return result<89677>varname;: type int
      return _vI89677_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",226,3,226,4); // HACK! 
}

//------------------------------
//FUNCTION <105445>: FlxPkgConfigQuery::getpkgfield_uncurry::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI105445__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <66541>: toolchain_gcc_linux::cxx_dependency_generator: Apply method
_tt107757 _fI66541_cxx_dependency_generator::apply(_art107756 const &_arg ){
  _vI66546_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 777, cols 6 to 7
      //_ds2_66192<66543>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:cxx_compiler<66502>varname, CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), "-std=gnu++11")), "-D_POSIX")), "-MM")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj0:record(src:(string)) -> string), spec<66546>varname)));
      _ds2_66192 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_gcc_linux->cxx_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_linux->_vI66586_config.ccflags, ::std::string("-std=gnu++11")))), ::std::string("-D_POSIX")))), ::std::string("-MM")))), ptrtoolchain_gcc_linux->_vI66586_config.header_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.macros, ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66546_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 777, cols 6 to 7
      //result<66544>varname = apply((prj0:int * string -> int), _ds2_66192<66543>varname);
      _vI66544_result = _ds2_66192.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 777, cols 6 to 7
      //data<66545>varname = apply((prj1:int * string -> string), _ds2_66192<66543>varname);
      _vI66545_data = _ds2_66192.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 778, cols 6 to 25
      //return (result<66544>varname, data<66545>varname);: type _tt107757
      return _tt107757(_vI66544_result, _vI66545_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",779,3,779,4); // HACK! 
}

//------------------------------
//FUNCTION <66550>: toolchain_gcc_linux::c_static_object_compiler: Apply method
int _fI66550_c_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66553_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 798, cols 5 to 6
      //result<66552>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:(Snoc<80397>struct (base_c_compile_flags<66505>varname, "-fvisibility=hidden")), CCOBJ_STATIC_LIB:c_compiler<66501>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66553>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66553>varname)));
      _vI66552_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_linux->_vI66505_base_c_compile_flags, ::std::string("-fvisibility=hidden")))), ptrtoolchain_gcc_linux->c_compiler, ptrtoolchain_gcc_linux->_vI66586_config.header_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.macros, ::std::string("-o "), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66553_spec.src, _vI66553_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 799, cols 5 to 18
      //return result<66552>varname;: type int
      return _vI66552_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",800,3,800,4); // HACK! 
}

//------------------------------
//FUNCTION <68294>: run_felix_compiler::_lam_65388: Apply method
_a14239t_107672 _lam_65388::apply(_a14239t_107672 const &_arg ){
  _vI68296_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 359, cols 12 to 35
      //return (+<14305>primfun ("-I", s<68296>varname));: type _a14239t_107672
      return ::std::string("-I") + _vI68296_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",359,12,359,35); // HACK! 
}

//------------------------------
//FUNCTION <66914>: toolchain_clang_osx::dynamic_object_extension: Apply method
_a14239t_107672 _fI66914_dynamic_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1463, cols 3 to 57
      //return "_dynamic.o";: type _a14239t_107672
      return ::std::string("_dynamic.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1463,3,1463,57); // HACK! 
}

//------------------------------
//FUNCTION <92896>: toolchain_msvc_win32::dependency_parser::_lam_66253: Apply method
 ::flx::rtl::cl_t _lam_66253::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1831,4,1831,8); // HACK! 
}

//------------------------------
//FUNCTION <95769>: str::_lam_1579: Apply method
 ::flx::rtl::cl_t _lam_1579::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 704, cols 9 to 18
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",704,9,704,18); // HACK! 
}

//------------------------------
//FUNCTION <66509>: toolchain_gcc_linux::host_os: Apply method
_a14239t_107672 _fI66509_host_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 732, cols 3 to 35
      //return "LINUX";: type _a14239t_107672
      return ::std::string("LINUX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",732,3,732,35); // HACK! 
}

//------------------------------
//FUNCTION <105838>: flx_processing::ocaml_compile: Apply method
int ocaml_compile::apply(_pt107743* const &_arg ){
  _vI105843_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2413, cols 5 to 29
      //deps<105839>varname = Empty<80385>varname;
      _vI105839_deps = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<106334> := apply((prj79:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname);
      _vI106334_xs  = ptrflx_processing->_vI106023_control.ocamls; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv99486<106333> := iterator'2<106335>closure;
      _genout_urv99486  = (FLX_NEWP(_fI106335_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      //_generator_flx_2665<105840>varname = _genout_urv99486<106333>varname;
      _generator_flx_2665 = _genout_urv99486; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
    continue__ll_flx_2632_L105844:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      //ocaml_compile_mv_66087<105723> := apply(_generator_flx_2665<105840>varname, ());
      ocaml_compile_mv_66087  = (_generator_flx_2665)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
/*match case 1:|Some src_param_bootflx_65917*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      if(!andthen(FLX_VNI(ocaml_compile_mv_66087)==1, (FLX_NEWP(_lam_66090)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66089_L105852;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      //src_param_bootflx_65917<105841>varname = (arg of case 1 of ocaml_compile_mv_66087<105723>varname);
      src_param_bootflx_65917 = *((_a14239t_107672*)FLX_VNP(ocaml_compile_mv_66087)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2427, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(src_param_bootflx_65917,- ::std::string(".cmi").size() ,src_param_bootflx_65917.size()) == ::std::string(".cmi")) || (::flx::rtl::strutil::substr(src_param_bootflx_65917,- ::std::string(".cmx").size() ,src_param_bootflx_65917.size()) == ::std::string(".cmx")) ) ) goto _ifdoend_bootflx_65918_L105845;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &deps<105839>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &deps<105839>ref), src_param_bootflx_65917<105841>varname));
      *((void**)&_vI105839_deps)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI105839_deps) , src_param_bootflx_65917)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto continue__ll_flx_2632_L105844;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2427, cols 7 to 11
    _ifdoend_bootflx_65918_L105845:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1962, cols 1 to 2
      //_genout_urv99636<106347> := dxqt'2<106348>closure;
      _genout_urv99636  = (FLX_NEWP(_fI106348_dxqt__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2406, cols 5 to 60
      //xqt<106345>varname = _genout_urv99636<106347>varname;
      xqt = _genout_urv99636; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2407, cols 5 to 65
      //result<106346>varname = apply(xqt<106345>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("ocamlopt.opt -c ", (cat_uncurry<89509>stackfun (" ", deps<105839>varname)))), " ")), src_param_bootflx_65917<105841>varname)));
      _vI106346_result = (xqt)->clone()
      ->apply(((::std::string("ocamlopt.opt -c ") + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI105839_deps)) /* apply_stack */ ) + ::std::string(" ") ) + src_param_bootflx_65917 ) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2408, cols 5 to 27
      // primcall ignore<82871>primproc[string] result<106346>varname;
      (void)_vI106346_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2420, cols 9 to 56
      //result<105842>varname = 0;
      _vI105842_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2421, cols 9 to 37
      if(!(!((_vI105842_result == 0)) ) ) goto _ifdoend_bootflx_65920_L105846;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2421, cols 9 to 37
      //return result<105842>varname;: type int
      return _vI105842_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2421, cols 9 to 37
    _ifdoend_bootflx_65920_L105846:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2426, cols 9 to 13
      if(!((::flx::rtl::strutil::substr(src_param_bootflx_65917,- ::std::string(".mli").size() ,src_param_bootflx_65917.size()) == ::std::string(".mli"))) ) goto _ifdoend_bootflx_65922_L105847;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &deps<105839>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &deps<105839>ref), (+<14305>primfun ((subscript<14360>stackfun (src_param_bootflx_65917<105841>varname, (Slice_to_incl<82847>struct -5))), ".cmi"))));
      *((void**)&_vI105839_deps)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI105839_deps) , subscript(FLX_FPAR_PASS_ONLY)
      .apply(_tt108173(src_param_bootflx_65917, ::flx::rtl::_uctor_(3, new(*PTF gcp, int_ptr_map, true) int (-5)))) /* apply_stack */ + ::std::string(".cmi") )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto continue__ll_flx_2632_L105844;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2426, cols 9 to 13
    _ifdoend_bootflx_65922_L105847:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2425, cols 9 to 36
      if(!((::flx::rtl::strutil::substr(src_param_bootflx_65917,- ::std::string(".ml").size() ,src_param_bootflx_65917.size()) == ::std::string(".ml"))) ) goto continue__ll_flx_2632_L105844;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &deps<105839>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &deps<105839>ref), (+<14305>primfun ((subscript<14360>stackfun (src_param_bootflx_65917<105841>varname, (Slice_to_incl<82847>struct -4))), ".cmi"))));
      *((void**)&_vI105839_deps)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI105839_deps) , subscript(FLX_FPAR_PASS_ONLY)
      .apply(_tt108173(src_param_bootflx_65917, ::flx::rtl::_uctor_(3, new(*PTF gcp, int_ptr_map, true) int (-4)))) /* apply_stack */ + ::std::string(".cmi") )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto continue__ll_flx_2632_L105844;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto continue__ll_flx_2632_L105844;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
    _ml66089_L105852:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      if(!(FLX_VNI(ocaml_compile_mv_66087)==0) ) goto _ml66091_L105853;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto _em66087_L105854;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
    _ml66091_L105853:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2428,5,2428,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2428,5,2428,9);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
    _em66087_L105854:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2429, cols 5 to 13
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2430,2,2430,3); // HACK! 
}

//------------------------------
//FUNCTION <96506>: flx_pkgconfig::tail_val::aux::_lam_1502: Apply method
 ::flx::rtl::cl_t _lam_1502::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",579,9,579,17); // HACK! 
}

//------------------------------
//FUNCTION <97995>: map_package_requirements_uncurry::_lam_65103::_lam_65103'2::aux::_lam_2289: Apply method
 ::flx::rtl::cl_t _fI97995__lam_2289::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,9,478,14); // HACK! 
}

//------------------------------
//C FUNC <17011>: mk_absolute_filename
_a14239t_107672 mk_absolute_filename(_a14239t_107672 _vI17015_s){
   ::flx::rtl::cl_t getcwd_mv_2864;
  char* _vI93556_p;
  _at107836 _vI93555_b;
  _a14239t_107672 _urv93544;
   ::flx::rtl::cl_t mk_absolute_filename_mv_2869;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 139, cols 5 to 6
      //mk_absolute_filename_mv_2869<93552> := (lor<5213>primfun ((==<81352>primfun[char] ((subscript<81183>primfun[int] (s<17015>varname, 0)), (subscript<81183>primfun[int] ("\", 0)))), (land<5211>primfun ((==<81352>primfun[char] ((subscript<81183>primfun[int] (s<17015>varname, 1)), (subscript<81183>primfun[int] (":", 0)))), (==<81352>primfun[char] ((subscript<81183>primfun[int] (s<17015>varname, 2)), (subscript<81183>primfun[int] ("\", 0))))))));
      mk_absolute_filename_mv_2869  = (::flx::rtl::strutil::subscript(_vI17015_s,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0)) || ((::flx::rtl::strutil::subscript(_vI17015_s,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0)) && (::flx::rtl::strutil::subscript(_vI17015_s,2) == ::flx::rtl::strutil::subscript(::std::string("\\"),0)) ) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1124, cols 8 to 26
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1124, cols 8 to 26
      if(!(mk_absolute_filename_mv_2869%2==1) ) goto _ml2871_L93553;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1124, cols 8 to 26
      //return s<17015>varname;: type _a14239t_107672
      return _vI17015_s;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1124, cols 8 to 26
    _ml2871_L93553:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1124, cols 8 to 26
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1111, cols 7 to 47
      //p<93556>varname = (getcwd<16994>primfun ((stl_begin<85493>primfun[char, 1024] &b<93555>ref), (_ctor_size<80270>primfun[int] 1024)));
      _vI93556_p = _getcwd(((char*)(((_at107836*)&_vI93555_b)->data)),(int)(static_cast<_a5094t_107688>(1024)/*int.flx: ctor size from _a5094t_107688*/)); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1112, cols 17 to 32
      //getcwd_mv_2864<93557> := (isNULL<85494>primfun[char] p<93556>varname);
      getcwd_mv_2864  = (0==_vI93556_p); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1112, cols 14 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1112, cols 14 to 54
      if(!(getcwd_mv_2864%2==1) ) goto _ml2866_L93558;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1112, cols 14 to 54
      //_urv93544<93554> := "";
      _urv93544  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1112, cols 14 to 54
      goto _end_inline_getcwd_93550_L93559;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1112, cols 14 to 54
    _ml2866_L93558:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1112, cols 14 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1112, cols 14 to 54
      //_urv93544<93554> := (_ctor_string<14330>primfun p<93556>varname);
      _urv93544  = ::std::string(_vI93556_p); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1113, cols 5 to 6
    _end_inline_getcwd_93550_L93559:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1124, cols 8 to 26
      //return (+<14305>primfun ((+<14305>primfun (_urv93544<93554>varname, "\")), s<17015>varname));: type _a14239t_107672
      return (_urv93544 + ::std::string("\\") ) + _vI17015_s ;
}
//------------------------------
//FUNCTION <106141>: flx_processing::cal_time_from_flxdepfile::aux_uncurry: Apply method
double _fI106141_aux_uncurry::apply(_tt108078 const &_arg ){
  _vI106142_init_uncurry = _arg.mem_0;
  _vI106143_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_98507_L106150:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<106146> := x<106143>varname;
      _vI106146_aux__apos_2_mv_1356  = _vI106143_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI106146_aux__apos_2_mv_1356)==0) ) goto _ml1358_L106145;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<106142>varname;: type double
      return _vI106142_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L106145:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI106146_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI106149__lam_1360)(FLX_FPAR_PASS this, ptrcal_time_from_flxdepfile, ptrflx_processing))) ) goto _ml1359_L106144;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<106147>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<106146>varname));
      _vI106147_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI106146_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<106148>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<106146>varname));
      _vI106148_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI106146_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<106143> := t_param_std_1258<106148>varname;
      _vI106143_x  = _vI106148_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<106142> := apply((maxf<105762>flxfun init_uncurry<106142>varname), h_param_std_1259<106147>varname);
      _vI106142_init_uncurry  = ((FLX_NEWP(_fI105762_maxf)(FLX_FPAR_PASS ptrcal_time_from_flxdepfile, ptrflx_processing))
      ->apply(_vI106142_init_uncurry))->clone()
      ->apply(_vI106147_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_98507_L106150;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L106144:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <107258>: flx_processing::cxx_compile_static1_uncurry::aux_uncurry: Apply method
void* _fI107258_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107259_inp_uncurry = _arg.data[0];
  _vI107260_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L107267:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<107263> := inp_uncurry<107259>varname;
      _vI107263_aux__apos_2_mv_1381  = _vI107259_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI107263_aux__apos_2_mv_1381)==0) ) goto _ml1383_L107262;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<107260>varname;: type void*
      return _vI107260_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L107262:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI107263_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI107266__lam_1385)(FLX_FPAR_PASS this, ptr_fI107014_cxx_compile_static1_uncurry, ptrflx_processing))) ) goto _ml1384_L107261;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<107264>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<107263>varname));
      _vI107264_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI107263_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<107265>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<107263>varname));
      _vI107265_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI107263_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<107260> := (Snoc<80397>struct (out<107260>varname, (_lam_66080<107029>stackfun h_param_std_1267<107264>varname)));
      _vI107260_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107260_out, _fI107029__lam_66080(ptr_fI107014_cxx_compile_static1_uncurry, ptrflx_processing)
      .apply(_vI107264_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<107259> := t_param_std_1266<107265>varname;
      _vI107259_inp_uncurry  = _vI107265_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L107267;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L107261:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <107359>: flx_processing::ocaml_compile::dxqt'2::_lam_66015: Apply method
 ::flx::rtl::cl_t _fI107359__lam_66015::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1949,9,1949,14); // HACK! 
}

//------------------------------
//C FUNC <86154>: _fI86154_flx_dlsym
_tt108003 _fI86154_flx_dlsym(FLX_APAR_DECL  _a7876t_107991 _vI86160_linst, _a14239t_107672 _vI86161_sym){
  _cft108002* typed_sym;
  _a5106t_107998 raw_sym;
  _a5106t_107998 _vI86165_tf;
  _a7803t_107993 dlibrary;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1074, cols 5 to 46
      //dlibrary<86164>varname = (get_library<7893>primfun linst<86160>varname);
      dlibrary = _vI86160_linst->lib; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1075, cols 5 to 45
      //tf<86165>varname = (get_thread_frame<7894>primfun linst<86160>varname);
      _vI86165_tf = (void*)_vI86160_linst->thread_frame; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1077, cols 5 to 51
      //raw_sym<86166>varname = (find_sym<7860>stackfun (dlibrary<86164>varname, sym<86161>varname));
      raw_sym = find_sym(FLX_FPAR_PASS_ONLY)
      .apply(_tt108011(dlibrary, _vI86161_sym)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1081, cols 5 to 9
      if(!(0==raw_sym) ) goto _ifdoelse_std_542_L86162;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Unable to load symbol ", sym<86161>varname)), " from library ")), (filename<7891>primfun linst<86160>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108693 = (((::std::string("Unable to load symbol ") + _vI86161_sym ) + ::std::string(" from library ") ) + ::std::string(_vI86160_linst->lib->filename) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108693)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1080, cols 7 to 84
      // primcall raise<86084>primproc[flx_link_failure_t] (_ctor_flx_link_failure_t<7797>primfun ((filename<7891>primfun linst<86160>varname), "dlsym", (+<14305>primfun ("Cannot find symbol ", sym<86161>varname))));
      {
      _a7796t_108012 _tmp108694 = ::flx::rtl::flx_link_failure_t((::std::string(_vI86160_linst->lib->filename)),(::std::string("dlsym")),(::std::string("Cannot find symbol ") + _vI86161_sym ));
      (throw ((_tmp108694)));
      }
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1081, cols 5 to 9
    _ifdoelse_std_542_L86162:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1083, cols 5 to 44
      //typed_sym<86168>varname = (cast<86167>primfun[address * string --> int, address] raw_sym<86166>varname);
      typed_sym = (_cft108002*)(raw_sym); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1084, cols 5 to 25
      //return (typed_sym<86168>varname, tf<86165>varname);: type _tt108003
      return _tt108003(typed_sym, _vI86165_tf);
}
//------------------------------
//FUNCTION <105783>: flx_processing::check_cxx_uptodate: Apply method
 ::flx::rtl::cl_t check_cxx_uptodate::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_98608_L106168;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Check Felix->C++ uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108695 = (::std::string("[flx] ") + ::std::string("Check Felix->C++ uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108695)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2157, cols 5 to 40
    _end_98608_L106168:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2167, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.RECOMPILE == 1)) ) goto _ifdoend_bootflx_65864_L105784;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_98612_L106171;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Felix->C++ dependency checking skipped due to switch RECOMPILE=1: forced not uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108696 = (::std::string("[flx] ") + ::std::string("Felix->C++ dependency checking skipped due to switch RECOMPILE=1: forced not uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108696)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2159, cols 7 to 103
    _end_98612_L106171:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2160, cols 7 to 19
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2167, cols 5 to 9
    _ifdoend_bootflx_65864_L105784:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2166, cols 5 to 19
      if(!((ptrflx_processing->_vI106023_control.CHECK_DEPENDENCIES == 1)) ) goto _ifdoend_bootflx_65866_L105785;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_98616_L106174;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Checking Felix->C++ dependencies since CHECK_DEPENDENCIES=1 to see if the cxx is uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108697 = (::std::string("[flx] ") + ::std::string("Checking Felix->C++ dependencies since CHECK_DEPENDENCIES=1 to see if the cxx is uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108697)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2162, cols 7 to 106
    _end_98616_L106174:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2163, cols 7 to 87
      //return (cal_cxx_uptodate<105774>stackfun (debugln<106024>closure, apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname)));: type  ::flx::rtl::cl_t
      return cal_cxx_uptodate(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107889((FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS ptrflx_processing)), (*ptrflx_processing->_vI68947_config ).FLX_OUTPUT_DIR, ptrflx_processing->_vI105620_dvars.filebase)) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2166, cols 5 to 19
    _ifdoend_bootflx_65866_L105785:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_98620_L106177;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Felix->C++ dependency checking skipped due to switch CHECK_DEPENDENCIES=0: forced uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp108698 = (::std::string("[flx] ") + ::std::string("Felix->C++ dependency checking skipped due to switch CHECK_DEPENDENCIES=0: forced uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108698)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2165, cols 7 to 108
    _end_98620_L106177:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2166, cols 7 to 18
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2168,3,2168,4); // HACK! 
}

//------------------------------
//FUNCTION <106344>: flx_processing::ocaml_compile::_lam_66090: Apply method
 ::flx::rtl::cl_t _lam_66090::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2428,5,2428,9); // HACK! 
}

//------------------------------
//FUNCTION <105246>: flx_processing::dxqt'2::_lam_66015: Apply method
 ::flx::rtl::cl_t _lam_66015::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1949,9,1949,14); // HACK! 
}

//------------------------------

//PROCEDURE <68156:> print_options: Call method
void print_options::stack_call(_art107702 const &_arg){
  ::flx::rtl::con_t *cc = call(0,_arg);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * print_options::call(::flx::rtl::con_t *_ptr_caller, _art107702 const &_arg){
  _caller = _ptr_caller;
  _vI68158_control = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <68156:> print_options: Resume method
::flx::rtl::con_t *print_options::resume(){
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("NOOPTIMISE         = ", (str<80203>primfun[int] apply((prj48:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108699 = (::std::string("NOOPTIMISE         = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.NOOPTIMISE) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108699)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("STATIC             = ", (str<80203>primfun[int] apply((prj64:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108700 = (::std::string("STATIC             = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.STATIC) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108700)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("ECHO               = ", (str<80203>primfun[int] apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108701 = (::std::string("ECHO               = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.ECHO) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108701)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("NOSTDLIB           = ", (str<80203>primfun[int] apply((prj49:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108702 = (::std::string("NOSTDLIB           = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.NOSTDLIB) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108702)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("DEBUG              = ", (str<80203>primfun[int] apply((prj12:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108703 = (::std::string("DEBUG              = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.DEBUG) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108703)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("DEBUG_COMPILER     = ", (str<80203>primfun[int] apply((prj13:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108704 = (::std::string("DEBUG_COMPILER     = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.DEBUG_COMPILER) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108704)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("STDIMPORT          = ", apply((prj67:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<68158>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108705 = (::std::string("STDIMPORT          = ") + _vI68158_control.STDIMPORT ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108705)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("STDGRAMMAR         = ", apply((prj66:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<68158>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108706 = (::std::string("STDGRAMMAR         = ") + _vI68158_control.STDGRAMMAR ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108706)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("IMPORTS            = ", (str<81092>stackfun apply((prj37:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108707 = (::std::string("IMPORTS            = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68158_control.IMPORTS) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108707)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("RECOMPILE          = ", (str<80203>primfun[int] apply((prj56:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108708 = (::std::string("RECOMPILE          = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.RECOMPILE) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108708)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("FLXG_FORCE         = ", (str<80203>primfun[int] apply((prj28:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108709 = (::std::string("FLXG_FORCE         = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.FLXG_FORCE) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108709)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("ocamls              = ", (str<81092>stackfun apply((prj79:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108710 = (::std::string("ocamls              = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68158_control.ocamls) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108710)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("cpps               = ", (str<81092>stackfun apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108711 = (::std::string("cpps               = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68158_control.cpps) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108711)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("cppos              = ", (str<81092>stackfun apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108712 = (::std::string("cppos              = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68158_control.cppos) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108712)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("TIME               = ", (str<80203>primfun[int] apply((prj70:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108713 = (::std::string("TIME               = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.TIME) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108713)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("COMPILER_TIME      = ", (str<80203>primfun[int] apply((prj9:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108714 = (::std::string("COMPILER_TIME      = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.COMPILER_TIME) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108714)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 125, cols 5 to 6
      //str_mv_1070<103581> := apply((prj1:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> opt), control<68158>varname);
      str_mv_1070  = _vI68158_control.BUNDLE_DIR; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 122, cols 9 to 14
/*match case 1:|Some x_param_std_1062*/
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 122, cols 9 to 14
      if(!andthen(FLX_VNI(str_mv_1070)==1, (FLX_NEWP(_lam_1073)(FLX_FPAR_PASS this))) ) goto _ml1072_L103580;
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 122, cols 14 to 14
      //x_param_std_1062<103582>varname = (arg of case 1 of str_mv_1070<103581>varname);
      x_param_std_1062 = *((_a14239t_107672*)FLX_VNP(str_mv_1070)); //assign simple
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 7 to 24
      //_urv103577<103577> := (+<14305>primfun ("Some ", x_param_std_1062<103582>varname));
      _urv103577  = ::std::string("Some ") + x_param_std_1062 ; //init
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 7 to 24
      goto _end_inline_str_103585_L103585;
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 122, cols 9 to 14
    _ml1072_L103580:;
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 9 to 13
      if(!(FLX_VNI(str_mv_1070)==0) ) goto _ml1074_L103579;
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 7 to 24
      //_urv103577<103577> := "None";
      _urv103577  = ::std::string("None"); //init
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 7 to 24
      goto _end_inline_str_103585_L103585;
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 9 to 13
    _ml1074_L103579:;
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 7 to 24
/*match failure*/
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 123, cols 7 to 24
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/core_type_constructors.fdoc",123,7,123,24);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/core_type_constructors.fdoc",123,7,123,24);
;
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 125, cols 5 to 6
    _end_inline_str_103585_L103585:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("BUNDLE_DIR         = ", _urv103577<103577>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108716 = (::std::string("BUNDLE_DIR         = ") + _urv103577 ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108716)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("RUNIT              = ", (str<80203>primfun[int] apply((prj58:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108717 = (::std::string("RUNIT              = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.RUNIT) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108717)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("CCOMPILEIT         = ", (str<80203>primfun[int] apply((prj3:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108718 = (::std::string("CCOMPILEIT         = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.CCOMPILEIT) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108718)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("LINKIT             = ", (str<80203>primfun[int] apply((prj44:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108719 = (::std::string("LINKIT             = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.LINKIT) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108719)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("RUNONLY            = ", (str<80203>primfun[int] apply((prj59:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108720 = (::std::string("RUNONLY            = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.RUNONLY) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108720)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("CXXONLY            = ", (str<80203>primfun[int] apply((prj10:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108721 = (::std::string("CXXONLY            = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.CXXONLY) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108721)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("OCAMLONLY          = ", (str<80203>primfun[int] apply((prj50:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108722 = (::std::string("OCAMLONLY          = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.OCAMLONLY) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108722)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("FELIX              = ", (str<80203>primfun[int] apply((prj26:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108723 = (::std::string("FELIX              = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.FELIX) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108723)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("LINKER_SWITCHES    = ", (str<81092>stackfun apply((prj42:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108724 = (::std::string("LINKER_SWITCHES    = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68158_control.LINKER_SWITCHES) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108724)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("LINKER_OUTPUT_FILENAME = ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<68158>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108725 = (::std::string("LINKER_OUTPUT_FILENAME = ") + _vI68158_control.LINKER_OUTPUT_FILENAME ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108725)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("FLX_INTERFACE_FILENAME = ", apply((prj32:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<68158>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108726 = (::std::string("FLX_INTERFACE_FILENAME = ") + _vI68158_control.FLX_INTERFACE_FILENAME ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108726)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("CXX_INTERFACE_FILENAME = ", apply((prj11:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<68158>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108727 = (::std::string("CXX_INTERFACE_FILENAME = ") + _vI68158_control.CXX_INTERFACE_FILENAME ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108727)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("MACROS             = ", (str<81092>stackfun apply((prj46:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108728 = (::std::string("MACROS             = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68158_control.MACROS) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108728)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("SHOWCODE           = ", (str<80203>primfun[int] apply((prj61:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108729 = (::std::string("SHOWCODE           = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.SHOWCODE) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108729)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("USAGE              = ", apply((prj72:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<68158>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108730 = (::std::string("USAGE              = ") + _vI68158_control.USAGE ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108730)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("DOREDUCE           = ", (str<80203>primfun[int] apply((prj17:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108731 = (::std::string("DOREDUCE           = ") + ::flx::rtl::strutil::str<int>(_vI68158_control.DOREDUCE) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108731)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("OPTIMISE           = ", (str<81092>stackfun apply((prj51:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<68158>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108732 = (::std::string("OPTIMISE           = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68158_control.OPTIMISE) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108732)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 660, cols 1 to 2
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <106635>: flx_processing::run_program_static::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI106635__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <107329>: flx_processing::ocaml_compile::dxqt'2: Apply method
_a14239t_107672 _fI107329_dxqt__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI107336_cmd = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1943, cols 3 to 45
      if(!((ptrflx_processing->_vI107004_control.ECHO == 1) || ptrflx_processing->_vI107004_control.DEBUG_FLX ) ) goto _ifdoelse_bootflx_65827_L107338;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("cmd=", cmd<107336>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108733 = (::std::string("cmd=") + _vI107336_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108733)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1943, cols 3 to 45
    _ifdoelse_bootflx_65827_L107338:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107346>ref;
      {
      __timeb64* _tmp108734 = (__timeb64*)&_vI107346_tv;
      _ftime64_s(((_tmp108734)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99556<107345> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107346>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107346>varname)), literal[double]("1.0e3")))));
      _vI107345__genout_urv99556  = (static_cast<double>((_vI107346_tv.time))) + ((static_cast<double>((_vI107346_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1944, cols 3 to 24
      //now<107330>varname = _genout_urv99556<107345>varname;
      _vI107330_now = _vI107345__genout_urv99556; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_507_L107348;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[get_stdout] ", cmd<107336>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108735 = (::std::string("[get_stdout] ") + _vI107336_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108735)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
    _ifdoelse_std_507_L107348:;
    // # C:/projects/felix/src/packages/program.fdoc: line 812, cols 5 to 32
      //_genout_urv99560<107347> := (basic_get_stdout<82955>stackfun cmd<107336>varname);
      _vI107347__genout_urv99560  = basic_get_stdout(_vI107336_cmd); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //_ds2_66010<107331>varname = _genout_urv99560<107347>varname;
      _vI107331__ds2_66010 = _vI107347__genout_urv99560; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //result<107332>varname = apply((prj0:int * string -> int), _ds2_66010<107331>varname);
      _vI107332_result = _vI107331__ds2_66010.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //output<107333>varname = apply((prj1:int * string -> string), _ds2_66010<107331>varname);
      _vI107333_output = _vI107331__ds2_66010.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      if(!((_vI107332_result == 0)) ) goto _ifdoend_bootflx_65828_L107341;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 61 to 84
      //find_first_of_mv_2165<107355> := (stl_find_first_of<14560>primfun (output<107333>varname, (subscript<81183>primfun[int] ("\x0A", 0))));
      _vI107355_find_first_of_mv_2165  = _vI107333_output.find_first_of((::flx::rtl::strutil::subscript(::std::string("\n"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
/*match case 1:(i_param_std_1916 when (== (i_param_std_1916, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
      if(!((_vI107355_find_first_of_mv_2165 == ::std::string::npos)) ) goto _ml2167_L107357;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      //dxqt'2_mv_66012<107351> := None<81378>varname;
      _vI107351_dxqt__apos_2_mv_66012  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      goto _end_inline_find_first_of_99543_L107358;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
    _ml2167_L107357:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 130 to 130
/*match case 2:i_param_std_1917*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 130 to 130
      //i_param_std_1917<107356>varname = find_first_of_mv_2165<107355>varname;
      _vI107356_i_param_std_1917 = _vI107355_find_first_of_mv_2165; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      //dxqt'2_mv_66012<107351> := (Some<81379>struct i_param_std_1917<107356>varname);
      _vI107351_dxqt__apos_2_mv_66012  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI107356_i_param_std_1917)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 3 to 150
    _end_inline_find_first_of_99543_L107358:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
/*match case 1:|Some n_param_bootflx_65830*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
      if(!andthen(FLX_VNI(_vI107351_dxqt__apos_2_mv_66012)==1, (FLX_NEWP(_fI107359__lam_66015)(FLX_FPAR_PASS this, ptr_fI106819_ocaml_compile, ptrflx_processing))) ) goto _ml66014_L107353;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 14 to 14
      //n_param_bootflx_65830<107352>varname = (arg of case 1 of dxqt'2_mv_66012<107351>varname);
      _vI107352_n_param_bootflx_65830 = *((_a5094t_107688*)FLX_VNP(_vI107351_dxqt__apos_2_mv_66012)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      //_urv99566<107350> := n_param_bootflx_65830<107352>varname;
      _vI107350__urv99566  = _vI107352_n_param_bootflx_65830; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      goto _end_hash_4925595;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
    _ml66014_L107353:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
      if(!(FLX_VNI(_vI107351_dxqt__apos_2_mv_66012)==0) ) goto _ml66016_L107354;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      //_urv99566<107350> := (len<14304>primfun output<107333>varname);
      _vI107350__urv99566  = _vI107333_output.size(); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      goto _end_hash_4925595;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
    _ml66016_L107354:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1950,7,1950,28);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1950,7,1950,28);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
    _end_hash_4925595:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1951, cols 5 to 15
      //n<107334>varname = _urv99566<107350>varname;
      _vI107334_n = _vI107350__urv99566; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1953, cols 5 to 26
      //output<107333>varname = (copyto<81376>primfun[size] (output<107333>varname, n<107334>varname));
      _vI107333_output = ::flx::rtl::strutil::substr(_vI107333_output,0,_vI107334_n); //assign simple
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107362>ref;
      {
      __timeb64* _tmp108737 = (__timeb64*)&_vI107362_tv;
      _ftime64_s(((_tmp108737)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99578<107361> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107362>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107362>varname)), literal[double]("1.0e3")))));
      _vI107361__genout_urv99578  = (static_cast<double>((_vI107362_tv.time))) + ((static_cast<double>((_vI107362_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1954, cols 5 to 36
      //elapsed<107335>varname = (-<80547>primfun[double] (_genout_urv99578<107361>varname, now<107330>varname));
      _vI107335_elapsed = _vI107361__genout_urv99578 - _vI107330_now ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1955, cols 5 to 108
      if(!((ptrflx_processing->_vI107004_control.ECHO == 1) || ptrflx_processing->_vI107004_control.DEBUG_FLX ) ) goto _ifdoelse_bootflx_65829_L107344;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Popen:Elapsed: ", (fmt<80548>stackfun (elapsed<107335>varname, (fixed<5838>struct (9, 3)))))), ", output='")), output<107333>varname)), "'")), "\x0A")));
      {
      _a14239t_107672 _tmp108738 = ((((::std::string("Popen:Elapsed: ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107335_elapsed, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(9, 3))))) /* apply_stack */ ) + ::std::string(", output='") ) + _vI107333_output ) + ::std::string("'") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108738)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      goto _ifdoelse_bootflx_65829_L107344;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      goto _ifdoelse_bootflx_65829_L107344;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
    _ifdoend_bootflx_65828_L107341:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1957, cols 5 to 42
      if(!((ptrflx_processing->_vI107004_control.ECHO == 1) || ptrflx_processing->_vI107004_control.DEBUG_FLX ) ) goto _ifdoelse_bootflx_65834_L107343;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("COMMAND FAILED", "\x0A")));
      {
      _a14239t_107672 _tmp108739 = ::std::string("COMMAND FAILED") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108739)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1957, cols 5 to 42
    _ifdoelse_bootflx_65834_L107343:;
    // # C:/projects/felix/src/packages/io.fdoc: line 440, cols 53 to 69
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Error ", (+<14305>primfun ((str<80203>primfun[int] result<107332>varname), "")))), " executing command ")), cmd<107336>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108740 = (((::std::string("Error ") + (::flx::rtl::strutil::str<int>(_vI107332_result) + ::std::string("") ) ) + ::std::string(" executing command ") ) + _vI107336_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108740)));
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 718, cols 5 to 6
  pexit(_vI107332_result);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
    _ifdoelse_bootflx_65829_L107344:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1961, cols 3 to 16
      //return output<107333>varname;: type _a14239t_107672
      return _vI107333_output;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1962,1,1962,2); // HACK! 
}

//------------------------------
//FUNCTION <103116>: join_uncurry::aux_uncurry: Apply method
void* _fI103116_aux_uncurry::apply(_at107867 const &_arg ){
  _vI103117_x_uncurry = _arg.data[0];
  _vI103118_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_103096_L103125:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<103121> := x_uncurry<103117>varname;
      _vI103121_aux__apos_2_mv_1387  = _vI103117_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI103121_aux__apos_2_mv_1387)==0) ) goto _ml1389_L103120;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<103118>varname;: type void*
      return _vI103118_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L103120:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI103121_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI103124__lam_1391)(FLX_FPAR_PASS this, ptrjoin_uncurry))) ) goto _ml1390_L103119;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<103122>varname = apply((prj1:list * string^2 -> string^2), (arg of case 1 of aux'2_mv_1387<103121>varname));
      _vI103122_h_param_std_1269 = (*((_tt107856*)FLX_VNP(_vI103121_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<103123>varname = apply((prj0:list * string^2 -> list), (arg of case 1 of aux'2_mv_1387<103121>varname));
      _vI103123_t_param_std_1268 = (*((_tt107856*)FLX_VNP(_vI103121_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<103118> := (Snoc<81403>struct (y<103118>varname, h_param_std_1269<103122>varname));
      _vI103118_y  = FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(_vI103118_y, _vI103122_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<103117> := t_param_std_1268<103123>varname;
      _vI103117_x_uncurry  = _vI103123_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_103096_L103125;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L103119:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <103140>: exts::aux_uncurry: Apply method
void* _fI103140_aux_uncurry::apply(_tt107865 const &_arg ){
  _vI103141_inp_uncurry = _arg.mem_0;
  _vI103142_out = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_103010_L103149:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<103145> := inp_uncurry<103141>varname;
      _vI103145_aux__apos_2_mv_1381  = _vI103141_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI103145_aux__apos_2_mv_1381)==0) ) goto _ml1383_L103144;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<103142>varname;: type void*
      return _vI103142_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L103144:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI103145_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI103148__lam_1385)(FLX_FPAR_PASS this, ptrexts))) ) goto _ml1384_L103143;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<103146>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<103145>varname));
      _vI103146_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI103145_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<103147>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<103145>varname));
      _vI103147_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI103145_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<103142> := (Snoc<81403>struct (out<103142>varname, (_lam_65653<68030>stackfun h_param_std_1267<103146>varname)));
      _vI103142_out  = FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(_vI103142_out, _lam_65653(ptrexts)
      .apply(_vI103146_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<103141> := t_param_std_1266<103147>varname;
      _vI103141_inp_uncurry  = _vI103147_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_103010_L103149;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L103143:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93345>: toolchain_msvc_win32::aux_uncurry: Apply method
void* _fI93345_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93346_inp_uncurry = _arg.data[0];
  _vI93347_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93354:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93350> := inp_uncurry<93346>varname;
      _vI93350_aux__apos_2_mv_1381  = _vI93346_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93350_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93349;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93347>varname;: type void*
      return _vI93347_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93349:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93350_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93353__lam_1385)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml1384_L93348;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93351>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93350>varname));
      _vI93351_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93350_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93352>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93350>varname));
      _vI93352_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93350_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93347> := (Snoc<80397>struct (out<93347>varname, (fixup<93340>stackfun h_param_std_1267<93351>varname)));
      _vI93347_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93347_out, _fI93340_fixup(ptrtoolchain_msvc_win32)
      .apply(_vI93351_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93346> := t_param_std_1266<93352>varname;
      _vI93346_inp_uncurry  = _vI93352_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93354;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93348:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93976>: generic_link_exe_static_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93976__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <94977>: find_sym::_lam_571: Apply method
 ::flx::rtl::cl_t _lam_571::apply(){
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 891, cols 11 to 18
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",891,11,891,18); // HACK! 
}

//------------------------------
//FUNCTION <97886>: flx_pkgconfig::aux::_lam_2289: Apply method
 ::flx::rtl::cl_t _fI97886__lam_2289::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,9,478,14); // HACK! 
}

//------------------------------
//C FUNC <86040>: _fI86040_load__hyphen_plugin__hyphen_func1
_ft107766* _fI86040_load__hyphen_plugin__hyphen_func1(FLX_APAR_DECL  _a14239t_107672 _vI86041_dll__hyphen_name, _a14239t_107672 _vI86042_setup__hyphen_str, _a14239t_107672 _vI86043_entry__hyphen_point){
  _a7876t_107991 _genout_urv94930;
   ::flx::rtl::cl_t _vI94830_load__hyphen_plugin__hyphen_func1_mv_596;
  _a14239t_107672 _urv94828;
  int sresult;
  _a7876t_107991 _vI86065_linst;
  _a14239t_107672 entrypoint;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 25 to 41
      //load-plugin-func1_mv_596<94830> := (==<80464>primfun[string] (entry-point<86043>varname, ""));
      _vI94830_load__hyphen_plugin__hyphen_func1_mv_596  = (_vI86043_entry__hyphen_point == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 22 to 72
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 22 to 72
      if(!(_vI94830_load__hyphen_plugin__hyphen_func1_mv_596%2==1) ) goto _ml598_L94829;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 22 to 72
      //_urv94828<94828> := dll-name<86041>varname;
      _urv94828  = _vI86041_dll__hyphen_name; //init
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 22 to 72
      goto _end_hash_242072573;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 22 to 72
    _ml598_L94829:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 22 to 72
/*match case 2:any*/
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 22 to 72
      //_urv94828<94828> := entry-point<86043>varname;
      _urv94828  = _vI86043_entry__hyphen_point; //init
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 22 to 72
    _end_hash_242072573:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1211, cols 5 to 73
      //entrypoint<86064>varname = _urv94828<94828>varname;
      entrypoint = _urv94828; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1212, cols 5 to 44
      //_genout_urv94930<94930> := (init_lib<7906>stackfun dll-name<86041>varname);
      _genout_urv94930  = init_lib(FLX_FPAR_PASS _vI86041_dll__hyphen_name); //init
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1212, cols 5 to 44
      //linst<86065>varname = _genout_urv94930<94930>varname;
      _vI86065_linst = _genout_urv94930; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1213, cols 5 to 84
      //sresult<86067>varname = apply((func1<86066>flxfun (linst<86065>varname, (+<14305>primfun (dll-name<86041>varname, "_setup")))), setup-str<86042>varname);
      sresult = ((FLX_NEWP(func1)(FLX_FPAR_PASS_ONLY))
      ->apply(_tt107992(_vI86065_linst, _vI86041_dll__hyphen_name + ::std::string("_setup") )))->clone()
      ->apply(_vI86042_setup__hyphen_str) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1214, cols 5 to 28
      // primcall ignore<84042>primproc[int] sresult<86067>varname;
      (void)sresult;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1215, cols 5 to 119
      if(!(!((sresult == 0)) ) ) goto _ifdoelse_std_546_L86061;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[dynlink] Warning: Plugin Library ", dll-name<86041>varname)), " set up returned ")), (str<80203>primfun[int] sresult<86067>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108744 = (((::std::string("[dynlink] Warning: Plugin Library ") + _vI86041_dll__hyphen_name ) + ::std::string(" set up returned ") ) + ::flx::rtl::strutil::str<int>(sresult) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108744)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1215, cols 5 to 119
    _ifdoelse_std_546_L86061:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1216, cols 5 to 60
      //return (func1<86068>flxfun (linst<86065>varname, entrypoint<86064>varname));: type _ft107766*
      return (FLX_NEWP(_fI86068_func1)(FLX_FPAR_PASS_ONLY))
      ->apply(_tt107992(_vI86065_linst, entrypoint));
}
//------------------------------

//PROCEDURE <107006:> flx_processing::echoln: Call method
::flx::rtl::con_t * _pI107006_echoln::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI107007_x = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <107006:> flx_processing::echoln: Resume method
::flx::rtl::con_t *_pI107006_echoln::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2000, cols 5 to 67
      if(!((ptrflx_processing->_vI107004_control.ECHO == 1)) ) goto _ifdoelse_bootflx_65840_L107008;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", x<107007>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108745 = (::std::string("[flx] ") + _vI107007_x ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108745)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2001, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 2000, cols 5 to 67
    _ifdoelse_bootflx_65840_L107008:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2001, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <91073>: cat_uncurry::_lam_1434: Apply method
 ::flx::rtl::cl_t _lam_1434::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",464,5,464,38); // HACK! 
}

//------------------------------
//FUNCTION <96781>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::aux_uncurry: Apply method
void* _fI96781_aux_uncurry::apply(_at107697 const &_arg ){
  _vI96782_x_uncurry = _arg.data[0];
  _vI96783_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L96790:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<96786> := x_uncurry<96782>varname;
      _vI96786_aux__apos_2_mv_1387  = _vI96782_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI96786_aux__apos_2_mv_1387)==0) ) goto _ml1389_L96785;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<96783>varname;: type void*
      return _vI96783_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L96785:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI96786_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI96789__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65288, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L96784;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<96787>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<96786>varname));
      _vI96787_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI96786_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<96788>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<96786>varname));
      _vI96788_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI96786_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<96783> := (Snoc<80397>struct (y<96783>varname, h_param_std_1269<96787>varname));
      _vI96783_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96783_y, _vI96787_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<96782> := t_param_std_1268<96788>varname;
      _vI96782_x_uncurry  = _vI96788_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L96790;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L96784:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <96969>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::search_and_replace'2::iterator'2: Apply method
void* _fI96969_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L96970:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<96974> := xs<96968>varname;
      _vI96974_iterator__apos_2_mv_1563  = ptr_fI96956_search_and_replace__apos_2->_vI96968_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI96974_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI96977__lam_1566)(FLX_FPAR_PASS this, ptr_fI96956_search_and_replace__apos_2, ptr_lam_65288, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1565_L96973;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<96975>varname = apply((prj1:list * string^2 -> string^2), (arg of case 1 of iterator'2_mv_1563<96974>varname));
      _vI96975_h_param_std_1319 = (*((_tt107856*)FLX_VNP(_vI96974_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<96976>varname = apply((prj0:list * string^2 -> list), (arg of case 1 of iterator'2_mv_1563<96974>varname));
      _vI96976_t_param_std_1318 = (*((_tt107856*)FLX_VNP(_vI96974_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<96968>varname = t_param_std_1318<96976>varname;
      ptr_fI96956_search_and_replace__apos_2->_vI96968_xs = _vI96976_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108747)
      //yield (Some<81448>struct h_param_std_1319<96975>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _at107674_ptr_map, true) _at107674 (_vI96975_h_param_std_1319));//yield
    FLX_CASE_LABEL(108747)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L96970;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L96973:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI96974_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L96972;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<81450>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L96972:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L96970;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <66955>: toolchain_clang_osx::cxx_static_library_object_compiler: Apply method
int _fI66955_cxx_static_library_object_compiler::apply(_art107759 const &_arg ){
  _vI66958_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1574, cols 5 to 6
      //result<66957>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_cxx_compile_flags<66899>varname, CCOBJ_STATIC_LIB:cxx_compiler<66895>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), MACROS:(Snoc<80397>struct (apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), "FLX_STATIC_LINK")), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66958>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66958>varname)));
      _vI66957_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_osx->_vI66899_base_cxx_compile_flags, ptrtoolchain_clang_osx->_vI66895_cxx_compiler, ptrtoolchain_clang_osx->_vI66979_config.header_search_dirs, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_osx->_vI66979_config.macros, ::std::string("FLX_STATIC_LINK")))), ::std::string("-o "), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66958_spec.src, _vI66958_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1575, cols 5 to 18
      //return result<66957>varname;: type int
      return _vI66957_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1576,3,1576,4); // HACK! 
}

//------------------------------
//FUNCTION <92972>: toolchain_msvc_win32::dependency_parser::aux_uncurry: Apply method
void* _fI92972_aux_uncurry::apply(_at107697 const &_arg ){
  _vI92973_x_uncurry = _arg.data[0];
  _vI92974_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L92981:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<92977> := x_uncurry<92973>varname;
      _vI92977_aux__apos_2_mv_1387  = _vI92973_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI92977_aux__apos_2_mv_1387)==0) ) goto _ml1389_L92976;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<92974>varname;: type void*
      return _vI92974_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L92976:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI92977_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI92980__lam_1391)(FLX_FPAR_PASS this, ptrdependency_parser, ptrtoolchain_msvc_win32))) ) goto _ml1390_L92975;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<92978>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<92977>varname));
      _vI92978_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI92977_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<92979>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<92977>varname));
      _vI92979_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI92977_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<92974> := (Snoc<80397>struct (y<92974>varname, h_param_std_1269<92978>varname));
      _vI92974_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92974_y, _vI92978_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<92973> := t_param_std_1268<92979>varname;
      _vI92973_x_uncurry  = _vI92979_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L92981;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L92975:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <96779>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI96779__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <106048>: flx_processing::cxx_compile_static1_uncurry::_lam_66080: Apply method
_a14239t_107672 _lam_66080::apply(_a14239t_107672 const &_arg ){
  _vI106054_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2355, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<106054>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI106054_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2355,11,2355,40); // HACK! 
}

//------------------------------
//FUNCTION <92062>: +::aux_uncurry: Apply method
void* _fI92062_aux_uncurry::apply(_at107697 const &_arg ){
  _vI92063_x_uncurry = _arg.data[0];
  _vI92064_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L92071:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<92067> := x_uncurry<92063>varname;
      _vI92067_aux__apos_2_mv_1387  = _vI92063_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI92067_aux__apos_2_mv_1387)==0) ) goto _ml1389_L92066;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<92064>varname;: type void*
      return _vI92064_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L92066:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI92067_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI92070__lam_1391)(FLX_FPAR_PASS this, ptr_fI80787___plus_))) ) goto _ml1390_L92065;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<92068>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<92067>varname));
      _vI92068_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI92067_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<92069>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<92067>varname));
      _vI92069_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI92067_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<92064> := (Snoc<80397>struct (y<92064>varname, h_param_std_1269<92068>varname));
      _vI92064_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92064_y, _vI92068_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<92063> := t_param_std_1268<92069>varname;
      _vI92063_x_uncurry  = _vI92069_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L92071;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L92065:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <66515>: toolchain_gcc_linux::dependency_extension: Apply method
_a14239t_107672 _fI66515_dependency_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 736, cols 3 to 45
      //return ".d";: type _a14239t_107672
      return ::std::string(".d");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",736,3,736,45); // HACK! 
}

//------------------------------
//FUNCTION <95784>: str::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI95784__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <105855>: flx_processing::cxx_link_shared_library: Apply method
int cxx_link_shared_library::apply(_pt107743* const &_arg ){
  _vI105869_ehandler = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106383>ref;
      {
      __timeb64* _tmp108751 = (__timeb64*)&_vI106383_tv;
      _ftime64_s(((_tmp108751)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99824<106382> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106383>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106383>varname)), literal[double]("1.0e3")))));
      _genout_urv99824  = (static_cast<double>((_vI106383_tv.time))) + ((static_cast<double>((_vI106383_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2482, cols 5 to 25
      //t0<105856>varname = _genout_urv99824<106382>varname;
      _vI105856_t0 = _genout_urv99824; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2483, cols 5 to 36
      //pkg_dstrings<105857>varname = Empty<80385>varname;
      pkg_dstrings = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2484, cols 5 to 34
      //pkgs<105858>varname = apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname);
      _vI105858_pkgs = ptrflx_processing->_vI106023_control.extra_pkgs; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2500, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI105858_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65927_L105873;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_shared_library] Adding packages ", (str<81092>stackfun pkgs<105858>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108752 = (::std::string("[flx:cxx_link_shared_library] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI105858_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108752)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<106384>varname = (aux_uncurry<106385>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI106384_r = _fI106385_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<106384>ref;
      {
      void** _tmp108753 = (void**)&_vI106384_r;
      _rev(((_tmp108753)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2490, cols 7 to 8
      //PKGCONFIG_PATH<105861>varname = r<106384>varname;
      _vI105861_PKGCONFIG_PATH = _vI106384_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2491, cols 7 to 126
      //allargs<105862>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<105861>varname, "-r")), "--field=provides_dlib")), "--field=requires_dlibs")), "--keepleftmost")), pkgs<105858>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI105862_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI105861_PKGCONFIG_PATH, ::std::string("-r"))) /* apply_stack */, ::std::string("--field=provides_dlib"))) /* apply_stack */, ::std::string("--field=requires_dlibs"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI105858_pkgs)) /* apply_stack */, ptrflx_processing->_vI106023_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2492, cols 7 to 64
      //_genout_urv99865<106395> := (flx_pkgconfig<68435>stackfun allargs<105862>varname);
      _genout_urv99865  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI105862_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2492, cols 7 to 64
      //_ds2_66093<105863>varname = _genout_urv99865<106395>varname;
      _ds2_66093 = _genout_urv99865; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2492, cols 7 to 64
      //ret<105864>varname = apply((prj0:int * list -> int), _ds2_66093<105863>varname);
      _vI105864_ret = _ds2_66093.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2492, cols 7 to 64
      //mydstrings<105865>varname = apply((prj1:int * list -> list), _ds2_66093<105863>varname);
      mydstrings = _ds2_66093.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2498, cols 7 to 11
      if(!(!((_vI105864_ret == 0)) ) ) goto _ifdoelse_bootflx_65929_L105871;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_shared_library] Error ", (str<80203>primfun[int] ret<105864>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<105862>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108754 = (((::std::string("[flx:cxx_link_shared_library] Error ") + ::flx::rtl::strutil::str<int>(_vI105864_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI105862_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108754)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<105869>varname);
      {
      _a6258t_107873 _tmp108755 = (_a6258t_107873)(_vI105869_ehandler);
      throw ((_tmp108755));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2498, cols 7 to 11
    _ifdoelse_bootflx_65929_L105871:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2499, cols 7 to 31
      //pkg_dstrings<105857>varname = mydstrings<105865>varname;
      pkg_dstrings = mydstrings; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2500, cols 5 to 9
    _ifdoelse_bootflx_65927_L105873:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 22 to 36
      //cxx_link_shared_library_mv_66095<106397> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106397_cxx_link_shared_library_mv_66095  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      if(!(_vI106397_cxx_link_shared_library_mv_66095%2==1) ) goto _ml66097_L106398;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      //_urv99876<106396> := echoln<106025>closure;
      _urv99876  = (FLX_NEWP(echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      goto _end_hash_855667848;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
    _ml66097_L106398:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      //_urv99876<106396> := debugln<106024>closure;
      _urv99876  = (FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
    _end_hash_855667848:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 22 to 36
      //cxx_link_shared_library_mv_66095<106401> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      cxx_link_shared_library_mv_66095  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      if(!(cxx_link_shared_library_mv_66095%2==1) ) goto _ml66097_L106402;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
      goto _end_hash_730343346;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
    _ml66097_L106402:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2506, cols 19 to 77
    _end_hash_730343346:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2509, cols 5 to 6
      //tc<105866>varname = apply(toolchain<68911>varname, ( ccflags:apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), debugln:_urv99876<106396>varname, dynamic_libraries:(join_uncurry<89534>stackfun (apply((prj45:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), pkg_dstrings<105857>varname)), header_search_dirs:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), macros:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname)));
      _vI105866_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(ptrflx_processing->_vI105724_dflt_clang_config.ccflags, _urv99876, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.LINK_STRINGS, pkg_dstrings)) /* apply_stack */, ptrflx_processing->_vI105724_dflt_clang_config.header_search_dirs, ptrflx_processing->_vI105724_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI105724_dflt_clang_config.macros, ptrflx_processing->_vI105724_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2510, cols 5 to 56
      //EXT_SHARED_OBJ<105867>varname = apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<105866>varname), ());
      _vI105867_EXT_SHARED_OBJ = (_vI105866_tc.dynamic_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2525, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65930_L105874;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2517, cols 7 to 8
      //result<105868>varname = apply(apply((prj13:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<105866>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), srcs:(+<80787>stackfun (apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), EXT_SHARED_OBJ<105867>varname))))));
      _vI105868_result = (_vI105866_tc.dynamic_library_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_processing->_vI106023_control.cppos, ptrflx_processing->_vI105620_dvars.cpp_filebase + _vI105867_EXT_SHARED_OBJ )) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2525, cols 5 to 9
      goto _ifdoelse_bootflx_65931_L105875;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2525, cols 5 to 9
    _ifdoend_bootflx_65930_L105874:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2523, cols 7 to 10
      //result<105868>varname = apply(apply((prj13:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<105866>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), srcs:apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI105868_result = (_vI105866_tc.dynamic_library_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, ptrflx_processing->_vI106023_control.cppos)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2525, cols 5 to 9
    _ifdoelse_bootflx_65931_L105875:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _end_99907_L106411;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106410>ref;
      {
      __timeb64* _tmp108756 = (__timeb64*)&_vI106410_tv;
      _ftime64_s(((_tmp108756)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106409> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106410>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106410>varname)), literal[double]("1.0e3")))));
      _vI106409__genout_urv96124  = (static_cast<double>((_vI106410_tv.time))) + ((static_cast<double>((_vI106410_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106404>varname = (-<80547>primfun[double] (_genout_urv96124<106409>varname, t0<105856>varname));
      _vI106404_elapsed = _vI106409__genout_urv96124 - _vI105856_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106405>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106404>varname, literal[double]("60.0"))));
      _vI106405_minutes = ::std::floor((_vI106404_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106406>varname = (-<80547>primfun[double] (elapsed<106404>varname, (*<80818>primfun[double] (minutes<106405>varname, literal[double]("60.0")))));
      _vI106406_seconds = _vI106404_elapsed - (_vI106405_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106405>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106406>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Dynamic link : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108757 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106405_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106406_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Dynamic link : ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108757)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2527, cols 5 to 66
    _end_99907_L106411:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2530, cols 5 to 9
      if(!(!((_vI105868_result == 0)) ) ) goto _ifdoelse_bootflx_65933_L105877;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ clink ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108758 = ((::std::string("[flx] C++ clink ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108758)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2530, cols 5 to 9
    _ifdoelse_bootflx_65933_L105877:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2531, cols 5 to 18
      //return result<105868>varname;: type int
      return _vI105868_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2532,3,2532,4); // HACK! 
}

//------------------------------
//FUNCTION <93441>: generic_cxx_gen_deps_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93441__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <106348>: flx_processing::ocaml_compile::dxqt'2: Apply method
_a14239t_107672 _fI106348_dxqt__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI106355_cmd = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1943, cols 3 to 45
      if(!((ptrflx_processing->_vI106023_control.ECHO == 1) || ptrflx_processing->_vI106023_control.DEBUG_FLX ) ) goto _ifdoelse_bootflx_65827_L106357;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("cmd=", cmd<106355>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108759 = (::std::string("cmd=") + _vI106355_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108759)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1943, cols 3 to 45
    _ifdoelse_bootflx_65827_L106357:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106365>ref;
      {
      __timeb64* _tmp108760 = (__timeb64*)&_vI106365_tv;
      _ftime64_s(((_tmp108760)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99556<106364> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106365>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106365>varname)), literal[double]("1.0e3")))));
      _vI106364__genout_urv99556  = (static_cast<double>((_vI106365_tv.time))) + ((static_cast<double>((_vI106365_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1944, cols 3 to 24
      //now<106349>varname = _genout_urv99556<106364>varname;
      _vI106349_now = _vI106364__genout_urv99556; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_507_L106367;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[get_stdout] ", cmd<106355>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108761 = (::std::string("[get_stdout] ") + _vI106355_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108761)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
    _ifdoelse_std_507_L106367:;
    // # C:/projects/felix/src/packages/program.fdoc: line 812, cols 5 to 32
      //_genout_urv99560<106366> := (basic_get_stdout<82955>stackfun cmd<106355>varname);
      _vI106366__genout_urv99560  = basic_get_stdout(_vI106355_cmd); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //_ds2_66010<106350>varname = _genout_urv99560<106366>varname;
      _vI106350__ds2_66010 = _vI106366__genout_urv99560; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //result<106351>varname = apply((prj0:int * string -> int), _ds2_66010<106350>varname);
      _vI106351_result = _vI106350__ds2_66010.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1945, cols 3 to 45
      //output<106352>varname = apply((prj1:int * string -> string), _ds2_66010<106350>varname);
      _vI106352_output = _vI106350__ds2_66010.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      if(!((_vI106351_result == 0)) ) goto _ifdoend_bootflx_65828_L106360;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 61 to 84
      //find_first_of_mv_2165<106374> := (stl_find_first_of<14560>primfun (output<106352>varname, (subscript<81183>primfun[int] ("\x0A", 0))));
      _vI106374_find_first_of_mv_2165  = _vI106352_output.find_first_of((::flx::rtl::strutil::subscript(::std::string("\n"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
/*match case 1:(i_param_std_1916 when (== (i_param_std_1916, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
      if(!((_vI106374_find_first_of_mv_2165 == ::std::string::npos)) ) goto _ml2167_L106376;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      //dxqt'2_mv_66012<106370> := None<81378>varname;
      _vI106370_dxqt__apos_2_mv_66012  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      goto _end_inline_find_first_of_99543_L106377;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 93 to 112
    _ml2167_L106376:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 130 to 130
/*match case 2:i_param_std_1917*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 130 to 130
      //i_param_std_1917<106375>varname = find_first_of_mv_2165<106374>varname;
      _vI106375_i_param_std_1917 = _vI106374_find_first_of_mv_2165; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 55 to 140
      //dxqt'2_mv_66012<106370> := (Some<81379>struct i_param_std_1917<106375>varname);
      _vI106370_dxqt__apos_2_mv_66012  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI106375_i_param_std_1917)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 307, cols 3 to 150
    _end_inline_find_first_of_99543_L106377:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
/*match case 1:|Some n_param_bootflx_65830*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
      if(!andthen(FLX_VNI(_vI106370_dxqt__apos_2_mv_66012)==1, (FLX_NEWP(_fI106378__lam_66015)(FLX_FPAR_PASS this, ptrocaml_compile, ptrflx_processing))) ) goto _ml66014_L106372;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 14 to 14
      //n_param_bootflx_65830<106371>varname = (arg of case 1 of dxqt'2_mv_66012<106370>varname);
      _vI106371_n_param_bootflx_65830 = *((_a5094t_107688*)FLX_VNP(_vI106370_dxqt__apos_2_mv_66012)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      //_urv99566<106369> := n_param_bootflx_65830<106371>varname;
      _vI106369__urv99566  = _vI106371_n_param_bootflx_65830; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      goto _end_hash_4889700;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1949, cols 9 to 14
    _ml66014_L106372:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
      if(!(FLX_VNI(_vI106370_dxqt__apos_2_mv_66012)==0) ) goto _ml66016_L106373;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      //_urv99566<106369> := (len<14304>primfun output<106352>varname);
      _vI106369__urv99566  = _vI106352_output.size(); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      goto _end_hash_4889700;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 9 to 13
    _ml66016_L106373:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1950,7,1950,28);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1950,7,1950,28);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1950, cols 7 to 28
    _end_hash_4889700:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1951, cols 5 to 15
      //n<106353>varname = _urv99566<106369>varname;
      _vI106353_n = _vI106369__urv99566; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1953, cols 5 to 26
      //output<106352>varname = (copyto<81376>primfun[size] (output<106352>varname, n<106353>varname));
      _vI106352_output = ::flx::rtl::strutil::substr(_vI106352_output,0,_vI106353_n); //assign simple
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106381>ref;
      {
      __timeb64* _tmp108763 = (__timeb64*)&_vI106381_tv;
      _ftime64_s(((_tmp108763)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99578<106380> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106381>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106381>varname)), literal[double]("1.0e3")))));
      _vI106380__genout_urv99578  = (static_cast<double>((_vI106381_tv.time))) + ((static_cast<double>((_vI106381_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1954, cols 5 to 36
      //elapsed<106354>varname = (-<80547>primfun[double] (_genout_urv99578<106380>varname, now<106349>varname));
      _vI106354_elapsed = _vI106380__genout_urv99578 - _vI106349_now ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1955, cols 5 to 108
      if(!((ptrflx_processing->_vI106023_control.ECHO == 1) || ptrflx_processing->_vI106023_control.DEBUG_FLX ) ) goto _ifdoelse_bootflx_65829_L106363;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Popen:Elapsed: ", (fmt<80548>stackfun (elapsed<106354>varname, (fixed<5838>struct (9, 3)))))), ", output='")), output<106352>varname)), "'")), "\x0A")));
      {
      _a14239t_107672 _tmp108764 = ((((::std::string("Popen:Elapsed: ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106354_elapsed, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(9, 3))))) /* apply_stack */ ) + ::std::string(", output='") ) + _vI106352_output ) + ::std::string("'") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108764)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      goto _ifdoelse_bootflx_65829_L106363;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
      goto _ifdoelse_bootflx_65829_L106363;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
    _ifdoend_bootflx_65828_L106360:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1957, cols 5 to 42
      if(!((ptrflx_processing->_vI106023_control.ECHO == 1) || ptrflx_processing->_vI106023_control.DEBUG_FLX ) ) goto _ifdoelse_bootflx_65834_L106362;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("COMMAND FAILED", "\x0A")));
      {
      _a14239t_107672 _tmp108765 = ::std::string("COMMAND FAILED") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108765)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1957, cols 5 to 42
    _ifdoelse_bootflx_65834_L106362:;
    // # C:/projects/felix/src/packages/io.fdoc: line 440, cols 53 to 69
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Error ", (+<14305>primfun ((str<80203>primfun[int] result<106351>varname), "")))), " executing command ")), cmd<106355>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108766 = (((::std::string("Error ") + (::flx::rtl::strutil::str<int>(_vI106351_result) + ::std::string("") ) ) + ::std::string(" executing command ") ) + _vI106355_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108766)));
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 718, cols 5 to 6
  pexit(_vI106351_result);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1960, cols 3 to 7
    _ifdoelse_bootflx_65829_L106363:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1961, cols 3 to 16
      //return output<106352>varname;: type _a14239t_107672
      return _vI106352_output;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1962,1,1962,2); // HACK! 
}

//------------------------------
//FUNCTION <94626>: toolchain_clang_apple_iOS_maker_uncurry::aux_uncurry: Apply method
void* _fI94626_aux_uncurry::apply(_at107697 const &_arg ){
  init_uncurry = _arg.data[0];
  _vI94628_x = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_94620_L94635:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<94631> := x<94628>varname;
      _vI94631_aux__apos_2_mv_1356  = _vI94628_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI94631_aux__apos_2_mv_1356)==0) ) goto _ml1358_L94630;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<94627>varname;: type void*
      return init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L94630:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI94631_aux__apos_2_mv_1356)==1, (FLX_NEWP(_lam_1360)(FLX_FPAR_PASS this, ptrtoolchain_clang_apple_iOS_maker_uncurry))) ) goto _ml1359_L94629;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<94632>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<94631>varname));
      h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI94631_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<94633>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<94631>varname));
      t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI94631_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<94628> := t_param_std_1258<94633>varname;
      _vI94628_x  = t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<94627> := apply((_lam_66184<89742>flxfun init_uncurry<94627>varname), h_param_std_1259<94632>varname);
      init_uncurry  = ((FLX_NEWP(_lam_66184)(FLX_FPAR_PASS ptrtoolchain_clang_apple_iOS_maker_uncurry))
      ->apply(init_uncurry))->clone()
      ->apply(h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_94620_L94635;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L94629:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <66517>: toolchain_gcc_linux::executable_extension: Apply method
_a14239t_107672 _fI66517_executable_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 737, cols 3 to 43
      //return "";: type _a14239t_107672
      return ::std::string("");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",737,3,737,43); // HACK! 
}

//------------------------------
//FUNCTION <66900>: toolchain_clang_osx::whatami: Apply method
_a14239t_107672 _fI66900_whatami::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1455, cols 3 to 61
      //return "toolchain_clang_osx (version 2)";: type _a14239t_107672
      return ::std::string("toolchain_clang_osx (version 2)");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1455,3,1455,61); // HACK! 
}

//------------------------------
//FUNCTION <103205>: +::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI103205__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <105905>: flx_processing::cxx_link_static_exe::_lam_66106: Apply method
_a14239t_107672 _lam_66106::apply(_a14239t_107672 const &_arg ){
  _vI105906_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2623, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<105906>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI105906_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2623,11,2623,40); // HACK! 
}

//------------------------------
//FUNCTION <99156>: cxx_depcheck::aux::aux_uncurry: Apply method
void* _fI99156_aux_uncurry::apply(_at107697 const &_arg ){
  _vI99157_x_uncurry = _arg.data[0];
  _vI99158_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L99165:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<99161> := x_uncurry<99157>varname;
      _vI99161_aux__apos_2_mv_1387  = _vI99157_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI99161_aux__apos_2_mv_1387)==0) ) goto _ml1389_L99160;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<99158>varname;: type void*
      return _vI99158_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L99160:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI99161_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI99164__lam_1391)(FLX_FPAR_PASS this, ptr_fI99148_aux, ptrcxx_depcheck))) ) goto _ml1390_L99159;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<99162>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<99161>varname));
      _vI99162_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI99161_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<99163>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<99161>varname));
      _vI99163_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI99161_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<99158> := (Snoc<80397>struct (y<99158>varname, h_param_std_1269<99162>varname));
      _vI99158_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI99158_y, _vI99162_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<99157> := t_param_std_1268<99163>varname;
      _vI99157_x_uncurry  = _vI99163_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L99165;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L99159:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <96496>: flx_pkgconfig::tail_val::aux::aux_uncurry: Apply method
void* _fI96496_aux_uncurry::apply(_at107697 const &_arg ){
  _vI96497_x_uncurry = _arg.data[0];
  _vI96498_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L96505:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<96501> := x_uncurry<96497>varname;
      _vI96501_aux__apos_2_mv_1387  = _vI96497_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI96501_aux__apos_2_mv_1387)==0) ) goto _ml1389_L96500;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<96498>varname;: type void*
      return _vI96498_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L96500:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI96501_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI96504__lam_1391)(FLX_FPAR_PASS this, ptr_fI96488_aux, ptrtail_val, ptrflx_pkgconfig))) ) goto _ml1390_L96499;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<96502>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<96501>varname));
      _vI96502_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI96501_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<96503>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<96501>varname));
      _vI96503_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI96501_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<96498> := (Snoc<80397>struct (y<96498>varname, h_param_std_1269<96502>varname));
      _vI96498_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96498_y, _vI96502_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<96497> := t_param_std_1268<96503>varname;
      _vI96497_x_uncurry  = _vI96503_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L96505;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L96499:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <107426>: flx_processing::cxx_link_static_exe::aux_uncurry: Apply method
void* _fI107426_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107427_inp_uncurry = _arg.data[0];
  _vI107428_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L107435:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<107431> := inp_uncurry<107427>varname;
      _vI107431_aux__apos_2_mv_1381  = _vI107427_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI107431_aux__apos_2_mv_1381)==0) ) goto _ml1383_L107430;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<107428>varname;: type void*
      return _vI107428_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L107430:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI107431_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI107434__lam_1385)(FLX_FPAR_PASS this, ptr_fI106882_cxx_link_static_exe, ptrflx_processing))) ) goto _ml1384_L107429;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<107432>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<107431>varname));
      _vI107432_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI107431_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<107433>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<107431>varname));
      _vI107433_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI107431_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<107428> := (Snoc<80397>struct (out<107428>varname, (_lam_66106<106886>stackfun h_param_std_1267<107432>varname)));
      _vI107428_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107428_out, _fI106886__lam_66106(ptr_fI106882_cxx_link_static_exe, ptrflx_processing)
      .apply(_vI107432_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<107427> := t_param_std_1266<107433>varname;
      _vI107427_inp_uncurry  = _vI107433_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L107435;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L107429:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66928>: toolchain_clang_osx::c_dependency_generator: Apply method
_tt107757 _fI66928_c_dependency_generator::apply(_art107756 const &_arg ){
  _vI66933_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1485, cols 6 to 7
      //_ds2_66179<66930>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:c_compiler<66894>varname, CCFLAGS:(Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), "-MM")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj0:record(src:(string)) -> string), spec<66933>varname)));
      _ds2_66179 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_clang_osx->_vI66894_c_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_osx->_vI66979_config.ccflags, ::std::string("-MM")))), ptrtoolchain_clang_osx->_vI66979_config.header_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.macros, ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66933_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1485, cols 6 to 7
      //result<66931>varname = apply((prj0:int * string -> int), _ds2_66179<66930>varname);
      _vI66931_result = _ds2_66179.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1485, cols 6 to 7
      //data<66932>varname = apply((prj1:int * string -> string), _ds2_66179<66930>varname);
      _vI66932_data = _ds2_66179.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1486, cols 6 to 26
      //return (result<66931>varname, data<66932>varname);: type _tt107757
      return _tt107757(_vI66931_result, _vI66932_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1487,3,1487,4); // HACK! 
}

//------------------------------
//FUNCTION <96051>: cal_depvars::_lam_65820: Apply method
 ::flx::rtl::cl_t _lam_65820::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1868, cols 7 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1868,7,1868,14); // HACK! 
}

//------------------------------
//FUNCTION <66886>: toolchain_clang_apple_iPhoneSimulator: Apply method
_art107765 toolchain_clang_apple_iPhoneSimulator::apply(_art107755 const &_arg ){
  _vI66888_config = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94701>varname = Empty<80385>varname;
      _vI94701_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L94697;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94702>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI94702_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94702>ref;
      {
      int* _tmp108771 = (int*)&_vI94702_i;
      ++*((_tmp108771));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94700:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94702_i)) )) goto _ifdoelse_std_1250_L94697;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94702>ref;
      {
      int* _tmp108772 = (int*)&_vI94702_i;
      --*((_tmp108772));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94701>varname = (Snoc<80397>struct (o<94701>varname, apply(aprj(i<94702>varname : bool), ("x86_64", "i386"))));
      _vI94701_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94701_o, (_at107674(::std::string("x86_64"), ::std::string("i386")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94702_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94700;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94697:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2199, cols 3 to 88
      //return (toolchain_clang_apple_iOS_maker_uncurry<89530>flxfun ("iphonesimulator", o<94701>varname, config<66888>varname));: type _art107765
      return (FLX_NEWP(toolchain_clang_apple_iOS_maker_uncurry)(FLX_FPAR_PASS_ONLY))
      ->apply(_tt107818(::std::string("iphonesimulator"), _vI94701_o, _vI66888_config));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2200,1,2200,2); // HACK! 
}

//------------------------------

//PROCEDURE <107193:> flx_processing::run_felix_compiler_if_required::_lam_65109: Call method
::flx::rtl::con_t * _pI107193__lam_65109::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI107194_i = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <107193:> flx_processing::run_felix_compiler_if_required::_lam_65109: Resume method
::flx::rtl::con_t *_pI107193__lam_65109::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 838, cols 26 to 53
      // primcall writeln<8438>primproc (f<107192>varname, (+<14305>primfun ("#include ", i<107194>varname)));
      {
      _a14239t_107672 _tmp108773 = ::std::string("#include ") + _vI107194_i ;
      ::flx::rtl::ioutil::writeln((ptr_fI106767_run_felix_compiler_if_required->_vI107192_f),((_tmp108773)));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 838, cols 8 to 55
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <95378>: split1::_lam_694: Apply method
 ::flx::rtl::cl_t _lam_694::apply(){
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 42, cols 7 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",42,7,42,14); // HACK! 
}

//------------------------------
//FUNCTION <94881>: regopen_uncurry::_lam_556: Apply method
 ::flx::rtl::cl_t _lam_556::apply(){
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 785, cols 8 to 16
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",785,8,785,16); // HACK! 
}

//------------------------------
//FUNCTION <66764>: toolchain_clang_linux::dynamic_library_linker: Apply method
int _fI66764_dynamic_library_linker::apply(_art107763 const &_arg ){
  _vI66767_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1416, cols 5 to 6
      //result<66766>varname = (generic_link_lib_dynamic_uncurry<89472>stackfun (( CCFLAGS:ccflags_for_dynamic_link<66686>varname, CCLINK_DLLIB:linker<66685>varname, EXT_SHARED_OBJ:".so", LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66767>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66767>varname)));
      _vI66766_result = generic_link_lib_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107813(_art107812(ptrtoolchain_clang_linux->_vI66686_ccflags_for_dynamic_link, ptrtoolchain_clang_linux->_vI66685_linker, ::std::string(".so"), _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_linux->_vI66768_config.library_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66767_spec.srcs, _vI66767_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1417, cols 5 to 18
      //return result<66766>varname;: type int
      return _vI66766_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1418,3,1418,4); // HACK! 
}

//------------------------------
//FUNCTION <66679>: toolchain_clang_linux: Apply method
_art107765 toolchain_clang_linux::apply(_art107755 const &_arg ){
  _vI66768_config = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94428>varname = Empty<80385>varname;
      _vI94428_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 14)) ) goto _ifdoelse_std_1250_L94424;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94429>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<86507>varname[14]), 1));
      _vI94429_i = (static_cast<int>(14)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94429>ref;
      {
      int* _tmp108774 = (int*)&_vI94429_i;
      ++*((_tmp108774));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94427:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94429_i)) )) goto _ifdoelse_std_1250_L94424;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94429>ref;
      {
      int* _tmp108775 = (int*)&_vI94429_i;
      --*((_tmp108775));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94428>varname = (Snoc<80397>struct (o<94428>varname, apply(aprj(i<94429>varname : 14), ("-w", "-Wfatal-errors", "-Wno-invalid-offsetof", "-Wno-logical-op-parentheses", "-Wno-bitwise-op-parentheses", "-Wno-parentheses-equality", "-Wno-parentheses", "-Wno-return-stack-address", "-Wno-tautological-compare", "-Wno-return-type-c-linkage", "-Wno-unused-variable", "-Wno-unused-function", "-Wno-c++11-narrowing", "-Wno-missing-braces"))));
      _vI94428_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94428_o, (_at107816(::std::string("-w"), ::std::string("-Wfatal-errors"), ::std::string("-Wno-invalid-offsetof"), ::std::string("-Wno-logical-op-parentheses"), ::std::string("-Wno-bitwise-op-parentheses"), ::std::string("-Wno-parentheses-equality"), ::std::string("-Wno-parentheses"), ::std::string("-Wno-return-stack-address"), ::std::string("-Wno-tautological-compare"), ::std::string("-Wno-return-type-c-linkage"), ::std::string("-Wno-unused-variable"), ::std::string("-Wno-unused-function"), ::std::string("-Wno-c++11-narrowing"), ::std::string("-Wno-missing-braces")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94429_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94427;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94424:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1198, cols 3 to 4
      //cxx_compile_warning_flags<66681>varname = o<94428>varname;
      _vI66681_cxx_compile_warning_flags = _vI94428_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94438>varname = Empty<80385>varname;
      _vI94438_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L94434;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94439>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI94439_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94439>ref;
      {
      int* _tmp108776 = (int*)&_vI94439_i;
      ++*((_tmp108776));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94437:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94439_i)) )) goto _ifdoelse_std_1250_L94434;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94439>ref;
      {
      int* _tmp108777 = (int*)&_vI94439_i;
      --*((_tmp108777));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94438>varname = (Snoc<80397>struct (o<94438>varname, apply(aprj(i<94439>varname : bool), ("-w", "-Wfatal-errors"))));
      _vI94438_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94438_o, (_at107674(::std::string("-w"), ::std::string("-Wfatal-errors")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94439_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94437;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94434:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1199, cols 3 to 68
      //c_compile_warning_flags<66682>varname = o<94438>varname;
      _vI66682_c_compile_warning_flags = _vI94438_o; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1200, cols 3 to 27
      //c_compiler<66683>varname = "clang";
      _vI66683_c_compiler = ::std::string("clang"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1201, cols 3 to 31
      //cxx_compiler<66684>varname = "clang++";
      _vI66684_cxx_compiler = ::std::string("clang++"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1202, cols 3 to 25
      //linker<66685>varname = "clang++";
      _vI66685_linker = ::std::string("clang++"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1203, cols 3 to 58
      //ccflags_for_dynamic_link<66686>varname = (Snoc<80397>struct (Empty<80385>varname, "-shared"));
      _vI66686_ccflags_for_dynamic_link = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-shared")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1207, cols 3 to 4
      //base_cxx_compile_flags<66687>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (cxx_compile_warning_flags<66681>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname))), "-fno-strict-aliasing")), "-fno-common")), "-O1")), "-c")), "-g")), "-std=c++11"));
      _vI66687_base_cxx_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI66681_cxx_compile_warning_flags, _vI66768_config.ccflags)) /* apply_stack */, ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))), ::std::string("-std=c++11")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1211, cols 3 to 4
      //base_c_compile_flags<66688>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (c_compile_warning_flags<66682>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname))), "-fno-strict-aliasing")), "-fno-common")), "-O1")), "-c")), "-g"));
      _vI66688_base_c_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI66682_c_compile_warning_flags, _vI66768_config.ccflags)) /* apply_stack */, ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1419, cols 1 to 2
      //return ( c_dependency_generator:c_dependency_generator<66717>closure, c_dynamic_object_compiler:c_dynamic_object_compiler<66736>closure, c_static_object_compiler:c_static_object_compiler<66732>closure, cxx_compiler_vendor:cxx_compiler_vendor<66695>closure, cxx_dependency_generator:cxx_dependency_generator<66723>closure, cxx_dynamic_object_compiler:cxx_dynamic_object_compiler<66748>closure, cxx_static_library_object_compiler:cxx_static_library_object_compiler<66744>closure, cxx_static_object_compiler:cxx_static_object_compiler<66740>closure, debug_flags:debug_flags<66711>closure, dependency_extension:dependency_extension<66697>closure, dependency_parser:dependency_parser<66729>closure, dynamic_executable_linker:dynamic_executable_linker<66760>closure, dynamic_library_extension:dynamic_library_extension<66707>closure, dynamic_library_linker:dynamic_library_linker<66764>closure, dynamic_object_extension:dynamic_object_extension<66703>closure, executable_extension:executable_extension<66699>closure, get_base_c_compile_flags:get_base_c_compile_flags<66713>closure, get_base_cxx_compile_flags:get_base_cxx_compile_flags<66715>closure, host_os:host_os<66691>closure, pathname_separator:pathname_separator<66709>closure, static_executable_linker:static_executable_linker<66756>closure, static_library_extension:static_library_extension<66705>closure, static_library_linker:static_library_linker<66752>closure, static_object_extension:static_object_extension<66701>closure, target_os:target_os<66693>closure, whatami:whatami<66689>closure);: type _art107765
      return _art107765((FLX_NEWP(_fI66717_c_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66736_c_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66732_c_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66695_cxx_compiler_vendor)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66723_cxx_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66748_cxx_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66744_cxx_static_library_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66740_cxx_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66711_debug_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66697_dependency_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66729_dependency_parser)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66760_dynamic_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66707_dynamic_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66764_dynamic_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66703_dynamic_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66699_executable_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66713_get_base_c_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66715_get_base_cxx_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66691_host_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66709_pathname_separator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66756_static_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66705_static_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66752_static_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66701_static_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66693_target_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66689_whatami)(FLX_FPAR_PASS this)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1419,1,1419,2); // HACK! 
}

//------------------------------
//FUNCTION <94109>: generic_link_lib_dynamic_uncurry::aux_uncurry: Apply method
void* _fI94109_aux_uncurry::apply(_at107697 const &_arg ){
  _vI94110_inp_uncurry = _arg.data[0];
  _vI94111_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L94118:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<94114> := inp_uncurry<94110>varname;
      _vI94114_aux__apos_2_mv_1381  = _vI94110_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI94114_aux__apos_2_mv_1381)==0) ) goto _ml1383_L94113;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<94111>varname;: type void*
      return _vI94111_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L94113:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI94114_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI94117__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_link_lib_dynamic_uncurry))) ) goto _ml1384_L94112;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<94115>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<94114>varname));
      _vI94115_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI94114_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<94116>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<94114>varname));
      _vI94116_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI94114_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<94111> := (Snoc<80397>struct (out<94111>varname, (quote_arg<16873>stackfun h_param_std_1267<94115>varname)));
      _vI94111_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94111_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI94115_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<94110> := t_param_std_1266<94116>varname;
      _vI94110_inp_uncurry  = _vI94116_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L94118;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L94112:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66301>: toolchain_msvc_win32::dynamic_library_extension: Apply method
_a14239t_107672 dynamic_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1740, cols 3 to 52
      //return ".dll";: type _a14239t_107672
      return ::std::string(".dll");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1740,3,1740,52); // HACK! 
}

//------------------------------
//FUNCTION <98791>: run_felix_compiler::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI98791__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66732>: toolchain_clang_linux::c_static_object_compiler: Apply method
int _fI66732_c_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66735_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1281, cols 5 to 6
      //result<66734>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_c_compile_flags<66688>varname, CCOBJ_STATIC_LIB:c_compiler<66683>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66735>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66735>varname)));
      _vI66734_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_linux->_vI66688_base_c_compile_flags, ptrtoolchain_clang_linux->_vI66683_c_compiler, ptrtoolchain_clang_linux->_vI66768_config.header_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.macros, ::std::string("-o "), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66735_spec.src, _vI66735_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1282, cols 5 to 18
      //return result<66734>varname;: type int
      return _vI66734_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1283,3,1283,4); // HACK! 
}

//------------------------------
//FUNCTION <106513>: flx_processing::check_binary_uptodate::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI106513__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <97862>: flx_pkgconfig::reattach_drive_letters::_lam_65244: Apply method
 ::flx::rtl::cl_t _lam_65244::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 9 to 32
      //return (andthen<5205>stackfun ((_match_ctor_Cons<81723>primfun[string] apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] reattach_drive_letters_mv_65236<97856>varname))), _lam_65245<97863>closure));: type  ::flx::rtl::cl_t
      return andthen(!!((reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>((ptrreattach_drive_letters->reattach_drive_letters_mv_65236)))).mem_1) , (FLX_NEWP(_lam_65245)(FLX_FPAR_PASS this, ptrreattach_drive_letters, ptrflx_pkgconfig)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",231,9,231,32); // HACK! 
}

//------------------------------
//FUNCTION <97082>: flx_pkgconfig::handle_pkg::_lam_65277::aux_uncurry: Apply method
void* _fI97082_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97083_x_uncurry = _arg.data[0];
  _vI97084_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97091:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97087> := x_uncurry<97083>varname;
      _vI97087_aux__apos_2_mv_1387  = _vI97083_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97087_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97086;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97084>varname;: type void*
      return _vI97084_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97086:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97087_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97090__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L97085;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97088>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97087>varname));
      _vI97088_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97087_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97089>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97087>varname));
      _vI97089_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97087_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97084> := (Snoc<80397>struct (y<97084>varname, h_param_std_1269<97088>varname));
      _vI97084_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97084_y, _vI97088_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97083> := t_param_std_1268<97089>varname;
      _vI97083_x_uncurry  = _vI97089_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97091;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97085:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <106445>: flx_processing::cxx_link_static_exe::aux_uncurry: Apply method
void* _fI106445_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106446_inp_uncurry = _arg.data[0];
  _vI106447_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L106454:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<106450> := inp_uncurry<106446>varname;
      _vI106450_aux__apos_2_mv_1381  = _vI106446_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI106450_aux__apos_2_mv_1381)==0) ) goto _ml1383_L106449;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<106447>varname;: type void*
      return _vI106447_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L106449:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI106450_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI106453__lam_1385)(FLX_FPAR_PASS this, ptrcxx_link_static_exe, ptrflx_processing))) ) goto _ml1384_L106448;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<106451>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<106450>varname));
      _vI106451_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI106450_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<106452>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<106450>varname));
      _vI106452_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI106450_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<106447> := (Snoc<80397>struct (out<106447>varname, (_lam_66106<105905>stackfun h_param_std_1267<106451>varname)));
      _vI106447_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106447_out, _lam_66106(ptrcxx_link_static_exe, ptrflx_processing)
      .apply(_vI106451_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<106446> := t_param_std_1266<106452>varname;
      _vI106446_inp_uncurry  = _vI106452_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L106454;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L106448:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <96579>: isidstart::_lam_168: Apply method
 ::flx::rtl::cl_t _lam_168::apply(){
    // # C:/projects/felix/src/packages/char.fdoc: line 66, cols 57 to 62
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/char.fdoc",66,57,66,62); // HACK! 
}

//------------------------------
//FUNCTION <89760>: toolchain_clang_apple_iOS_maker_uncurry::pathname_separator: Apply method
_a14239t_107672 _fI89760_pathname_separator::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1998, cols 3 to 42
      //return "/";: type _a14239t_107672
      return ::std::string("/");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1998,3,1998,42); // HACK! 
}

//------------------------------
//FUNCTION <93756>: generic_cxx_compile_for_dynamic_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93756__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66511>: toolchain_gcc_linux::target_os: Apply method
_a14239t_107672 _fI66511_target_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 733, cols 3 to 37
      //return "LINUX";: type _a14239t_107672
      return ::std::string("LINUX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",733,3,733,37); // HACK! 
}

//------------------------------
//FUNCTION <92742>: toolchain_msvc_win32::checkwarn::aux: Apply method
void* _fI92742_aux::apply(_tt107698 const &_arg ){
  _vI92743_x = _arg.mem_0;
  _vI92744_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
    start_91607_L92754:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<92749> := (stl_find<14446>primfun (x<92743>varname, (subscript<81183>primfun[int] ("\x0A", 0))));
      _vI92749_find_mv_2105  = _vI92743_x.find((::flx::rtl::strutil::subscript(::std::string("\n"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI92749_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L92751;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<92745> := None<81378>varname;
      _vI92745_aux_mv_2285  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_91577_L92752;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L92751:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<92750>varname = find_mv_2105<92749>varname;
      _vI92750_i_param_std_1893 = _vI92749_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<92745> := (Some<81379>struct i_param_std_1893<92750>varname);
      _vI92745_aux_mv_2285  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI92750_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_91577_L92752:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
      if(!(FLX_VNI(_vI92745_aux_mv_2285)==0) ) goto _ml2287_L92747;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<80397>struct (y<92744>varname, x<92743>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92744_y, _vI92743_x)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
    _ml2287_L92747:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
/*match case 2:|Some n_param_std_1968*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      if(!andthen(FLX_VNI(_vI92745_aux_mv_2285)==1, (FLX_NEWP(_fI92753__lam_2289)(FLX_FPAR_PASS this, ptrcheckwarn, ptrtoolchain_msvc_win32))) ) goto _ml2288_L92748;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 14 to 14
      //n_param_std_1968<92746>varname = (arg of case 1 of aux_mv_2285<92745>varname);
      _vI92746_n_param_std_1968 = *((_a5094t_107688*)FLX_VNP(_vI92745_aux_mv_2285)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //y<92744> := (Snoc<80397>struct (y<92744>varname, (copyto<81376>primfun[size] (x<92743>varname, n_param_std_1968<92746>varname))));
      _vI92744_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92744_y, ::flx::rtl::strutil::substr(_vI92743_x,0,_vI92746_n_param_std_1968)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //x<92743> := (copyfrom<81377>primfun[size] (x<92743>varname, (+<80900>primfun[size] (n_param_std_1968<92746>varname, literal[size]("1")))));
      _vI92743_x  = ::flx::rtl::strutil::substr(_vI92743_x,_vI92746_n_param_std_1968 + 1 ,_vI92743_x.size()); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      goto start_91607_L92754;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
    _ml2288_L92748:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",480,5,480,6); // HACK! 
}

//------------------------------
//FUNCTION <106343>: flx_processing::ocaml_compile::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI106343__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <66649>: toolchain_gcc_osx::cxx_static_object_compiler: Apply method
int _fI66649_cxx_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66652_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1068, cols 5 to 6
      //result<66651>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_cxx_compile_flags<66597>varname, CCOBJ_STATIC_LIB:cxx_compiler<66593>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66652>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66652>varname)));
      _vI66651_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_gcc_osx->_vI66597_base_cxx_compile_flags, ptrtoolchain_gcc_osx->_vI66593_cxx_compiler, ptrtoolchain_gcc_osx->_vI66677_config.header_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.macros, ::std::string("-o "), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66652_spec.src, _vI66652_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1069, cols 5 to 18
      //return result<66651>varname;: type int
      return _vI66651_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1070,3,1070,4); // HACK! 
}

//------------------------------
//FUNCTION <96688>: search_and_replace_uncurry::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI96688__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <89774>: toolchain_clang_apple_iOS_maker_uncurry::dependency_parser: Apply method
void* _fI89774_dependency_parser::apply(_a14239t_107672 const &_arg ){
  _vI89775_data = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2039, cols 3 to 4
      //return (generic_dependency_parser<68198>stackfun data<89775>varname);: type void*
      return generic_dependency_parser(FLX_FPAR_PASS_ONLY)
      .apply(_vI89775_data) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2039,3,2039,4); // HACK! 
}

//------------------------------
//FUNCTION <107130>: flx_processing::cal_time_from_flxdepfile::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI107130__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------

//PROCEDURE <106212:> flx_processing::run_felix_compiler_if_required::_lam_65109: Call method
::flx::rtl::con_t * _lam_65109::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI106213_i = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <106212:> flx_processing::run_felix_compiler_if_required::_lam_65109: Resume method
::flx::rtl::con_t *_lam_65109::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 838, cols 26 to 53
      // primcall writeln<8438>primproc (f<106211>varname, (+<14305>primfun ("#include ", i<106213>varname)));
      {
      _a14239t_107672 _tmp108782 = ::std::string("#include ") + _vI106213_i ;
      ::flx::rtl::ioutil::writeln((ptrrun_felix_compiler_if_required->_vI106211_f),((_tmp108782)));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 838, cols 8 to 55
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <97072>: flx_pkgconfig::handle_pkg::_lam_65277::aux_uncurry: Apply method
void* _fI97072_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97073_x_uncurry = _arg.data[0];
  _vI97074_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97081:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97077> := x_uncurry<97073>varname;
      _vI97077_aux__apos_2_mv_1387  = _vI97073_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97077_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97076;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97074>varname;: type void*
      return _vI97074_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97076:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97077_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97080__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L97075;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97078>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97077>varname));
      _vI97078_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97077_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97079>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97077>varname));
      _vI97079_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97077_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97074> := (Snoc<80397>struct (y<97074>varname, h_param_std_1269<97078>varname));
      _vI97074_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97074_y, _vI97078_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97073> := t_param_std_1268<97079>varname;
      _vI97073_x_uncurry  = _vI97079_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97081;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97075:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//C FUNC <7895>: prepare_lib
_a7876t_107991 prepare_lib(FLX_APAR_DECL _a14239t_107672 _vI7899_modulename){
  _a13898t_107994 _genout_urv94850;
  _a13898t_107994 _vI94847__genout_urv94839;
  _a13898t_107994 _vI94846__genout_urv94833;
  _a13898t_107994* _vI94843_pregistry;
  _a13898t_107994** _vI94842_ppregistry;
  _a13898t_107994 _genout_urv94841;
  _a7876t_107991 _vI7898_linstance;
  _a7803t_107993 _vI7897_dlibrary;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1007, cols 5 to 66
      //dlibrary<7897>varname = (create_library_handle<7804>primfun (get_debug_driver_flag<7802>primfun ()));
      _vI7897_dlibrary = new(*PTF gcp, ::flx::dynlink::flx_dynlink_ptr_map, false) ::flx::dynlink::flx_dynlink_t((PTF gcp->debug_driver)); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1009, cols 5 to 69
      //linstance<7898>varname = (create_instance_handle<7877>primfun (get_debug_driver_flag<7802>primfun ()));
      _vI7898_linstance = new(*PTF gcp, ::flx::dynlink::flx_libinst_ptr_map, false) ::flx::dynlink::flx_libinst_t((PTF gcp->debug_driver)); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 767, cols 5 to 73
      //ppregistry<94842>varname = (get_module_registry_address_address<7810>primfun ());
      _vI94842_ppregistry = (void****)(void*)&(PTF gcp->collector->module_registry); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 768, cols 5 to 46
      //pregistry<94843>varname = (deref<86146>primfun[&JSLArray] ppregistry<94842>varname);
      _vI94843_pregistry = *_vI94842_ppregistry ; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 773, cols 5 to 9
      if(!(0==_vI94843_pregistry) ) goto _ifdoelse_std_521_L94845;
    // # C:/projects/felix/src/packages/trees.fdoc: line 1234, cols 4 to 48
      //_genout_urv94850<94850> := (_ctor_JSLArray<13899>primfun ());
      _genout_urv94850  = _mkjudy(FLX_POINTER_TO_THREAD_FRAME, &_a13896t_107995_ptr_map); //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1234, cols 4 to 48
      //_genout_urv94839<94847> := _genout_urv94850<94850>varname;
      _vI94847__genout_urv94839  = _genout_urv94850; //init
    // # C:/projects/felix/src/packages/trees.fdoc: line 1234, cols 4 to 48
      //_genout_urv94833<94846> := _genout_urv94839<94847>varname;
      _vI94846__genout_urv94833  = _vI94847__genout_urv94839; //init
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 770, cols 7 to 64
      //pregistry<94843>varname = new _genout_urv94833<94846>varname;
      _vI94843_pregistry = (_a13898t_107994*)new(*PTF gcp, _a13898t_107994_ptr_map, true) _a13898t_107994 (_vI94846__genout_urv94833); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 771, cols 7 to 29
      //(deref<86146>primfun[&JSLArray] ppregistry<94842>varname) = pregistry<94843>varname;
      *_vI94842_ppregistry  = _vI94843_pregistry; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 772, cols 7 to 55
      // primcall add_root<8206>primproc (cast<86149>primfun[address, &JSLArray] pregistry<94843>varname);
      {
      _a5106t_107998 _tmp108784 = (_a5106t_107998)(_vI94843_pregistry);
      PTF gcp->collector->add_root (((_tmp108784)));
      }
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 773, cols 5 to 9
    _ifdoelse_std_521_L94845:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 774, cols 5 to 22
      //_genout_urv94841<94841> := (deref<86150>primfun[JSLArray] pregistry<94843>varname);
      _genout_urv94841  = *_vI94843_pregistry ; //init
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 799, cols 3 to 4
      //run procedure stackcall regopen_uncurry<89441>stackproc  (_genout_urv94841<94841>varname, dlibrary<7897>varname, modulename<7899>varname);
      {
      regopen_uncurry(FLX_FPAR_PASS_ONLY)
      .stack_call(_tt107999(_genout_urv94841, _vI7897_dlibrary, _vI7899_modulename));
      }
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1011, cols 5 to 32
      // primcall create<7878>primproc (dlibrary<7897>varname, linstance<7898>varname);
      _vI7898_linstance->create(_vI7897_dlibrary,PTF gcp,PTF argc,PTF argv,PTF flx_stdin, PTF flx_stdout, PTF flx_stderr, false);
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1012, cols 5 to 21
      //return linstance<7898>varname;: type _a7876t_107991
      return _vI7898_linstance;
}
//------------------------------
//FUNCTION <66437>: toolchain_msvc_win32::static_library_linker: Apply method
int static_library_linker::apply(_art107763 const &_arg ){
  _vI66442_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1878, cols 5 to 70
      //_genout_urv93036<93036> := (xpopen<66338>stackfun (Snoc<80397>struct ((Snoc<80397>struct (apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66442>varname), (+<14305>primfun ("/OUT:", apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66442>varname))))), "lib.exe")));
      _genout_urv93036  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI66442_spec.srcs, ::std::string("/OUT:") + _vI66442_spec.dst ))), ::std::string("lib.exe"))))) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1878, cols 5 to 70
      //_ds2_66260<66439>varname = _genout_urv93036<93036>varname;
      _ds2_66260 = _genout_urv93036; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1878, cols 5 to 70
      //result<66440>varname = apply((prj0:int * string -> int), _ds2_66260<66439>varname);
      _vI66440_result = _ds2_66260.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1878, cols 5 to 70
      //text<66441>varname = apply((prj1:int * string -> string), _ds2_66260<66439>varname);
      _vI66441_text = _ds2_66260.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66440>varname, text<66441>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66440_result, _vI66441_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1880, cols 5 to 18
      //return result<66440>varname;: type int
      return _vI66440_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1881,3,1881,4); // HACK! 
}

//------------------------------
//FUNCTION <92110>: respectful_parse_uncurry_uncurry::_lam_2354: Apply method
 ::flx::rtl::cl_t _lam_2354::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",660,7,660,11); // HACK! 
}

//------------------------------
//FUNCTION <14360>: subscript: Apply method
_a14239t_107672 subscript::apply(_tt108173 const &_arg ){
  _vI14389_x = _arg.mem_0;
  s = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 230, cols 3 to 4
      //subscript_mv_2051<99775> := s<14390>varname;
      subscript_mv_2051  = s; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 222, cols 7 to 16
/*match case 1:|Slice_all*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 222, cols 7 to 16
      if(!(subscript_mv_2051.variant==0) ) goto _ml2053_L99784;
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 5 to 44
      //return (substring<81958>primfun[int, int] (x<14389>varname, 0, (_ctor_int<81465>primfun[size] (len<14304>primfun x<14389>varname))));: type _a14239t_107672
      return ::flx::rtl::strutil::substr(_vI14389_x,0,(static_cast<int>((_vI14389_x.size()))/*int.flx: ctor*/));
    // # C:/projects/felix/src/packages/strings.fdoc: line 222, cols 7 to 16
    _ml2053_L99784:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 223, cols 7 to 24
/*match case 2:|Slice_from start_param_std_1863*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 223, cols 7 to 24
      if(!andthen(subscript_mv_2051.variant==1, (FLX_NEWP(_lam_2055)(FLX_FPAR_PASS this))) ) goto _ml2054_L99785;
    // # C:/projects/felix/src/packages/strings.fdoc: line 223, cols 19 to 23
      //start_param_std_1863<99776>varname = (arg of case 1 of subscript_mv_2051<99775>varname);
      start_param_std_1863 = *((int*)subscript_mv_2051.data); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 5 to 44
      //return (copyfrom<81959>primfun[int] (x<14389>varname, start_param_std_1863<99776>varname));: type _a14239t_107672
      return ::flx::rtl::strutil::substr(_vI14389_x,start_param_std_1863,_vI14389_x.size());
    // # C:/projects/felix/src/packages/strings.fdoc: line 223, cols 7 to 24
    _ml2054_L99785:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 224, cols 7 to 25
/*match case 3:|Slice_to_incl end_param_std_1864*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 224, cols 7 to 25
      if(!andthen(subscript_mv_2051.variant==3, (FLX_NEWP(_lam_2057)(FLX_FPAR_PASS this))) ) goto _ml2056_L99786;
    // # C:/projects/felix/src/packages/strings.fdoc: line 224, cols 22 to 24
      //end_param_std_1864<99777>varname = (arg of case 3 of subscript_mv_2051<99775>varname);
      end_param_std_1864 = *((int*)subscript_mv_2051.data); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 5 to 44
      //return (copyto<81541>primfun[int] (x<14389>varname, (+<80315>primfun[int] (end_param_std_1864<99777>varname, 1))));: type _a14239t_107672
      return ::flx::rtl::strutil::substr(_vI14389_x,0,end_param_std_1864 + 1 );
    // # C:/projects/felix/src/packages/strings.fdoc: line 224, cols 7 to 25
    _ml2056_L99786:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 225, cols 7 to 25
/*match case 4:|Slice_to_excl end_param_std_1865*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 225, cols 7 to 25
      if(!andthen(subscript_mv_2051.variant==4, (FLX_NEWP(_lam_2059)(FLX_FPAR_PASS this))) ) goto _ml2058_L99787;
    // # C:/projects/felix/src/packages/strings.fdoc: line 225, cols 22 to 24
      //end_param_std_1865<99778>varname = (arg of case 4 of subscript_mv_2051<99775>varname);
      end_param_std_1865 = *((int*)subscript_mv_2051.data); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 5 to 44
      //return (copyto<81541>primfun[int] (x<14389>varname, end_param_std_1865<99778>varname));: type _a14239t_107672
      return ::flx::rtl::strutil::substr(_vI14389_x,0,end_param_std_1865);
    // # C:/projects/felix/src/packages/strings.fdoc: line 225, cols 7 to 25
    _ml2058_L99787:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 226, cols 7 to 35
/*match case 5:|Slice_range_incl (start_param_std_1866, end_param_std_1867)*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 226, cols 7 to 35
      if(!andthen(subscript_mv_2051.variant==5, (FLX_NEWP(_lam_2061)(FLX_FPAR_PASS this))) ) goto _ml2060_L99788;
    // # C:/projects/felix/src/packages/strings.fdoc: line 226, cols 32 to 34
      //end_param_std_1867<99779>varname = apply((prj1:int^2 -> int), (arg of case 5 of subscript_mv_2051<99775>varname));
      end_param_std_1867 = ((*((_at107686*)subscript_mv_2051.data)).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 226, cols 25 to 29
      //start_param_std_1866<99780>varname = apply((prj0:int^2 -> int), (arg of case 5 of subscript_mv_2051<99775>varname));
      start_param_std_1866 = ((*((_at107686*)subscript_mv_2051.data)).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 5 to 44
      //return (substring<81958>primfun[int, int] (x<14389>varname, start_param_std_1866<99780>varname, (+<80315>primfun[int] (end_param_std_1867<99779>varname, 1))));: type _a14239t_107672
      return ::flx::rtl::strutil::substr(_vI14389_x,start_param_std_1866,end_param_std_1867 + 1 );
    // # C:/projects/felix/src/packages/strings.fdoc: line 226, cols 7 to 35
    _ml2060_L99788:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 227, cols 7 to 35
/*match case 6:|Slice_range_excl (start_param_std_1868, end_param_std_1869)*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 227, cols 7 to 35
      if(!andthen(subscript_mv_2051.variant==6, (FLX_NEWP(_lam_2063)(FLX_FPAR_PASS this))) ) goto _ml2062_L99789;
    // # C:/projects/felix/src/packages/strings.fdoc: line 227, cols 32 to 34
      //end_param_std_1869<99781>varname = apply((prj1:int^2 -> int), (arg of case 6 of subscript_mv_2051<99775>varname));
      end_param_std_1869 = ((*((_at107686*)subscript_mv_2051.data)).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 227, cols 25 to 29
      //start_param_std_1868<99782>varname = apply((prj0:int^2 -> int), (arg of case 6 of subscript_mv_2051<99775>varname));
      start_param_std_1868 = ((*((_at107686*)subscript_mv_2051.data)).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 5 to 44
      //return (substring<81958>primfun[int, int] (x<14389>varname, start_param_std_1868<99782>varname, end_param_std_1869<99781>varname));: type _a14239t_107672
      return ::flx::rtl::strutil::substr(_vI14389_x,start_param_std_1868,end_param_std_1869);
    // # C:/projects/felix/src/packages/strings.fdoc: line 227, cols 7 to 35
    _ml2062_L99789:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 7 to 23
/*match case 7:|Slice_one index_param_std_1870*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 7 to 23
      if(!andthen(subscript_mv_2051.variant==7, (FLX_NEWP(_lam_2065)(FLX_FPAR_PASS this))) ) goto _ml2064_L99790;
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 18 to 22
      //index_param_std_1870<99783>varname = (arg of case 7 of subscript_mv_2051<99775>varname);
      index_param_std_1870 = *((int*)subscript_mv_2051.data); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 204, cols 3 to 31
      //return (+<14307>primfun ("", (subscript<81183>primfun[int] (x<14389>varname, index_param_std_1870<99783>varname))));: type _a14239t_107672
      return ::std::string("") + ::flx::rtl::strutil::subscript(_vI14389_x,index_param_std_1870) ;
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 7 to 23
    _ml2064_L99790:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 5 to 44
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 5 to 44
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",228,5,228,44);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",228,5,228,44);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",230,3,230,4); // HACK! 
}

//------------------------------
//FUNCTION <106610>: flx_processing::run_program_dynamic::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI106610__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <105677>: flx_processing::rfi::_lam_873: Apply method
 ::flx::rtl::cl_t _lam_873::apply(){
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",612,9,612,13); // HACK! 
}

//------------------------------
//FUNCTION <95965>: cal_depvars::_lam_65814: Apply method
 ::flx::rtl::cl_t _lam_65814::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1796, cols 7 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1796,7,1796,14); // HACK! 
}

//------------------------------
//FUNCTION <92980>: toolchain_msvc_win32::dependency_parser::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI92980__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <106905>: flx_processing::cxx_static_library: Apply method
int _fI106905_cxx_static_library::apply(_pt107743* const &_arg ){
  _vI106910_ehandler = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107454>ref;
      {
      __timeb64* _tmp108788 = (__timeb64*)&_vI107454_tv;
      _ftime64_s(((_tmp108788)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv100140<107453> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107454>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107454>varname)), literal[double]("1.0e3")))));
      _vI107453__genout_urv100140  = (static_cast<double>((_vI107454_tv.time))) + ((static_cast<double>((_vI107454_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2685, cols 5 to 25
      //t0<106906>varname = _genout_urv100140<107453>varname;
      _vI106906_t0 = _vI107453__genout_urv100140; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 22 to 36
      //cxx_static_library_mv_66114<107456> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107456_cxx_static_library_mv_66114  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
      if(!(_vI107456_cxx_static_library_mv_66114%2==1) ) goto _ml66116_L107457;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
      //_urv100144<107455> := echoln<107006>closure;
      _vI107455__urv100144  = (FLX_NEWP(_pI107006_echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
      goto _end_hash_481094384;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
    _ml66116_L107457:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
      //_urv100144<107455> := debugln<107005>closure;
      _vI107455__urv100144  = (FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2690, cols 19 to 77
    _end_hash_481094384:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2693, cols 5 to 6
      //tc<106907>varname = apply(toolchain<68911>varname, ( ccflags:apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), debugln:_urv100144<107455>varname, dynamic_libraries:apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), header_search_dirs:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), macros:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname)));
      _vI106907_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(ptrflx_processing->_vI106705_dflt_clang_config.ccflags, _vI107455__urv100144, ptrflx_processing->_vI106705_dflt_clang_config.dynamic_libraries, ptrflx_processing->_vI106705_dflt_clang_config.header_search_dirs, ptrflx_processing->_vI106705_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI106705_dflt_clang_config.macros, ptrflx_processing->_vI106705_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2694, cols 5 to 55
      //EXT_STATIC_OBJ<106908>varname = apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<106907>varname), ());
      _vI106908_EXT_STATIC_OBJ = (_vI106907_tc.static_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2709, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65950_L106911;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2701, cols 7 to 8
      //result<106909>varname = apply(apply((prj22:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<106907>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), srcs:(+<80787>stackfun (apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), EXT_STATIC_OBJ<106908>varname))))));
      _vI106909_result = (_vI106907_tc.static_library_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_processing->_vI107004_control.cppos, ptrflx_processing->dvars.cpp_filebase + _vI106908_EXT_STATIC_OBJ )) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2709, cols 5 to 9
      goto _ifdoelse_bootflx_65951_L106912;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2709, cols 5 to 9
    _ifdoend_bootflx_65950_L106911:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2707, cols 7 to 10
      //result<106909>varname = apply(apply((prj22:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<106907>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), srcs:apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106909_result = (_vI106907_tc.static_library_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, ptrflx_processing->_vI107004_control.cppos)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2709, cols 5 to 9
    _ifdoelse_bootflx_65951_L106912:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _end_100158_L107466;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107465>ref;
      {
      __timeb64* _tmp108789 = (__timeb64*)&_vI107465_tv;
      _ftime64_s(((_tmp108789)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107464> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107465>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107465>varname)), literal[double]("1.0e3")))));
      _vI107464__genout_urv96124  = (static_cast<double>((_vI107465_tv.time))) + ((static_cast<double>((_vI107465_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107459>varname = (-<80547>primfun[double] (_genout_urv96124<107464>varname, t0<106906>varname));
      _vI107459_elapsed = _vI107464__genout_urv96124 - _vI106906_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107460>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107459>varname, literal[double]("60.0"))));
      _vI107460_minutes = ::std::floor((_vI107459_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107461>varname = (-<80547>primfun[double] (elapsed<107459>varname, (*<80818>primfun[double] (minutes<107460>varname, literal[double]("60.0")))));
      _vI107461_seconds = _vI107459_elapsed - (_vI107460_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107460>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107461>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Static lib   : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp108790 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107460_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107461_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Static lib   : ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108790)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2710, cols 5 to 66
    _end_100158_L107466:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2713, cols 5 to 9
      if(!(!((_vI106909_result == 0)) ) ) goto _ifdoelse_bootflx_65953_L106914;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ static library link ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp108791 = ((::std::string("[flx] C++ static library link ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108791)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2713, cols 5 to 9
    _ifdoelse_bootflx_65953_L106914:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2714, cols 5 to 18
      //return result<106909>varname;: type int
      return _vI106909_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2715,3,2715,4); // HACK! 
}

//------------------------------
//FUNCTION <98096>: map_package_requirements_uncurry::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI98096__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <97300>: flx_pkgconfig::xfind::_lam_65221: Apply method
 ::flx::rtl::cl_t _lam_65221::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 8 to 13
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",146,8,146,13); // HACK! 
}

//------------------------------
//FUNCTION <89761>: toolchain_clang_apple_iOS_maker_uncurry::debug_flags: Apply method
void* _fI89761_debug_flags::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 148, cols 3 to 44
      //return (Snoc<80397>struct (Empty<80385>varname, "-g"));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-g"))));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1999,3,1999,49); // HACK! 
}

//------------------------------
//FUNCTION <89751>: toolchain_clang_apple_iOS_maker_uncurry::host_os: Apply method
_a14239t_107672 _fI89751_host_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1988, cols 3 to 33
      //return "OSX";: type _a14239t_107672
      return ::std::string("OSX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1988,3,1988,33); // HACK! 
}

//------------------------------
//FUNCTION <107296>: flx_processing::cxx_compile_static::iterator'2: Apply method
void* _fI107296_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L107297:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<107301> := xs<107295>varname;
      _vI107301_iterator__apos_2_mv_1563  = ptr_fI106797_cxx_compile_static->_vI107295_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI107301_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI107304__lam_1566)(FLX_FPAR_PASS this, ptr_fI106797_cxx_compile_static, ptrflx_processing))) ) goto _ml1565_L107300;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<107302>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<107301>varname));
      _vI107302_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI107301_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<107303>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<107301>varname));
      _vI107303_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI107301_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<107295>varname = t_param_std_1318<107303>varname;
      ptr_fI106797_cxx_compile_static->_vI107295_xs = _vI107303_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(108792)
      //yield (Some<80915>struct h_param_std_1319<107302>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI107302_h_param_std_1319));//yield
    FLX_CASE_LABEL(108792)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L107297;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L107300:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI107301_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L107299;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L107299:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L107297;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <94064>: generic_link_exe_dynamic_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI94064__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <94641>: toolchain_clang_apple_iOS_maker_uncurry::aux_uncurry: Apply method
void* _fI94641_aux_uncurry::apply(_at107697 const &_arg ){
  _vI94642_x_uncurry = _arg.data[0];
  _vI94643_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L94650:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<94646> := x_uncurry<94642>varname;
      _vI94646_aux__apos_2_mv_1387  = _vI94642_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI94646_aux__apos_2_mv_1387)==0) ) goto _ml1389_L94645;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<94643>varname;: type void*
      return _vI94643_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L94645:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI94646_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI94649__lam_1391)(FLX_FPAR_PASS this, ptrtoolchain_clang_apple_iOS_maker_uncurry))) ) goto _ml1390_L94644;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<94647>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<94646>varname));
      _vI94647_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI94646_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<94648>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<94646>varname));
      _vI94648_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI94646_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<94643> := (Snoc<80397>struct (y<94643>varname, h_param_std_1269<94647>varname));
      _vI94643_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94643_y, _vI94647_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<94642> := t_param_std_1268<94648>varname;
      _vI94642_x_uncurry  = _vI94648_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L94650;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L94644:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <93327>: toolchain_msvc_win32::aux_uncurry: Apply method
void* _fI93327_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93328_inp_uncurry = _arg.data[0];
  _vI93329_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93336:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93332> := inp_uncurry<93328>varname;
      _vI93332_aux__apos_2_mv_1381  = _vI93328_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93332_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93331;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93329>varname;: type void*
      return _vI93329_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93331:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93332_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93335__lam_1385)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml1384_L93330;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93333>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93332>varname));
      _vI93333_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93332_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93334>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93332>varname));
      _vI93334_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93332_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93329> := (Snoc<80397>struct (out<93329>varname, (fixup<93322>stackfun h_param_std_1267<93333>varname)));
      _vI93329_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93329_out, fixup(ptrtoolchain_msvc_win32)
      .apply(_vI93333_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93328> := t_param_std_1266<93334>varname;
      _vI93328_inp_uncurry  = _vI93334_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93336;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93330:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <96646>: flx_pkgconfig::get_variable::_lam_65276: Apply method
 ::flx::rtl::cl_t _lam_65276::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 11 to 16
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",265,11,265,16); // HACK! 
}

//------------------------------
//FUNCTION <68030>: exts::_lam_65653: Apply method
_at107674 _lam_65653::apply(_a14239t_107672 const &_arg ){
  _vI68032_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1380, cols 10 to 35
      //return (s<68032>varname, "link");: type _at107674
      return _at107674(_vI68032_s, ::std::string("link"));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1380,10,1380,35); // HACK! 
}

//------------------------------
//FUNCTION <96488>: flx_pkgconfig::tail_val::aux: Apply method
void* _fI96488_aux::apply(_at107697 const &_arg ){
  _vI96489_inp = _arg.data[0];
  _vI96490_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
    start_96482_L96509:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //aux_mv_1493<96493> := inp<96489>varname;
      aux_mv_1493  = _vI96489_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
      if(!(FLX_VNI(aux_mv_1493)==0) ) goto _ml1495_L96492;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<96496>stackfun ((Snoc<80397>struct (out<96490>varname, v<68640>varname)), Empty<80385>varname));: type void*
      return _fI96496_aux_uncurry(FLX_FPAR_PASS this, ptrtail_val, ptrflx_pkgconfig)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96490_out, ptrtail_val->_vI68640_v))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
    _ml1495_L96492:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1301, h_param_std_1302)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      if(!andthen(FLX_VNI(aux_mv_1493)==1, (FLX_NEWP(_lam_1502)(FLX_FPAR_PASS this, ptrtail_val, ptrflx_pkgconfig))) ) goto _ml1496_L96491;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 16 to 16
      //h_param_std_1302<96494>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1493<96493>varname));
      h_param_std_1302 = (*((_tt107677*)FLX_VNP(aux_mv_1493))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 14 to 14
      //t_param_std_1301<96495>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1493<96493>varname));
      t_param_std_1301 = (*((_tt107677*)FLX_VNP(aux_mv_1493))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 580, cols 12 to 24
      //aux_mv_1498<96508> := (lnot<5216>primfun (eq<81159>stackfun (h_param_std_1302<96494>varname, v<68640>varname)));
      aux_mv_1498  = !eq(h_param_std_1302, ptrtail_val->_vI68640_v) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
      if(!(aux_mv_1498%2==1) ) goto _ml1500_L96507;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //out<96490> := (Snoc<80397>struct (out<96490>varname, h_param_std_1302<96494>varname));
      _vI96490_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96490_out, h_param_std_1302))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<96489> := t_param_std_1301<96495>varname;
      _vI96489_inp  = t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_96482_L96509;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
    _ml1500_L96507:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<96489> := t_param_std_1301<96495>varname;
      _vI96489_inp  = t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_96482_L96509;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
    _ml1496_L96491:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",584,5,584,6); // HACK! 
}

//------------------------------
//FUNCTION <99148>: cxx_depcheck::aux: Apply method
void* _fI99148_aux::apply(_at107697 const &_arg ){
  _vI99149_inp = _arg.data[0];
  _vI99150_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
    start_93268_L99169:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //aux_mv_1471<99153> := inp<99149>varname;
      _vI99153_aux_mv_1471  = _vI99149_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
      if(!(FLX_VNI(_vI99153_aux_mv_1471)==0) ) goto _ml1473_L99152;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<99156>stackfun (out<99150>varname, Empty<80385>varname));: type void*
      return _fI99156_aux_uncurry(FLX_FPAR_PASS this, ptrcxx_depcheck)
      .apply(_at107697(_vI99150_out, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
    _ml1473_L99152:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1299, h_param_std_1300)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
      if(!andthen(FLX_VNI(_vI99153_aux_mv_1471)==1, (FLX_NEWP(_fI99166__lam_1480)(FLX_FPAR_PASS this, ptrcxx_depcheck))) ) goto _ml1474_L99151;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 16 to 16
      //h_param_std_1300<99154>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1471<99153>varname));
      _vI99154_h_param_std_1300 = (*((_tt107677*)FLX_VNP(_vI99153_aux_mv_1471))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 14 to 14
      //t_param_std_1299<99155>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1471<99153>varname));
      _vI99155_t_param_std_1299 = (*((_tt107677*)FLX_VNP(_vI99153_aux_mv_1471))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 548, cols 12 to 15
      //aux_mv_1476<99168> := (_lam_66155<99143>stackfun h_param_std_1300<99154>varname);
      _vI99168_aux_mv_1476  = _lam_66155(ptrcxx_depcheck)
      .apply(_vI99154_h_param_std_1300) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
      if(!(_vI99168_aux_mv_1476%2==1) ) goto _ml1478_L99167;
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //out<99150> := (Snoc<80397>struct (out<99150>varname, h_param_std_1300<99154>varname));
      _vI99150_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI99150_out, _vI99154_h_param_std_1300))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //inp<99149> := t_param_std_1299<99155>varname;
      _vI99149_inp  = _vI99155_t_param_std_1299; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      goto start_93268_L99169;
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
    _ml1478_L99167:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //inp<99149> := t_param_std_1299<99155>varname;
      _vI99149_inp  = _vI99155_t_param_std_1299; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      goto start_93268_L99169;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
    _ml1474_L99151:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 550, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 550, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",550,7,550,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",550,7,550,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",552,5,552,6); // HACK! 
}

//------------------------------
//FUNCTION <66523>: toolchain_gcc_linux::static_library_extension: Apply method
_a14239t_107672 _fI66523_static_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 740, cols 3 to 49
      //return ".a";: type _a14239t_107672
      return ::std::string(".a");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",740,3,740,49); // HACK! 
}

//------------------------------
//FUNCTION <94024>: generic_link_exe_dynamic_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI94024__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <91677>: process_config_text_uncurry::aux_uncurry: Apply method
void* _fI91677_aux_uncurry::apply(_at107697 const &_arg ){
  _vI91678_x_uncurry = _arg.data[0];
  _vI91679_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L91686:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<91682> := x_uncurry<91678>varname;
      _vI91682_aux__apos_2_mv_1387  = _vI91678_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI91682_aux__apos_2_mv_1387)==0) ) goto _ml1389_L91681;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<91679>varname;: type void*
      return _vI91679_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L91681:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI91682_aux__apos_2_mv_1387)==1, (FLX_NEWP(_lam_1391)(FLX_FPAR_PASS this, ptrprocess_config_text_uncurry))) ) goto _ml1390_L91680;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<91683>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<91682>varname));
      h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI91682_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<91684>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<91682>varname));
      t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI91682_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<91679> := (Snoc<80397>struct (y<91679>varname, h_param_std_1269<91683>varname));
      _vI91679_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI91679_y, h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<91678> := t_param_std_1268<91684>varname;
      _vI91678_x_uncurry  = t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L91686;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L91680:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <66419>: toolchain_msvc_win32::cxx_static_object_compiler: Apply method
int cxx_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66424_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1855, cols 5 to 54
      //_genout_urv93006<93006> := (xpopen<66338>stackfun (+<80787>stackfun ((+<80787>stackfun ((join_uncurry<89534>stackfun ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (macros<66321>varname, "/EHs")), "/c")), "/Zi")), "/MDd")), "/DFLX_STATIC_LINK")), "/wd4190")), "/nologo")), "cl.exe")), include_switches<66314>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66424>varname))), (+<14305>primfun ("/Fo", apply((prj0:record(dst:(string),src:(string)) -> string), spec<66424>varname))))));
      _genout_urv93006  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_msvc_win32->macros, ::std::string("/EHs")))), ::std::string("/c")))), ::std::string("/Zi")))), ::std::string("/MDd")))), ::std::string("/DFLX_STATIC_LINK")))), ::std::string("/wd4190")))), ::std::string("/nologo")))), ::std::string("cl.exe")))), ptrtoolchain_msvc_win32->include_switches)) /* apply_stack */, _vI66424_spec.src)) /* apply_stack */, ::std::string("/Fo") + _vI66424_spec.dst )) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1855, cols 5 to 54
      //_ds2_66257<66421>varname = _genout_urv93006<93006>varname;
      _ds2_66257 = _genout_urv93006; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1855, cols 5 to 54
      //result<66422>varname = apply((prj0:int * string -> int), _ds2_66257<66421>varname);
      _vI66422_result = _ds2_66257.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1855, cols 5 to 54
      //text<66423>varname = apply((prj1:int * string -> string), _ds2_66257<66421>varname);
      _vI66423_text = _ds2_66257.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66422>varname, text<66423>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66422_result, _vI66423_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1857, cols 5 to 18
      //return result<66422>varname;: type int
      return _vI66422_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1858,3,1858,4); // HACK! 
}

//------------------------------
//FUNCTION <107325>: flx_processing::ocaml_compile::_lam_66090: Apply method
 ::flx::rtl::cl_t _fI107325__lam_66090::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2428,5,2428,9); // HACK! 
}

//------------------------------
//FUNCTION <107040>: flx_processing::cxx_compile_dynamic1_uncurry::_lam_66062: Apply method
_a14239t_107672 _fI107040__lam_66062::apply(_a14239t_107672 const &_arg ){
  _vI107041_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2227, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<107041>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI107041_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2227,11,2227,40); // HACK! 
}

//------------------------------
//FUNCTION <105741>: flx_processing::find_cxx_pkgs: Apply method
void* find_cxx_pkgs::apply(_a14239t_107672 const &_arg ){
  _vI105749_src = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_98265_L106096;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ("[flx:find_cxx_pkgs] Scanning ", src<105749>varname)), " for package requirements")))), "\x0A")));
      {
      _a14239t_107672 _tmp108800 = (::std::string("[flx] ") + ((::std::string("[flx:find_cxx_pkgs] Scanning ") + _vI105749_src ) + ::std::string(" for package requirements") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108800)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2082, cols 5 to 81
    _end_98265_L106096:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2083, cols 5 to 28
      //out<105742>varname = Empty<80385>varname;
      _vI105742_out = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2084, cols 5 to 68
      //_genout_urv98266<106097> := (_ctor_RE2<15267>primfun ".*@requires package ([A-Za-z][A-Za-z0-9_-]*).*");
      _genout_urv98266  = ::std::shared_ptr< ::re2::RE2>(new RE2((::std::string(".*@requires package ([A-Za-z][A-Za-z0-9_-]*).*")))); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2084, cols 5 to 68
      //pat<105743>varname = _genout_urv98266<106097>varname;
      pat = _genout_urv98266; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 306, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_619_L106099;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_input_text] ", src<105749>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108801 = (::std::string("[Open_input_text] ") + _vI105749_src ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108801)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 306, cols 5 to 6
    _ifdoelse_std_619_L106099:;
    // # C:/projects/felix/src/packages/io.fdoc: line 307, cols 5 to 34
      //_genout_urv98284<106102> := (raw_fopen_input_text<8421>primfun src<105749>varname);
      _genout_urv98284  = fopen(_vI105749_src.c_str(),"r"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 307, cols 5 to 34
      //_genout_urv98275<106101> := _genout_urv98284<106102>varname;
      _genout_urv98275  = _genout_urv98284; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 307, cols 5 to 34
      //_genout_urv98277<106098> := _genout_urv98275<106101>varname;
      _genout_urv98277  = _genout_urv98275; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2085, cols 5 to 33
      //f<105744>varname = _genout_urv98277<106098>varname;
      _vI105744_f = _genout_urv98277; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
      //_genout_urv98285<106103> := (valid<8422>primfun f<105744>varname);
      _genout_urv98285  = _vI105744_f!=(FILE*)0; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
      if(!_genout_urv98285 ) goto _ifdoend_bootflx_65849_L105757;
    // # C:/projects/felix/src/packages/io.fdoc: line 340, cols 3 to 4
      //_genout_urv98308<106104> := iterator'2<106105>closure;
      _genout_urv98308  = (FLX_NEWP(_fI106105_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      //_generator_flx_2240<105745>varname = _genout_urv98308<106104>varname;
      _generator_flx_2240 = _genout_urv98308; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
    continue__ll_flx_2228_L105750:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      //find_cxx_pkgs_mv_66018<105719> := apply(_generator_flx_2240<105745>varname, ());
      find_cxx_pkgs_mv_66018  = (_generator_flx_2240)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
/*match case 1:|Some line_param_bootflx_65852*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      if(!andthen(FLX_VNI(find_cxx_pkgs_mv_66018)==1, (FLX_NEWP(_lam_66026)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66020_L105754;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      //line_param_bootflx_65852<105746>varname = (arg of case 1 of find_cxx_pkgs_mv_66018<105719>varname);
      line_param_bootflx_65852 = *((_a14239t_107672*)FLX_VNP(find_cxx_pkgs_mv_66018)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2088, cols 9 to 38
      //_genout_urv98322<106112> := (Match<15393>stackfun (pat<105743>varname, line_param_bootflx_65852<105746>varname));
      _genout_urv98322  = Match(FLX_FPAR_PASS pat, line_param_bootflx_65852); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2088, cols 9 to 38
      //result<105747>varname = _genout_urv98322<106112>varname;
      _vI105747_result = _genout_urv98322; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2089, cols 15 to 20
      //find_cxx_pkgs_mv_66021<105720> := result<105747>varname;
      find_cxx_pkgs_mv_66021  = _vI105747_result; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2090, cols 11 to 15
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2090, cols 11 to 15
      if(!(FLX_VNI(find_cxx_pkgs_mv_66021)==0) ) goto _ml66023_L105751;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      goto continue__ll_flx_2228_L105750;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2090, cols 11 to 15
    _ml66023_L105751:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 11 to 16
/*match case 2:|Some v_param_bootflx_65854_param_bootflx_65856*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 11 to 16
      if(!andthen(FLX_VNI(find_cxx_pkgs_mv_66021)==1, (FLX_NEWP(_lam_66025)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66024_L105752;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 16 to 16
      //v_param_bootflx_65854_param_bootflx_65856<105748>varname = (arg of case 1 of find_cxx_pkgs_mv_66021<105720>varname);
      _vI105748_v_pa_hash_487173675 = *((_poly_80462t_107729*)FLX_VNP(find_cxx_pkgs_mv_66021)); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(_vI105748_v_pa_hash_487173675))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 21 to 36
      //out<105742>varname = (Snoc<80397>struct (out<105742>varname, (unsafe_get<83437>primfun[string] (v_param_bootflx_65854_param_bootflx_65856<105748>varname, (_ctor_size<83435>primfun[size] (_ctor_size<80270>primfun[int] 1))))));
      _vI105742_out = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105742_out, _vI105748_v_pa_hash_487173675[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)]))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      goto continue__ll_flx_2228_L105750;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 11 to 16
    _ml66024_L105752:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2092, cols 9 to 13
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2092, cols 9 to 13
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2092,9,2092,13);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2092,9,2092,13);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      goto continue__ll_flx_2228_L105750;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
    _ml66020_L105754:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      if(!(FLX_VNI(find_cxx_pkgs_mv_66018)==0) ) goto _ml66027_L105755;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      goto _em66018_L105756;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
    _ml66027_L105755:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2093,7,2093,11);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2093,7,2093,11);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
    _em66018_L105756:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2094, cols 7 to 15
      // primcall fclose<8423>primproc f<105744>varname;
      (void)fclose(_vI105744_f);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
      goto _ifdoelse_bootflx_65850_L105758;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
    _ifdoend_bootflx_65849_L105757:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("Can't find C++ source file ", src<105749>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108804 = (::std::string("Can't find C++ source file ") + _vI105749_src ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108804)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2097, cols 7 to 22
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
    _ifdoelse_bootflx_65850_L105758:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2099, cols 5 to 17
      //out<105742>varname = (aux_uncurry<106114>stackfun (out<105742>varname, Empty<80385>varname));
      _vI105742_out = _fI106114_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697(_vI105742_out, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2101, cols 5 to 73
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI105742_out, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65858_L105760;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ file ", src<105749>varname)), " requires packages ")), (str<81092>stackfun out<105742>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108805 = (((::std::string("[flx] C++ file ") + _vI105749_src ) + ::std::string(" requires packages ") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI105742_out) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108805)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2101, cols 5 to 73
    _ifdoelse_bootflx_65858_L105760:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2102, cols 5 to 15
      //return out<105742>varname;: type void*
      return _vI105742_out;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2103,3,2103,4); // HACK! 
}

//------------------------------
//FUNCTION <103660>: setup-from-file_uncurry::aux_uncurry: Apply method
void* _fI103660_aux_uncurry::apply(_at107697 const &_arg ){
  _vI103661_x_uncurry = _arg.data[0];
  _vI103662_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L103669:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<103665> := x_uncurry<103661>varname;
      _vI103665_aux__apos_2_mv_1387  = _vI103661_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI103665_aux__apos_2_mv_1387)==0) ) goto _ml1389_L103664;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<103662>varname;: type void*
      return _vI103662_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L103664:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI103665_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI103668__lam_1391)(FLX_FPAR_PASS this, ptr_pI89521_setup__hyphen_from__hyphen_file_uncurry))) ) goto _ml1390_L103663;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<103666>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<103665>varname));
      _vI103666_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI103665_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<103667>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<103665>varname));
      _vI103667_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI103665_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<103662> := (Snoc<80397>struct (y<103662>varname, h_param_std_1269<103666>varname));
      _vI103662_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI103662_y, _vI103666_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<103661> := t_param_std_1268<103667>varname;
      _vI103661_x_uncurry  = _vI103667_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L103669;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L103663:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <106982>: flx_processing::runit: Apply method
int _fI106982_runit::apply(_pt107743* const &_arg ){
  _vI106984_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2909, cols 5 to 19
      //result<106983>varname = 0;
      _vI106983_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2915, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.FELIX == 1)) ) goto _ifdoend_bootflx_65986_L106986;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2911, cols 7 to 54
      //_genout_urv100552<107644> := (run_felix_compiler_if_required<106767>stackfun ehandler<106984>varname);
      _vI107644__genout_urv100552  = _fI106767_run_felix_compiler_if_required(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106984_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2911, cols 7 to 54
      //result<106983>varname = _genout_urv100552<107644>varname;
      _vI106983_result = _vI107644__genout_urv100552; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2912, cols 7 to 35
      if(!(!((_vI106983_result == 0)) ) ) goto _ifdoelse_bootflx_65987_L106987;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2912, cols 7 to 35
      //return result<106983>varname;: type int
      return _vI106983_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2915, cols 5 to 9
      goto _ifdoelse_bootflx_65987_L106987;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2915, cols 5 to 9
    _ifdoend_bootflx_65986_L106986:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65987_L106987;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Felix compilation skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp108807 = (::std::string("[flx] ") + ::std::string("Felix compilation skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108807)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2915, cols 5 to 9
    _ifdoelse_bootflx_65987_L106987:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<106716>stackproc  ehandler<106984>varname;
      {
      _pI106716_calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI106984_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2924, cols 5 to 9
      if(!(!((ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65991_L106989;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 33 to 41
      //dirname_mv_730<107648> := (split1<84047>stackfun apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname));
      _vI107648_dirname_mv_730  = split1(FLX_FPAR_PASS_ONLY)
      .apply(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 50 to 52
/*match case 1:(d_param_std_676, any)*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 50 to 50
      //d_param_std_676<107649>varname = apply((prj0:string^2 -> string), dirname_mv_730<107648>varname);
      _vI107649_d_param_std_676 = (_vI107648_dirname_mv_730.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1101, cols 5 to 6
  mkdirs(FLX_FPAR_PASS _vI107649_d_param_std_676);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2924, cols 5 to 9
    _ifdoelse_bootflx_65991_L106989:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2931, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CCOMPILEIT == 1)) ) goto _ifdoend_bootflx_65992_L106991;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2927, cols 7 to 52
      //_genout_urv100592<107650> := (run_cxx_compiler_if_required<106814>stackfun ehandler<106984>varname);
      _vI107650__genout_urv100592  = _fI106814_run_cxx_compiler_if_required(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106984_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2927, cols 7 to 52
      //result<106983>varname = _genout_urv100592<107650>varname;
      _vI106983_result = _vI107650__genout_urv100592; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2928, cols 7 to 35
      if(!(!((_vI106983_result == 0)) ) ) goto _ifdoelse_bootflx_65993_L106992;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2928, cols 7 to 35
      //return result<106983>varname;: type int
      return _vI106983_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2931, cols 5 to 9
      goto _ifdoelse_bootflx_65993_L106992;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2931, cols 5 to 9
    _ifdoend_bootflx_65992_L106991:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65993_L106992;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++ compilation (and linking and running) skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp108809 = (::std::string("[flx] ") + ::std::string("C++ compilation (and linking and running) skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108809)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2931, cols 5 to 9
    _ifdoelse_bootflx_65993_L106992:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2937, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CCOMPILEIT == 1)) ) goto _ifdoend_bootflx_65996_L106993;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2434, cols 4 to 33
      //_genout_urv100603<107654> := (ocaml_compile<106819>stackfun ehandler<106984>varname);
      _vI107654__genout_urv100603  = _fI106819_ocaml_compile(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106984_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2934, cols 7 to 54
      //result<106983>varname = _genout_urv100603<107654>varname;
      _vI106983_result = _vI107654__genout_urv100603; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2937, cols 5 to 9
      goto _ifdoelse_bootflx_65997_L106994;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2937, cols 5 to 9
    _ifdoend_bootflx_65996_L106993:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65997_L106994;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Ocaml compilation skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp108810 = (::std::string("[flx] ") + ::std::string("Ocaml compilation skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108810)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2937, cols 5 to 9
    _ifdoelse_bootflx_65997_L106994:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2944, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.LINKIT == 1)) ) goto _ifdoend_bootflx_65998_L106996;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2940, cols 7 to 46
      //_genout_urv100611<107658> := (run_linker_if_required<106929>stackfun ehandler<106984>varname);
      _vI107658__genout_urv100611  = _fI106929_run_linker_if_required(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106984_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2940, cols 7 to 46
      //result<106983>varname = _genout_urv100611<107658>varname;
      _vI106983_result = _vI107658__genout_urv100611; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2941, cols 7 to 35
      if(!(!((_vI106983_result == 0)) ) ) goto _ifdoelse_bootflx_65999_L106997;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2941, cols 7 to 35
      //return result<106983>varname;: type int
      return _vI106983_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2944, cols 5 to 9
      goto _ifdoelse_bootflx_65999_L106997;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2944, cols 5 to 9
    _ifdoend_bootflx_65998_L106996:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65999_L106997;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Link step skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp108811 = (::std::string("[flx] ") + ::std::string("Link step skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108811)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2944, cols 5 to 9
    _ifdoelse_bootflx_65999_L106997:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2951, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.RUNIT == 1)) ) goto _ifdoend_bootflx_66002_L106999;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2947, cols 7 to 47
      //_genout_urv100622<107662> := (run_program_if_required<106964>stackfun ehandler<106984>varname);
      _vI107662__genout_urv100622  = _fI106964_run_program_if_required(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106984_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2947, cols 7 to 47
      //result<106983>varname = _genout_urv100622<107662>varname;
      _vI106983_result = _vI107662__genout_urv100622; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2948, cols 7 to 35
      if(!(!((_vI106983_result == 0)) ) ) goto _ifdoelse_bootflx_66003_L107000;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2948, cols 7 to 35
      //return result<106983>varname;: type int
      return _vI106983_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2951, cols 5 to 9
      goto _ifdoelse_bootflx_66003_L107000;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2951, cols 5 to 9
    _ifdoend_bootflx_66002_L106999:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_66003_L107000;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Running program skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp108812 = (::std::string("[flx] ") + ::std::string("Running program skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108812)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2951, cols 5 to 9
    _ifdoelse_bootflx_66003_L107000:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2956, cols 5 to 9
      if(!(!((ptrflx_processing->_vI107004_control.EXPECT == ::std::string(""))) ) ) goto _ifdoelse_bootflx_66007_L107003;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2954, cols 7 to 40
      //_genout_urv100639<107666> := (check_output_if_required<106969>stackfun ());
      _vI107666__genout_urv100639  = _fI106969_check_output_if_required(ptrflx_processing)
      .apply() /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2954, cols 7 to 40
      //result<106983>varname = _genout_urv100639<107666>varname;
      _vI106983_result = _vI107666__genout_urv100639; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2955, cols 7 to 35
      if(!(!((_vI106983_result == 0)) ) ) goto _ifdoelse_bootflx_66007_L107003;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2955, cols 7 to 35
      //return result<106983>varname;: type int
      return _vI106983_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2956, cols 5 to 9
    _ifdoelse_bootflx_66007_L107003:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2957, cols 5 to 18
      //return result<106983>varname;: type int
      return _vI106983_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2958,3,2958,4); // HACK! 
}

//------------------------------
//FUNCTION <92637>: toolchain_msvc_win32::xpopen::aux_uncurry: Apply method
void* _fI92637_aux_uncurry::apply(_at107697 const &_arg ){
  _vI92638_inp_uncurry = _arg.data[0];
  _vI92639_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L92646:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<92642> := inp_uncurry<92638>varname;
      _vI92642_aux__apos_2_mv_1381  = _vI92638_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI92642_aux__apos_2_mv_1381)==0) ) goto _ml1383_L92641;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<92639>varname;: type void*
      return _vI92639_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L92641:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI92642_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI92645__lam_1385)(FLX_FPAR_PASS this, ptrxpopen, ptrtoolchain_msvc_win32))) ) goto _ml1384_L92640;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<92643>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<92642>varname));
      _vI92643_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI92642_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<92644>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<92642>varname));
      _vI92644_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI92642_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<92639> := (Snoc<80397>struct (out<92639>varname, (str<15241>stackfun h_param_std_1267<92643>varname)));
      _vI92639_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92639_out, _fI15241_str(_vI92643_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<92638> := t_param_std_1266<92644>varname;
      _vI92638_inp_uncurry  = _vI92644_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L92646;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L92640:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <97875>: flx_pkgconfig::aux: Apply method
void* _fI97875_aux::apply(_tt107698 const &_arg ){
  _vI97876_x = _arg.mem_0;
  _vI97877_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
    start_91607_L97887:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<97882> := (stl_find<14446>primfun (x<97876>varname, (subscript<81183>primfun[int] (":", 0))));
      _vI97882_find_mv_2105  = _vI97876_x.find((::flx::rtl::strutil::subscript(::std::string(":"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI97882_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L97884;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<97878> := None<81378>varname;
      _vI97878_aux_mv_2285  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_91577_L97885;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L97884:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<97883>varname = find_mv_2105<97882>varname;
      _vI97883_i_param_std_1893 = _vI97882_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<97878> := (Some<81379>struct i_param_std_1893<97883>varname);
      _vI97878_aux_mv_2285  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI97883_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_91577_L97885:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
      if(!(FLX_VNI(_vI97878_aux_mv_2285)==0) ) goto _ml2287_L97880;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<80397>struct (y<97877>varname, x<97876>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97877_y, _vI97876_x)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
    _ml2287_L97880:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
/*match case 2:|Some n_param_std_1968*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      if(!andthen(FLX_VNI(_vI97878_aux_mv_2285)==1, (FLX_NEWP(_fI97886__lam_2289)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml2288_L97881;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 14 to 14
      //n_param_std_1968<97879>varname = (arg of case 1 of aux_mv_2285<97878>varname);
      _vI97879_n_param_std_1968 = *((_a5094t_107688*)FLX_VNP(_vI97878_aux_mv_2285)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //y<97877> := (Snoc<80397>struct (y<97877>varname, (copyto<81376>primfun[size] (x<97876>varname, n_param_std_1968<97879>varname))));
      _vI97877_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97877_y, ::flx::rtl::strutil::substr(_vI97876_x,0,_vI97879_n_param_std_1968)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //x<97876> := (copyfrom<81377>primfun[size] (x<97876>varname, (+<80900>primfun[size] (n_param_std_1968<97879>varname, literal[size]("1")))));
      _vI97876_x  = ::flx::rtl::strutil::substr(_vI97876_x,_vI97879_n_param_std_1968 + 1 ,_vI97876_x.size()); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      goto start_91607_L97887;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
    _ml2288_L97881:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",480,5,480,6); // HACK! 
}

//------------------------------
//FUNCTION <93340>: toolchain_msvc_win32::fixup: Apply method
_a14239t_107672 _fI93340_fixup::apply(_a14239t_107672 const &_arg ){
  _vI93341_s = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 373, cols 3 to 4
      //fixup_mv_66238<93342> := (==<80464>primfun[string] ((copyto<81376>primfun[size] (s<93341>varname, (len<14304>primfun "-L"))), "-L"));
      fixup_mv_66238  = (::flx::rtl::strutil::substr(_vI93341_s,0,::std::string("-L").size()) == ::std::string("-L")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1760, cols 33 to 83
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1760, cols 33 to 83
      if(!(fixup_mv_66238%2==1) ) goto _ml66240_L93343;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1760, cols 33 to 83
      //return (+<14305>primfun ("/LIBPATH:", (copyfrom<81959>primfun[int] (s<93341>varname, 2))));: type _a14239t_107672
      return ::std::string("/LIBPATH:") + ::flx::rtl::strutil::substr(_vI93341_s,2,_vI93341_s.size()) ;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1760, cols 33 to 83
    _ml66240_L93343:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1760, cols 33 to 83
/*match case 2:any*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1760, cols 33 to 83
      //return s<93341>varname;: type _a14239t_107672
      return _vI93341_s;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1761,5,1761,70); // HACK! 
}

//------------------------------
//FUNCTION <89782>: toolchain_clang_apple_iOS_maker_uncurry::cxx_static_object_compiler: Apply method
int _fI89782_cxx_static_object_compiler::apply(_art107759 const &_arg ){
  _vI89784_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2089, cols 5 to 6
      //result<89783>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_cxx_compile_flags<89749>varname, CCOBJ_STATIC_LIB:cxx_compiler<89740>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<89784>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<89784>varname)));
      _vI89783_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89749_base_cxx_compile_flags, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89740_cxx_compiler, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.header_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.macros, ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89784_spec.src, _vI89784_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2090, cols 5 to 18
      //return result<89783>varname;: type int
      return _vI89783_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2091,3,2091,4); // HACK! 
}

//------------------------------
//FUNCTION <66386>: toolchain_msvc_win32::dependency_parser: Apply method
void* dependency_parser::apply(_a14239t_107672 const &_arg ){
  _vI66395_data = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1818, cols 4 to 34
      //lines<66388>varname = (split<14933>stackfun (data<66395>varname, "\x0A"));
      lines = split(FLX_FPAR_PASS_ONLY)
      .apply(_at107674(_vI66395_data, ::std::string("\n"))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1819, cols 4 to 29
      //files<66389>varname = Empty<80385>varname;
      files = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<92883> := lines<66388>varname;
      _vI92883_xs  = lines; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv92882<92882> := iterator'2<92884>closure;
      _genout_urv92882  = (FLX_NEWP(_fI92884_iterator__apos_2)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)); //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      //_generator_toolchain_4081<66390>varname = _genout_urv92882<92882>varname;
      _generator_toolchain_4081 = _genout_urv92882; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
    continue__ll_toolchain_4050_L66396:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      //dependency_parser_mv_66250<66250> := apply(_generator_toolchain_4081<66390>varname, ());
      dependency_parser_mv_66250  = (_generator_toolchain_4081)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
/*match case 1:|Some line_param_bootflx_66204*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      if(!andthen(FLX_VNI(dependency_parser_mv_66250)==1, (FLX_NEWP(_lam_66253)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml66252_L66403;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      //line_param_bootflx_66204<66393>varname = (arg of case 1 of dependency_parser_mv_66250<66250>varname);
      line_param_bootflx_66204 = *((_a14239t_107672*)FLX_VNP(dependency_parser_mv_66250)); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1830, cols 6 to 10
      if(!((::flx::rtl::strutil::substr(line_param_bootflx_66204,0,::std::string("Note: including file: ").size()) == ::std::string("Note: including file: "))) ) goto continue__ll_toolchain_4050_L66396;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1822, cols 8 to 39
      //name<66394>varname = (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<81959>primfun[int] (line_param_bootflx_66204<66393>varname, 22)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      name = lstrip(rstrip(::flx::rtl::strutil::substr(line_param_bootflx_66204,22,line_param_bootflx_66204.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1829, cols 8 to 12
      if(!(!((::flx::rtl::strutil::substr(name,0,::std::string("C:\\Program Files").size()) == ::std::string("C:\\Program Files")))  && !((::flx::rtl::strutil::substr(name,0,::std::string("c:\\program files").size()) == ::std::string("c:\\program files")))  ) ) goto continue__ll_toolchain_4050_L66396;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1828, cols 10 to 14
      if(mem_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107790((FLX_NEWP(_lam_1457)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)), files)) /* apply_stack */) goto continue__ll_toolchain_4050_L66396;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1827, cols 12 to 31
      //files<66389>varname = (Snoc<80397>struct (files<66389>varname, name<66394>varname));
      files = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(files, name))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      goto continue__ll_toolchain_4050_L66396;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      goto continue__ll_toolchain_4050_L66396;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      goto continue__ll_toolchain_4050_L66396;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      goto continue__ll_toolchain_4050_L66396;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
    _ml66252_L66403:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      if(!(FLX_VNI(dependency_parser_mv_66250)==0) ) goto _ml66254_L66404;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      goto _em66250_L66405;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
    _ml66254_L66404:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
/*match failure*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1831,4,1831,8);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1831,4,1831,8);
;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1831, cols 4 to 8
    _em66250_L66405:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<92972>stackfun (files<66389>varname, Empty<80385>varname));: type void*
      return _fI92972_aux_uncurry(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)
      .apply(_at107697(files, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1833,3,1833,4); // HACK! 
}

//------------------------------
//FUNCTION <93968>: generic_link_exe_static_uncurry::aux_uncurry: Apply method
void* _fI93968_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93969_inp_uncurry = _arg.data[0];
  _vI93970_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93977:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93973> := inp_uncurry<93969>varname;
      _vI93973_aux__apos_2_mv_1381  = _vI93969_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93973_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93972;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93970>varname;: type void*
      return _vI93970_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93972:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93973_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93976__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_link_exe_static_uncurry))) ) goto _ml1384_L93971;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93974>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93973>varname));
      _vI93974_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93973_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93975>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93973>varname));
      _vI93975_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93973_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93970> := (Snoc<80397>struct (out<93970>varname, (quote_arg<16873>stackfun h_param_std_1267<93974>varname)));
      _vI93970_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93970_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI93974_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93969> := t_param_std_1266<93975>varname;
      _vI93969_inp_uncurry  = _vI93975_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93977;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93971:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <91704>: process_config_text_uncurry::_lam_2975: Apply method
 ::flx::rtl::cl_t _lam_2975::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",567,5,567,9); // HACK! 
}

//------------------------------
//FUNCTION <66906>: toolchain_clang_osx::cxx_compiler_vendor: Apply method
_a14239t_107672 _fI66906_cxx_compiler_vendor::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1458, cols 3 to 47
      //return "clang";: type _a14239t_107672
      return ::std::string("clang");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1458,3,1458,47); // HACK! 
}

//------------------------------

//PROCEDURE <106025:> flx_processing::echoln: Call method
::flx::rtl::con_t * echoln::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI106026_x = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <106025:> flx_processing::echoln: Resume method
::flx::rtl::con_t *echoln::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2000, cols 5 to 67
      if(!((ptrflx_processing->_vI106023_control.ECHO == 1)) ) goto _ifdoelse_bootflx_65840_L106027;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", x<106026>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108817 = (::std::string("[flx] ") + _vI106026_x ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108817)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2001, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 2000, cols 5 to 67
    _ifdoelse_bootflx_65840_L106027:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2001, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <96389>: flx_pkgconfig::add_val::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI96389__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <103236>: find_uncurry::_lam_1595: Apply method
 ::flx::rtl::cl_t _lam_1595::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 759, cols 7 to 21
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",759,7,759,21); // HACK! 
}

//------------------------------
//FUNCTION <97070>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI97070__lam_1457::apply(_a14239t_107672 const &_arg ){
  _vI97071_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<81159>stackfun (x<97071>varname, pkg<68708>varname));: type  ::flx::rtl::cl_t
      return eq(_vI97071_x, ptrhandle_pkg->_vI68708_pkg);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <107094>: flx_processing::find_cxx_pkgs::_lam_66025: Apply method
 ::flx::rtl::cl_t _fI107094__lam_66025::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 11 to 16
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2091,11,2091,16); // HACK! 
}

//------------------------------
//FUNCTION <103171>: exts::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI103171__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66963>: toolchain_clang_osx::static_library_linker: Apply method
int _fI66963_static_library_linker::apply(_art107763 const &_arg ){
  _vI66966_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1607, cols 5 to 6
      //result<66965>varname = (generic_static_library_uncurry<89475>stackfun (( CCFLAGS:(Snoc<80397>struct (Empty<80385>varname, "-rcs")), CCLINK_STATIC_LIB:"ar", SPEC_LIB_FILENAME:"", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66966>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66966>varname)));
      _vI66965_result = generic_static_library_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107809(_art107808(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-rcs")))), ::std::string("ar"), ::std::string(""), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66966_spec.srcs, _vI66966_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1608, cols 5 to 18
      //return result<66965>varname;: type int
      return _vI66965_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1609,3,1609,4); // HACK! 
}

//------------------------------
//FUNCTION <91685>: process_config_text_uncurry::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <89534>: join_uncurry: Apply method
void* _fI89534_join_uncurry::apply(_at107697 const &_arg ){
  _vI89990_x_uncurry = _arg.data[0];
  _vI89991_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //is_empty_mv_1368<92211> := x_uncurry<89990>varname;
      _vI92211_is_empty_mv_1368  = _vI89990_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
      if(!(FLX_VNI(_vI92211_is_empty_mv_1368)==0) ) goto _ml1370_L92210;
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //_urv92208<92208> := (case 1 of bool);
      _urv92208  = 1; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      goto _end_inline_is_empty_92213_L92213;
    // # C:/projects/felix/src/packages/lists.fdoc: line 261, cols 7 to 12
    _ml1370_L92210:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 262, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
      //_urv92208<92208> := (case 0 of bool);
      _urv92208  = 0; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 263, cols 3 to 4
    _end_inline_is_empty_92213_L92213:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 404, cols 5 to 9
      if(!_urv92208 ) goto _ifdoend_std_1274_L89992;
    // # C:/projects/felix/src/packages/lists.fdoc: line 397, cols 7 to 15
      //return y<89991>varname;: type void*
      return _vI89991_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 404, cols 5 to 9
    _ifdoend_std_1274_L89992:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 130, cols 5 to 18
      //(deref<80855>primfun[list] &z<89993>ref) = (aux_uncurry<92232>stackfun (x_uncurry<89990>varname, Empty<80385>varname));
      *((void**)&_vI89993_z)  = _fI92232_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89990_x_uncurry, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 131, cols 5 to 25
      // primcall rev_last<80856>primproc[string, &list] (&z<89993>ref, &last<89994>ref);
      {
      void** _tmp108818 = (void**)&_vI89993_z;
      void** _tmp108819 = (void**)&_vI89994_last;
      _rev_last(((_tmp108818)),((_tmp108819)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 402, cols 7 to 24
      // primcall splice<80850>primproc[string] (&last<89994>ref, y<89991>varname);
      {
      void** _tmp108820 = (void**)&_vI89994_last;
      
    { // list splice
      //struct node_t { _a14239t_107672 elt; void *tail; };
      struct node_t { void *tail; _a14239t_107672 elt; };
      void **p = ((_tmp108820));
      while(*p) p = &((node_t*)FLX_VNP(*p))->tail;
      *p = _vI89991_y;
    }
    
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 403, cols 7 to 15
      //return z<89993>varname;: type void*
      return _vI89993_z;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",405,3,405,4); // HACK! 
}

//------------------------------
//FUNCTION <68371>: FlxPkgConfigQuery::getpkgfield1: Apply method
_ft107717* getpkgfield1::apply(_pt107743* const &_arg ){
  _vI68385_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 521, cols 5 to 6
      //return getpkgfield1'2<68373>closure;: type _ft107717*
      return (FLX_NEWP(_fI68373_getpkgfield1__apos_2)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",521,5,521,6); // HACK! 
}

//------------------------------
//FUNCTION <66756>: toolchain_clang_linux::static_executable_linker: Apply method
int _fI66756_static_executable_linker::apply(_art107763 const &_arg ){
  _vI66759_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1382, cols 5 to 6
      //result<66758>varname = (generic_link_exe_static_uncurry<89531>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<66685>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66759>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66759>varname)));
      _vI66758_result = generic_link_exe_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_clang_linux->_vI66685_linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_linux->_vI66768_config.library_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.static_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66759_spec.srcs, _vI66759_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1383, cols 5 to 18
      //return result<66758>varname;: type int
      return _vI66758_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1384,3,1384,4); // HACK! 
}

//------------------------------
//FUNCTION <89764>: toolchain_clang_apple_iOS_maker_uncurry::c_dependency_generator: Apply method
_tt107757 _fI89764_c_dependency_generator::apply(_art107756 const &_arg ){
  _vI89768_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2017, cols 6 to 7
      //_ds2_66185<89765>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:c_compiler<89739>varname, CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), "-MM")), sdk<89736>varname)), "-isysroot")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj0:record(src:(string)) -> string), spec<89768>varname)));
      _ds2_66185 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89739_c_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.ccflags, ::std::string("-MM")))), ptrtoolchain_clang_apple_iOS_maker_uncurry->sdk))), ::std::string("-isysroot")))), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.header_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.macros, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89768_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2017, cols 6 to 7
      //result<89766>varname = apply((prj0:int * string -> int), _ds2_66185<89765>varname);
      _vI89766_result = _ds2_66185.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2017, cols 6 to 7
      //data<89767>varname = apply((prj1:int * string -> string), _ds2_66185<89765>varname);
      _vI89767_data = _ds2_66185.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2018, cols 6 to 26
      //return (result<89766>varname, data<89767>varname);: type _tt107757
      return _tt107757(_vI89766_result, _vI89767_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2019,3,2019,4); // HACK! 
}

//------------------------------
//C FUNC <83444>: _ctor_varray
_poly_83443t_108082 _ctor_varray(FLX_APAR_DECL  _a5094t_107688 bound, _a15268t_108081 _vI83605__default){
  _a5094t_107688 _vI83710_i;
  _poly_83443t_108082 _vI83708_o;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 638, cols 5 to 28
      //o<83708>varname = (_ctor_varray<83707>primfun[StringPiece] bound<83604>varname);
      _vI83708_o = (_a15268t_108081*)(PTF gcp->collector->create_empty_array(&_a15268t_108081_ptr_map,bound)); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 642, cols 5 to 9
      if(!(!(((PTF gcp->collector->get_count(_vI83708_o)) == bound)) ) ) goto _ifdoelse_std_1687_L83705;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("Constructor failed, wrong bound", "\x0A")));
      {
      _a14239t_107672 _tmp108821 = ::std::string("Constructor failed, wrong bound") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108821)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("input Bound = ", (str<83517>primfun[size] bound<83604>varname))), ", actual maxlen = ")), (str<83517>primfun[size] (maxlen<83709>primfun[StringPiece] o<83708>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108822 = (((::std::string("input Bound = ") + ::flx::rtl::strutil::str<_a5094t_107688>(bound) ) + ::std::string(", actual maxlen = ") ) + ::flx::rtl::strutil::str<_a5094t_107688>((PTF gcp->collector->get_count(_vI83708_o))) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108822)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/arrays.fdoc: line 642, cols 5 to 9
    _ifdoelse_std_1687_L83705:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 650, cols 5 to 14
      if(!((0 < bound)) ) goto _ifdoelse_std_1689_L83698;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 650, cols 23 to 9
      //i<83710>varname = literal[size]("0");
      _vI83710_i = 0; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 650, cols 23 to 9
    redo__ll_arrays_6040_L83701:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 650, cols 23 to 9
      if(FLX_UNLIKELY(!(!((bound - 1  < _vI83710_i)) ) )) goto _ifdoelse_std_1689_L83698;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 648, cols 5 to 9
      if(!(!(((PTF gcp->collector->get_used(_vI83708_o)) < (PTF gcp->collector->get_count(_vI83708_o)))) ) ) goto _ifdoelse_std_1691_L83703;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("ctor1: attempt to push_back on full varray size ", (str<83517>primfun[size] (maxlen<83709>primfun[StringPiece] o<83708>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108823 = (::std::string("ctor1: attempt to push_back on full varray size ") + ::flx::rtl::strutil::str<_a5094t_107688>((PTF gcp->collector->get_count(_vI83708_o))) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108823)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("bound = ", (str<83517>primfun[size] bound<83604>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108824 = (::std::string("bound = ") + ::flx::rtl::strutil::str<_a5094t_107688>(bound) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108824)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("index = ", (str<83517>primfun[size] i<83710>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108825 = (::std::string("index = ") + ::flx::rtl::strutil::str<_a5094t_107688>(_vI83710_i) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108825)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/arrays.fdoc: line 648, cols 5 to 9
    _ifdoelse_std_1691_L83703:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 772, cols 5 to 9
      if(!(!(((PTF gcp->collector->get_used(_vI83708_o)) < (PTF gcp->collector->get_count(_vI83708_o)))) ) ) goto _ifdoelse_std_1701_L91808;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("attempt to push_back on full varray size ", (str<83517>primfun[size] (maxlen<83709>primfun[StringPiece] o<83708>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108826 = (::std::string("attempt to push_back on full varray size ") + ::flx::rtl::strutil::str<_a5094t_107688>((PTF gcp->collector->get_count(_vI83708_o))) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108826)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/arrays.fdoc: line 772, cols 5 to 9
    _ifdoelse_std_1701_L91808:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 773, cols 5 to 21
      // primcall _push_back<83739>primproc[StringPiece] (o<83708>varname, default<83605>varname);
      
    {
      //_a15268t_108081 * _p = *_vI83708_o;
      size_t n = PTF gcp->collector->get_used(_vI83708_o);
      PTF gcp->collector->incr_used(_vI83708_o,1L);
      new(_vI83708_o+n) _a15268t_108081(_vI83605__default);
    }
  
    // # C:/projects/felix/src/packages/arrays.fdoc: line 650, cols 23 to 9
      // primcall pre_incr<81537>primproc[size] &i<83710>ref;
      {
      _a5094t_107688* _tmp108827 = (_a5094t_107688*)&_vI83710_i;
      ++*((_tmp108827));
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 650, cols 23 to 9
      goto redo__ll_arrays_6040_L83701;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 650, cols 5 to 14
    _ifdoelse_std_1689_L83698:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 651, cols 5 to 13
      //return o<83708>varname;: type _poly_83443t_108082
      return _vI83708_o;
}
//------------------------------
//FUNCTION <66940>: toolchain_clang_osx::dependency_parser: Apply method
void* _fI66940_dependency_parser::apply(_a14239t_107672 const &_arg ){
  _vI66942_data = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1507, cols 3 to 4
      //return (generic_dependency_parser<68198>stackfun data<66942>varname);: type void*
      return generic_dependency_parser(FLX_FPAR_PASS_ONLY)
      .apply(_vI66942_data) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1507,3,1507,4); // HACK! 
}

//------------------------------
//FUNCTION <66562>: toolchain_gcc_linux::cxx_static_library_object_compiler: Apply method
int _fI66562_cxx_static_library_object_compiler::apply(_art107759 const &_arg ){
  _vI66565_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 852, cols 5 to 6
      //result<66564>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_cxx_compile_flags<66506>varname, "-D_GLIBCXX_USE_CXX11_ABI=1")), "-fvisibility=hidden")), CCOBJ_STATIC_LIB:cxx_compiler<66502>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), MACROS:(Snoc<80397>struct (apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), "FLX_STATIC_LINK")), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66565>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66565>varname)));
      _vI66564_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_linux->_vI66506_base_cxx_compile_flags, ::std::string("-D_GLIBCXX_USE_CXX11_ABI=1")))), ::std::string("-fvisibility=hidden")))), ptrtoolchain_gcc_linux->cxx_compiler, ptrtoolchain_gcc_linux->_vI66586_config.header_search_dirs, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_linux->_vI66586_config.macros, ::std::string("FLX_STATIC_LINK")))), ::std::string("-o "), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66565_spec.src, _vI66565_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 853, cols 5 to 18
      //return result<66564>varname;: type int
      return _vI66564_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",854,3,854,4); // HACK! 
}

//------------------------------
//FUNCTION <106591>: flx_processing::run_program_dynamic::aux_uncurry: Apply method
void* _fI106591_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106592_inp_uncurry = _arg.data[0];
  _vI106593_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L106600:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<106596> := inp_uncurry<106592>varname;
      _vI106596_aux__apos_2_mv_1381  = _vI106592_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI106596_aux__apos_2_mv_1381)==0) ) goto _ml1383_L106595;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<106593>varname;: type void*
      return _vI106593_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L106595:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI106596_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI106599__lam_1385)(FLX_FPAR_PASS this, ptrrun_program_dynamic, ptrflx_processing))) ) goto _ml1384_L106594;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<106597>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<106596>varname));
      _vI106597_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI106596_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<106598>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<106596>varname));
      _vI106598_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI106596_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<106593> := (Snoc<80397>struct (out<106593>varname, (str<15241>stackfun h_param_std_1267<106597>varname)));
      _vI106593_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106593_out, _fI15241_str(_vI106597_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<106592> := t_param_std_1266<106598>varname;
      _vI106592_inp_uncurry  = _vI106598_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L106600;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L106594:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <97757>: flx_pkgconfig::parse_args::aux::_lam_1502: Apply method
 ::flx::rtl::cl_t _fI97757__lam_1502::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",579,9,579,17); // HACK! 
}

//------------------------------
//FUNCTION <105725>: flx_processing::system: Apply method
int system::apply(_a14239t_107672 const &_arg ){
  _vI105729_cmd = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106077>ref;
      {
      __timeb64* _tmp108829 = (__timeb64*)&_vI106077_tv;
      _ftime64_s(((_tmp108829)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96165<106076> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106077>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106077>varname)), literal[double]("1.0e3")))));
      _genout_urv96165  = (static_cast<double>((_vI106077_tv.time))) + ((static_cast<double>((_vI106077_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2025, cols 5 to 26
      //now<105726>varname = _genout_urv96165<106076>varname;
      _vI105726_now = _genout_urv96165; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2026, cols 5 to 54
      if(!((ptrflx_processing->_vI106023_control.ECHO == 1)) ) goto _ifdoelse_bootflx_65844_L105731;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun (cmd<105729>varname, "\x0A")));
      {
      _a14239t_107672 _tmp108830 = _vI105729_cmd + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108830)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2026, cols 5 to 54
    _ifdoelse_bootflx_65844_L105731:;
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L106079;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", cmd<105729>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108831 = (::std::string("[system] ") + _vI105729_cmd ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108831)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L106079:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv96182<106084> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", cmd<105729>varname)), """)));
      _genout_urv96182  = ::std::system(((::std::string("\"") + _vI105729_cmd ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<106083> := _genout_urv96182<106084>varname;
      _vI106083__genout_urv93723  = _genout_urv96182; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<106082> := _genout_urv93723<106083>varname;
      _vI106082__genout_urv93715  = _vI106083__genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<106081> := _genout_urv93715<106082>varname;
      _vI106081__genout_urv93710  = _vI106082__genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv96173<106078> := _genout_urv93710<106081>varname;
      _genout_urv96173  = _vI106081__genout_urv93710; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2027, cols 5 to 37
      //result<105727>varname = _genout_urv96173<106078>varname;
      _vI105727_result = _genout_urv96173; //assign simple
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106086>ref;
      {
      __timeb64* _tmp108832 = (__timeb64*)&_vI106086_tv;
      _ftime64_s(((_tmp108832)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96183<106085> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106086>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106086>varname)), literal[double]("1.0e3")))));
      _genout_urv96183  = (static_cast<double>((_vI106086_tv.time))) + ((static_cast<double>((_vI106086_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2028, cols 5 to 36
      //elapsed<105728>varname = (-<80547>primfun[double] (_genout_urv96183<106085>varname, now<105726>varname));
      _vI105728_elapsed = _genout_urv96183 - _vI105726_now ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2033, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.ECHO == 1)) ) goto _ifdoelse_bootflx_65846_L105733;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("System:Elapsed: ", (fmt<80548>stackfun (elapsed<105728>varname, (fixed<5838>struct (8, 3)))))), ", Result code ")), (str<80203>primfun[int] result<105727>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108833 = (((::std::string("System:Elapsed: ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI105728_elapsed, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(8, 3))))) /* apply_stack */ ) + ::std::string(", Result code ") ) + ::flx::rtl::strutil::str<int>(_vI105727_result) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108833)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2033, cols 5 to 9
    _ifdoelse_bootflx_65846_L105733:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2034, cols 5 to 18
      //return result<105727>varname;: type int
      return _vI105727_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2035,3,2035,4); // HACK! 
}

//------------------------------
//FUNCTION <68373>: FlxPkgConfigQuery::getpkgfield1::getpkgfield1'2: Apply method
_a14239t_107672 _fI68373_getpkgfield1__apos_2::apply(_at107674 const &_arg ){
  _vI68379_pkg = _arg.data[0];
  _vI68380_field = _arg.data[1];
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 506, cols 7 to 52
      //values<68375>varname = (getpkgfield_uncurry<89507>stackfun (ehandler<68385>varname, pkg<68379>varname, field<68380>varname));
      _vI68375_values = getpkgfield_uncurry(FLX_FPAR_PASS ptrFlxPkgConfigQuery)
      .apply(_tt107874(ptrgetpkgfield1->_vI68385_ehandler, _vI68379_pkg, _vI68380_field)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 507, cols 13 to 18
      //getpkgfield1'2_mv_65348<65348> := values<68375>varname;
      _vI65348_getpkgfield1__apos_2_mv_65348  = _vI68375_values; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 508, cols 9 to 23
/*match case 1:|Cons (h_param_bootflx_65319, |Empty)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 508, cols 9 to 23
      if(!andthen(!!_vI65348_getpkgfield1__apos_2_mv_65348 , (FLX_NEWP(_lam_65351)(FLX_FPAR_PASS this, ptrgetpkgfield1, ptrFlxPkgConfigQuery))) ) goto _ml65350_L68381;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 508, cols 15 to 15
      //h_param_bootflx_65319<68378>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] getpkgfield1'2_mv_65348<65348>varname));
      h_param_bootflx_65319 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(_vI65348_getpkgfield1__apos_2_mv_65348))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 508, cols 28 to 36
      //return h_param_bootflx_65319<68378>varname;: type _a14239t_107672
      return h_param_bootflx_65319;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 508, cols 9 to 23
    _ml65350_L68381:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 509, cols 9 to 14
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 509, cols 9 to 14
      if(!(FLX_VNI(_vI65348_getpkgfield1__apos_2_mv_65348)==0) ) goto _ml65352_L68382;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Required field ", field<68380>varname)), " not found in package ")), pkg<68379>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108834 = (((::std::string("Required field ") + _vI68380_field ) + ::std::string(" not found in package ") ) + _vI68379_pkg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108834)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<68385>varname);
      {
      _a6258t_107873 _tmp108835 = (_a6258t_107873)(ptrgetpkgfield1->_vI68385_ehandler);
      throw ((_tmp108835));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 509, cols 9 to 14
      FLX_HALT("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",509,9,509,14,"HALT: Jump to end of function");
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 509, cols 9 to 14
    _ml65352_L68382:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 515, cols 9 to 9
/*match case 3:any*/
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Multiple values for field ", field<68380>varname)), " in ")), pkg<68379>varname)), " not allowed, got")), (str<81092>stackfun values<68375>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108836 = (((((::std::string("Multiple values for field ") + _vI68380_field ) + ::std::string(" in ") ) + _vI68379_pkg ) + ::std::string(" not allowed, got") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68375_values) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108836)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<68385>varname);
      {
      _a6258t_107873 _tmp108837 = (_a6258t_107873)(ptrgetpkgfield1->_vI68385_ehandler);
      throw ((_tmp108837));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 515, cols 9 to 9
      FLX_HALT("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",515,9,515,9,"HALT: Jump to end of function");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",521,5,521,6); // HACK! 
}

//------------------------------
//FUNCTION <98760>: run_felix_compiler::aux_uncurry: Apply method
void* _fI98760_aux_uncurry::apply(_at107697 const &_arg ){
  _vI98761_inp_uncurry = _arg.data[0];
  _vI98762_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L98769:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<98765> := inp_uncurry<98761>varname;
      _vI98765_aux__apos_2_mv_1381  = _vI98761_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI98765_aux__apos_2_mv_1381)==0) ) goto _ml1383_L98764;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<98762>varname;: type void*
      return _vI98762_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L98764:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI98765_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI98768__lam_1385)(FLX_FPAR_PASS this, ptrrun_felix_compiler))) ) goto _ml1384_L98763;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<98766>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<98765>varname));
      _vI98766_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI98765_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<98767>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<98765>varname));
      _vI98767_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI98765_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<98762> := (Snoc<80397>struct (out<98762>varname, (_lam_65388<68294>stackfun h_param_std_1267<98766>varname)));
      _vI98762_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98762_out, _lam_65388(ptrrun_felix_compiler)
      .apply(_vI98766_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<98761> := t_param_std_1266<98767>varname;
      _vI98761_inp_uncurry  = _vI98767_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L98769;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L98763:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93433>: generic_cxx_gen_deps_uncurry::aux_uncurry: Apply method
void* _fI93433_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93434_inp_uncurry = _arg.data[0];
  _vI93435_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93442:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93438> := inp_uncurry<93434>varname;
      _vI93438_aux__apos_2_mv_1381  = _vI93434_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93438_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93437;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93435>varname;: type void*
      return _vI93435_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93437:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93438_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93441__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_gen_deps_uncurry))) ) goto _ml1384_L93436;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93439>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93438>varname));
      _vI93439_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93438_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93440>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93438>varname));
      _vI93440_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93438_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93435> := (Snoc<80397>struct (out<93435>varname, (mkmac<68179>stackfun h_param_std_1267<93439>varname)));
      _vI93435_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93435_out, mkmac(_vI93439_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93434> := t_param_std_1266<93440>varname;
      _vI93434_inp_uncurry  = _vI93440_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93442;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93436:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <90819>: _a90819__ctor_string: Apply method
_a14239t_107672 _a90819__ctor_string::apply(_a15268t_108081 const &_arg ){
  _a90820 = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 952, cols 5 to 48
      //return (_ctor_string<15280>primfun _a90820<90820>varname);: type _a14239t_107672
      return _a90820.as_string();
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",952,5,952,48); // HACK! 
}

//------------------------------
//FUNCTION <106032>: flx_processing::cxx_compile_dynamic1_uncurry: Apply method
int cxx_compile_dynamic1_uncurry::apply(_tt107874 const &_arg ){
  _vI106075_ehandler_uncurry = _arg.mem_0;
  _vI106068_src = _arg.mem_1;
  _vI106069_dst = _arg.mem_2;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106224>ref;
      {
      __timeb64* _tmp108840 = (__timeb64*)&_vI106224_tv;
      _ftime64_s(((_tmp108840)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv98908<106223> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106224>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106224>varname)), literal[double]("1.0e3")))));
      _genout_urv98908  = (static_cast<double>((_vI106224_tv.time))) + ((static_cast<double>((_vI106224_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2220, cols 5 to 25
      //t0<106056>varname = _genout_urv98908<106223>varname;
      _vI106056_t0 = _genout_urv98908; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2221, cols 5 to 33
      //pkgs<106057>varname = (find_cxx_pkgs<105741>stackfun src<106068>varname);
      _vI106057_pkgs = find_cxx_pkgs(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106068_src) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2222, cols 5 to 52
      //(deref<80855>primfun[list] apply((prj78:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<106023>ref)) = (join_uncurry<89534>stackfun (apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), pkgs<106057>varname));
      *(&((_art107702*)&ptrflx_processing->_vI106023_control)->extra_pkgs)  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.extra_pkgs, _vI106057_pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2223, cols 5 to 35
      //pkg_cflags<106058>varname = Empty<80385>varname;
      pkg_cflags = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2239, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI106057_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65873_L106073;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_compile_dynamic1] Adding packages ", (str<81092>stackfun pkgs<106057>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108841 = (::std::string("[flx:cxx_compile_dynamic1] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106057_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108841)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<106225>varname = (aux_uncurry<106226>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI106225_r = _fI106226_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<106225>ref;
      {
      void** _tmp108842 = (void**)&_vI106225_r;
      _rev(((_tmp108842)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2229, cols 7 to 8
      //PKGCONFIG_PATH<106061>varname = r<106225>varname;
      _vI106061_PKGCONFIG_PATH = _vI106225_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2230, cols 7 to 89
      //allargs<106062>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<106061>varname, "--field=cflags")), "--keepleftmost")), pkgs<106057>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI106062_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI106061_PKGCONFIG_PATH, ::std::string("--field=cflags"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI106057_pkgs)) /* apply_stack */, ptrflx_processing->_vI106023_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2231, cols 7 to 62
      //_genout_urv98955<106236> := (flx_pkgconfig<68435>stackfun allargs<106062>varname);
      _genout_urv98955  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI106062_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2231, cols 7 to 62
      //_ds2_66063<106063>varname = _genout_urv98955<106236>varname;
      _ds2_66063 = _genout_urv98955; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2231, cols 7 to 62
      //ret<106064>varname = apply((prj0:int * list -> int), _ds2_66063<106063>varname);
      _vI106064_ret = _ds2_66063.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2231, cols 7 to 62
      //mycflags<106065>varname = apply((prj1:int * list -> list), _ds2_66063<106063>varname);
      mycflags = _ds2_66063.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2237, cols 7 to 11
      if(!(!((_vI106064_ret == 0)) ) ) goto _ifdoelse_bootflx_65875_L106071;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_compile_dynamic1] Error ", (str<80203>primfun[int] ret<106064>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<106062>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108843 = (((::std::string("[flx:cxx_compile_dynamic1] Error ") + ::flx::rtl::strutil::str<int>(_vI106064_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106062_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108843)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler_uncurry<106075>varname);
      {
      _a6258t_107873 _tmp108844 = (_a6258t_107873)(_vI106075_ehandler_uncurry);
      throw ((_tmp108844));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2237, cols 7 to 11
    _ifdoelse_bootflx_65875_L106071:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2238, cols 7 to 27
      //pkg_cflags<106058>varname = mycflags<106065>varname;
      pkg_cflags = mycflags; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2239, cols 5 to 9
    _ifdoelse_bootflx_65873_L106073:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 22 to 36
      //cxx_compile_dynamic1'2_mv_66065<106238> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106238_cxx_compile_dynamic1__apos_2_mv_66065  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      if(!(_vI106238_cxx_compile_dynamic1__apos_2_mv_66065%2==1) ) goto _ml66067_L106239;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      goto _end_hash_277839522;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _ml66067_L106239:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _end_hash_277839522:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 22 to 36
      //cxx_compile_dynamic1'2_mv_66065<106242> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106242_cxx_compile_dynamic1__apos_2_mv_66065  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      if(!(_vI106242_cxx_compile_dynamic1__apos_2_mv_66065%2==1) ) goto _ml66067_L106243;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      //_urv98989<106241> := echoln<106025>closure;
      _urv98989  = (FLX_NEWP(echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      goto _end_hash_993038395;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _ml66067_L106243:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      //_urv98989<106241> := debugln<106024>closure;
      _urv98989  = (FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _end_hash_993038395:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 22 to 36
      //cxx_compile_dynamic1'2_mv_66065<106246> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106246_cxx_compile_dynamic1__apos_2_mv_66065  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      if(!(_vI106246_cxx_compile_dynamic1__apos_2_mv_66065%2==1) ) goto _ml66067_L106247;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      goto _end_hash_1882277;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _ml66067_L106247:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _end_hash_1882277:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 22 to 36
      //cxx_compile_dynamic1'2_mv_66065<106250> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106250_cxx_compile_dynamic1__apos_2_mv_66065  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      if(!(_vI106250_cxx_compile_dynamic1__apos_2_mv_66065%2==1) ) goto _ml66067_L106251;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      goto _end_hash_865021328;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _ml66067_L106251:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _end_hash_865021328:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2249, cols 5 to 6
      //tc<106066>varname = apply(toolchain<68911>varname, ( ccflags:(join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), pkg_cflags<106058>varname)), debugln:_urv98989<106241>varname, dynamic_libraries:apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), header_search_dirs:(join_uncurry<89534>stackfun (apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), apply((prj23:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname))), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), macros:apply((prj46:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname)));
      _vI106066_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.CCFLAGS, pkg_cflags)) /* apply_stack */, _urv98989, ptrflx_processing->_vI105724_dflt_clang_config.dynamic_libraries, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_RTL_DIRS, ptrflx_processing->_vI106023_control.EXTRA_INCLUDE_DIRS)) /* apply_stack */, ptrflx_processing->_vI105724_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI106023_control.MACROS, ptrflx_processing->_vI105724_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2256, cols 5 to 9
      //_genout_urv99211<106253> := (cxx_depcheck<66985>stackfun (tc<106066>varname, src<106068>varname, dst<106069>varname));
      _genout_urv99211  = cxx_depcheck(FLX_FPAR_PASS_ONLY)
      .apply(_tt108175(_vI106066_tc, _vI106068_src, _vI106069_dst)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2256, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.RECOMPILE == 1) || !_genout_urv99211  ) ) goto _ifdoend_bootflx_65876_L106074;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2251, cols 7 to 68
      //result<106067>varname = apply(apply((prj5:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),src:(string)) -> int), tc<106066>varname), ( dst:dst<106069>varname, src:src<106068>varname));
      _vI106067_result = (_vI106066_tc.cxx_dynamic_object_compiler)->clone()
      ->apply(_art107759(_vI106069_dst, _vI106068_src)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _end_99221_L106261;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106260>ref;
      {
      __timeb64* _tmp108845 = (__timeb64*)&_vI106260_tv;
      _ftime64_s(((_tmp108845)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106259> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106260>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106260>varname)), literal[double]("1.0e3")))));
      _vI106259__genout_urv96124  = (static_cast<double>((_vI106260_tv.time))) + ((static_cast<double>((_vI106260_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106254>varname = (-<80547>primfun[double] (_genout_urv96124<106259>varname, t0<106056>varname));
      _vI106254_elapsed = _vI106259__genout_urv96124 - _vI106056_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106255>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106254>varname, literal[double]("60.0"))));
      _vI106255_minutes = ::std::floor((_vI106254_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106256>varname = (-<80547>primfun[double] (elapsed<106254>varname, (*<80818>primfun[double] (minutes<106255>varname, literal[double]("60.0")))));
      _vI106256_seconds = _vI106254_elapsed - (_vI106255_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106255>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106256>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Dynamic c++  : ", src<106068>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108846 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106255_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106256_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Dynamic c++  : ") + _vI106068_src ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108846)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2252, cols 7 to 42
    _end_99221_L106261:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2253, cols 7 to 20
      //return result<106067>varname;: type int
      return _vI106067_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2256, cols 5 to 9
    _ifdoend_bootflx_65876_L106074:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2255, cols 7 to 15
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2257,3,2257,4); // HACK! 
}

//------------------------------
//FUNCTION <66697>: toolchain_clang_linux::dependency_extension: Apply method
_a14239t_107672 _fI66697_dependency_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1219, cols 3 to 45
      //return ".d";: type _a14239t_107672
      return ::std::string(".d");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1219,3,1219,45); // HACK! 
}

//------------------------------
//FUNCTION <89794>: toolchain_clang_apple_iOS_maker_uncurry::static_executable_linker: Apply method
int _fI89794_static_executable_linker::apply(_art107763 const &_arg ){
  _vI89796_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2155, cols 5 to 6
      //result<89795>varname = (generic_link_exe_static_uncurry<89531>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<89741>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<89796>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<89796>varname)));
      _vI89795_result = generic_link_exe_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89741_linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.library_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.static_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89796_spec.srcs, _vI89796_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2156, cols 5 to 18
      //return result<89795>varname;: type int
      return _vI89795_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2157,3,2157,4); // HACK! 
}

//------------------------------
//FUNCTION <66959>: toolchain_clang_osx::cxx_dynamic_object_compiler: Apply method
int _fI66959_cxx_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66962_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1592, cols 5 to 6
      //result<66961>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_cxx_compile_flags<66899>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:linker<66896>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66962>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66962>varname)));
      _vI66961_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_osx->_vI66899_base_cxx_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_clang_osx->_vI66896_linker, ptrtoolchain_clang_osx->_vI66979_config.header_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.macros, ::std::string("-o "), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66962_spec.src, _vI66962_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1593, cols 5 to 18
      //return result<66961>varname;: type int
      return _vI66961_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1594,3,1594,4); // HACK! 
}

//------------------------------
//FUNCTION <66431>: toolchain_msvc_win32::cxx_dynamic_object_compiler: Apply method
int cxx_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66436_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1871, cols 5 to 72
      //_genout_urv93034<93034> := (xpopen<66338>stackfun (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (macros<66321>varname, "/EHs")), "/c")), "/Zi")), "/MDd")), "/wd4190")), "/nologo")), "cl.exe")), include_switches<66314>varname)), (Snoc<80397>struct ((Snoc<80397>struct (Empty<80385>varname, (+<14305>primfun ("/Fo", apply((prj0:record(dst:(string),src:(string)) -> string), spec<66436>varname))))), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66436>varname))))));
      _genout_urv93034  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_msvc_win32->macros, ::std::string("/EHs")))), ::std::string("/c")))), ::std::string("/Zi")))), ::std::string("/MDd")))), ::std::string("/wd4190")))), ::std::string("/nologo")))), ::std::string("cl.exe")))), ptrtoolchain_msvc_win32->include_switches)) /* apply_stack */, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("/Fo") + _vI66436_spec.dst ))), _vI66436_spec.src))))) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1871, cols 5 to 72
      //_ds2_66259<66433>varname = _genout_urv93034<93034>varname;
      _ds2_66259 = _genout_urv93034; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1871, cols 5 to 72
      //result<66434>varname = apply((prj0:int * string -> int), _ds2_66259<66433>varname);
      _vI66434_result = _ds2_66259.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1871, cols 5 to 72
      //text<66435>varname = apply((prj1:int * string -> string), _ds2_66259<66433>varname);
      _vI66435_text = _ds2_66259.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66434>varname, text<66435>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66434_result, _vI66435_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1873, cols 5 to 18
      //return result<66434>varname;: type int
      return _vI66434_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1874,3,1874,4); // HACK! 
}

//------------------------------
//FUNCTION <105833>: flx_processing::run_cxx_compiler_if_required: Apply method
int run_cxx_compiler_if_required::apply(_pt107743* const &_arg ){
  _vI105835_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2394, cols 5 to 19
      //result<105834>varname = 0;
      _vI105834_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2401, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.STATIC == 0)) ) goto _ifdoend_bootflx_65914_L105836;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_99475_L106327;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Dynamic linkage")), "\x0A")));
      {
      _a14239t_107672 _tmp108848 = (::std::string("[flx] ") + ::std::string("Dynamic linkage") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108848)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2396, cols 7 to 32
    _end_99475_L106327:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2397, cols 7 to 43
      //_genout_urv99476<106328> := (cxx_compile_dynamic<105795>stackfun ehandler<105835>varname);
      _genout_urv99476  = cxx_compile_dynamic(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105835_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2397, cols 7 to 43
      //result<105834>varname = _genout_urv99476<106328>varname;
      _vI105834_result = _genout_urv99476; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2401, cols 5 to 9
      goto _ifdoelse_bootflx_65915_L105837;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2401, cols 5 to 9
    _ifdoend_bootflx_65914_L105836:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_99480_L106331;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Static linkage")), "\x0A")));
      {
      _a14239t_107672 _tmp108849 = (::std::string("[flx] ") + ::std::string("Static linkage") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108849)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2399, cols 7 to 31
    _end_99480_L106331:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2400, cols 7 to 42
      //_genout_urv99481<106332> := (cxx_compile_static<105816>stackfun ehandler<105835>varname);
      _genout_urv99481  = cxx_compile_static(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105835_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2400, cols 7 to 42
      //result<105834>varname = _genout_urv99481<106332>varname;
      _vI105834_result = _genout_urv99481; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2401, cols 5 to 9
    _ifdoelse_bootflx_65915_L105837:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2402, cols 5 to 18
      //return result<105834>varname;: type int
      return _vI105834_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2403,3,2403,4); // HACK! 
}

//------------------------------
//FUNCTION <97179>: flx_pkgconfig::handle_pkg::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI97179__lam_1457::apply(_a14239t_107672 const &_arg ){
  _vI97180_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<81159>stackfun (x<97180>varname, pkg<68708>varname));: type  ::flx::rtl::cl_t
      return eq(_vI97180_x, ptrhandle_pkg->_vI68708_pkg);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <66752>: toolchain_clang_linux::static_library_linker: Apply method
int _fI66752_static_library_linker::apply(_art107763 const &_arg ){
  _vI66755_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1366, cols 5 to 6
      //result<66754>varname = (generic_static_library_uncurry<89475>stackfun (( CCFLAGS:(Snoc<80397>struct (Empty<80385>varname, "-rcs")), CCLINK_STATIC_LIB:"ar", SPEC_LIB_FILENAME:"", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66755>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66755>varname)));
      _vI66754_result = generic_static_library_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107809(_art107808(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-rcs")))), ::std::string("ar"), ::std::string(""), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66755_spec.srcs, _vI66755_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1367, cols 5 to 18
      //return result<66754>varname;: type int
      return _vI66754_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1368,3,1368,4); // HACK! 
}

//------------------------------
//FUNCTION <68350>: FlxPkgConfigQuery::getpkgfield: Apply method
_ft107746* getpkgfield::apply(_pt107743* const &_arg ){
  _vI68370_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 501, cols 5 to 6
      //return getpkgfield'2<68352>closure;: type _ft107746*
      return (FLX_NEWP(_fI68352_getpkgfield__apos_2)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",501,5,501,6); // HACK! 
}

//------------------------------
//FUNCTION <106744>: flx_processing::cal_time_from_flxdepfile::maxf::maxf'2: Apply method
double _fI106744_maxf__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI106747_f = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2114, cols 7 to 34
      if(!((_vI106747_f == ::std::string(""))) ) goto _ifdoend_bootflx_65859_L106748;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2114, cols 21 to 29
      //return x<106749>varname;: type double
      return ptr_fI106743_maxf->_vI106749_x;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2114, cols 7 to 34
    _ifdoend_bootflx_65859_L106748:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2115, cols 7 to 42
      //ext<106745>varname = apply((prj1:string^2 -> string), (split_extension<83124>stackfun f<106747>varname));
      _vI106745_ext = (split_extension(_vI106747_f).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //maxf'2_mv_66029<107106> := (lnot<5216>primfun (==<80464>primfun[string] (ext<106745>varname, "")));
      _vI107106_maxf__apos_2_mv_66029  = !((_vI106745_ext == ::std::string(""))) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
      if(!(_vI107106_maxf__apos_2_mv_66029%2==1) ) goto _ml66031_L107107;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
      //_urv98428<107105> := (dfiletime<82503>stackfun (f<106747>varname, (neg<82781>primfun[double] literal[double]("1.0"))));
      _vI107105__urv98428  = dfiletime(_vI106747_f, - 1.0 ); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
      goto _end_hash_699284205;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
    _ml66031_L107107:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<107109> := (<<82604>primfun[double] ((dfiletime<82503>stackfun ((+<14305>primfun (f<106747>varname, ".fdoc")), (neg<82781>primfun[double] literal[double]("1.0")))), (dfiletime<82503>stackfun ((+<14305>primfun (f<106747>varname, ".flx")), (neg<82781>primfun[double] literal[double]("1.0"))))));
      _vI107109_max_mv_106  = (dfiletime(_vI106747_f + ::std::string(".fdoc") , - 1.0 ) < dfiletime(_vI106747_f + ::std::string(".flx") , - 1.0 )); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI107109_max_mv_106%2==1) ) goto _ml108_L107108;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv98428<107105> := (dfiletime<82503>stackfun ((+<14305>primfun (f<106747>varname, ".flx")), (neg<82781>primfun[double] literal[double]("1.0"))));
      _vI107105__urv98428  = dfiletime(_vI106747_f + ::std::string(".flx") , - 1.0 ); //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      goto _end_hash_699284205;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L107108:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv98428<107105> := (dfiletime<82503>stackfun ((+<14305>primfun (f<106747>varname, ".fdoc")), (neg<82781>primfun[double] literal[double]("1.0"))));
      _vI107105__urv98428  = dfiletime(_vI106747_f + ::std::string(".fdoc") , - 1.0 ); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
    _end_hash_699284205:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2118, cols 7 to 8
      //ft<106746>varname = _urv98428<107105>varname;
      _vI106746_ft = _vI107105__urv98428; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2119, cols 7 to 59
      //run procedure call debugln<106753>varname (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Time ", f<106747>varname)), " = ")), (strfiletime<82509>stackfun ft<106746>varname)));
      {
        ::flx::rtl::con_t *_p = (ptr_fI106742_cal_time_from_flxdepfile->_vI106753_debugln)->clone()
      ->call(0, ((::std::string("Time ") + _vI106747_f ) + ::std::string(" = ") ) + strfiletime(FLX_FPAR_PASS _vI106746_ft) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 15 to 40
      //maxf'2_mv_66034<107112> := (==<82539>primfun[double] (ft<106746>varname, (neg<82781>primfun[double] literal[double]("1.0"))));
      _vI107112_maxf__apos_2_mv_66034  = (_vI106746_ft == - 1.0 ); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
      if(!(_vI107112_maxf__apos_2_mv_66034%2==1) ) goto _ml66036_L107113;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 289, cols 3 to 42
      //_urv98473<107111> := (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1));
      _vI107111__urv98473  = static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 289, cols 3 to 42
      goto _end_hash_498023941;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
    _ml66036_L107113:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
      //_urv98473<107111> := ft<106746>varname;
      _vI107111__urv98473  = _vI106746_ft; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
    _end_hash_498023941:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 7 to 76
      //ft<106746>varname = _urv98473<107111>varname;
      _vI106746_ft = _vI107111__urv98473; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<107116> := (<<82604>primfun[double] (x<106749>varname, ft<106746>varname));
      _vI107116_max_mv_106  = (ptr_fI106743_maxf->_vI106749_x < _vI106746_ft); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI107116_max_mv_106%2==1) ) goto _ml108_L107115;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return ft<106746>varname;: type double
      return _vI106746_ft;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L107115:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return x<106749>varname;: type double
      return ptr_fI106743_maxf->_vI106749_x;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2122,5,2122,6); // HACK! 
}

//------------------------------
//FUNCTION <105704>: flx_processing::aux_uncurry::_lam_1339: Apply method
 ::flx::rtl::cl_t _fI105704__lam_1339::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,11,202,19); // HACK! 
}

//------------------------------
//FUNCTION <106755>: flx_processing::cal_cxx_uptodate: Apply method
 ::flx::rtl::cl_t _fI106755_cal_cxx_uptodate::apply(_tt107889 const &_arg ){
  _vI106760_debugln = _arg.mem_0;
  _vI106761_OUTPUT_DIR = _arg.mem_1;
  _vI106762_f = _arg.mem_2;
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<107136> := (+<14305>primfun (f<106762>varname, ".dep"));
      _vI107136_f  = _vI106762_f + ::std::string(".dep") ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI107136_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L107137;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<107136>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<107136>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<107136>varname, 2))));
      _vI107136_f = ::flx::rtl::strutil::substr(_vI107136_f,0,1) + ::flx::rtl::strutil::substr(_vI107136_f,2,_vI107136_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L107140;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L107137:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI107136_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L107140;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<107136>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<107136>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<107136>varname, 2))));
      _vI107136_f = (::flx::rtl::strutil::substr(_vI107136_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI107136_f,2,_vI107136_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L107140:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI107136_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L107142;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<107136>varname = (copyfrom<81959>primfun[int] (f<107136>varname, 1));
      _vI107136_f = ::flx::rtl::strutil::substr(_vI107136_f,1,_vI107136_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L107142:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<107135>varname = (join<82705>stackfun (OUTPUT_DIR<106761>varname, f<107136>varname));
      _vI107135_k = _fI82705_join(_vI106761_OUTPUT_DIR, _vI107136_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2139, cols 5 to 56
      //depfilename<106756>varname = k<107135>varname;
      _vI106756_depfilename = _vI107135_k; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2140, cols 5 to 53
      //run procedure call debugln<106760>varname (+<14305>primfun ("Dependency file name = ", depfilename<106756>varname));
      {
        ::flx::rtl::con_t *_p = (_vI106760_debugln)->clone()
      ->call(0, ::std::string("Dependency file name = ") + _vI106756_depfilename );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2141, cols 5 to 80
      //depfiletime<106757>varname = (dfiletime<82503>stackfun (depfilename<106756>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));
      _vI106757_depfiletime = dfiletime(_vI106756_depfilename, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2145, cols 5 to 9
      if(!((_vI106757_depfiletime == (static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/))))) ) goto _ifdoend_bootflx_65862_L106763;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2143, cols 7 to 47
      //run procedure call debugln<106760>varname "Dependency file doesn't exist";
      {
        ::flx::rtl::con_t *_p = (_vI106760_debugln)->clone()
      ->call(0, ::std::string("Dependency file doesn't exist"));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2144, cols 7 to 19
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2145, cols 5 to 9
    _ifdoend_bootflx_65862_L106763:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2147, cols 5 to 66
      //deptime<106758>varname = (cal_time_from_flxdepfile<106742>stackfun (debugln<106760>varname, depfilename<106756>varname));
      _vI106758_deptime = _fI106742_cal_time_from_flxdepfile(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt108171(_vI106760_debugln, _vI106756_depfilename)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2148, cols 5 to 59
      //run procedure call debugln<106760>varname (+<14305>primfun ("dep time = ", (strfiletime<82509>stackfun deptime<106758>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI106760_debugln)->clone()
      ->call(0, ::std::string("dep time = ") + strfiletime(FLX_FPAR_PASS _vI106758_deptime) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2149, cols 5 to 67
      //run procedure call debugln<106760>varname (+<14305>primfun ("depfile time = ", (strfiletime<82509>stackfun depfiletime<106757>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI106760_debugln)->clone()
      ->call(0, ::std::string("depfile time = ") + strfiletime(FLX_FPAR_PASS _vI106757_depfiletime) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2150, cols 5 to 45
      //cxx_uptodate<106759>varname = (<<82604>primfun[double] (deptime<106758>varname, depfiletime<106757>varname));
      _vI106759_cxx_uptodate = (_vI106758_deptime < _vI106757_depfiletime); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 49 to 60
      //cal_cxx_uptodate_mv_66048<107144> := cxx_uptodate<106759>varname;
      _vI107144_cal_cxx_uptodate_mv_66048  = _vI106759_cxx_uptodate; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
      if(!(_vI107144_cal_cxx_uptodate_mv_66048%2==1) ) goto _ml66050_L107145;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
      //_urv98599<107143> := "";
      _vI107143__urv98599  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
      goto _end_hash_111370533;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
    _ml66050_L107145:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
      //_urv98599<107143> := " NOT ";
      _vI107143__urv98599  = ::std::string(" NOT "); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
    _end_hash_111370533:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 5 to 101
      //run procedure call debugln<106760>varname (+<14305>primfun ((+<14305>primfun ("cxx generated by flxg is = ", _urv98599<107143>varname)), "uptodate"));
      {
        ::flx::rtl::con_t *_p = (_vI106760_debugln)->clone()
      ->call(0, (::std::string("cxx generated by flxg is = ") + _vI107143__urv98599 ) + ::std::string("uptodate") );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2152, cols 5 to 24
      //return cxx_uptodate<106759>varname;: type  ::flx::rtl::cl_t
      return _vI106759_cxx_uptodate;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2153,3,2153,4); // HACK! 
}

//------------------------------
//FUNCTION <92782>: toolchain_msvc_win32::checkwarn::_lam_66246: Apply method
 ::flx::rtl::cl_t _lam_66246::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1795,7,1795,11); // HACK! 
}

//------------------------------
//FUNCTION <66566>: toolchain_gcc_linux::cxx_dynamic_object_compiler: Apply method
int _fI66566_cxx_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66569_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 869, cols 5 to 6
      //result<66568>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct (base_cxx_compile_flags<66506>varname, "-D_GLIBCXX_USE_CXX11_ABI=1")), "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:linker<66503>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66569>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66569>varname)));
      _vI66568_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_linux->_vI66506_base_cxx_compile_flags, ::std::string("-D_GLIBCXX_USE_CXX11_ABI=1")))), ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_gcc_linux->linker, ptrtoolchain_gcc_linux->_vI66586_config.header_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.macros, ::std::string("-o "), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66569_spec.src, _vI66569_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 870, cols 5 to 18
      //return result<66568>varname;: type int
      return _vI66568_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",871,3,871,4); // HACK! 
}

//------------------------------

//PROCEDURE <105210:> flx_processing::xdebugln'2: Call method
::flx::rtl::con_t * _pI105210_xdebugln__apos_2::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI105211_x = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <105210:> flx_processing::xdebugln'2: Resume method
::flx::rtl::con_t *_pI105210_xdebugln__apos_2::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1965, cols 3 to 49
      if(!(*ptrflx_processing->_vI68948_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65836_L105212;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", x<105211>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108850 = (::std::string("[flx] ") + _vI105211_x ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108850)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1966, cols 1 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 1965, cols 3 to 49
    _ifdoelse_bootflx_65836_L105212:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1966, cols 1 to 2
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <106722>: flx_processing::find_cxx_pkgs: Apply method
void* _fI106722_find_cxx_pkgs::apply(_a14239t_107672 const &_arg ){
  _vI106730_src = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_98265_L107077;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ("[flx:find_cxx_pkgs] Scanning ", src<106730>varname)), " for package requirements")))), "\x0A")));
      {
      _a14239t_107672 _tmp108851 = (::std::string("[flx] ") + ((::std::string("[flx:find_cxx_pkgs] Scanning ") + _vI106730_src ) + ::std::string(" for package requirements") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108851)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2082, cols 5 to 81
    _end_98265_L107077:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2083, cols 5 to 28
      //out<106723>varname = Empty<80385>varname;
      _vI106723_out = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2084, cols 5 to 68
      //_genout_urv98266<107078> := (_ctor_RE2<15267>primfun ".*@requires package ([A-Za-z][A-Za-z0-9_-]*).*");
      _vI107078__genout_urv98266  = ::std::shared_ptr< ::re2::RE2>(new RE2((::std::string(".*@requires package ([A-Za-z][A-Za-z0-9_-]*).*")))); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2084, cols 5 to 68
      //pat<106724>varname = _genout_urv98266<107078>varname;
      _vI106724_pat = _vI107078__genout_urv98266; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 306, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_619_L107080;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_input_text] ", src<106730>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108852 = (::std::string("[Open_input_text] ") + _vI106730_src ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108852)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 306, cols 5 to 6
    _ifdoelse_std_619_L107080:;
    // # C:/projects/felix/src/packages/io.fdoc: line 307, cols 5 to 34
      //_genout_urv98284<107083> := (raw_fopen_input_text<8421>primfun src<106730>varname);
      _vI107083__genout_urv98284  = fopen(_vI106730_src.c_str(),"r"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 307, cols 5 to 34
      //_genout_urv98275<107082> := _genout_urv98284<107083>varname;
      _vI107082__genout_urv98275  = _vI107083__genout_urv98284; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 307, cols 5 to 34
      //_genout_urv98277<107079> := _genout_urv98275<107082>varname;
      _vI107079__genout_urv98277  = _vI107082__genout_urv98275; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2085, cols 5 to 33
      //f<106725>varname = _genout_urv98277<107079>varname;
      _vI106725_f = _vI107079__genout_urv98277; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
      //_genout_urv98285<107084> := (valid<8422>primfun f<106725>varname);
      _vI107084__genout_urv98285  = _vI106725_f!=(FILE*)0; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
      if(!_vI107084__genout_urv98285 ) goto _ifdoend_bootflx_65849_L106738;
    // # C:/projects/felix/src/packages/io.fdoc: line 340, cols 3 to 4
      //_genout_urv98308<107085> := iterator'2<107086>closure;
      _vI107085__genout_urv98308  = (FLX_NEWP(_fI107086_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      //_generator_flx_2240<106726>varname = _genout_urv98308<107085>varname;
      _vI106726__generator_flx_2240 = _vI107085__genout_urv98308; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
    continue__ll_flx_2228_L106731:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      //find_cxx_pkgs_mv_66018<106700> := apply(_generator_flx_2240<106726>varname, ());
      _vI106700_find_cxx_pkgs_mv_66018  = (_vI106726__generator_flx_2240)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
/*match case 1:|Some line_param_bootflx_65852*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      if(!andthen(FLX_VNI(_vI106700_find_cxx_pkgs_mv_66018)==1, (FLX_NEWP(_fI107092__lam_66026)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66020_L106735;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      //line_param_bootflx_65852<106727>varname = (arg of case 1 of find_cxx_pkgs_mv_66018<106700>varname);
      _vI106727_line_param_bootflx_65852 = *((_a14239t_107672*)FLX_VNP(_vI106700_find_cxx_pkgs_mv_66018)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2088, cols 9 to 38
      //_genout_urv98322<107093> := (Match<15393>stackfun (pat<106724>varname, line_param_bootflx_65852<106727>varname));
      _vI107093__genout_urv98322  = Match(FLX_FPAR_PASS _vI106724_pat, _vI106727_line_param_bootflx_65852); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2088, cols 9 to 38
      //result<106728>varname = _genout_urv98322<107093>varname;
      _vI106728_result = _vI107093__genout_urv98322; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2089, cols 15 to 20
      //find_cxx_pkgs_mv_66021<106701> := result<106728>varname;
      _vI106701_find_cxx_pkgs_mv_66021  = _vI106728_result; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2090, cols 11 to 15
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2090, cols 11 to 15
      if(!(FLX_VNI(_vI106701_find_cxx_pkgs_mv_66021)==0) ) goto _ml66023_L106732;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      goto continue__ll_flx_2228_L106731;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2090, cols 11 to 15
    _ml66023_L106732:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 11 to 16
/*match case 2:|Some v_param_bootflx_65854_param_bootflx_65856*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 11 to 16
      if(!andthen(FLX_VNI(_vI106701_find_cxx_pkgs_mv_66021)==1, (FLX_NEWP(_fI107094__lam_66025)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66024_L106733;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 16 to 16
      //v_param_bootflx_65854_param_bootflx_65856<106729>varname = (arg of case 1 of find_cxx_pkgs_mv_66021<106701>varname);
      _vI106729_v_pa_hash_487173675 = *((_poly_80462t_107729*)FLX_VNP(_vI106701_find_cxx_pkgs_mv_66021)); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(_vI106729_v_pa_hash_487173675))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 21 to 36
      //out<106723>varname = (Snoc<80397>struct (out<106723>varname, (unsafe_get<83437>primfun[string] (v_param_bootflx_65854_param_bootflx_65856<106729>varname, (_ctor_size<83435>primfun[size] (_ctor_size<80270>primfun[int] 1))))));
      _vI106723_out = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106723_out, _vI106729_v_pa_hash_487173675[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)]))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      goto continue__ll_flx_2228_L106731;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 11 to 16
    _ml66024_L106733:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2092, cols 9 to 13
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2092, cols 9 to 13
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2092,9,2092,13);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2092,9,2092,13);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      goto continue__ll_flx_2228_L106731;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
    _ml66020_L106735:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      if(!(FLX_VNI(_vI106700_find_cxx_pkgs_mv_66018)==0) ) goto _ml66027_L106736;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      goto _em66018_L106737;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
    _ml66027_L106736:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2093,7,2093,11);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2093,7,2093,11);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2093, cols 7 to 11
    _em66018_L106737:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2094, cols 7 to 15
      // primcall fclose<8423>primproc f<106725>varname;
      (void)fclose(_vI106725_f);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
      goto _ifdoelse_bootflx_65850_L106739;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
    _ifdoend_bootflx_65849_L106738:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("Can't find C++ source file ", src<106730>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108855 = (::std::string("Can't find C++ source file ") + _vI106730_src ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108855)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2097, cols 7 to 22
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2098, cols 5 to 9
    _ifdoelse_bootflx_65850_L106739:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2099, cols 5 to 17
      //out<106723>varname = (aux_uncurry<107095>stackfun (out<106723>varname, Empty<80385>varname));
      _vI106723_out = _fI107095_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697(_vI106723_out, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2101, cols 5 to 73
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI106723_out, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65858_L106741;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ file ", src<106730>varname)), " requires packages ")), (str<81092>stackfun out<106723>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108856 = (((::std::string("[flx] C++ file ") + _vI106730_src ) + ::std::string(" requires packages ") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106723_out) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108856)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2101, cols 5 to 73
    _ifdoelse_bootflx_65858_L106741:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2102, cols 5 to 15
      //return out<106723>varname;: type void*
      return _vI106723_out;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2103,3,2103,4); // HACK! 
}

//------------------------------
//FUNCTION <104750>: parse::iterator'2: Apply method
void* _fI104750_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      //i<104751>varname = 0;
      _vI104751_i = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
    redo__ll_strings_7200_L104752:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      if(FLX_UNLIKELY(!(!(((static_cast<int>((ptrparse->_vI104754_x.size()))/*int.flx: ctor*/) - 1  < _vI104751_i)) ) )) goto break__ll_strings_7200_L104753;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 44 to 62
      FLX_SET_PC(108857)
      //yield (Some<81466>struct (subscript<81183>primfun[int] (x<104754>varname, i<104751>varname)));: type void*
      return FLX_VNR(1, new(*PTF gcp, char_ptr_map, true) char (::flx::rtl::strutil::subscript(ptrparse->_vI104754_x,_vI104751_i)));//yield
    FLX_CASE_LABEL(108857)
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      // primcall pre_incr<81467>primproc[int] &i<104751>ref;
      {
      int* _tmp108858 = (int*)&_vI104751_i;
      ++*((_tmp108858));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      goto redo__ll_strings_7200_L104752;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
    break__ll_strings_7200_L104753:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 364, cols 7 to 24
      //return None<81468>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",365,5,365,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <66918>: toolchain_clang_osx::dynamic_library_extension: Apply method
_a14239t_107672 _fI66918_dynamic_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1465, cols 3 to 54
      //return ".dylib";: type _a14239t_107672
      return ::std::string(".dylib");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1465,3,1465,54); // HACK! 
}

//------------------------------
//FUNCTION <66703>: toolchain_clang_linux::dynamic_object_extension: Apply method
_a14239t_107672 _fI66703_dynamic_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1222, cols 3 to 57
      //return "_dynamic.o";: type _a14239t_107672
      return ::std::string("_dynamic.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1222,3,1222,57); // HACK! 
}

//------------------------------
//C FUNC <15241>: _fI15241_str
_a14239t_107672 _fI15241_str(_a14239t_107672 _vI15243_s){
    // # C:/projects/felix/src/packages/strings.fdoc: line 861, cols 3 to 35
      //return s<15243>varname;: type _a14239t_107672
      return _vI15243_s;
}
//------------------------------
//FUNCTION <99795>: subscript::_lam_2063: Apply method
 ::flx::rtl::cl_t _lam_2063::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 227, cols 7 to 35
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",227,7,227,35); // HACK! 
}

//------------------------------
//FUNCTION <89788>: toolchain_clang_apple_iOS_maker_uncurry::cxx_dynamic_object_compiler: Apply method
int _fI89788_cxx_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI89790_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2124, cols 5 to 6
      //result<89789>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_cxx_compile_flags<89749>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:linker<89741>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<89790>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<89790>varname)));
      _vI89789_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89749_base_cxx_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89741_linker, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.header_search_dirs, ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.macros, ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89790_spec.src, _vI89790_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2125, cols 5 to 18
      //return result<89789>varname;: type int
      return _vI89789_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2126,3,2126,4); // HACK! 
}

//------------------------------
//FUNCTION <16873>: quote_arg: Apply method
_a14239t_107672 quote_arg::apply(_a14239t_107672 const &_arg ){
  _vI16875_s = _arg;
    // # C:/projects/felix/src/packages/program.fdoc: line 1056, cols 5 to 52
      //return (+<14305>primfun ((+<14305>primfun (""", s<16875>varname)), """));: type _a14239t_107672
      return (::std::string("\"") + _vI16875_s ) + ::std::string("\"") ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/program.fdoc",1056,5,1056,52); // HACK! 
}

//------------------------------
//FUNCTION <68441>: flx_pkgconfig::lexit: Apply method
_tt107880 lexit::apply(_at107879 const &_arg ){
  ini = _arg.data[0];
  finish = _arg.data[1];
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 59, cols 7 to 22
      //start<68443>varname = ini<68447>varname;
      start = ini; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 93, cols 7 to 11
      if(!((start == finish)) ) goto _ifdoend_bootflx_65110_L68449;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 63, cols 9 to 25
      //return (start<68443>varname, "");: type _tt107880
      return _tt107880(start, ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 93, cols 7 to 11
    _ifdoend_bootflx_65110_L68449:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0))) ) goto _ifdoend_bootflx_65112_L68452;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 67, cols 9 to 15
      // primcall pre_incr<68440>primproc &start<68443>ref;
      {
      _a15974t_107878* _tmp108859 = (_a15974t_107878*)&start;
      ++*((_tmp108859));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 9 to 70
    continue__ll_flx_pkgconfig_10727_L68450:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 9 to 70
      if(FLX_UNLIKELY(!(!((start == finish))  && (*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0)) ) )) goto break__ll_flx_pkgconfig_10727_L68451;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 58 to 64
      // primcall pre_incr<68440>primproc &start<68443>ref;
      {
      _a15974t_107878* _tmp108860 = (_a15974t_107878*)&start;
      ++*((_tmp108860));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 9 to 70
      goto continue__ll_flx_pkgconfig_10727_L68450;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 68, cols 9 to 70
    break__ll_flx_pkgconfig_10727_L68451:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 69, cols 9 to 24
      //return (start<68443>varname, "");: type _tt107880
      return _tt107880(start, ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
    _ifdoend_bootflx_65112_L68452:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_bootflx_65114_L68456;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 73, cols 9 to 15
      // primcall pre_incr<68440>primproc &start<68443>ref;
      {
      _a15974t_107878* _tmp108861 = (_a15974t_107878*)&start;
      ++*((_tmp108861));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 74, cols 9 to 19
      //p1<68444>varname = start<68443>varname;
      p1 = start; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 9 to 70
    continue__ll_flx_pkgconfig_10742_L68453:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 9 to 70
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string("\""),0)))  ) )) goto break__ll_flx_pkgconfig_10742_L68454;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 58 to 64
      // primcall pre_incr<68440>primproc &start<68443>ref;
      {
      _a15974t_107878* _tmp108862 = (_a15974t_107878*)&start;
      ++*((_tmp108862));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 9 to 70
      goto continue__ll_flx_pkgconfig_10742_L68453;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 75, cols 9 to 70
    break__ll_flx_pkgconfig_10742_L68454:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 80, cols 9 to 13
      if(!((start == finish)) ) goto _ifdoend_bootflx_65116_L68455;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 77, cols 11 to 48
      //return (start<68443>varname, (string_between<15980>primfun (p1<68444>varname, start<68443>varname)));: type _tt107880
      return _tt107880(start, ::std::string(p1,start));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 80, cols 9 to 13
    _ifdoend_bootflx_65116_L68455:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 79, cols 11 to 51
      //return ((+<15981>primfun (start<68443>varname, 1)), (string_between<15980>primfun (p1<68444>varname, start<68443>varname)));: type _tt107880
      return _tt107880(start + 1 , ::std::string(p1,start));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
    _ifdoend_bootflx_65114_L68456:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string("'"),0))) ) goto _ifdoend_bootflx_65118_L68460;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 84, cols 9 to 15
      // primcall pre_incr<68440>primproc &start<68443>ref;
      {
      _a15974t_107878* _tmp108863 = (_a15974t_107878*)&start;
      ++*((_tmp108863));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 85, cols 9 to 19
      //p2<68445>varname = start<68443>varname;
      p2 = start; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 9 to 70
    continue__ll_flx_pkgconfig_10768_L68457:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 9 to 70
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string("'"),0)))  ) )) goto break__ll_flx_pkgconfig_10768_L68458;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 58 to 64
      // primcall pre_incr<68440>primproc &start<68443>ref;
      {
      _a15974t_107878* _tmp108864 = (_a15974t_107878*)&start;
      ++*((_tmp108864));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 9 to 70
      goto continue__ll_flx_pkgconfig_10768_L68457;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 86, cols 9 to 70
    break__ll_flx_pkgconfig_10768_L68458:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 9 to 13
      if(!((start == finish)) ) goto _ifdoend_bootflx_65120_L68459;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 88, cols 11 to 48
      //return (start<68443>varname, (string_between<15980>primfun (p2<68445>varname, start<68443>varname)));: type _tt107880
      return _tt107880(start, ::std::string(p2,start));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 9 to 13
    _ifdoend_bootflx_65120_L68459:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 90, cols 11 to 51
      //return ((+<15981>primfun (start<68443>varname, 1)), (string_between<15980>primfun (p2<68445>varname, start<68443>varname)));: type _tt107880
      return _tt107880(start + 1 , ::std::string(p2,start));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 91, cols 7 to 14
    _ifdoend_bootflx_65118_L68460:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 95, cols 7 to 17
      //p3<68446>varname = start<68443>varname;
      p3 = start; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 7 to 69
    continue__ll_flx_pkgconfig_10793_L68461:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 7 to 69
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0)))  ) )) goto break__ll_flx_pkgconfig_10793_L68462;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 57 to 63
      // primcall pre_incr<68440>primproc &start<68443>ref;
      {
      _a15974t_107878* _tmp108865 = (_a15974t_107878*)&start;
      ++*((_tmp108865));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 7 to 69
      goto continue__ll_flx_pkgconfig_10793_L68461;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 96, cols 7 to 69
    break__ll_flx_pkgconfig_10793_L68462:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 97, cols 7 to 44
      //return (start<68443>varname, (string_between<15980>primfun (p3<68446>varname, start<68443>varname)));: type _tt107880
      return _tt107880(start, ::std::string(p3,start));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",98,5,98,6); // HACK! 
}

//------------------------------
//C FUNC <15393>: Match
void* Match(FLX_APAR_DECL  _a15266t_107771 _vI15401_re, _a14239t_107672 _vI15402_s){
   ::flx::rtl::cl_t Match_mv_2407;
   ::flx::rtl::cl_t _genout_urv91813;
   ::flx::rtl::cl_t _vI15398_Match__hyphen_result;
  _poly_83443t_108082 _vI15397_v;
  int _vI15396_n;
  _a14239t_107672 emptystring;
    // # C:/projects/felix/src/packages/strings.fdoc: line 1093, cols 5 to 25
      //emptystring<15395>varname = "";
      emptystring = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 1094, cols 5 to 39
      //n<15396>varname = (NumberOfCapturingGroups<15390>primfun re<15401>varname);
      _vI15396_n = _vI15401_re->NumberOfCapturingGroups(); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 1095, cols 5 to 67
      //v<15397>varname = (_ctor_varray<83444>stackfun ((+<5396>primfun ((_ctor_size<80270>primfun[int] n<15396>varname), 1)), (_ctor_StringPiece<15270>primfun emptystring<15395>varname)));
      _vI15397_v = _ctor_varray(FLX_FPAR_PASS (static_cast<_a5094t_107688>(_vI15396_n)/*int.flx: ctor size from _a5094t_107688*/) + 1 , ::re2::StringPiece(emptystring)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 1096, cols 5 to 83
      //_genout_urv91813<91813> := (Match<15392>primfun (re<15401>varname, (_ctor_StringPiece<15270>primfun s<15402>varname), 0, ANCHOR_BOTH<15374>varname, (stl_begin<83446>primfun[StringPiece] v<15397>varname), (+<80315>primfun[int] (n<15396>varname, 1))));
      _genout_urv91813  = _vI15401_re->Match((::re2::StringPiece(_vI15402_s)), 0, (::re2::StringPiece(_vI15402_s)).length(),(::re2::RE2::ANCHOR_BOTH), (_vI15397_v ), (_vI15396_n + 1 )); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 1096, cols 5 to 83
      //Match-result<15398>varname = _genout_urv91813<91813>varname;
      _vI15398_Match__hyphen_result = _genout_urv91813; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 1098, cols 10 to 21
      //Match_mv_2407<91814> := Match-result<15398>varname;
      Match_mv_2407  = _vI15398_Match__hyphen_result; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 1101, cols 7 to 29
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 1101, cols 7 to 29
      if(!(Match_mv_2407%2==1) ) goto _ml2409_L91815;
    // # C:/projects/felix/src/packages/strings.fdoc: line 1101, cols 7 to 29
      //return (Some<83447>struct (map_uncurry<89471>stackfun (_a90819__ctor_string<90819>closure, v<15397>varname)));: type void*
      return FLX_VNR(1, new(*PTF gcp, _poly_80462t_107729_ptr_map, true) _poly_80462t_107729 (map_uncurry(FLX_FPAR_PASS (FLX_NEWP(_a90819__ctor_string)(FLX_FPAR_PASS_ONLY)), _vI15397_v)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 1101, cols 7 to 29
    _ml2409_L91815:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 1101, cols 7 to 29
/*match case 2:any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 1101, cols 7 to 29
      //return None<83449>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
}
//------------------------------
//FUNCTION <66554>: toolchain_gcc_linux::c_dynamic_object_compiler: Apply method
int _fI66554_c_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66557_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 815, cols 5 to 6
      //result<66556>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_c_compile_flags<66505>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:c_compiler<66501>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66557>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66557>varname)));
      _vI66556_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_linux->_vI66505_base_c_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_gcc_linux->c_compiler, ptrtoolchain_gcc_linux->_vI66586_config.header_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.macros, ::std::string("-o "), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66557_spec.src, _vI66557_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 816, cols 5 to 18
      //return result<66556>varname;: type int
      return _vI66556_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",817,3,817,4); // HACK! 
}

//------------------------------
//C PROC <67770>: _pI67770_print_help
void _pI67770_print_help(){
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Usage: flx [options] filename[.flx] [args ..]", "\x0A")));
      {
      _a14239t_107672 _tmp108866 = ::std::string("Usage: flx [options] filename[.flx] [args ..]") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108866)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("options:", "\x0A")));
      {
      _a14239t_107672 _tmp108867 = ::std::string("options:") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108867)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--cmd=text           : save text to file 'cmd.flx' and process that", "\x0A")));
      {
      _a14239t_107672 _tmp108868 = ::std::string("--cmd=text           : save text to file 'cmd.flx' and process that") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108868)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--repl               : enter REPL mode saving stuff in session.flx and library.flx", "\x0A")));
      {
      _a14239t_107672 _tmp108869 = ::std::string("--repl               : enter REPL mode saving stuff in session.flx and library.flx") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108869)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--test               : use felix installation in current directory", "\x0A")));
      {
      _a14239t_107672 _tmp108870 = ::std::string("--test               : use felix installation in current directory") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108870)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--test=dir           : use felix installation in dir", "\x0A")));
      {
      _a14239t_107672 _tmp108871 = ::std::string("--test=dir           : use felix installation in dir") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108871)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--target-subdir=dir  : subdir of install dir containing target configuration (default 'host')", "\x0A")));
      {
      _a14239t_107672 _tmp108872 = ::std::string("--target-subdir=dir  : subdir of install dir containing target configuration (default 'host')") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108872)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--target-dir=dir     : dir containing target configuration (default '$FLX_INSTALL_DIR/host')", "\x0A")));
      {
      _a14239t_107672 _tmp108873 = ::std::string("--target-dir=dir     : dir containing target configuration (default '$FLX_INSTALL_DIR/host')") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108873)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--pkgconfig-path+=dir: prepend extra flx_pkgconfig search directory to standard path", "\x0A")));
      {
      _a14239t_107672 _tmp108874 = ::std::string("--pkgconfig-path+=dir: prepend extra flx_pkgconfig search directory to standard path") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108874)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--toolchain=toolchain: pick a non-default C++ compiler toolchain", "\x0A")));
      {
      _a14239t_107672 _tmp108875 = ::std::string("--toolchain=toolchain: pick a non-default C++ compiler toolchain") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108875)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--felix=file         : get installation details from file", "\x0A")));
      {
      _a14239t_107672 _tmp108876 = ::std::string("--felix=file         : get installation details from file") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108876)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--where              : print location of felix installation", "\x0A")));
      {
      _a14239t_107672 _tmp108877 = ::std::string("--where              : print location of felix installation") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108877)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--show               : print the felix program to stdout", "\x0A")));
      {
      _a14239t_107672 _tmp108878 = ::std::string("--show               : print the felix program to stdout") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108878)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-c                   : compile only, do not run", "\x0A")));
      {
      _a14239t_107672 _tmp108879 = ::std::string("-c                   : compile only, do not run") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108879)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-o                   : linker output filename", "\x0A")));
      {
      _a14239t_107672 _tmp108880 = ::std::string("-o                   : linker output filename") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108880)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-ox                  : linker output filename (without extension)", "\x0A")));
      {
      _a14239t_107672 _tmp108881 = ::std::string("-ox                  : linker output filename (without extension)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108881)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-od                  : linker output directory", "\x0A")));
      {
      _a14239t_107672 _tmp108882 = ::std::string("-od                  : linker output directory") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108882)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--usage=prototype    : fast compilation at the expense of slower executables", "\x0A")));
      {
      _a14239t_107672 _tmp108883 = ::std::string("--usage=prototype    : fast compilation at the expense of slower executables") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108883)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--usage=debugging    : enable debugging aids", "\x0A")));
      {
      _a14239t_107672 _tmp108884 = ::std::string("--usage=debugging    : enable debugging aids") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108884)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--usage=production   : optimised code with run time safety checks retained", "\x0A")));
      {
      _a14239t_107672 _tmp108885 = ::std::string("--usage=production   : optimised code with run time safety checks retained") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108885)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--usage=hyperlight   : optimised code without run time safety checks", "\x0A")));
      {
      _a14239t_107672 _tmp108886 = ::std::string("--usage=hyperlight   : optimised code without run time safety checks") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108886)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--static             : make standalone statically linked executable", "\x0A")));
      {
      _a14239t_107672 _tmp108887 = ::std::string("--static             : make standalone statically linked executable") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108887)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--staticlib          : make standalone library of static objects", "\x0A")));
      {
      _a14239t_107672 _tmp108888 = ::std::string("--staticlib          : make standalone library of static objects") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108888)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--nofelix            : do not run felix translator, leave C++ outputs alone", "\x0A")));
      {
      _a14239t_107672 _tmp108889 = ::std::string("--nofelix            : do not run felix translator, leave C++ outputs alone") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108889)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--nocc               : do not C/C++ compiler; implies --nolink", "\x0A")));
      {
      _a14239t_107672 _tmp108890 = ::std::string("--nocc               : do not C/C++ compiler; implies --nolink") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108890)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--nolink             : do not link object files to an executable", "\x0A")));
      {
      _a14239t_107672 _tmp108891 = ::std::string("--nolink             : do not link object files to an executable") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108891)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--run-only           : run program without dependency checking or linking", "\x0A")));
      {
      _a14239t_107672 _tmp108892 = ::std::string("--run-only           : run program without dependency checking or linking") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108892)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--c++                : Pure C++ build, no Felix code", "\x0A")));
      {
      _a14239t_107672 _tmp108893 = ::std::string("--c++                : Pure C++ build, no Felix code") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108893)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--ocaml              : Pure Ocaml build, no Felix code", "\x0A")));
      {
      _a14239t_107672 _tmp108894 = ::std::string("--ocaml              : Pure Ocaml build, no Felix code") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108894)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--options            : show option set", "\x0A")));
      {
      _a14239t_107672 _tmp108895 = ::std::string("--options            : show option set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108895)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--config             : show configuration", "\x0A")));
      {
      _a14239t_107672 _tmp108896 = ::std::string("--config             : show configuration") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108896)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--version            : show felix version", "\x0A")));
      {
      _a14239t_107672 _tmp108897 = ::std::string("--version            : show felix version") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108897)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--force              : force run Felix compiler", "\x0A")));
      {
      _a14239t_107672 _tmp108898 = ::std::string("--force              : force run Felix compiler") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108898)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--force-compiler     : force Felix compiler to rebuild everything", "\x0A")));
      {
      _a14239t_107672 _tmp108899 = ::std::string("--force-compiler     : force Felix compiler to rebuild everything") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108899)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--cache-dir=dir      : directory cache output from parser (*.par files), autocreated, default $HOME/.felix/cache", "\x0A")));
      {
      _a14239t_107672 _tmp108900 = ::std::string("--cache-dir=dir      : directory cache output from parser (*.par files), autocreated, default $HOME/.felix/cache") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108900)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--output-dir=dir     : directory to hold C++ output from translator, autocreated, default $HOME/.felix/cache", "\x0A")));
      {
      _a14239t_107672 _tmp108901 = ::std::string("--output-dir=dir     : directory to hold C++ output from translator, autocreated, default $HOME/.felix/cache") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108901)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("                       Felix stored by absolute pathname within directory (tree directory).", "\x0A")));
      {
      _a14239t_107672 _tmp108902 = ::std::string("                       Felix stored by absolute pathname within directory (tree directory).") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108902)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--bundle-dir=dir     : directory to hold C++ output from translator, autocreated.", "\x0A")));
      {
      _a14239t_107672 _tmp108903 = ::std::string("--bundle-dir=dir     : directory to hold C++ output from translator, autocreated.") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108903)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("                       Files directly in directory by basename (flat directory).", "\x0A")));
      {
      _a14239t_107672 _tmp108904 = ::std::string("                       Files directly in directory by basename (flat directory).") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108904)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--clean              : delete the caches first", "\x0A")));
      {
      _a14239t_107672 _tmp108905 = ::std::string("--clean              : delete the caches first") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108905)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--help               : show this help", "\x0A")));
      {
      _a14239t_107672 _tmp108906 = ::std::string("--help               : show this help") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108906)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--noinline           : force inlining off, may break things!", "\x0A")));
      {
      _a14239t_107672 _tmp108907 = ::std::string("--noinline           : force inlining off, may break things!") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108907)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--inline             : aggressive inlining", "\x0A")));
      {
      _a14239t_107672 _tmp108908 = ::std::string("--inline             : aggressive inlining") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108908)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--inline=999         : set inline cap to 999 'instructions'", "\x0A")));
      {
      _a14239t_107672 _tmp108909 = ::std::string("--inline=999         : set inline cap to 999 'instructions'") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108909)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--echo               : print shell commands before running them", "\x0A")));
      {
      _a14239t_107672 _tmp108910 = ::std::string("--echo               : print shell commands before running them") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108910)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--time               : print target program run time after it finishes", "\x0A")));
      {
      _a14239t_107672 _tmp108911 = ::std::string("--time               : print target program run time after it finishes") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108911)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--compile-time       : print time for compiler phases", "\x0A")));
      {
      _a14239t_107672 _tmp108912 = ::std::string("--compile-time       : print time for compiler phases") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108912)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--nostdlib           : don't load the standard library", "\x0A")));
      {
      _a14239t_107672 _tmp108913 = ::std::string("--nostdlib           : don't load the standard library") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108913)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--nooptimise         : disable C++ compiler optimisation", "\x0A")));
      {
      _a14239t_107672 _tmp108914 = ::std::string("--nooptimise         : disable C++ compiler optimisation") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108914)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--noreduce           : disable reductions (default for compilation speed)", "\x0A")));
      {
      _a14239t_107672 _tmp108915 = ::std::string("--noreduce           : disable reductions (default for compilation speed)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108915)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--doreduce           : enable reductions (default for performance)", "\x0A")));
      {
      _a14239t_107672 _tmp108916 = ::std::string("--doreduce           : enable reductions (default for performance)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108916)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--debug              : put debug symbols in generated binaries", "\x0A")));
      {
      _a14239t_107672 _tmp108917 = ::std::string("--debug              : put debug symbols in generated binaries") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108917)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--debug-compiler     : make felix compiler print progress diagnostics", "\x0A")));
      {
      _a14239t_107672 _tmp108918 = ::std::string("--debug-compiler     : make felix compiler print progress diagnostics") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108918)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--debug-flx          : make flx tool print diagnostics", "\x0A")));
      {
      _a14239t_107672 _tmp108919 = ::std::string("--debug-flx          : make flx tool print diagnostics") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108919)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--stdout=file        : run program with standard output redirected to file", "\x0A")));
      {
      _a14239t_107672 _tmp108920 = ::std::string("--stdout=file        : run program with standard output redirected to file") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108920)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--expect=file        : compare stdout with expect file", "\x0A")));
      {
      _a14239t_107672 _tmp108921 = ::std::string("--expect=file        : compare stdout with expect file") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108921)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--expect             : compare stdout with basename.expect", "\x0A")));
      {
      _a14239t_107672 _tmp108922 = ::std::string("--expect             : compare stdout with basename.expect") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108922)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--input=file         : set standard input", "\x0A")));
      {
      _a14239t_107672 _tmp108923 = ::std::string("--input=file         : set standard input") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108923)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--input              : set standard input to basename.input", "\x0A")));
      {
      _a14239t_107672 _tmp108924 = ::std::string("--input              : set standard input to basename.input") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108924)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--indir=dir          : set directory for regexp search, default current directory", "\x0A")));
      {
      _a14239t_107672 _tmp108925 = ::std::string("--indir=dir          : set directory for regexp search, default current directory") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108925)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--regex=pattern      : Perl regexp for batch file processing", "\x0A")));
      {
      _a14239t_107672 _tmp108926 = ::std::string("--regex=pattern      : Perl regexp for batch file processing") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108926)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--nonstop            : don't stop on error in batch processing", "\x0A")));
      {
      _a14239t_107672 _tmp108927 = ::std::string("--nonstop            : don't stop on error in batch processing") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108927)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--backup             : backup working source tree to dir 'backup'", "\x0A")));
      {
      _a14239t_107672 _tmp108928 = ::std::string("--backup             : backup working source tree to dir 'backup'") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108928)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--import=file        : add an import which is prefixed to all files being translated", "\x0A")));
      {
      _a14239t_107672 _tmp108929 = ::std::string("--import=file        : add an import which is prefixed to all files being translated") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108929)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--import=@file       : add all the files listed in file as imports (recursive on @)", "\x0A")));
      {
      _a14239t_107672 _tmp108930 = ::std::string("--import=@file       : add all the files listed in file as imports (recursive on @)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108930)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--nostdimport        : don't import the standard imports nugram.flxh and flx.flxh", "\x0A")));
      {
      _a14239t_107672 _tmp108931 = ::std::string("--nostdimport        : don't import the standard imports nugram.flxh and flx.flxh") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108931)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--compiler-phase     : specify which phase of the compiler to run", "\x0A")));
      {
      _a14239t_107672 _tmp108932 = ::std::string("--compiler-phase     : specify which phase of the compiler to run") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108932)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-Idir                : add dir to search path for both felix and C++ includes", "\x0A")));
      {
      _a14239t_107672 _tmp108933 = ::std::string("-Idir                : add dir to search path for both felix and C++ includes") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108933)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-Ldir                : add dir to linker search path", "\x0A")));
      {
      _a14239t_107672 _tmp108934 = ::std::string("-Ldir                : add dir to linker search path") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108934)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-llib                : add dir lib to linker command", "\x0A")));
      {
      _a14239t_107672 _tmp108935 = ::std::string("-llib                : add dir lib to linker command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108935)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-foption             : add switch to compiler command", "\x0A")));
      {
      _a14239t_107672 _tmp108936 = ::std::string("-foption             : add switch to compiler command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108936)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-Woption             : add switch to compiler command", "\x0A")));
      {
      _a14239t_107672 _tmp108937 = ::std::string("-Woption             : add switch to compiler command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108937)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-O0                  : add switch to compiler command", "\x0A")));
      {
      _a14239t_107672 _tmp108938 = ::std::string("-O0                  : add switch to compiler command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108938)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-O1                  : add switch to compiler command", "\x0A")));
      {
      _a14239t_107672 _tmp108939 = ::std::string("-O1                  : add switch to compiler command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108939)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-O2                  : add switch to compiler command", "\x0A")));
      {
      _a14239t_107672 _tmp108940 = ::std::string("-O2                  : add switch to compiler command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108940)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-O3                  : add switch to compiler command", "\x0A")));
      {
      _a14239t_107672 _tmp108941 = ::std::string("-O3                  : add switch to compiler command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108941)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("--cflags=flags       : addd flags to compiler command", "\x0A")));
      {
      _a14239t_107672 _tmp108942 = ::std::string("--cflags=flags       : addd flags to compiler command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108942)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-Dmac                : add macro def to C++ compiler command", "\x0A")));
      {
      _a14239t_107672 _tmp108943 = ::std::string("-Dmac                : add macro def to C++ compiler command") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108943)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-DFLX_ENABLE_TRACE   : enable compilation of trace generators (defaults off)", "\x0A")));
      {
      _a14239t_107672 _tmp108944 = ::std::string("-DFLX_ENABLE_TRACE   : enable compilation of trace generators (defaults off)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108944)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("-DFLX_CGOTO          : use gcc indirect gotos and use assembler hack for long jumps (default on if config detects support)", "\x0A")));
      {
      _a14239t_107672 _tmp108945 = ::std::string("-DFLX_CGOTO          : use gcc indirect gotos and use assembler hack for long jumps (default on if config detects support)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108945)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("", "\x0A")));
      {
      _a14239t_107672 _tmp108946 = ::std::string("") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108946)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("*.c *.cc *.cpp *.cxx ", "\x0A")));
      {
      _a14239t_107672 _tmp108947 = ::std::string("*.c *.cc *.cpp *.cxx ") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108947)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("                     : add files to C++ compilation (and linker) steps", "\x0A")));
      {
      _a14239t_107672 _tmp108948 = ::std::string("                     : add files to C++ compilation (and linker) steps") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108948)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("*.o *.obj *.lib *.dll *.a *.so", "\x0A")));
      {
      _a14239t_107672 _tmp108949 = ::std::string("*.o *.obj *.lib *.dll *.a *.so") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108949)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("                     : add files to linker steps", "\x0A")));
      {
      _a14239t_107672 _tmp108950 = ::std::string("                     : add files to linker steps") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108950)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("* *.flx *.fdoc       : Felix program name, terminates options and starts runtime arguments", "\x0A")));
      {
      _a14239t_107672 _tmp108951 = ::std::string("* *.flx *.fdoc       : Felix program name, terminates options and starts runtime arguments") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108951)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("", "\x0A")));
      {
      _a14239t_107672 _tmp108952 = ::std::string("") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108952)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Environment variables", "\x0A")));
      {
      _a14239t_107672 _tmp108953 = ::std::string("Environment variables") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108953)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("---------------------", "\x0A")));
      {
      _a14239t_107672 _tmp108954 = ::std::string("---------------------") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108954)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Flx build tool", "\x0A")));
      {
      _a14239t_107672 _tmp108955 = ::std::string("Flx build tool") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108955)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_INSTALL_DIR=dir     : overrides default installation directory (as if --test=dir)", "\x0A")));
      {
      _a14239t_107672 _tmp108956 = ::std::string("  FLX_INSTALL_DIR=dir     : overrides default installation directory (as if --test=dir)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108956)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_SHELL_ECHO=1        : show shell callouts (system,popen)", "\x0A")));
      {
      _a14239t_107672 _tmp108957 = ::std::string("  FLX_SHELL_ECHO=1        : show shell callouts (system,popen)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108957)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_FILE_MONITOR=1      : reports on every file open (felix and flxg)", "\x0A")));
      {
      _a14239t_107672 _tmp108958 = ::std::string("  FLX_FILE_MONITOR=1      : reports on every file open (felix and flxg)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108958)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_REPORT_FILECOPY=1   : reports on every file copy (felix)", "\x0A")));
      {
      _a14239t_107672 _tmp108959 = ::std::string("  FLX_REPORT_FILECOPY=1   : reports on every file copy (felix)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108959)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_DEBUG_FLX=1         : debug flx (as if --debug-flx set)", "\x0A")));
      {
      _a14239t_107672 _tmp108960 = ::std::string("  FLX_DEBUG_FLX=1         : debug flx (as if --debug-flx set)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108960)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Flxg compiler", "\x0A")));
      {
      _a14239t_107672 _tmp108961 = ::std::string("Flxg compiler") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108961)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_DEBUG_PARSER=1      : emit debug info from the Felix parser", "\x0A")));
      {
      _a14239t_107672 _tmp108962 = ::std::string("  FLX_DEBUG_PARSER=1      : emit debug info from the Felix parser") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108962)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Run time system (affects flx as well as any binary run)", "\x0A")));
      {
      _a14239t_107672 _tmp108963 = ::std::string("Run time system (affects flx as well as any binary run)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108963)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_DEBUG               : enable debugging traces (default off)", "\x0A")));
      {
      _a14239t_107672 _tmp108964 = ::std::string("  FLX_DEBUG               : enable debugging traces (default off)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108964)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_DEBUG_ALLOCATIONS   : enable debugging allocator (default FLX_DEBUG)", "\x0A")));
      {
      _a14239t_107672 _tmp108965 = ::std::string("  FLX_DEBUG_ALLOCATIONS   : enable debugging allocator (default FLX_DEBUG)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108965)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_DEBUG_COLLECTIONS   : enable debugging collector (default FLX_DEBUG)", "\x0A")));
      {
      _a14239t_107672 _tmp108966 = ::std::string("  FLX_DEBUG_COLLECTIONS   : enable debugging collector (default FLX_DEBUG)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108966)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_REPORT_COLLECTIONS  : report collections (default FLX_DEBUG)", "\x0A")));
      {
      _a14239t_107672 _tmp108967 = ::std::string("  FLX_REPORT_COLLECTIONS  : report collections (default FLX_DEBUG)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108967)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_DEBUG_THREADS       : enable debugging collector (default FLX_DEBUG)", "\x0A")));
      {
      _a14239t_107672 _tmp108968 = ::std::string("  FLX_DEBUG_THREADS       : enable debugging collector (default FLX_DEBUG)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108968)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_DEBUG_DRIVER        : enable debugging driver (default FLX_DEBUG)", "\x0A")));
      {
      _a14239t_107672 _tmp108969 = ::std::string("  FLX_DEBUG_DRIVER        : enable debugging driver (default FLX_DEBUG)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108969)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Run time GC tuning (affects flx as well as any binary run)", "\x0A")));
      {
      _a14239t_107672 _tmp108970 = ::std::string("Run time GC tuning (affects flx as well as any binary run)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108970)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_FINALISE            : whether to cleanup on termination (default NO)", "\x0A")));
      {
      _a14239t_107672 _tmp108971 = ::std::string("  FLX_FINALISE            : whether to cleanup on termination (default NO)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108971)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_GC_FREQ=n           : how often to call garbage collector (default 1000)", "\x0A")));
      {
      _a14239t_107672 _tmp108972 = ::std::string("  FLX_GC_FREQ=n           : how often to call garbage collector (default 1000)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108972)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_MIN_MEM=n           : initial memory pool n Meg (default 10)", "\x0A")));
      {
      _a14239t_107672 _tmp108973 = ::std::string("  FLX_MIN_MEM=n           : initial memory pool n Meg (default 10)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108973)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_MAX_MEM=n           : maximum memory n Meg (default -1 = infinite)", "\x0A")));
      {
      _a14239t_107672 _tmp108974 = ::std::string("  FLX_MAX_MEM=n           : maximum memory n Meg (default -1 = infinite)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108974)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_FREE_FACTOR=n.m     : reset FLX_MIN_MEM to actual usage by n.m after gc (default 1.1)", "\x0A")));
      {
      _a14239t_107672 _tmp108975 = ::std::string("  FLX_FREE_FACTOR=n.m     : reset FLX_MIN_MEM to actual usage by n.m after gc (default 1.1)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108975)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  FLX_ALLOW_COLLECTION_ANYWHERE # (default yes)", "\x0A")));
      {
      _a14239t_107672 _tmp108976 = ::std::string("  FLX_ALLOW_COLLECTION_ANYWHERE # (default yes)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108976)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 897, cols 9 to 2
      return; // proc return from stackable 
}
//------------------------------
//FUNCTION <93888>: generic_static_library_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93888__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <93950>: generic_link_exe_static_uncurry::aux_uncurry: Apply method
void* _fI93950_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93951_inp_uncurry = _arg.data[0];
  _vI93952_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93959:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93955> := inp_uncurry<93951>varname;
      _vI93955_aux__apos_2_mv_1381  = _vI93951_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93955_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93954;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93952>varname;: type void*
      return _vI93952_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93954:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93955_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93958__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_link_exe_static_uncurry))) ) goto _ml1384_L93953;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93956>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93955>varname));
      _vI93956_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93955_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93957>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93955>varname));
      _vI93957_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93955_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93952> := (Snoc<80397>struct (out<93952>varname, (quote_arg<16873>stackfun h_param_std_1267<93956>varname)));
      _vI93952_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93952_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI93956_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93951> := t_param_std_1266<93957>varname;
      _vI93951_inp_uncurry  = _vI93957_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93959;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93953:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <105936>: flx_processing::check_binary_uptodate::maxf::maxf'2: Apply method
double _fI105936_maxf__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI105937_f = _arg;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<106487> := (<<82604>primfun[double] (t<105938>varname, (dfiletime<82503>stackfun (f<105937>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))))));
      _vI106487_max_mv_106  = (ptr_fI105935_maxf->_vI105938_t < dfiletime(_vI105937_f, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI106487_max_mv_106%2==1) ) goto _ml108_L106486;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return (dfiletime<82503>stackfun (f<105937>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));: type double
      return dfiletime(_vI105937_f, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)));
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L106486:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return t<105938>varname;: type double
      return ptr_fI105935_maxf->_vI105938_t;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2723,5,2723,95); // HACK! 
}

//------------------------------
//FUNCTION <97914>: flx_pkgconfig::_lam_65308: Apply method
 ::flx::rtl::cl_t _lam_65308::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 372, cols 9 to 23
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",372,9,372,23); // HACK! 
}

//------------------------------
//FUNCTION <89862>: gramtime_uncurry::_lam_65075: Apply method
_a14239t_107672 _lam_65075::apply(_a14239t_107672 const &_arg ){
  _vI89863_s = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 237, cols 7 to 24
      //return (aux_uncurry<104984>stackfun ("", (split<14933>stackfun (s<89863>varname, "/"))));: type _a14239t_107672
      return _fI104984_aux_uncurry(FLX_FPAR_PASS this, ptrgramtime_uncurry)
      .apply(_tt107698(::std::string(""), split(FLX_FPAR_PASS_ONLY)
      .apply(_at107674(_vI89863_s, ::std::string("/"))) /* apply_stack */)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",102,20,102,66); // HACK! 
}

//------------------------------
//FUNCTION <66723>: toolchain_clang_linux::cxx_dependency_generator: Apply method
_tt107757 _fI66723_cxx_dependency_generator::apply(_art107756 const &_arg ){
  _vI66728_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1260, cols 6 to 7
      //_ds2_66188<66725>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:cxx_compiler<66684>varname, CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), "-std=c++11")), "-MM")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj0:record(src:(string)) -> string), spec<66728>varname)));
      _ds2_66188 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_clang_linux->_vI66684_cxx_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_linux->_vI66768_config.ccflags, ::std::string("-std=c++11")))), ::std::string("-MM")))), ptrtoolchain_clang_linux->_vI66768_config.header_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.macros, ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66728_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1260, cols 6 to 7
      //result<66726>varname = apply((prj0:int * string -> int), _ds2_66188<66725>varname);
      _vI66726_result = _ds2_66188.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1260, cols 6 to 7
      //data<66727>varname = apply((prj1:int * string -> string), _ds2_66188<66725>varname);
      _vI66727_data = _ds2_66188.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1261, cols 6 to 25
      //return (result<66726>varname, data<66727>varname);: type _tt107757
      return _tt107757(_vI66726_result, _vI66727_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1262,3,1262,4); // HACK! 
}

//------------------------------
//FUNCTION <89757>: toolchain_clang_apple_iOS_maker_uncurry::dynamic_object_extension: Apply method
_a14239t_107672 _fI89757_dynamic_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1995, cols 3 to 57
      //return "_dynamic.o";: type _a14239t_107672
      return ::std::string("_dynamic.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1995,3,1995,57); // HACK! 
}

//------------------------------
//FUNCTION <107103>: flx_processing::find_cxx_pkgs::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI107103__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <66661>: toolchain_gcc_osx::static_library_linker: Apply method
int _fI66661_static_library_linker::apply(_art107763 const &_arg ){
  _vI66664_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1118, cols 5 to 6
      //result<66663>varname = (generic_static_library_uncurry<89475>stackfun (( CCFLAGS:(Snoc<80397>struct (Empty<80385>varname, "-rcs")), CCLINK_STATIC_LIB:"ar", SPEC_LIB_FILENAME:"", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66664>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66664>varname)));
      _vI66663_result = generic_static_library_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107809(_art107808(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-rcs")))), ::std::string("ar"), ::std::string(""), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66664_spec.srcs, _vI66664_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1119, cols 5 to 18
      //return result<66663>varname;: type int
      return _vI66663_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1120,3,1120,4); // HACK! 
}

//------------------------------
//FUNCTION <96542>: flx_pkgconfig::check_id::iterator'2: Apply method
void* _fI96542_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      //i<96543>varname = 0;
      _vI96543_i = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
    redo__ll_strings_7200_L96544:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      if(FLX_UNLIKELY(!(!(((static_cast<int>((ptrcheck_id->_vI96546_x.size()))/*int.flx: ctor*/) - 1  < _vI96543_i)) ) )) goto break__ll_strings_7200_L96545;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 44 to 62
      FLX_SET_PC(108978)
      //yield (Some<81466>struct (subscript<81183>primfun[int] (x<96546>varname, i<96543>varname)));: type void*
      return FLX_VNR(1, new(*PTF gcp, char_ptr_map, true) char (::flx::rtl::strutil::subscript(ptrcheck_id->_vI96546_x,_vI96543_i)));//yield
    FLX_CASE_LABEL(108978)
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      // primcall pre_incr<81467>primproc[int] &i<96543>ref;
      {
      int* _tmp108979 = (int*)&_vI96543_i;
      ++*((_tmp108979));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
      goto redo__ll_strings_7200_L96544;
    // # C:/projects/felix/src/packages/strings.fdoc: line 363, cols 7 to 67
    break__ll_strings_7200_L96545:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 364, cols 7 to 24
      //return None<81468>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",365,5,365,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <107029>: flx_processing::cxx_compile_static1_uncurry::_lam_66080: Apply method
_a14239t_107672 _fI107029__lam_66080::apply(_a14239t_107672 const &_arg ){
  _vI107035_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2355, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<107035>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI107035_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2355,11,2355,40); // HACK! 
}

//------------------------------
//FUNCTION <66701>: toolchain_clang_linux::static_object_extension: Apply method
_a14239t_107672 _fI66701_static_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1221, cols 3 to 55
      //return "_static.o";: type _a14239t_107672
      return ::std::string("_static.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1221,3,1221,55); // HACK! 
}

//------------------------------
//FUNCTION <97162>: flx_pkgconfig::handle_pkg::_lam_65277::aux_uncurry: Apply method
void* _fI97162_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97163_x_uncurry = _arg.data[0];
  _vI97164_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97171:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97167> := x_uncurry<97163>varname;
      _vI97167_aux__apos_2_mv_1387  = _vI97163_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97167_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97166;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97164>varname;: type void*
      return _vI97164_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97166:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97167_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97170__lam_1391)(FLX_FPAR_PASS this, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L97165;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97168>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97167>varname));
      _vI97168_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97167_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97169>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97167>varname));
      _vI97169_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97167_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97164> := (Snoc<80397>struct (y<97164>varname, h_param_std_1269<97168>varname));
      _vI97164_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97164_y, _vI97168_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97163> := t_param_std_1268<97169>varname;
      _vI97163_x_uncurry  = _vI97169_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97171;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97165:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <107013>: flx_processing::cxx_compile_dynamic1_uncurry: Apply method
int _fI107013_cxx_compile_dynamic1_uncurry::apply(_tt107874 const &_arg ){
  _vI107056_ehandler_uncurry = _arg.mem_0;
  _vI107049_src = _arg.mem_1;
  _vI107050_dst = _arg.mem_2;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107205>ref;
      {
      __timeb64* _tmp108981 = (__timeb64*)&_vI107205_tv;
      _ftime64_s(((_tmp108981)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv98908<107204> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107205>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107205>varname)), literal[double]("1.0e3")))));
      _vI107204__genout_urv98908  = (static_cast<double>((_vI107205_tv.time))) + ((static_cast<double>((_vI107205_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2220, cols 5 to 25
      //t0<107037>varname = _genout_urv98908<107204>varname;
      _vI107037_t0 = _vI107204__genout_urv98908; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2221, cols 5 to 33
      //pkgs<107038>varname = (find_cxx_pkgs<106722>stackfun src<107049>varname);
      _vI107038_pkgs = _fI106722_find_cxx_pkgs(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI107049_src) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2222, cols 5 to 52
      //(deref<80855>primfun[list] apply((prj78:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<107004>ref)) = (join_uncurry<89534>stackfun (apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), pkgs<107038>varname));
      *(&((_art107702*)&ptrflx_processing->_vI107004_control)->extra_pkgs)  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.extra_pkgs, _vI107038_pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2223, cols 5 to 35
      //pkg_cflags<107039>varname = Empty<80385>varname;
      _vI107039_pkg_cflags = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2239, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI107038_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65873_L107054;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_compile_dynamic1] Adding packages ", (str<81092>stackfun pkgs<107038>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108982 = (::std::string("[flx:cxx_compile_dynamic1] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI107038_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108982)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<107206>varname = (aux_uncurry<107207>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI107206_r = _fI107207_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<107206>ref;
      {
      void** _tmp108983 = (void**)&_vI107206_r;
      _rev(((_tmp108983)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2229, cols 7 to 8
      //PKGCONFIG_PATH<107042>varname = r<107206>varname;
      _vI107042_PKGCONFIG_PATH = _vI107206_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2230, cols 7 to 89
      //allargs<107043>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<107042>varname, "--field=cflags")), "--keepleftmost")), pkgs<107038>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI107043_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI107042_PKGCONFIG_PATH, ::std::string("--field=cflags"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI107038_pkgs)) /* apply_stack */, ptrflx_processing->_vI107004_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2231, cols 7 to 62
      //_genout_urv98955<107217> := (flx_pkgconfig<68435>stackfun allargs<107043>varname);
      _vI107217__genout_urv98955  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI107043_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2231, cols 7 to 62
      //_ds2_66063<107044>varname = _genout_urv98955<107217>varname;
      _vI107044__ds2_66063 = _vI107217__genout_urv98955; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2231, cols 7 to 62
      //ret<107045>varname = apply((prj0:int * list -> int), _ds2_66063<107044>varname);
      _vI107045_ret = _vI107044__ds2_66063.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2231, cols 7 to 62
      //mycflags<107046>varname = apply((prj1:int * list -> list), _ds2_66063<107044>varname);
      _vI107046_mycflags = _vI107044__ds2_66063.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2237, cols 7 to 11
      if(!(!((_vI107045_ret == 0)) ) ) goto _ifdoelse_bootflx_65875_L107052;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_compile_dynamic1] Error ", (str<80203>primfun[int] ret<107045>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<107043>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp108984 = (((::std::string("[flx:cxx_compile_dynamic1] Error ") + ::flx::rtl::strutil::str<int>(_vI107045_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI107043_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108984)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler_uncurry<107056>varname);
      {
      _a6258t_107873 _tmp108985 = (_a6258t_107873)(_vI107056_ehandler_uncurry);
      throw ((_tmp108985));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2237, cols 7 to 11
    _ifdoelse_bootflx_65875_L107052:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2238, cols 7 to 27
      //pkg_cflags<107039>varname = mycflags<107046>varname;
      _vI107039_pkg_cflags = _vI107046_mycflags; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2239, cols 5 to 9
    _ifdoelse_bootflx_65873_L107054:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 22 to 36
      //cxx_compile_dynamic1'2_mv_66065<107219> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107219_cxx_compile_dynamic1__apos_2_mv_66065  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      if(!(_vI107219_cxx_compile_dynamic1__apos_2_mv_66065%2==1) ) goto _ml66067_L107220;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      goto _end_hash_277875394;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _ml66067_L107220:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _end_hash_277875394:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 22 to 36
      //cxx_compile_dynamic1'2_mv_66065<107223> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107223_cxx_compile_dynamic1__apos_2_mv_66065  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      if(!(_vI107223_cxx_compile_dynamic1__apos_2_mv_66065%2==1) ) goto _ml66067_L107224;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      //_urv98989<107222> := echoln<107006>closure;
      _vI107222__urv98989  = (FLX_NEWP(_pI107006_echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      goto _end_hash_993074267;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _ml66067_L107224:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      //_urv98989<107222> := debugln<107005>closure;
      _vI107222__urv98989  = (FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _end_hash_993074267:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 22 to 36
      //cxx_compile_dynamic1'2_mv_66065<107227> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107227_cxx_compile_dynamic1__apos_2_mv_66065  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      if(!(_vI107227_cxx_compile_dynamic1__apos_2_mv_66065%2==1) ) goto _ml66067_L107228;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      goto _end_hash_1918149;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _ml66067_L107228:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _end_hash_1918149:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 22 to 36
      //cxx_compile_dynamic1'2_mv_66065<107231> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107231_cxx_compile_dynamic1__apos_2_mv_66065  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      if(!(_vI107231_cxx_compile_dynamic1__apos_2_mv_66065%2==1) ) goto _ml66067_L107232;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
      goto _end_hash_865057200;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _ml66067_L107232:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2246, cols 19 to 77
    _end_hash_865057200:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2249, cols 5 to 6
      //tc<107047>varname = apply(toolchain<68911>varname, ( ccflags:(join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), pkg_cflags<107039>varname)), debugln:_urv98989<107222>varname, dynamic_libraries:apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), header_search_dirs:(join_uncurry<89534>stackfun (apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), apply((prj23:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname))), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), macros:apply((prj46:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname)));
      _vI107047_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.CCFLAGS, _vI107039_pkg_cflags)) /* apply_stack */, _vI107222__urv98989, ptrflx_processing->_vI106705_dflt_clang_config.dynamic_libraries, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_RTL_DIRS, ptrflx_processing->_vI107004_control.EXTRA_INCLUDE_DIRS)) /* apply_stack */, ptrflx_processing->_vI106705_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI107004_control.MACROS, ptrflx_processing->_vI106705_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2256, cols 5 to 9
      //_genout_urv99211<107234> := (cxx_depcheck<66985>stackfun (tc<107047>varname, src<107049>varname, dst<107050>varname));
      _vI107234__genout_urv99211  = cxx_depcheck(FLX_FPAR_PASS_ONLY)
      .apply(_tt108175(_vI107047_tc, _vI107049_src, _vI107050_dst)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2256, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.RECOMPILE == 1) || !_vI107234__genout_urv99211  ) ) goto _ifdoend_bootflx_65876_L107055;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2251, cols 7 to 68
      //result<107048>varname = apply(apply((prj5:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),src:(string)) -> int), tc<107047>varname), ( dst:dst<107050>varname, src:src<107049>varname));
      _vI107048_result = (_vI107047_tc.cxx_dynamic_object_compiler)->clone()
      ->apply(_art107759(_vI107050_dst, _vI107049_src)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _end_99221_L107242;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107241>ref;
      {
      __timeb64* _tmp108986 = (__timeb64*)&_vI107241_tv;
      _ftime64_s(((_tmp108986)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107240> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107241>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107241>varname)), literal[double]("1.0e3")))));
      _vI107240__genout_urv96124  = (static_cast<double>((_vI107241_tv.time))) + ((static_cast<double>((_vI107241_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107235>varname = (-<80547>primfun[double] (_genout_urv96124<107240>varname, t0<107037>varname));
      _vI107235_elapsed = _vI107240__genout_urv96124 - _vI107037_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107236>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107235>varname, literal[double]("60.0"))));
      _vI107236_minutes = ::std::floor((_vI107235_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107237>varname = (-<80547>primfun[double] (elapsed<107235>varname, (*<80818>primfun[double] (minutes<107236>varname, literal[double]("60.0")))));
      _vI107237_seconds = _vI107235_elapsed - (_vI107236_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107236>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107237>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Dynamic c++  : ", src<107049>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108987 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107236_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107237_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Dynamic c++  : ") + _vI107049_src ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp108987)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2252, cols 7 to 42
    _end_99221_L107242:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2253, cols 7 to 20
      //return result<107048>varname;: type int
      return _vI107048_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2256, cols 5 to 9
    _ifdoend_bootflx_65876_L107055:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2255, cols 7 to 15
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2257,3,2257,4); // HACK! 
}

//------------------------------
//FUNCTION <92240>: join_uncurry::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI92240__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <97765>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI97765_aux::apply(_at107697 const &_arg ){
  _vI97766_inp = _arg.data[0];
  _vI97767_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
    start_96482_L97786:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //aux_mv_1493<97770> := inp<97766>varname;
      _vI97770_aux_mv_1493  = _vI97766_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
      if(!(FLX_VNI(_vI97770_aux_mv_1493)==0) ) goto _ml1495_L97769;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<97773>stackfun ((Snoc<80397>struct (out<97767>varname, fld<97690>varname)), Empty<80385>varname));: type void*
      return _fI97773_aux_uncurry(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97767_out, ptrparse_args->fld))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
    _ml1495_L97769:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1301, h_param_std_1302)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      if(!andthen(FLX_VNI(_vI97770_aux_mv_1493)==1, (FLX_NEWP(_fI97783__lam_1502)(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1496_L97768;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 16 to 16
      //h_param_std_1302<97771>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1493<97770>varname));
      _vI97771_h_param_std_1302 = (*((_tt107677*)FLX_VNP(_vI97770_aux_mv_1493))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 14 to 14
      //t_param_std_1301<97772>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1493<97770>varname));
      _vI97772_t_param_std_1301 = (*((_tt107677*)FLX_VNP(_vI97770_aux_mv_1493))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 580, cols 12 to 24
      //aux_mv_1498<97785> := (lnot<5216>primfun (eq<81159>stackfun (h_param_std_1302<97771>varname, fld<97690>varname)));
      _vI97785_aux_mv_1498  = !eq(_vI97771_h_param_std_1302, ptrparse_args->fld) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
      if(!(_vI97785_aux_mv_1498%2==1) ) goto _ml1500_L97784;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //out<97767> := (Snoc<80397>struct (out<97767>varname, h_param_std_1302<97771>varname));
      _vI97767_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97767_out, _vI97771_h_param_std_1302))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<97766> := t_param_std_1301<97772>varname;
      _vI97766_inp  = _vI97772_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_96482_L97786;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
    _ml1500_L97784:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<97766> := t_param_std_1301<97772>varname;
      _vI97766_inp  = _vI97772_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_96482_L97786;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
    _ml1496_L97768:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",584,5,584,6); // HACK! 
}

//------------------------------
//FUNCTION <93626>: generic_dependency_parser::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93626__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <105717>: flx_processing::_lam_65033: Apply method
 ::flx::rtl::cl_t _lam_65033::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",3293,9,3293,13); // HACK! 
}

//------------------------------
//FUNCTION <89531>: generic_link_exe_static_uncurry: Apply method
int generic_link_exe_static_uncurry::apply(_tt107811 const &_arg ){
  _vI89956_spec_uncurry = _arg.mem_0;
  _vI89952_cppos = _arg.mem_1;
  _vI89953_LINKER_OUTPUT_FILENAME = _arg.mem_2;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93927>varname = (aux_uncurry<93928>stackfun (apply((prj0:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89956>varname), Empty<80385>varname));
      _vI93927_r = _fI93928_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89956_spec_uncurry.CCFLAGS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93927>ref;
      {
      void** _tmp108989 = (void**)&_vI93927_r;
      _rev(((_tmp108989)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93949>varname = (aux_uncurry<93950>stackfun (cppos<89952>varname, Empty<80385>varname));
      _vI93949_r = _fI93950_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89952_cppos, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93949>ref;
      {
      void** _tmp108990 = (void**)&_vI93949_r;
      _rev(((_tmp108990)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93967>varname = (aux_uncurry<93968>stackfun (apply((prj2:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89956>varname), Empty<80385>varname));
      _vI93967_r = _fI93968_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89956_spec_uncurry.LINK_STRINGS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93967>ref;
      {
      void** _tmp108991 = (void**)&_vI93967_r;
      _rev(((_tmp108991)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 329, cols 5 to 6
      //CMD<89950>varname = (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun (""", apply((prj1:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89956>varname))), """)), " ")), (cat_uncurry<89509>stackfun (" ", r<93927>varname)))), " ")), (+<14305>primfun (apply((prj3:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89956>varname), (+<14305>primfun ((+<14305>primfun (""", LINKER_OUTPUT_FILENAME<89953>varname)), """)))))), " ")), (cat_uncurry<89509>stackfun (" ", r<93949>varname)))), " ")), (cat_uncurry<89509>stackfun (" ", r<93967>varname))));
      _vI89950_CMD = (((((((((::std::string("\"") + _vI89956_spec_uncurry.CCLINK_STATIC ) + ::std::string("\"") ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI93927_r)) /* apply_stack */ ) + ::std::string(" ") ) + (_vI89956_spec_uncurry.SPEC_EXE_FILENAME + ((::std::string("\"") + _vI89953_LINKER_OUTPUT_FILENAME ) + ::std::string("\"") ) ) ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI93949_r)) /* apply_stack */ ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI93967_r)) /* apply_stack */ ; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 331, cols 5 to 38
      //run procedure call apply((prj4:record(CCFLAGS:(list),CCLINK_STATIC:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string -> void), spec_uncurry<89956>varname) (+<14305>primfun ("Link command=", CMD<89950>varname));
      {
        ::flx::rtl::con_t *_p = (_vI89956_spec_uncurry.debugln)->clone()
      ->call(0, ::std::string("Link command=") + _vI89950_CMD );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L93983;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", CMD<89950>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp108992 = (::std::string("[system] ") + _vI89950_CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108992)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L93983:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93990<93990> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", CMD<89950>varname)), """)));
      _genout_urv93990  = ::std::system(((::std::string("\"") + _vI89950_CMD ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<93987> := _genout_urv93990<93990>varname;
      _vI93987__genout_urv93723  = _genout_urv93990; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<93986> := _genout_urv93723<93987>varname;
      _vI93986__genout_urv93715  = _vI93987__genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<93985> := _genout_urv93715<93986>varname;
      _vI93985__genout_urv93710  = _vI93986__genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93981<93981> := _genout_urv93710<93985>varname;
      _genout_urv93981  = _vI93985__genout_urv93710; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 332, cols 5 to 35
      //result<89951>varname = _genout_urv93981<93981>varname;
      _vI89951_result = _genout_urv93981; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 335, cols 5 to 9
      if(!(!((_vI89951_result == 0)) ) ) goto _ifdoelse_bootflx_65402_L89955;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Link command=", CMD<89950>varname)), " FAILED")), "\x0A")));
      {
      _a14239t_107672 _tmp108993 = ((::std::string("Link command=") + _vI89950_CMD ) + ::std::string(" FAILED") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108993)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 335, cols 5 to 9
    _ifdoelse_bootflx_65402_L89955:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 336, cols 5 to 18
      //return result<89951>varname;: type int
      return _vI89951_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",337,3,337,4); // HACK! 
}

//------------------------------
//FUNCTION <66600>: toolchain_gcc_osx::host_os: Apply method
_a14239t_107672 _fI66600_host_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 967, cols 3 to 33
      //return "OSX";: type _a14239t_107672
      return ::std::string("OSX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",967,3,967,33); // HACK! 
}

//------------------------------
//C FUNC <89471>: map_uncurry
_poly_80462t_107729 map_uncurry(FLX_APAR_DECL  _ft108087* _vI89887__f_uncurry, _poly_83443t_108082 _vI89888_x){
  _a5094t_107688 _vI89896_i;
  _poly_80462t_107729 _vI89895_o;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 851, cols 5 to 30
      //o<89895>varname = (_ctor_varray<83511>primfun[string] (len<83512>primfun[StringPiece] x<89888>varname));
      _vI89895_o = (_a14239t_107672*)(PTF gcp->collector->create_empty_array(&_a14239t_107672_ptr_map,(PTF gcp->collector->get_used(_vI89888_x)))); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 858, cols 5 to 14
      if(!((0 < (PTF gcp->collector->get_used(_vI89888_x)))) ) goto _ifdoelse_std_1716_L89889;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 858, cols 23 to 9
      //i<89896>varname = literal[size]("0");
      _vI89896_i = 0; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 858, cols 23 to 9
    redo__ll_arrays_6296_L89892:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 858, cols 23 to 9
      if(FLX_UNLIKELY(!(!(((PTF gcp->collector->get_used(_vI89888_x)) - 1  < _vI89896_i)) ) )) goto _ifdoelse_std_1716_L89889;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 856, cols 5 to 9
      if(!(!(((PTF gcp->collector->get_used(_vI89895_o)) < (PTF gcp->collector->get_count(_vI89895_o)))) ) ) goto _ifdoelse_std_1718_L89893;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("insert: attempt to push_back on full varray size ", (str<83517>primfun[size] (maxlen<83516>primfun[string] o<89895>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108994 = (::std::string("insert: attempt to push_back on full varray size ") + ::flx::rtl::strutil::str<_a5094t_107688>((PTF gcp->collector->get_count(_vI89895_o))) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108994)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/arrays.fdoc: line 856, cols 5 to 9
    _ifdoelse_std_1718_L89893:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(_vI89896_i)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(_vI89888_x))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/arrays.fdoc: line 772, cols 5 to 9
      if(!(!(((PTF gcp->collector->get_used(_vI89895_o)) < (PTF gcp->collector->get_count(_vI89895_o)))) ) ) goto _ifdoelse_std_1701_L91757;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("attempt to push_back on full varray size ", (str<83517>primfun[size] (maxlen<83516>primfun[string] o<89895>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp108995 = (::std::string("attempt to push_back on full varray size ") + ::flx::rtl::strutil::str<_a5094t_107688>((PTF gcp->collector->get_count(_vI89895_o))) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108995)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/arrays.fdoc: line 772, cols 5 to 9
    _ifdoelse_std_1701_L91757:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 773, cols 5 to 21
      // primcall _push_back<83547>primproc[string] (o<89895>varname, apply(_f_uncurry<89887>varname, (unsafe_get<83582>primfun[StringPiece] (x<89888>varname, (_ctor_size<83435>primfun[size] (_ctor_size<83435>primfun[size] i<89896>varname))))));
      {
      _a15268t_108081 _tmp108996 = _vI89888_x[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(_vI89896_i)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)];
      _a14239t_107672 _tmp108997 = (_vI89887__f_uncurry)->clone()
      ->apply((_tmp108996)) /* general apply */;
      
    {
      //_a14239t_107672 * _p = *_vI89895_o;
      size_t n = PTF gcp->collector->get_used(_vI89895_o);
      PTF gcp->collector->incr_used(_vI89895_o,1L);
      new(_vI89895_o+n) _a14239t_107672(((_tmp108997)));
    }
  
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 858, cols 23 to 9
      // primcall pre_incr<81537>primproc[size] &i<89896>ref;
      {
      _a5094t_107688* _tmp108998 = (_a5094t_107688*)&_vI89896_i;
      ++*((_tmp108998));
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 858, cols 23 to 9
      goto redo__ll_arrays_6296_L89892;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 858, cols 5 to 14
    _ifdoelse_std_1716_L89889:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 859, cols 5 to 13
      //return o<89895>varname;: type _poly_80462t_107729
      return _vI89895_o;
}
//------------------------------
//FUNCTION <66318>: toolchain_msvc_win32::_lam_66229: Apply method
_a14239t_107672 _lam_66229::apply(_a14239t_107672 const &_arg ){
  _vI66320_s = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1752, cols 21 to 44
      //return (+<14305>primfun ("/D", s<66320>varname));: type _a14239t_107672
      return ::std::string("/D") + _vI66320_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1752,21,1752,44); // HACK! 
}

//------------------------------
//FUNCTION <91675>: process_config_text_uncurry::aux::_lam_2289: Apply method
 ::flx::rtl::cl_t _lam_2289::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,9,478,14); // HACK! 
}

//------------------------------
//FUNCTION <106969>: flx_processing::check_output_if_required: Apply method
int _fI106969_check_output_if_required::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2879, cols 5 to 19
      //result<106970>varname = 0;
      _vI106970_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2880, cols 5 to 34
      //expected<106971>varname = apply((prj21:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname);
      _vI106971_expected = ptrflx_processing->_vI107004_control.EXPECT; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2881, cols 5 to 32
      //output<106972>varname = apply((prj69:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname);
      _vI106972_output = ptrflx_processing->_vI107004_control.STDOUT; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2901, cols 5 to 9
      if(!((_vI106972_output == ::std::string(""))) ) goto _ifdoend_bootflx_65980_L106976;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("[flx] No output file given??", "\x0A")));
      {
      _a14239t_107672 _tmp108999 = ::std::string("[flx] No output file given??") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp108999)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2887, cols 7 to 16
      //result<106970>varname = 1;
      _vI106970_result = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2901, cols 5 to 9
      goto _ifdoelse_bootflx_65981_L106981;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2901, cols 5 to 9
    _ifdoend_bootflx_65980_L106976:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2900, cols 5 to 11
      if(!((_vI106971_expected == ::std::string(""))) ) goto _ifdoend_bootflx_65982_L106977;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("[flx] No expect file given??", "\x0A")));
      {
      _a14239t_107672 _tmp109000 = ::std::string("[flx] No expect file given??") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109000)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2890, cols 7 to 16
      //result<106970>varname = 1;
      _vI106970_result = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2900, cols 5 to 11
      goto _ifdoelse_bootflx_65981_L106981;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2900, cols 5 to 11
    _ifdoend_bootflx_65982_L106977:;
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_634_L107641;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load_text] ", output<106972>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109001 = (::std::string("[load_text] ") + _vI106972_output ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109001)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
    _ifdoelse_std_634_L107641:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2894, cols 7 to 43
      //output_text<106973>varname = (raw_load_text<8398>primfun output<106972>varname);
      _vI106973_output_text = ::flx::rtl::ioutil::load_text_file(_vI106972_output); //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_634_L107643;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load_text] ", expected<106971>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109002 = (::std::string("[load_text] ") + _vI106971_expected ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109002)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 475, cols 5 to 6
    _ifdoelse_std_634_L107643:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2895, cols 7 to 47
      //expected_text<106974>varname = (raw_load_text<8398>primfun expected<106971>varname);
      _vI106974_expected_text = ::flx::rtl::ioutil::load_text_file(_vI106971_expected); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2896, cols 7 to 49
      //bresult<106975>varname = (==<80464>primfun[string] (output_text<106973>varname, expected_text<106974>varname));
      _vI106975_bresult = (_vI106973_output_text == _vI106974_expected_text); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2900, cols 7 to 11
      if(_vI106975_bresult) goto _ifdoelse_bootflx_65981_L106981;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Output ", output<106972>varname)), " doesn't match expected ")), expected<106971>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109003 = (((::std::string("[flx] Output ") + _vI106972_output ) + ::std::string(" doesn't match expected ") ) + _vI106971_expected ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109003)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2899, cols 9 to 18
      //result<106970>varname = 1;
      _vI106970_result = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2901, cols 5 to 9
    _ifdoelse_bootflx_65981_L106981:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2902, cols 5 to 18
      //return result<106970>varname;: type int
      return _vI106970_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2903,3,2903,4); // HACK! 
}

//------------------------------
//FUNCTION <89461>: FlxPkgConfigQuery::getpkgfieldopt_uncurry: Apply method
void* getpkgfieldopt_uncurry::apply(_tt107874 const &_arg ){
  ehandler_uncurry = _arg.mem_0;
  _vI90257_pkg = _arg.mem_1;
  _vI90258_field = _arg.mem_2;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 526, cols 7 to 52
      //values<90254>varname = (getpkgfield_uncurry<89507>stackfun (ehandler_uncurry<90262>varname, pkg<90257>varname, field<90258>varname));
      _vI90254_values = getpkgfield_uncurry(FLX_FPAR_PASS ptrFlxPkgConfigQuery)
      .apply(_tt107874(ehandler_uncurry, _vI90257_pkg, _vI90258_field)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 527, cols 13 to 18
      //getpkgfieldopt'2_mv_65354<90251> := values<90254>varname;
      _vI90251_getpkgfieldopt__apos_2_mv_65354  = _vI90254_values; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 9 to 23
/*match case 1:|Cons (h_param_bootflx_65321, |Empty)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 9 to 23
      if(!andthen(!!_vI90251_getpkgfieldopt__apos_2_mv_65354 , (FLX_NEWP(_fI105500__lam_65357)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery))) ) goto _ml65356_L90259;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 15 to 15
      //h_param_bootflx_65321<90256>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] getpkgfieldopt'2_mv_65354<90251>varname));
      _vI90256_h_param_bootflx_65321 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(_vI90251_getpkgfieldopt__apos_2_mv_65354))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 28 to 41
      //return (Some<80915>struct h_param_bootflx_65321<90256>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI90256_h_param_bootflx_65321));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 9 to 23
    _ml65356_L90259:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 529, cols 9 to 14
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 529, cols 9 to 14
      if(!(FLX_VNI(_vI90251_getpkgfieldopt__apos_2_mv_65354)==0) ) goto _ml65358_L90260;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 529, cols 19 to 38
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 529, cols 9 to 14
    _ml65358_L90260:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 530, cols 9 to 9
/*match case 3:any*/
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Multiple values for field ", field<90258>varname)), " in ")), pkg<90257>varname)), " not allowed, got")), (str<81092>stackfun values<90254>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109004 = (((((::std::string("Multiple values for field ") + _vI90258_field ) + ::std::string(" in ") ) + _vI90257_pkg ) + ::std::string(" not allowed, got") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI90254_values) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109004)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler_uncurry<90262>varname);
      {
      _a6258t_107873 _tmp109005 = (_a6258t_107873)(ehandler_uncurry);
      throw ((_tmp109005));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 530, cols 9 to 9
      FLX_HALT("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",530,9,530,9,"HALT: Jump to end of function");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",536,5,536,6); // HACK! 
}

//------------------------------
//FUNCTION <105816>: flx_processing::cxx_compile_static: Apply method
int cxx_compile_static::apply(_pt107743* const &_arg ){
  _vI105822_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2304, cols 5 to 82
      //EXT_STATIC_OBJ<105817>varname = apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), apply(toolchain<68911>varname, dflt_clang_config<105724>varname)), ());
      _vI105817_EXT_STATIC_OBJ = ((ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(ptrflx_processing->_vI105724_dflt_clang_config) /* general apply */.static_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2318, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0) && ((ptrflx_processing->_vI106023_control.LINKIT == 1) || ((ptrflx_processing->_vI106023_control.OUTPUT_FILENAME_SPECIFIED == 0) && (ptrflx_processing->_vI106023_control.OUTP_hash_48688961 == 0) ) ) ) ) goto _ifdoelse_bootflx_65895_L105825;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2316, cols 7 to 9
      //result<105818>varname = (cxx_compile_static1_uncurry<106033>stackfun (ehandler<105822>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), "_static_link_thunk.cpp")), (+<14305>primfun ((+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), "_static_link_thunk")), EXT_STATIC_OBJ<105817>varname))));
      _vI105818_result = cxx_compile_static1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI105822_ehandler, ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string("_static_link_thunk.cpp") , (ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string("_static_link_thunk") ) + _vI105817_EXT_STATIC_OBJ )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2317, cols 7 to 35
      if(!(!((_vI105818_result == 0)) ) ) goto _ifdoelse_bootflx_65895_L105825;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2317, cols 7 to 35
      //return result<105818>varname;: type int
      return _vI105818_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2318, cols 5 to 9
    _ifdoelse_bootflx_65895_L105825:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<106314> := apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname);
      _vI106314_xs  = ptrflx_processing->_vI106023_control.cpps; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv99437<106313> := iterator'2<106315>closure;
      _genout_urv99437  = (FLX_NEWP(_fI106315_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      //_generator_flx_2517<105819>varname = _genout_urv99437<106313>varname;
      _generator_flx_2517 = _genout_urv99437; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
    continue__ll_flx_2505_L105826:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      //cxx_compile_static_mv_66074<105722> := apply(_generator_flx_2517<105819>varname, ());
      cxx_compile_static_mv_66074  = (_generator_flx_2517)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
/*match case 1:|Some src_param_bootflx_65899*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      if(!andthen(FLX_VNI(cxx_compile_static_mv_66074)==1, (FLX_NEWP(_lam_66077)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66076_L105828;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      //src_param_bootflx_65899<105820>varname = (arg of case 1 of cxx_compile_static_mv_66074<105722>varname);
      src_param_bootflx_65899 = *((_a14239t_107672*)FLX_VNP(cxx_compile_static_mv_66074)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2321, cols 7 to 62
      //dst<105821>varname = (+<14305>primfun (apply((prj0:string^2 -> string), (split_extension<83124>stackfun src_param_bootflx_65899<105820>varname)), EXT_STATIC_OBJ<105817>varname));
      _vI105821_dst = (split_extension(src_param_bootflx_65899).data)[0] + _vI105817_EXT_STATIC_OBJ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2322, cols 7 to 53
      //result<105818>varname = (cxx_compile_static1_uncurry<106033>stackfun (ehandler<105822>varname, src_param_bootflx_65899<105820>varname, dst<105821>varname));
      _vI105818_result = cxx_compile_static1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI105822_ehandler, src_param_bootflx_65899, _vI105821_dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2323, cols 7 to 35
      if(!(!((_vI105818_result == 0)) ) ) goto _ifdoend_bootflx_65900_L105827;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2323, cols 7 to 35
      //return result<105818>varname;: type int
      return _vI105818_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2323, cols 7 to 35
    _ifdoend_bootflx_65900_L105827:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<106023>ref))) = (+<80787>stackfun ((deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<106023>ref))), dst<105821>varname));
      *(&(*(&((_art107702*)&ptrflx_processing->_vI106023_control)->cppos) ))  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*(&(*(&((_art107702*)&ptrflx_processing->_vI106023_control)->cppos) )) , _vI105821_dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      goto continue__ll_flx_2505_L105826;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
    _ml66076_L105828:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      if(!(FLX_VNI(cxx_compile_static_mv_66074)==0) ) goto _ml66078_L105829;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      goto _em66074_L105830;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
    _ml66078_L105829:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2325,5,2325,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2325,5,2325,9);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
    _em66074_L105830:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2341, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65902_L105832;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2338, cols 7 to 11
      if(!((ptrflx_processing->_vI106023_control.LINKIT == 0)) ) goto _ifdoend_bootflx_65904_L105831;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2332, cols 9 to 70
      //return (cxx_compile_static1_uncurry<106033>stackfun (ehandler<105822>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), ".cpp")), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname)));: type int
      return cxx_compile_static1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI105822_ehandler, ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string(".cpp") , ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME)) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2338, cols 7 to 11
    _ifdoend_bootflx_65904_L105831:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2337, cols 9 to 73
      //return (cxx_compile_static1_uncurry<106033>stackfun (ehandler<105822>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), ".cpp")), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), EXT_STATIC_OBJ<105817>varname))));: type int
      return cxx_compile_static1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI105822_ehandler, ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string(".cpp") , ptrflx_processing->_vI105620_dvars.cpp_filebase + _vI105817_EXT_STATIC_OBJ )) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2341, cols 5 to 9
    _ifdoend_bootflx_65902_L105832:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2340, cols 7 to 15
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2342,3,2342,4); // HACK! 
}

//------------------------------
//FUNCTION <105523>: FlxPkgConfigQuery::getpkgfielddflt::getpkgfielddflt'2::_lam_65364: Apply method
 ::flx::rtl::cl_t _lam_65364::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 540, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",540,9,540,14); // HACK! 
}

//------------------------------
//FUNCTION <91061>: cat_uncurry::iterator'2: Apply method
void* _fI91061_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L91062:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<91066> := xs<91060>varname;
      _vI91066_iterator__apos_2_mv_1563  = ptrcat_uncurry->_vI91060_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI91066_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_lam_1566)(FLX_FPAR_PASS this, ptrcat_uncurry))) ) goto _ml1565_L91065;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<91067>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<91066>varname));
      h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI91066_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<91068>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<91066>varname));
      t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI91066_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<91060>varname = t_param_std_1318<91068>varname;
      ptrcat_uncurry->_vI91060_xs = t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(109007)
      //yield (Some<80915>struct h_param_std_1319<91067>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (h_param_std_1319));//yield
    FLX_CASE_LABEL(109007)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L91062;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L91065:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI91066_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L91064;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L91064:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L91062;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <93205>: toolchain_msvc_win32::aux_uncurry: Apply method
void* _fI93205_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93206_inp_uncurry = _arg.data[0];
  _vI93207_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93214:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93210> := inp_uncurry<93206>varname;
      _vI93210_aux__apos_2_mv_1381  = _vI93206_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93210_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93209;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93207>varname;: type void*
      return _vI93207_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93209:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93210_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93213__lam_1385)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml1384_L93208;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93211>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93210>varname));
      _vI93211_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93210_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93212>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93210>varname));
      _vI93212_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93210_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93207> := (Snoc<80397>struct (out<93207>varname, (_lam_66227<66311>stackfun h_param_std_1267<93211>varname)));
      _vI93207_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93207_out, _lam_66227(ptrtoolchain_msvc_win32)
      .apply(_vI93211_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93206> := t_param_std_1266<93212>varname;
      _vI93206_inp_uncurry  = _vI93212_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93214;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93208:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <105762>: flx_processing::cal_time_from_flxdepfile::maxf: Apply method
_ft108125* _fI105762_maxf::apply(double const &_arg ){
  _vI105768_x = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2122, cols 5 to 6
      //return maxf'2<105763>closure;: type _ft108125*
      return (FLX_NEWP(_fI105763_maxf__apos_2)(FLX_FPAR_PASS this, ptrcal_time_from_flxdepfile, ptrflx_processing));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2122,5,2122,6); // HACK! 
}

//------------------------------
//FUNCTION <98072>: map_package_requirements_uncurry::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI98072__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <94634>: toolchain_clang_apple_iOS_maker_uncurry::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------

//PROCEDURE <68677:> flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::_lam_65300: Call method
::flx::rtl::con_t * _lam_65300::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI68679_s = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <68677:> flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::_lam_65300: Resume method
::flx::rtl::con_t *_lam_65300::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 364, cols 5 to 6
      //jump to procedure direct tail call handle_pkg<68646>directjump (s<68679>varname, (Snoc<80397>struct (trace<68709>varname, pkg<68708>varname)));
      {
      void* _tmp109010 = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrhandle_pkg->trace, ptrhandle_pkg->_vI68708_pkg)));
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(handle_pkg)(FLX_FPAR_PASS ptrflx_pkgconfig))
      ->call(tmp, _tt107698(_vI68679_s, (_tmp109010)));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 344, cols 24 to 19
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <89509>: cat_uncurry: Apply method
_a14239t_107672 cat_uncurry::apply(_tt107698 const &_arg ){
  sep_uncurry = _arg.mem_0;
  _vI89662_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 463, cols 5 to 16
      //n<89651>varname = literal[size]("0");
      _vI89651_n = 0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<91060> := x<89662>varname;
      _vI91060_xs  = _vI89662_x; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv91059<91059> := iterator'2<91061>closure;
      _genout_urv91059  = (FLX_NEWP(_fI91061_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      //_generator_lists_5289<89652>varname = _genout_urv91059<91059>varname;
      _generator_lists_5289 = _genout_urv91059; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
    continue__ll_lists_5285_L89663:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      //cat'2_mv_1431<89642> := apply(_generator_lists_5289<89652>varname, ());
      _vI89642_cat__apos_2_mv_1431  = (_generator_lists_5289)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
/*match case 1:|Some s_param_std_1285*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      if(!andthen(FLX_VNI(_vI89642_cat__apos_2_mv_1431)==1, (FLX_NEWP(_lam_1434)(FLX_FPAR_PASS this))) ) goto _ml1433_L89664;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      //s_param_std_1285<89654>varname = (arg of case 1 of cat'2_mv_1431<89642>varname);
      s_param_std_1285 = *((_a14239t_107672*)FLX_VNP(_vI89642_cat__apos_2_mv_1431)); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 24 to 37
      // primcall +=<80901>primproc[size] (&n<89651>ref, (+<80900>primfun[size] ((len<14304>primfun s_param_std_1285<89654>varname), literal[size]("1"))));
      {
      _a5094t_107688* _tmp109012 = (_a5094t_107688*)&_vI89651_n;
      _a5094t_107688 _tmp109013 = s_param_std_1285.size() + 1 ;
      *((_tmp109012))+=((_tmp109013));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      goto continue__ll_lists_5285_L89663;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
    _ml1433_L89664:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      if(!(FLX_VNI(_vI89642_cat__apos_2_mv_1431)==0) ) goto _ml1435_L89665;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      goto _em1431_L89666;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
    _ml1435_L89665:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",464,5,464,38);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",464,5,464,38);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 464, cols 5 to 38
    _em1431_L89666:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 465, cols 5 to 15
      //r<89655>varname = "";
      _vI89655_r = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 466, cols 5 to 19
      // primcall reserve<80902>primproc[size] (&r<89655>ref, n<89651>varname);
      {
      _a14239t_107672* _tmp109015 = (_a14239t_107672*)&_vI89655_r;
      ((_tmp109015))->reserve(_vI89651_n);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 481, cols 3 to 4
      //cat'2_mv_1436<89645> := x<89662>varname;
      _vI89645_cat__apos_2_mv_1436  = _vI89662_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 468, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 468, cols 7 to 12
      if(!(FLX_VNI(_vI89645_cat__apos_2_mv_1436)==0) ) goto _ml1438_L89667;
    // # C:/projects/felix/src/packages/lists.fdoc: line 468, cols 17 to 25
      //return r<89655>varname;: type _a14239t_107672
      return _vI89655_r;
    // # C:/projects/felix/src/packages/lists.fdoc: line 468, cols 7 to 12
    _ml1438_L89667:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
/*match case 2:|Snoc (tail_param_std_1287, head_param_std_1288)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
      if(!andthen(FLX_VNI(_vI89645_cat__apos_2_mv_1436)==1, (FLX_NEWP(_lam_1445)(FLX_FPAR_PASS this))) ) goto _ml1439_L89672;
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 19 to 22
      //head_param_std_1288<89657>varname = apply((prj1:list * string -> string), (arg of case 1 of cat'2_mv_1436<89645>varname));
      head_param_std_1288 = (*((_tt107677*)FLX_VNP(_vI89645_cat__apos_2_mv_1436))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 13 to 16
      //tail_param_std_1287<89658>varname = apply((prj0:list * string -> list), (arg of case 1 of cat'2_mv_1436<89645>varname));
      tail_param_std_1287 = (*((_tt107677*)FLX_VNP(_vI89645_cat__apos_2_mv_1436))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 470, cols 7 to 14
      //r<89655>varname = head_param_std_1288<89657>varname;
      _vI89655_r = head_param_std_1288; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 471, cols 3 to 8
    next_L89668:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 472, cols 13 to 16
      //cat'2_mv_1440<89648> := tail_param_std_1287<89658>varname;
      _vI89648_cat__apos_2_mv_1440  = tail_param_std_1287; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 473, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 473, cols 9 to 14
      if(!(FLX_VNI(_vI89648_cat__apos_2_mv_1440)==0) ) goto _ml1442_L89669;
    // # C:/projects/felix/src/packages/lists.fdoc: line 473, cols 19 to 27
      //return r<89655>varname;: type _a14239t_107672
      return _vI89655_r;
    // # C:/projects/felix/src/packages/lists.fdoc: line 473, cols 9 to 14
    _ml1442_L89669:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1290_param_std_1293, h_param_std_1291_param_std_1294)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 9 to 17
      if(!andthen(FLX_VNI(_vI89648_cat__apos_2_mv_1440)==1, (FLX_NEWP(_lam_1444)(FLX_FPAR_PASS this))) ) goto _ml1443_L89670;
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 16 to 16
      //h_param_std_1291_param_std_1294<89660>varname = apply((prj1:list * string -> string), (arg of case 1 of cat'2_mv_1440<89648>varname));
      h_param_std_1291_param_std_1294 = (*((_tt107677*)FLX_VNP(_vI89648_cat__apos_2_mv_1440))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 14 to 14
      //t_param_std_1290_param_std_1293<89661>varname = apply((prj0:list * string -> list), (arg of case 1 of cat'2_mv_1440<89648>varname));
      t_param_std_1290_param_std_1293 = (*((_tt107677*)FLX_VNP(_vI89648_cat__apos_2_mv_1440))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 475, cols 9 to 20
      // primcall +=<14301>primproc (&r<89655>ref, (+<14305>primfun (sep_uncurry<89674>varname, h_param_std_1291_param_std_1294<89660>varname)));
      {
      _a14239t_107672* _tmp109016 = (_a14239t_107672*)&_vI89655_r;
      _a14239t_107672 _tmp109017 = sep_uncurry + h_param_std_1291_param_std_1294 ;
      ((_tmp109016))->append((_tmp109017));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 476, cols 9 to 16
      //tail_param_std_1287<89658>varname = t_param_std_1290_param_std_1293<89661>varname;
      tail_param_std_1287 = t_param_std_1290_param_std_1293; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 477, cols 9 to 18
      goto next_L89668;
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
      FLX_HALT("C:/projects/felix/src/packages/lists.fdoc",469,7,469,23,"HALT: Jump to end of function");
    // # C:/projects/felix/src/packages/lists.fdoc: line 474, cols 9 to 17
    _ml1443_L89670:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 478, cols 7 to 16
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 478, cols 7 to 16
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",478,7,478,16);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",478,7,478,16);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
      FLX_HALT("C:/projects/felix/src/packages/lists.fdoc",469,7,469,23,"HALT: Jump to end of function");
    // # C:/projects/felix/src/packages/lists.fdoc: line 469, cols 7 to 23
    _ml1439_L89672:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 479, cols 5 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 479, cols 5 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",479,5,479,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",479,5,479,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",481,3,481,4); // HACK! 
}

//------------------------------
//FUNCTION <94139>: generic_link_lib_dynamic_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI94139__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66890>: toolchain_clang_osx: Apply method
_art107765 toolchain_clang_osx::apply(_art107755 const &_arg ){
  _vI66979_config = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94771>varname = Empty<80385>varname;
      _vI94771_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 4)) ) goto _ifdoelse_std_1250_L94767;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94772>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84297>varname[4]), 1));
      _vI94772_i = (static_cast<int>(4)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94772>ref;
      {
      int* _tmp109020 = (int*)&_vI94772_i;
      ++*((_tmp109020));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94770:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94772_i)) )) goto _ifdoelse_std_1250_L94767;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94772>ref;
      {
      int* _tmp109021 = (int*)&_vI94772_i;
      --*((_tmp109021));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94771>varname = (Snoc<80397>struct (o<94771>varname, apply(aprj(i<94772>varname : 4), ("-w", "-Wfatal-errors", "-Wno-return-type-c-linkage", "-Wno-invalid-offsetof"))));
      _vI94771_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94771_o, (_at107820(::std::string("-w"), ::std::string("-Wfatal-errors"), ::std::string("-Wno-return-type-c-linkage"), ::std::string("-Wno-invalid-offsetof")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94772_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94770;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94767:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1437, cols 3 to 4
      //cxx_compile_warning_flags<66892>varname = o<94771>varname;
      _vI66892_cxx_compile_warning_flags = _vI94771_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94781>varname = Empty<80385>varname;
      _vI94781_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 3)) ) goto _ifdoelse_std_1250_L94777;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94782>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84373>varname[3]), 1));
      _vI94782_i = (static_cast<int>(3)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94782>ref;
      {
      int* _tmp109022 = (int*)&_vI94782_i;
      ++*((_tmp109022));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94780:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94782_i)) )) goto _ifdoelse_std_1250_L94777;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94782>ref;
      {
      int* _tmp109023 = (int*)&_vI94782_i;
      --*((_tmp109023));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94781>varname = (Snoc<80397>struct (o<94781>varname, apply(aprj(i<94782>varname : 3), ("-w", "-Wfatal-errors", "-Wno-array-bounds"))));
      _vI94781_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94781_o, (_at107767(::std::string("-w"), ::std::string("-Wfatal-errors"), ::std::string("-Wno-array-bounds")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94782_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94780;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94777:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1441, cols 3 to 4
      //c_compile_warning_flags<66893>varname = o<94781>varname;
      _vI66893_c_compile_warning_flags = _vI94781_o; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1443, cols 3 to 27
      //c_compiler<66894>varname = "clang";
      _vI66894_c_compiler = ::std::string("clang"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1444, cols 3 to 31
      //cxx_compiler<66895>varname = "clang++";
      _vI66895_cxx_compiler = ::std::string("clang++"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1445, cols 3 to 25
      //linker<66896>varname = "clang++";
      _vI66896_linker = ::std::string("clang++"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1446, cols 3 to 62
      //ccflags_for_dynamic_link<66897>varname = (Snoc<80397>struct (Empty<80385>varname, "-dynamiclib"));
      _vI66897_ccflags_for_dynamic_link = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-dynamiclib")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1449, cols 3 to 4
      //base_c_compile_flags<66898>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (c_compile_warning_flags<66893>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname))), "-fno-strict-aliasing")), "-fno-common")), "-O1")), "-c")), "-g"));
      _vI66898_base_c_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI66893_c_compile_warning_flags, _vI66979_config.ccflags)) /* apply_stack */, ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1453, cols 3 to 4
      //base_cxx_compile_flags<66899>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (cxx_compile_warning_flags<66892>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname))), "-std=c++11")), "-fno-strict-aliasing")), "-fno-common")), "-O1")), "-c")), "-g"));
      _vI66899_base_cxx_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI66892_cxx_compile_warning_flags, _vI66979_config.ccflags)) /* apply_stack */, ::std::string("-std=c++11")))), ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1660, cols 1 to 2
      //return ( c_dependency_generator:c_dependency_generator<66928>closure, c_dynamic_object_compiler:c_dynamic_object_compiler<66947>closure, c_static_object_compiler:c_static_object_compiler<66943>closure, cxx_compiler_vendor:cxx_compiler_vendor<66906>closure, cxx_dependency_generator:cxx_dependency_generator<66934>closure, cxx_dynamic_object_compiler:cxx_dynamic_object_compiler<66959>closure, cxx_static_library_object_compiler:cxx_static_library_object_compiler<66955>closure, cxx_static_object_compiler:cxx_static_object_compiler<66951>closure, debug_flags:debug_flags<66922>closure, dependency_extension:dependency_extension<66908>closure, dependency_parser:dependency_parser<66940>closure, dynamic_executable_linker:dynamic_executable_linker<66971>closure, dynamic_library_extension:dynamic_library_extension<66918>closure, dynamic_library_linker:dynamic_library_linker<66975>closure, dynamic_object_extension:dynamic_object_extension<66914>closure, executable_extension:executable_extension<66910>closure, get_base_c_compile_flags:get_base_c_compile_flags<66924>closure, get_base_cxx_compile_flags:get_base_cxx_compile_flags<66926>closure, host_os:host_os<66902>closure, pathname_separator:pathname_separator<66920>closure, static_executable_linker:static_executable_linker<66967>closure, static_library_extension:static_library_extension<66916>closure, static_library_linker:static_library_linker<66963>closure, static_object_extension:static_object_extension<66912>closure, target_os:target_os<66904>closure, whatami:whatami<66900>closure);: type _art107765
      return _art107765((FLX_NEWP(_fI66928_c_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66947_c_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66943_c_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66906_cxx_compiler_vendor)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66934_cxx_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66959_cxx_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66955_cxx_static_library_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66951_cxx_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66922_debug_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66908_dependency_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66940_dependency_parser)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66971_dynamic_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66918_dynamic_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66975_dynamic_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66914_dynamic_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66910_executable_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66924_get_base_c_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66926_get_base_cxx_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66902_host_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66920_pathname_separator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66967_static_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66916_static_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66963_static_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66912_static_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66904_target_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66900_whatami)(FLX_FPAR_PASS this)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1660,1,1660,2); // HACK! 
}

//------------------------------
//FUNCTION <98022>: map_package_requirements_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI98022__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <105901>: flx_processing::cxx_link_static_exe: Apply method
int cxx_link_static_exe::apply(_pt107743* const &_arg ){
  _vI105915_ehandler = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106443>ref;
      {
      __timeb64* _tmp109024 = (__timeb64*)&_vI106443_tv;
      _ftime64_s(((_tmp109024)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv100034<106442> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106443>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106443>varname)), literal[double]("1.0e3")))));
      _genout_urv100034  = (static_cast<double>((_vI106443_tv.time))) + ((static_cast<double>((_vI106443_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2617, cols 5 to 25
      //t0<105902>varname = _genout_urv100034<106442>varname;
      _vI105902_t0 = _genout_urv100034; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2618, cols 5 to 36
      //pkg_sstrings<105903>varname = Empty<80385>varname;
      pkg_sstrings = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2619, cols 5 to 34
      //pkgs<105904>varname = apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname);
      _vI105904_pkgs = ptrflx_processing->_vI106023_control.extra_pkgs; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2635, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI105904_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65943_L105919;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_static] Adding packages ", (str<81092>stackfun pkgs<105904>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109025 = (::std::string("[flx:cxx_link_static] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI105904_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109025)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<106444>varname = (aux_uncurry<106445>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI106444_r = _fI106445_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<106444>ref;
      {
      void** _tmp109026 = (void**)&_vI106444_r;
      _rev(((_tmp109026)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2625, cols 7 to 8
      //PKGCONFIG_PATH<105907>varname = r<106444>varname;
      _vI105907_PKGCONFIG_PATH = _vI106444_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2626, cols 7 to 126
      //allargs<105908>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<105907>varname, "-r")), "--field=provides_slib")), "--field=requires_slibs")), "--keepleftmost")), pkgs<105904>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI105908_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI105907_PKGCONFIG_PATH, ::std::string("-r"))) /* apply_stack */, ::std::string("--field=provides_slib"))) /* apply_stack */, ::std::string("--field=requires_slibs"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI105904_pkgs)) /* apply_stack */, ptrflx_processing->_vI106023_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2627, cols 7 to 64
      //_genout_urv100075<106455> := (flx_pkgconfig<68435>stackfun allargs<105908>varname);
      _genout_urv100075  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI105908_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2627, cols 7 to 64
      //_ds2_66107<105909>varname = _genout_urv100075<106455>varname;
      _ds2_66107 = _genout_urv100075; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2627, cols 7 to 64
      //ret<105910>varname = apply((prj0:int * list -> int), _ds2_66107<105909>varname);
      _vI105910_ret = _ds2_66107.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2627, cols 7 to 64
      //mysstrings<105911>varname = apply((prj1:int * list -> list), _ds2_66107<105909>varname);
      mysstrings = _ds2_66107.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2633, cols 7 to 11
      if(!(!((_vI105910_ret == 0)) ) ) goto _ifdoelse_bootflx_65945_L105917;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_static] Error ", (str<80203>primfun[int] ret<105910>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<105908>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109027 = (((::std::string("[flx:cxx_link_static] Error ") + ::flx::rtl::strutil::str<int>(_vI105910_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI105908_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109027)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<105915>varname);
      {
      _a6258t_107873 _tmp109028 = (_a6258t_107873)(_vI105915_ehandler);
      throw ((_tmp109028));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2633, cols 7 to 11
    _ifdoelse_bootflx_65945_L105917:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2634, cols 7 to 31
      //pkg_sstrings<105903>varname = mysstrings<105911>varname;
      pkg_sstrings = mysstrings; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2635, cols 5 to 9
    _ifdoelse_bootflx_65943_L105919:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 22 to 36
      //cxx_link_static_exe_mv_66109<106457> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106457_cxx_link_static_exe_mv_66109  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      if(!(_vI106457_cxx_link_static_exe_mv_66109%2==1) ) goto _ml66111_L106458;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      //_urv100086<106456> := echoln<106025>closure;
      _urv100086  = (FLX_NEWP(echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      goto _end_hash_45039480;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
    _ml66111_L106458:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      //_urv100086<106456> := debugln<106024>closure;
      _urv100086  = (FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
    _end_hash_45039480:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 22 to 36
      //cxx_link_static_exe_mv_66109<106461> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      cxx_link_static_exe_mv_66109  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      if(!(cxx_link_static_exe_mv_66109%2==1) ) goto _ml66111_L106462;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
      goto _end_hash_406398219;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
    _ml66111_L106462:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2641, cols 19 to 77
    _end_hash_406398219:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2644, cols 5 to 6
      //tc<105912>varname = apply(toolchain<68911>varname, ( ccflags:apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), debugln:_urv100086<106456>varname, dynamic_libraries:apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), header_search_dirs:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), macros:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), static_libraries:(join_uncurry<89534>stackfun (apply((prj45:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), pkg_sstrings<105903>varname))));
      _vI105912_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(ptrflx_processing->_vI105724_dflt_clang_config.ccflags, _urv100086, ptrflx_processing->_vI105724_dflt_clang_config.dynamic_libraries, ptrflx_processing->_vI105724_dflt_clang_config.header_search_dirs, ptrflx_processing->_vI105724_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI105724_dflt_clang_config.macros, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.LINK_STRINGS, pkg_sstrings)) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2645, cols 5 to 55
      //EXT_STATIC_OBJ<105913>varname = apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<105912>varname), ());
      _vI105913_EXT_STATIC_OBJ = (_vI105912_tc.static_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2665, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65946_L105920;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2656, cols 7 to 8
      //result<105914>varname = apply(apply((prj20:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<105912>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), srcs:(+<80787>stackfun ((+<80787>stackfun ((join_uncurry<89534>stackfun (apply((prj19:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname))), (+<14305>primfun ((+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), "_static_link_thunk")), EXT_STATIC_OBJ<105913>varname)))), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), EXT_STATIC_OBJ<105913>varname))))));
      _vI105914_result = (_vI105912_tc.static_executable_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.DRIVER_OBJS, ptrflx_processing->_vI106023_control.cppos)) /* apply_stack */, (ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string("_static_link_thunk") ) + _vI105913_EXT_STATIC_OBJ )) /* apply_stack */, ptrflx_processing->_vI105620_dvars.cpp_filebase + _vI105913_EXT_STATIC_OBJ )) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2665, cols 5 to 9
      goto _ifdoelse_bootflx_65947_L105921;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2665, cols 5 to 9
    _ifdoend_bootflx_65946_L105920:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2663, cols 7 to 10
      //result<105914>varname = apply(apply((prj20:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<105912>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), srcs:apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI105914_result = (_vI105912_tc.static_executable_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, ptrflx_processing->_vI106023_control.cppos)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2665, cols 5 to 9
    _ifdoelse_bootflx_65947_L105921:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _end_100123_L106471;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106470>ref;
      {
      __timeb64* _tmp109029 = (__timeb64*)&_vI106470_tv;
      _ftime64_s(((_tmp109029)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106469> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106470>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106470>varname)), literal[double]("1.0e3")))));
      _vI106469__genout_urv96124  = (static_cast<double>((_vI106470_tv.time))) + ((static_cast<double>((_vI106470_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106464>varname = (-<80547>primfun[double] (_genout_urv96124<106469>varname, t0<105902>varname));
      _vI106464_elapsed = _vI106469__genout_urv96124 - _vI105902_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106465>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106464>varname, literal[double]("60.0"))));
      _vI106465_minutes = ::std::floor((_vI106464_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106466>varname = (-<80547>primfun[double] (elapsed<106464>varname, (*<80818>primfun[double] (minutes<106465>varname, literal[double]("60.0")))));
      _vI106466_seconds = _vI106464_elapsed - (_vI106465_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106465>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106466>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Static executable link  : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109030 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106465_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106466_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Static executable link  : ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109030)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2666, cols 5 to 77
    _end_100123_L106471:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2669, cols 5 to 9
      if(!(!((_vI105914_result == 0)) ) ) goto _ifdoelse_bootflx_65949_L105923;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ static executable link ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp109031 = ((::std::string("[flx] C++ static executable link ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109031)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2669, cols 5 to 9
    _ifdoelse_bootflx_65949_L105923:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2670, cols 5 to 18
      //return result<105914>varname;: type int
      return _vI105914_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2671,3,2671,4); // HACK! 
}

//------------------------------
//FUNCTION <68033>: exts::_lam_65654: Apply method
_at107674 _lam_65654::apply(_a14239t_107672 const &_arg ){
  _vI68035_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1381, cols 10 to 36
      //return (s<68035>varname, "felix");: type _at107674
      return _at107674(_vI68035_s, ::std::string("felix"));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1381,10,1381,36); // HACK! 
}

//------------------------------
//FUNCTION <107086>: flx_processing::find_cxx_pkgs::iterator'2: Apply method
void* _fI107086_iterator__apos_2::apply(){
    // # C:/projects/felix/src/packages/io.fdoc: line 336, cols 11 to 18
      //_genout_urv98305<107091> := (readln<8425>primfun f<106725>varname);
      _vI107091__genout_urv98305  = ::flx::rtl::ioutil::readln((ptr_fI106722_find_cxx_pkgs->_vI106725_f)); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 336, cols 11 to 18
      //_genout_urv98291<107090> := _genout_urv98305<107091>varname;
      _vI107090__genout_urv98291  = _vI107091__genout_urv98305; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 336, cols 11 to 18
      //iterator'2_mv_636<107088> := _genout_urv98291<107090>varname;
      _vI107088_iterator__apos_2_mv_636  = _vI107090__genout_urv98291; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/io.fdoc: line 337, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/io.fdoc: line 337, cols 7 to 8
      if(!((::std::string("") == _vI107088_iterator__apos_2_mv_636)) ) goto _ml638_L107087;
    // # C:/projects/felix/src/packages/io.fdoc: line 338, cols 5 to 31
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/io.fdoc: line 337, cols 7 to 8
    _ml638_L107087:;
    // # C:/projects/felix/src/packages/io.fdoc: line 338, cols 7 to 10
/*match case 2:text_param_std_622*/
    // # C:/projects/felix/src/packages/io.fdoc: line 338, cols 7 to 10
      //text_param_std_622<107089>varname = iterator'2_mv_636<107088>varname;
      _vI107089_text_param_std_622 = _vI107088_iterator__apos_2_mv_636; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 338, cols 5 to 31
      //return (Some<80915>struct (rstrip<14873>stackfun (text_param_std_622<107089>varname, " \x09\x0A\x0D\x0C\x0B")));: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (rstrip(_vI107089_text_param_std_622, ::std::string(" \x09\n\x0D\x0C\x0B"))));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/io.fdoc",340,3,340,4); // HACK! 
}

//------------------------------

//PROCEDURE <105735:> flx_processing::calpackages: Call method
void calpackages::stack_call(_pt107743* const &_arg){
  _vI105738_ehandler = _arg;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 3 to 67
      //str_mv_152<106088> := calpackages_run<105734>varname;
      str_mv_152  = ptrflx_processing->_vI105734_calpackages_run; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      if(!(str_mv_152%2==1) ) goto _ml154_L106089;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      //_urv96201<106087> := "true";
      _urv96201  = ::std::string("true"); //init
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      goto _end_inline_str_96206_L106090;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
    _ml154_L106089:;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
/*match case 2:any*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      //_urv96201<106087> := "false";
      _urv96201  = ::std::string("false"); //init
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 3 to 67
    _end_inline_str_96206_L106090:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_96219_L106093;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ("[flx:calpackages] Calculating package requirements (calpackages_run=", _urv96201<106087>varname)), ")")))), "\x0A")));
      {
      _a14239t_107672 _tmp109032 = (::std::string("[flx] ") + ((::std::string("[flx:calpackages] Calculating package requirements (calpackages_run=") + _urv96201 ) + ::std::string(")") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109032)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2051, cols 5 to 109
    _end_96219_L106093:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2077, cols 5 to 9
      if(ptrflx_processing->_vI105734_calpackages_run) goto _ifdoelse_bootflx_65848_L105740;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2053, cols 7 to 43
      //tc<105736>varname = apply(toolchain<68911>varname, dflt_clang_config<105724>varname);
      _vI105736_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(ptrflx_processing->_vI105724_dflt_clang_config) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2068, cols 7 to 9
      //x<105737>varname = (map_package_requirements_uncurry<89465>stackfun (ehandler<105738>varname, ( DLINK_STRINGS:apply((prj16:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), EXTRA_PACKAGES:apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), EXT_DYNAMIC_OBJ:apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<105736>varname), ()), EXT_EXE:apply(apply((prj15:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<105736>varname), ()), EXT_STATIC_OBJ:apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<105736>varname), ()), FLX_CONFIG_DIRS:apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), FLX_TARGET_DIR:apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), LINKER_SWITCHES:apply((prj42:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), LINKEXE:apply((prj43:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), SLINK_STRINGS:apply((prj62:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), STATIC:apply((prj64:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), cpp_filebase:apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname))));
      _vI105737_x = map_package_requirements_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt108152(_vI105738_ehandler, _art108151(ptrflx_processing->_vI106023_control.DLINK_STRINGS, ptrflx_processing->_vI106023_control.pkgs, (_vI105736_tc.dynamic_object_extension)->clone()
      ->apply() /* general apply */, (_vI105736_tc.executable_extension)->clone()
      ->apply() /* general apply */, (_vI105736_tc.static_object_extension)->clone()
      ->apply() /* general apply */, (*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (*ptrflx_processing->_vI68947_config ).FLX_TARGET_DIR, ptrflx_processing->_vI106023_control.LINKER_SWITCHES, ptrflx_processing->_vI106023_control.LINKEXE, ptrflx_processing->_vI106023_control.SLINK_STRINGS, ptrflx_processing->_vI106023_control.STATIC, ptrflx_processing->_vI105620_dvars.cpp_filebase))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2070, cols 7 to 50
      //apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname) = (join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), apply((prj0:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> list), x<105737>varname)));
      ptrflx_processing->_vI106023_control.CCFLAGS = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.CCFLAGS, _vI105737_x.CFLAGS)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2071, cols 7 to 51
      //apply((prj24:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname) = apply((prj3:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> list), x<105737>varname);
      ptrflx_processing->_vI106023_control.EXTRA_INCLUDE_FILES = _vI105737_x.INCLUDE_FILES; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2072, cols 7 to 39
      //apply((prj18:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname) = apply((prj1:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> string), x<105737>varname);
      ptrflx_processing->_vI106023_control.DRIVER_EXE = _vI105737_x.DRIVER_EXE; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2073, cols 7 to 41
      //apply((prj19:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname) = apply((prj2:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> list), x<105737>varname);
      ptrflx_processing->_vI106023_control.DRIVER_OBJS = _vI105737_x.DRIVER_OBJS; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2074, cols 7 to 43
      //apply((prj45:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname) = apply((prj4:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> list), x<105737>varname);
      ptrflx_processing->_vI106023_control.LINK_STRINGS = _vI105737_x.LINK_STRINGS; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2076, cols 7 to 28
      //calpackages_run<105734>varname = (case 1 of bool);
      ptrflx_processing->_vI105734_calpackages_run = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/flx.fdoc: line 2077, cols 5 to 9
    _ifdoelse_bootflx_65848_L105740:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      return; // proc return from stackable 

}
//------------------------------
//FUNCTION <91664>: process_config_text_uncurry::aux: Apply method
void* aux::apply(_tt107698 const &_arg ){
  _vI91665_x = _arg.mem_0;
  _vI91666_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
    start_91607_L91676:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<91671> := (stl_find<14446>primfun (x<91665>varname, (subscript<81183>primfun[int] ("\x0A", 0))));
      _vI91671_find_mv_2105  = _vI91665_x.find((::flx::rtl::strutil::subscript(::std::string("\n"),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI91671_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L91673;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<91667> := None<81378>varname;
      aux_mv_2285  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_91577_L91674;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L91673:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<91672>varname = find_mv_2105<91671>varname;
      _vI91672_i_param_std_1893 = _vI91671_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //aux_mv_2285<91667> := (Some<81379>struct i_param_std_1893<91672>varname);
      aux_mv_2285  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI91672_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_91577_L91674:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
      if(!(FLX_VNI(aux_mv_2285)==0) ) goto _ml2287_L91669;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<80397>struct (y<91666>varname, x<91665>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI91666_y, _vI91665_x)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 477, cols 9 to 13
    _ml2287_L91669:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
/*match case 2:|Some n_param_std_1968*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
      if(!andthen(FLX_VNI(aux_mv_2285)==1, (FLX_NEWP(_lam_2289)(FLX_FPAR_PASS this, ptrprocess_config_text_uncurry))) ) goto _ml2288_L91670;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 14 to 14
      //n_param_std_1968<91668>varname = (arg of case 1 of aux_mv_2285<91667>varname);
      n_param_std_1968 = *((_a5094t_107688*)FLX_VNP(aux_mv_2285)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //y<91666> := (Snoc<80397>struct (y<91666>varname, (copyto<81376>primfun[size] (x<91665>varname, n_param_std_1968<91668>varname))));
      _vI91666_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI91666_y, ::flx::rtl::strutil::substr(_vI91665_x,0,n_param_std_1968)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      //x<91665> := (copyfrom<81377>primfun[size] (x<91665>varname, (+<80900>primfun[size] (n_param_std_1968<91668>varname, literal[size]("1")))));
      _vI91665_x  = ::flx::rtl::strutil::substr(_vI91665_x,n_param_std_1968 + 1 ,_vI91665_x.size()); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 480, cols 5 to 6
      goto start_91607_L91676;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 9 to 14
    _ml2288_L91670:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 478, cols 7 to 61
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",478,7,478,61);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",480,5,480,6); // HACK! 
}

//------------------------------

//PROCEDURE <88398:> handle_switch::debugln: Call method
::flx::rtl::con_t * _pI88398_debugln::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI89099_x = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <88398:> handle_switch::debugln: Resume method
::flx::rtl::con_t *_pI88398_debugln::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
      if(!(*ptrhandle_switch->_vI67853_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65431_L89116;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", x<89099>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109034 = (::std::string("[flx] ") + _vI89099_x ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109034)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 971, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 970, cols 5 to 68
    _ifdoelse_bootflx_65431_L89116:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 971, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <96906>: flx_pkgconfig::lexstr::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI96906__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//C FUNC <5205>: andthen
 ::flx::rtl::cl_t andthen(  ::flx::rtl::cl_t _vI5209_x, _ft107773* _vI5210_y){
   ::flx::rtl::cl_t andthen_mv_147;
    // # C:/projects/felix/src/packages/logic.fdoc: line 16, cols 3 to 4
      //andthen_mv_147<90915> := x<5209>varname;
      andthen_mv_147  = _vI5209_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
      if(!(andthen_mv_147%2==1) ) goto _ml149_L90916;
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
      //return apply(y<5210>varname, ());: type  ::flx::rtl::cl_t
      return (_vI5210_y)->clone()
      ->apply() /* general apply */;
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
    _ml149_L90916:;
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
/*match case 2:any*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 15, cols 5 to 27
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
}
//------------------------------
//FUNCTION <66315>: toolchain_msvc_win32::_lam_66228: Apply method
 ::flx::rtl::cl_t _lam_66228::apply(_a14239t_107672 const &_arg ){
  _vI66317_s = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1748, cols 6 to 56
      //return (lor<5213>primfun ((==<80464>primfun[string] ((copyto<81376>primfun[size] (s<66317>varname, (len<14304>primfun "/I"))), "/I")), (==<80464>primfun[string] ((copyto<81376>primfun[size] (s<66317>varname, (len<14304>primfun "-I"))), "-I"))));: type  ::flx::rtl::cl_t
      return (::flx::rtl::strutil::substr(_vI66317_s,0,::std::string("/I").size()) == ::std::string("/I")) || (::flx::rtl::strutil::substr(_vI66317_s,0,::std::string("-I").size()) == ::std::string("-I")) ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1748,6,1748,56); // HACK! 
}

//------------------------------
//FUNCTION <106059>: flx_processing::cxx_compile_dynamic1_uncurry::_lam_66062: Apply method
_a14239t_107672 _lam_66062::apply(_a14239t_107672 const &_arg ){
  _vI106060_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2227, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<106060>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI106060_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2227,11,2227,40); // HACK! 
}

//------------------------------
//FUNCTION <106797>: flx_processing::cxx_compile_static: Apply method
int _fI106797_cxx_compile_static::apply(_pt107743* const &_arg ){
  _vI106803_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2304, cols 5 to 82
      //EXT_STATIC_OBJ<106798>varname = apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), apply(toolchain<68911>varname, dflt_clang_config<106705>varname)), ());
      _vI106798_EXT_STATIC_OBJ = ((ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(ptrflx_processing->_vI106705_dflt_clang_config) /* general apply */.static_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2318, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0) && ((ptrflx_processing->_vI107004_control.LINKIT == 1) || ((ptrflx_processing->_vI107004_control.OUTPUT_FILENAME_SPECIFIED == 0) && (ptrflx_processing->_vI107004_control.OUTP_hash_48688961 == 0) ) ) ) ) goto _ifdoelse_bootflx_65895_L106806;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2316, cols 7 to 9
      //result<106799>varname = (cxx_compile_static1_uncurry<107014>stackfun (ehandler<106803>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), "_static_link_thunk.cpp")), (+<14305>primfun ((+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), "_static_link_thunk")), EXT_STATIC_OBJ<106798>varname))));
      _vI106799_result = _fI107014_cxx_compile_static1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI106803_ehandler, ptrflx_processing->dvars.cpp_filebase + ::std::string("_static_link_thunk.cpp") , (ptrflx_processing->dvars.cpp_filebase + ::std::string("_static_link_thunk") ) + _vI106798_EXT_STATIC_OBJ )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2317, cols 7 to 35
      if(!(!((_vI106799_result == 0)) ) ) goto _ifdoelse_bootflx_65895_L106806;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2317, cols 7 to 35
      //return result<106799>varname;: type int
      return _vI106799_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2318, cols 5 to 9
    _ifdoelse_bootflx_65895_L106806:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<107295> := apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname);
      _vI107295_xs  = ptrflx_processing->_vI107004_control.cpps; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv99437<107294> := iterator'2<107296>closure;
      _vI107294__genout_urv99437  = (FLX_NEWP(_fI107296_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      //_generator_flx_2517<106800>varname = _genout_urv99437<107294>varname;
      _vI106800__generator_flx_2517 = _vI107294__genout_urv99437; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
    continue__ll_flx_2505_L106807:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      //cxx_compile_static_mv_66074<106703> := apply(_generator_flx_2517<106800>varname, ());
      _vI106703_cxx_compile_static_mv_66074  = (_vI106800__generator_flx_2517)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
/*match case 1:|Some src_param_bootflx_65899*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      if(!andthen(FLX_VNI(_vI106703_cxx_compile_static_mv_66074)==1, (FLX_NEWP(_fI107305__lam_66077)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66076_L106809;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      //src_param_bootflx_65899<106801>varname = (arg of case 1 of cxx_compile_static_mv_66074<106703>varname);
      _vI106801_src_param_bootflx_65899 = *((_a14239t_107672*)FLX_VNP(_vI106703_cxx_compile_static_mv_66074)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2321, cols 7 to 62
      //dst<106802>varname = (+<14305>primfun (apply((prj0:string^2 -> string), (split_extension<83124>stackfun src_param_bootflx_65899<106801>varname)), EXT_STATIC_OBJ<106798>varname));
      _vI106802_dst = (split_extension(_vI106801_src_param_bootflx_65899).data)[0] + _vI106798_EXT_STATIC_OBJ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2322, cols 7 to 53
      //result<106799>varname = (cxx_compile_static1_uncurry<107014>stackfun (ehandler<106803>varname, src_param_bootflx_65899<106801>varname, dst<106802>varname));
      _vI106799_result = _fI107014_cxx_compile_static1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI106803_ehandler, _vI106801_src_param_bootflx_65899, _vI106802_dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2323, cols 7 to 35
      if(!(!((_vI106799_result == 0)) ) ) goto _ifdoend_bootflx_65900_L106808;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2323, cols 7 to 35
      //return result<106799>varname;: type int
      return _vI106799_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2323, cols 7 to 35
    _ifdoend_bootflx_65900_L106808:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<107004>ref))) = (+<80787>stackfun ((deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<107004>ref))), dst<106802>varname));
      *(&(*(&((_art107702*)&ptrflx_processing->_vI107004_control)->cppos) ))  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*(&(*(&((_art107702*)&ptrflx_processing->_vI107004_control)->cppos) )) , _vI106802_dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      goto continue__ll_flx_2505_L106807;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
    _ml66076_L106809:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      if(!(FLX_VNI(_vI106703_cxx_compile_static_mv_66074)==0) ) goto _ml66078_L106810;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      goto _em66074_L106811;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
    _ml66078_L106810:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2325,5,2325,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2325,5,2325,9);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2325, cols 5 to 9
    _em66074_L106811:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2341, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65902_L106813;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2338, cols 7 to 11
      if(!((ptrflx_processing->_vI107004_control.LINKIT == 0)) ) goto _ifdoend_bootflx_65904_L106812;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2332, cols 9 to 70
      //return (cxx_compile_static1_uncurry<107014>stackfun (ehandler<106803>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".cpp")), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname)));: type int
      return _fI107014_cxx_compile_static1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI106803_ehandler, ptrflx_processing->dvars.cpp_filebase + ::std::string(".cpp") , ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME)) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2338, cols 7 to 11
    _ifdoend_bootflx_65904_L106812:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2337, cols 9 to 73
      //return (cxx_compile_static1_uncurry<107014>stackfun (ehandler<106803>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".cpp")), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), EXT_STATIC_OBJ<106798>varname))));: type int
      return _fI107014_cxx_compile_static1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI106803_ehandler, ptrflx_processing->dvars.cpp_filebase + ::std::string(".cpp") , ptrflx_processing->dvars.cpp_filebase + _vI106798_EXT_STATIC_OBJ )) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2341, cols 5 to 9
    _ifdoend_bootflx_65902_L106813:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2340, cols 7 to 15
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2342,3,2342,4); // HACK! 
}

//------------------------------
//FUNCTION <68027>: exts::_lam_65652: Apply method
_at107674 _lam_65652::apply(_a14239t_107672 const &_arg ){
  _vI68029_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1379, cols 10 to 38
      //return (s<68029>varname, "compile");: type _at107674
      return _at107674(_vI68029_s, ::std::string("compile"));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1379,10,1379,38); // HACK! 
}

//------------------------------
//FUNCTION <81092>: str: Apply method
_a14239t_107672 str::apply(void* const &_arg ){
  _vI82040_xs = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 710, cols 3 to 4
      //str_mv_1574<95756> := xs<82040>varname;
      str_mv_1574  = _vI82040_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 703, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 703, cols 9 to 14
      if(!(FLX_VNI(str_mv_1574)==0) ) goto _ml1576_L95755;
    // # C:/projects/felix/src/packages/lists.fdoc: line 707, cols 7 to 24
      //_urv95753<95753> := "";
      _urv95753  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 707, cols 7 to 24
      goto _end_inline_str_mf_1573_95787_L95787;
    // # C:/projects/felix/src/packages/lists.fdoc: line 703, cols 9 to 14
    _ml1576_L95755:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 704, cols 9 to 18
/*match case 2:|Snoc (os_param_std_1320_param_std_1322_param_std_1324_param_std_1326, o_param_std_1321_param_std_1323_param_std_1325_param_std_1327)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 704, cols 9 to 18
      if(!andthen(FLX_VNI(str_mv_1574)==1, (FLX_NEWP(_lam_1579)(FLX_FPAR_PASS this))) ) goto _ml1577_L95754;
    // # C:/projects/felix/src/packages/lists.fdoc: line 704, cols 17 to 17
      //o_param_std_1321_param_std_1323_param_std_1325_param_std_1327<95757>varname = apply((prj1:list * string -> string), (arg of case 1 of str_mv_1574<95756>varname));
      _vI95757_o_pa_hash_463159543 = (*((_tt107677*)FLX_VNP(str_mv_1574))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 704, cols 14 to 15
      //os_param_std_1320_param_std_1322_param_std_1324_param_std_1326<95758>varname = apply((prj0:list * string -> list), (arg of case 1 of str_mv_1574<95756>varname));
      _vI95758_os_p_hash_344733663 = (*((_tt107677*)FLX_VNP(str_mv_1574))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 870, cols 5 to 16
      //o<95770>varname = "'";
      _vI95770_o = ::std::string("'"); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 875, cols 5 to 9
      if(!((0 < _vI95757_o_pa_hash_463159543.size())) ) goto _ifdoelse_std_2036_L95775;
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
      //i<95771>varname = literal[size]("0");
      _vI95771_i = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
    redo__ll_strings_7703_L95772:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
      if(FLX_UNLIKELY(!(!((_vI95757_o_pa_hash_463159543.size() - 1  < _vI95771_i)) ) )) goto _ifdoelse_std_2036_L95775;
    // # C:/projects/felix/src/packages/strings.fdoc: line 873, cols 9 to 23
      // primcall +=<14301>primproc (&o<95770>ref, (repr<82067>stackfun (subscript<81540>primfun[size] (o_param_std_1321_param_std_1323_param_std_1325_param_std_1327<95757>varname, i<95771>varname))));
      {
      _a14239t_107672* _tmp109036 = (_a14239t_107672*)&_vI95770_o;
      _a14239t_107672 _tmp109037 = repr(::flx::rtl::strutil::subscript(_vI95757_o_pa_hash_463159543,_vI95771_i));
      ((_tmp109036))->append((_tmp109037));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
      // primcall pre_incr<81537>primproc[size] &i<95771>ref;
      {
      _a5094t_107688* _tmp109038 = (_a5094t_107688*)&_vI95771_i;
      ++*((_tmp109038));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 874, cols 7 to 11
      goto redo__ll_strings_7703_L95772;
    // # C:/projects/felix/src/packages/strings.fdoc: line 875, cols 5 to 9
    _ifdoelse_std_2036_L95775:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 237, cols 7 to 24
      //_urv95753<95753> := (aux_uncurry<95776>stackfun ((+<14305>primfun (o<95770>varname, "'")), os_param_std_1320_param_std_1322_param_std_1324_param_std_1326<95758>varname));
      _urv95753  = _fI95776_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107698(_vI95770_o + ::std::string("'") , _vI95758_os_p_hash_344733663)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 237, cols 7 to 24
      goto _end_inline_str_mf_1573_95787_L95787;
    // # C:/projects/felix/src/packages/lists.fdoc: line 704, cols 9 to 18
    _ml1577_L95754:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 707, cols 7 to 24
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 707, cols 7 to 24
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",707,7,707,24);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",707,7,707,24);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 707, cols 7 to 24
    _end_inline_str_mf_1573_95787_L95787:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 710, cols 3 to 4
      //return (+<14305>primfun ((+<14305>primfun ("list(", _urv95753<95753>varname)), ")"));: type _a14239t_107672
      return (::std::string("list(") + _urv95753 ) + ::std::string(")") ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",710,3,710,4); // HACK! 
}

//------------------------------
//FUNCTION <106964>: flx_processing::run_program_if_required: Apply method
int _fI106964_run_program_if_required::apply(_pt107743* const &_arg ){
  _vI106966_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2861, cols 5 to 19
      //result<106965>varname = 0;
      _vI106965_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2870, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.STATIC == 0)) ) goto _ifdoend_bootflx_65978_L106967;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100522_L107634;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Running dynamic program")), "\x0A")));
      {
      _a14239t_107672 _tmp109040 = (::std::string("[flx] ") + ::std::string("Running dynamic program") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109040)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2863, cols 7 to 41
    _end_100522_L107634:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<106716>stackproc  ehandler<106966>varname;
      {
      _pI106716_calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI106966_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2856, cols 5 to 40
      //_genout_urv100523<107635> := (run_program_dynamic<106943>stackfun ehandler<106966>varname);
      _vI107635__genout_urv100523  = _fI106943_run_program_dynamic(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106966_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2864, cols 7 to 52
      //result<106965>varname = _genout_urv100523<107635>varname;
      _vI106965_result = _vI107635__genout_urv100523; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2870, cols 5 to 9
      goto _ifdoelse_bootflx_65979_L106968;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2870, cols 5 to 9
    _ifdoend_bootflx_65978_L106967:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100530_L107638;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Running static program")), "\x0A")));
      {
      _a14239t_107672 _tmp109042 = (::std::string("[flx] ") + ::std::string("Running static program") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109042)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2868, cols 7 to 40
    _end_100530_L107638:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2869, cols 7 to 42
      //_genout_urv100531<107639> := (run_program_static<106955>stackfun ehandler<106966>varname);
      _vI107639__genout_urv100531  = _fI106955_run_program_static(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106966_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2869, cols 7 to 42
      //result<106965>varname = _genout_urv100531<107639>varname;
      _vI106965_result = _vI107639__genout_urv100531; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2870, cols 5 to 9
    _ifdoelse_bootflx_65979_L106968:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2871, cols 5 to 18
      //return result<106965>varname;: type int
      return _vI106965_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2872,3,2872,4); // HACK! 
}

//------------------------------
//FUNCTION <68505>: flx_pkgconfig::xfind: Apply method
 ::flx::rtl::cl_t xfind::apply(_at107674 const &_arg ){
  _vI68511_flags = _arg.data[0];
  c = _arg.data[1];
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 54 to 68
      //find_mv_2085<97296> := (stl_find<14442>primfun (flags<68511>varname, c<68512>varname));
      _vI97296_find_mv_2085  = _vI68511_flags.find(c); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
/*match case 1:(i_param_std_1884 when (== (i_param_std_1884, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
      if(!((_vI97296_find_mv_2085 == ::std::string::npos)) ) goto _ml2087_L97298;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      //xfind_mv_65217<97293> := None<81378>varname;
      xfind_mv_65217  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      goto _end_inline_find_97284_L97299;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 77 to 96
    _ml2087_L97298:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 114 to 114
/*match case 2:i_param_std_1885*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 114 to 114
      //i_param_std_1885<97297>varname = find_mv_2085<97296>varname;
      _vI97297_i_param_std_1885 = _vI97296_find_mv_2085; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 48 to 124
      //xfind_mv_65217<97293> := (Some<81379>struct i_param_std_1885<97297>varname);
      xfind_mv_65217  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI97297_i_param_std_1885)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 275, cols 3 to 134
    _end_inline_find_97284_L97299:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 145, cols 8 to 12
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 145, cols 8 to 12
      if(!(FLX_VNI(xfind_mv_65217)==0) ) goto _ml65219_L97294;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 6 to 22
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 145, cols 8 to 12
    _ml65219_L97294:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 8 to 13
/*match case 2:|Some any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 8 to 13
      if(!andthen(FLX_VNI(xfind_mv_65217)==1, (FLX_NEWP(_lam_65221)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65220_L97295;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 6 to 22
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 8 to 13
    _ml65220_L97295:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 6 to 22
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 146, cols 6 to 22
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",146,6,146,22);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",146,6,146,22);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",148,5,148,6); // HACK! 
}

//------------------------------
//FUNCTION <66912>: toolchain_clang_osx::static_object_extension: Apply method
_a14239t_107672 _fI66912_static_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1462, cols 3 to 55
      //return "_static.o";: type _a14239t_107672
      return ::std::string("_static.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1462,3,1462,55); // HACK! 
}

//------------------------------
//FUNCTION <92755>: toolchain_msvc_win32::checkwarn::aux_uncurry: Apply method
void* _fI92755_aux_uncurry::apply(_at107697 const &_arg ){
  _vI92756_x_uncurry = _arg.data[0];
  _vI92757_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L92764:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<92760> := x_uncurry<92756>varname;
      _vI92760_aux__apos_2_mv_1387  = _vI92756_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI92760_aux__apos_2_mv_1387)==0) ) goto _ml1389_L92759;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<92757>varname;: type void*
      return _vI92757_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L92759:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI92760_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI92763__lam_1391)(FLX_FPAR_PASS this, ptrcheckwarn, ptrtoolchain_msvc_win32))) ) goto _ml1390_L92758;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<92761>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<92760>varname));
      _vI92761_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI92760_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<92762>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<92760>varname));
      _vI92762_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI92760_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<92757> := (Snoc<80397>struct (y<92757>varname, h_param_std_1269<92761>varname));
      _vI92757_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92757_y, _vI92761_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<92756> := t_param_std_1268<92762>varname;
      _vI92756_x_uncurry  = _vI92762_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L92764;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L92758:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//C PROC <17381>: set_libs_and_rtls
void set_libs_and_rtls(FLX_APAR_DECL _art107699* _vI17383_x){
  int _vI91433_i;
  void* _vI91432_o;
  int _vI91399_i;
  void* _vI91398_o;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<91398>varname = Empty<80385>varname;
      _vI91398_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L91394;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<91399>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI91399_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<91399>ref;
      {
      int* _tmp109045 = (int*)&_vI91399_i;
      ++*((_tmp109045));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L91397:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI91399_i)) )) goto _ifdoelse_std_1250_L91394;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<91399>ref;
      {
      int* _tmp109046 = (int*)&_vI91399_i;
      --*((_tmp109046));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<91398>varname = (Snoc<80397>struct (o<91398>varname, apply(aprj(i<91399>varname : bool), ((join<82705>stackfun (apply((prj7:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(x<17383>varname)), "lib")), (join<82705>stackfun (apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(x<17383>varname)), "lib"))))));
      _vI91398_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI91398_o, (_at107674(_fI82705_join((*_vI17383_x).FLX_SHARE_DIR, ::std::string("lib")), _fI82705_join((*_vI17383_x).FLX_TARGET_DIR, ::std::string("lib"))).data)[reinterpret< ::flx::rtl::cl_t>(_vI91399_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L91397;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L91394:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 478, cols 5 to 76
      //(deref<80855>primfun[list] apply((prj3:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), x<17383>varname)) = o<91398>varname;
      *(&_vI17383_x->FLX_LIB_DIRS)  = _vI91398_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<91432>varname = Empty<80385>varname;
      _vI91432_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L91428;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<91433>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI91433_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<91433>ref;
      {
      int* _tmp109047 = (int*)&_vI91433_i;
      ++*((_tmp109047));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L91431:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI91433_i)) )) goto _ifdoelse_std_1250_L91428;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<91433>ref;
      {
      int* _tmp109048 = (int*)&_vI91433_i;
      --*((_tmp109048));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<91432>varname = (Snoc<80397>struct (o<91432>varname, apply(aprj(i<91433>varname : bool), ((join<82705>stackfun ((join<82705>stackfun (apply((prj7:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(x<17383>varname)), "lib")), "rtl")), (join<82705>stackfun ((join<82705>stackfun (apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(x<17383>varname)), "lib")), "rtl"))))));
      _vI91432_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI91432_o, (_at107674(_fI82705_join(_fI82705_join((*_vI17383_x).FLX_SHARE_DIR, ::std::string("lib")), ::std::string("rtl")), _fI82705_join(_fI82705_join((*_vI17383_x).FLX_TARGET_DIR, ::std::string("lib")), ::std::string("rtl"))).data)[reinterpret< ::flx::rtl::cl_t>(_vI91433_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L91431;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L91428:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 479, cols 5 to 88
      //(deref<80855>primfun[list] apply((prj6:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), x<17383>varname)) = o<91432>varname;
      *(&_vI17383_x->FLX_RTL_DIRS)  = _vI91432_o; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
      return; // proc return from stackable 
}
//------------------------------
//FUNCTION <66695>: toolchain_clang_linux::cxx_compiler_vendor: Apply method
_a14239t_107672 _fI66695_cxx_compiler_vendor::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1217, cols 3 to 47
      //return "clang";: type _a14239t_107672
      return ::std::string("clang");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1217,3,1217,47); // HACK! 
}

//------------------------------
//FUNCTION <92763>: toolchain_msvc_win32::checkwarn::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI92763__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <66303>: toolchain_msvc_win32::pathname_separator: Apply method
_a14239t_107672 pathname_separator::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1741, cols 3 to 43
      //return "\";: type _a14239t_107672
      return ::std::string("\\");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1741,3,1741,43); // HACK! 
}

//------------------------------
//FUNCTION <106886>: flx_processing::cxx_link_static_exe::_lam_66106: Apply method
_a14239t_107672 _fI106886__lam_66106::apply(_a14239t_107672 const &_arg ){
  _vI106887_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2623, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<106887>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI106887_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2623,11,2623,40); // HACK! 
}

//------------------------------
//FUNCTION <89752>: toolchain_clang_apple_iOS_maker_uncurry::target_os: Apply method
_a14239t_107672 _fI89752_target_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1989, cols 3 to 35
      //return "iOS";: type _a14239t_107672
      return ::std::string("iOS");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1989,3,1989,35); // HACK! 
}

//------------------------------

//PROCEDURE <68437:> flx_pkgconfig::print_help: Call method
void print_help::stack_call(){
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("flx_pkgconfig [options] pkg pkg ...", "\x0A")));
      {
      _a14239t_107672 _tmp109049 = ::std::string("flx_pkgconfig [options] pkg pkg ...") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109049)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  returns code 1 if any packages are missing unless --noerror is specified", "\x0A")));
      {
      _a14239t_107672 _tmp109050 = ::std::string("  returns code 1 if any packages are missing unless --noerror is specified") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109050)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  prints package or field list to standard output on one line", "\x0A")));
      {
      _a14239t_107672 _tmp109051 = ::std::string("  prints package or field list to standard output on one line") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109051)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("options: (follows GNU conventions)", "\x0A")));
      {
      _a14239t_107672 _tmp109052 = ::std::string("options: (follows GNU conventions)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109052)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --path=dirname        set database directory name", "\x0A")));
      {
      _a14239t_107672 _tmp109053 = ::std::string("  --path=dirname        set database directory name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109053)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --path+=dirname       append database directory name", "\x0A")));
      {
      _a14239t_107672 _tmp109054 = ::std::string("  --path+=dirname       append database directory name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109054)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --extension=fpc       set resource descriptor extensions,", "\x0A")));
      {
      _a14239t_107672 _tmp109055 = ::std::string("  --extension=fpc       set resource descriptor extensions,") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109055)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("                          default 'fpc' use 'pc' for pkgconfig databases", "\x0A")));
      {
      _a14239t_107672 _tmp109056 = ::std::string("                          default 'fpc' use 'pc' for pkgconfig databases") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109056)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  -h", "\x0A")));
      {
      _a14239t_107672 _tmp109057 = ::std::string("  -h") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109057)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --hide                only process first package in path with a given name", "\x0A")));
      {
      _a14239t_107672 _tmp109058 = ::std::string("  --hide                only process first package in path with a given name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109058)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("                          default, process all occurences", "\x0A")));
      {
      _a14239t_107672 _tmp109059 = ::std::string("                          default, process all occurences") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109059)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --list                list available packages from specified set", "\x0A")));
      {
      _a14239t_107672 _tmp109060 = ::std::string("  --list                list available packages from specified set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109060)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --missing             list missing packages from specified set", "\x0A")));
      {
      _a14239t_107672 _tmp109061 = ::std::string("  --missing             list missing packages from specified set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109061)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --noerror             do not return 1 because of missing packages", "\x0A")));
      {
      _a14239t_107672 _tmp109062 = ::std::string("  --noerror             do not return 1 because of missing packages") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109062)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  -r", "\x0A")));
      {
      _a14239t_107672 _tmp109063 = ::std::string("  -r") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109063)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --rec                 form transitive closure of specified set based on Requires field", "\x0A")));
      {
      _a14239t_107672 _tmp109064 = ::std::string("  --rec                 form transitive closure of specified set based on Requires field") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109064)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --rec=field           form transitive closure of specified set based on specified field", "\x0A")));
      {
      _a14239t_107672 _tmp109065 = ::std::string("  --rec=field           form transitive closure of specified set based on specified field") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109065)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  -b", "\x0A")));
      {
      _a14239t_107672 _tmp109066 = ::std::string("  -b") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109066)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --backwards           process specified packages in reverse order", "\x0A")));
      {
      _a14239t_107672 _tmp109067 = ::std::string("  --backwards           process specified packages in reverse order") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109067)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --field=field         collate values of field in package set", "\x0A")));
      {
      _a14239t_107672 _tmp109068 = ::std::string("  --field=field         collate values of field in package set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109068)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --keepleftmost        remove duplicate values in output keeping only leftmost occurrence", "\x0A")));
      {
      _a14239t_107672 _tmp109069 = ::std::string("  --keepleftmost        remove duplicate values in output keeping only leftmost occurrence") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109069)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --keeprightmost       remove duplicate values in output keeping only rightmost occurrence", "\x0A")));
      {
      _a14239t_107672 _tmp109070 = ::std::string("  --keeprightmost       remove duplicate values in output keeping only rightmost occurrence") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109070)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  --keepall             keep duplicate values in output", "\x0A")));
      {
      _a14239t_107672 _tmp109071 = ::std::string("  --keepall             keep duplicate values in output") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109071)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("  @filename             Replace with arguments from filename, one line per argument", "\x0A")));
      {
      _a14239t_107672 _tmp109072 = ::std::string("  @filename             Replace with arguments from filename, one line per argument") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109072)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 51, cols 5 to 6
      return; // proc return from stackable 

}
//------------------------------
//FUNCTION <89530>: toolchain_clang_apple_iOS_maker_uncurry: Apply method
_art107765 toolchain_clang_apple_iOS_maker_uncurry::apply(_tt107818 const &_arg ){
  sdk_tag_uncurry = _arg.mem_0;
  archs_uncurry = _arg.mem_1;
  _vI89803_config = _arg.mem_2;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1951, cols 3 to 69
      //_genout_urv94545<94545> := (get<89726>stackfun (+<14305>primfun ((+<14305>primfun ("xcrun --sdk ", sdk_tag_uncurry<89804>varname)), " --find clang")));
      _genout_urv94545  = get(this)
      .apply((::std::string("xcrun --sdk ") + sdk_tag_uncurry ) + ::std::string(" --find clang") ) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1951, cols 3 to 69
      //clang<89734>varname = (lstrip<14855>stackfun ((rstrip<14873>stackfun (_genout_urv94545<94545>varname, " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      clang = lstrip(rstrip(_genout_urv94545, ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1952, cols 3 to 73
      //_genout_urv94550<94550> := (get<89726>stackfun (+<14305>primfun ((+<14305>primfun ("xcrun --sdk ", sdk_tag_uncurry<89804>varname)), " --find clang++")));
      _genout_urv94550  = get(this)
      .apply((::std::string("xcrun --sdk ") + sdk_tag_uncurry ) + ::std::string(" --find clang++") ) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1952, cols 3 to 73
      //clangxx<89735>varname = (lstrip<14855>stackfun ((rstrip<14873>stackfun (_genout_urv94550<94550>varname, " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      clangxx = lstrip(rstrip(_genout_urv94550, ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1953, cols 3 to 70
      //_genout_urv94555<94555> := (get<89726>stackfun (+<14305>primfun ((+<14305>primfun ("xcrun --sdk ", sdk_tag_uncurry<89804>varname)), " --show-sdk-path")));
      _genout_urv94555  = get(this)
      .apply((::std::string("xcrun --sdk ") + sdk_tag_uncurry ) + ::std::string(" --show-sdk-path") ) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1953, cols 3 to 70
      //sdk<89736>varname = (lstrip<14855>stackfun ((rstrip<14873>stackfun (_genout_urv94555<94555>varname, " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      sdk = lstrip(rstrip(_genout_urv94555, ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94588>varname = Empty<80385>varname;
      _vI94588_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 4)) ) goto _ifdoelse_std_1250_L94584;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94589>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84297>varname[4]), 1));
      _vI94589_i = (static_cast<int>(4)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94589>ref;
      {
      int* _tmp109073 = (int*)&_vI94589_i;
      ++*((_tmp109073));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94587:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94589_i)) )) goto _ifdoelse_std_1250_L94584;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94589>ref;
      {
      int* _tmp109074 = (int*)&_vI94589_i;
      --*((_tmp109074));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94588>varname = (Snoc<80397>struct (o<94588>varname, apply(aprj(i<94589>varname : 4), ("-w", "-Wfatal-errors", "-Wno-return-type-c-linkage", "-Wno-invalid-offsetof"))));
      _vI94588_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94588_o, (_at107820(::std::string("-w"), ::std::string("-Wfatal-errors"), ::std::string("-Wno-return-type-c-linkage"), ::std::string("-Wno-invalid-offsetof")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94589_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94587;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94584:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1964, cols 3 to 4
      //cxx_compile_warning_flags<89737>varname = o<94588>varname;
      _vI89737_cxx_compile_warning_flags = _vI94588_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94598>varname = Empty<80385>varname;
      _vI94598_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 3)) ) goto _ifdoelse_std_1250_L94594;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94599>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84373>varname[3]), 1));
      _vI94599_i = (static_cast<int>(3)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94599>ref;
      {
      int* _tmp109075 = (int*)&_vI94599_i;
      ++*((_tmp109075));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94597:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94599_i)) )) goto _ifdoelse_std_1250_L94594;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94599>ref;
      {
      int* _tmp109076 = (int*)&_vI94599_i;
      --*((_tmp109076));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94598>varname = (Snoc<80397>struct (o<94598>varname, apply(aprj(i<94599>varname : 3), ("-w", "-Wfatal-errors", "-Wno-array-bounds"))));
      _vI94598_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94598_o, (_at107767(::std::string("-w"), ::std::string("-Wfatal-errors"), ::std::string("-Wno-array-bounds")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94599_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94597;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94594:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1968, cols 3 to 4
      //c_compile_warning_flags<89738>varname = o<94598>varname;
      _vI89738_c_compile_warning_flags = _vI94598_o; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1970, cols 3 to 25
      //c_compiler<89739>varname = clang<89734>varname;
      _vI89739_c_compiler = clang; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1971, cols 3 to 29
      //cxx_compiler<89740>varname = clangxx<89735>varname;
      _vI89740_cxx_compiler = clangxx; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1972, cols 3 to 23
      //linker<89741>varname = clangxx<89735>varname;
      _vI89741_linker = clangxx; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1973, cols 3 to 116
      //archlist<89746>varname = (aux_uncurry<94641>stackfun ((aux_uncurry<94626>stackfun (Empty<80385>varname, archs_uncurry<89805>varname)), Empty<80385>varname));
      archlist = _fI94641_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_fI94626_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697((void* /*VR_nullptr*/ )0, archs_uncurry)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94659>varname = Empty<80385>varname;
      _vI94659_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 3)) ) goto _ifdoelse_std_1250_L94655;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94660>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84373>varname[3]), 1));
      _vI94660_i = (static_cast<int>(3)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94660>ref;
      {
      int* _tmp109077 = (int*)&_vI94660_i;
      ++*((_tmp109077));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94658:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94660_i)) )) goto _ifdoelse_std_1250_L94655;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94660>ref;
      {
      int* _tmp109078 = (int*)&_vI94660_i;
      --*((_tmp109078));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94659>varname = (Snoc<80397>struct (o<94659>varname, apply(aprj(i<94660>varname : 3), ("-dynamiclib", "-isysroot", sdk<89736>varname))));
      _vI94659_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94659_o, (_at107767(::std::string("-dynamiclib"), ::std::string("-isysroot"), sdk).data)[reinterpret< ::flx::rtl::cl_t>(_vI94660_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94658;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94655:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1975, cols 3 to 90
      //ccflags_for_dynamic_link<89747>varname = (join_uncurry<89534>stackfun (o<94659>varname, archlist<89746>varname));
      _vI89747_ccflags_for_dynamic_link = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI94659_o, archlist)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1980, cols 3 to 4
      //base_c_compile_flags<89748>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (archlist<89746>varname, c_compile_warning_flags<89738>varname)), apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname))), "-fembed-bitcode")), "-fno-strict-aliasing")), "-fno-common")), "-O1")), sdk<89736>varname)), "-isysroot")), "-c")), "-g"));
      _vI89748_base_c_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(archlist, _vI89738_c_compile_warning_flags)) /* apply_stack */, _vI89803_config.ccflags)) /* apply_stack */, ::std::string("-fembed-bitcode")))), ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), sdk))), ::std::string("-isysroot")))), ::std::string("-c")))), ::std::string("-g")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1985, cols 3 to 4
      //base_cxx_compile_flags<89749>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (archlist<89746>varname, cxx_compile_warning_flags<89737>varname)), apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<89803>varname))), "-std=c++11")), "-fembed-bitcode")), "-fno-strict-aliasing")), "-fno-common")), "-O1")), sdk<89736>varname)), "-isysroot")), "-c")), "-g"));
      _vI89749_base_cxx_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(archlist, _vI89737_cxx_compile_warning_flags)) /* apply_stack */, _vI89803_config.ccflags)) /* apply_stack */, ::std::string("-std=c++11")))), ::std::string("-fembed-bitcode")))), ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), sdk))), ::std::string("-isysroot")))), ::std::string("-c")))), ::std::string("-g")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2192, cols 1 to 2
      //return ( c_dependency_generator:c_dependency_generator<89764>closure, c_dynamic_object_compiler:c_dynamic_object_compiler<89779>closure, c_static_object_compiler:c_static_object_compiler<89776>closure, cxx_compiler_vendor:cxx_compiler_vendor<89753>closure, cxx_dependency_generator:cxx_dependency_generator<89769>closure, cxx_dynamic_object_compiler:cxx_dynamic_object_compiler<89788>closure, cxx_static_library_object_compiler:cxx_static_library_object_compiler<89785>closure, cxx_static_object_compiler:cxx_static_object_compiler<89782>closure, debug_flags:debug_flags<89761>closure, dependency_extension:dependency_extension<89754>closure, dependency_parser:dependency_parser<89774>closure, dynamic_executable_linker:dynamic_executable_linker<89797>closure, dynamic_library_extension:dynamic_library_extension<89759>closure, dynamic_library_linker:dynamic_library_linker<89800>closure, dynamic_object_extension:dynamic_object_extension<89757>closure, executable_extension:executable_extension<89755>closure, get_base_c_compile_flags:get_base_c_compile_flags<89762>closure, get_base_cxx_compile_flags:get_base_cxx_compile_flags<89763>closure, host_os:host_os<89751>closure, pathname_separator:pathname_separator<89760>closure, static_executable_linker:static_executable_linker<89794>closure, static_library_extension:static_library_extension<89758>closure, static_library_linker:static_library_linker<89791>closure, static_object_extension:static_object_extension<89756>closure, target_os:target_os<89752>closure, whatami:whatami<89750>closure);: type _art107765
      return _art107765((FLX_NEWP(_fI89764_c_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89779_c_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89776_c_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89753_cxx_compiler_vendor)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89769_cxx_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89788_cxx_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89785_cxx_static_library_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89782_cxx_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89761_debug_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89754_dependency_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89774_dependency_parser)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89797_dynamic_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89759_dynamic_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89800_dynamic_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89757_dynamic_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89755_executable_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89762_get_base_c_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89763_get_base_cxx_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89751_host_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89760_pathname_separator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89794_static_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89758_static_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89791_static_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89756_static_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89752_target_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI89750_whatami)(FLX_FPAR_PASS this)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2192,1,2192,2); // HACK! 
}

//------------------------------
//FUNCTION <105567>: FlxPkgConfigQuery::aux_uncurry::aux_uncurry: Apply method
void* _fI105567_aux_uncurry::apply(_at107697 const &_arg ){
  _vI105568_x_uncurry = _arg.data[0];
  _vI105569_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L105576:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<105572> := x_uncurry<105568>varname;
      _vI105572_aux__apos_2_mv_1387  = _vI105568_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI105572_aux__apos_2_mv_1387)==0) ) goto _ml1389_L105571;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<105569>varname;: type void*
      return _vI105569_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L105571:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105572_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI105575__lam_1391)(FLX_FPAR_PASS this, ptr_fI105559_aux_uncurry, ptrFlxPkgConfigQuery))) ) goto _ml1390_L105570;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<105573>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<105572>varname));
      _vI105573_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI105572_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<105574>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<105572>varname));
      _vI105574_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI105572_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<105569> := (Snoc<80397>struct (y<105569>varname, h_param_std_1269<105573>varname));
      _vI105569_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105569_y, _vI105573_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<105568> := t_param_std_1268<105574>varname;
      _vI105568_x_uncurry  = _vI105574_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L105576;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L105570:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//C FUNC <17513>: dflt_profile
_art107708 dflt_profile(){
   ::flx::rtl::cl_t _vI91299_getenv_mv_612;
  _a14239t_107672 _vI91297_result_param_std_605;
  _a14239t_107672 _vI91296_getenv_mv_608;
  _a14239t_107672 _urv91293;
   ::flx::rtl::cl_t _vI91283_getenv_mv_612;
  _a14239t_107672 _vI91281_result_param_std_605;
  _a14239t_107672 _vI91280_getenv_mv_608;
  _a14239t_107672 _urv91277;
   ::flx::rtl::cl_t _vI91267_getenv_mv_612;
  _a14239t_107672 _vI91265_result_param_std_605;
  _a14239t_107672 _vI91264_getenv_mv_608;
  _a14239t_107672 _urv91261;
   ::flx::rtl::cl_t _vI91251_getenv_mv_612;
  _a14239t_107672 _vI91249_result_param_std_605;
  _a14239t_107672 _vI91248_getenv_mv_608;
  _a14239t_107672 _urv91245;
   ::flx::rtl::cl_t _vI91235_getenv_mv_612;
  _a14239t_107672 _vI91233_result_param_std_605;
  _a14239t_107672 _vI91232_getenv_mv_608;
  _a14239t_107672 _urv91229;
   ::flx::rtl::cl_t dflt_profile_mv_3009;
  _a14239t_107672 h_param_std_3001;
  _a14239t_107672 dflt_profile_mv_3005;
  _a14239t_107672 _urv91188;
  _a14239t_107672 FLX_OUTPUT_DIR;
  _a14239t_107672 FLX_CACHE_DIR;
  _a14239t_107672 FLX_PROFILE_DIR;
  _a14239t_107672 FLX_CACHE_TOP;
  _a14239t_107672 FLX_HOME_DIR;
  _a14239t_107672 HOME;
    // # C:/projects/felix/src/packages/flx.fdoc: line 392, cols 15 to 32
      //dflt_profile_mv_3005<91189> := (getenv<80578>primfun[Win32] "HOME");
      dflt_profile_mv_3005  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("HOME")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 392, cols 11 to 11
/*match case 1:h_param_std_3001*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 392, cols 11 to 11
      //h_param_std_3001<91190>varname = dflt_profile_mv_3005<91189>varname;
      h_param_std_3001 = dflt_profile_mv_3005; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //dflt_profile_mv_3009<91191> := (lnot<5216>primfun (==<80464>primfun[string] (h_param_std_3001<91190>varname, "")));
      dflt_profile_mv_3009  = !((h_param_std_3001 == ::std::string(""))) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 395, cols 9 to 16
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 395, cols 9 to 16
      if(!(dflt_profile_mv_3009%2==1) ) goto _ml3011_L91192;
    // # C:/projects/felix/src/packages/flx.fdoc: line 395, cols 9 to 16
      //_urv91188<91188> := h_param_std_3001<91190>varname;
      _urv91188  = h_param_std_3001; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 395, cols 9 to 16
      goto _end_hash_586682170;
    // # C:/projects/felix/src/packages/flx.fdoc: line 395, cols 9 to 16
    _ml3011_L91192:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 395, cols 9 to 16
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 395, cols 9 to 16
      //_urv91188<91188> := (getenv<80578>primfun[Win32] "USERPROFILE");
      _urv91188  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("USERPROFILE")).c_str())); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 396, cols 7 to 14
    _end_hash_586682170:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 397, cols 5 to 6
      //HOME<17523>varname = _urv91188<91188>varname;
      HOME = _urv91188; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 402, cols 5 to 9
      if(!((HOME == ::std::string(""))) ) goto _ifdoelse_std_3003_L17530;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("HOME (or USERPROFILE on WIN32) environment variable is not set.  Please set HOME before building.", "\x0A")));
      {
      _a14239t_107672 _tmp109080 = ::std::string("HOME (or USERPROFILE on WIN32) environment variable is not set.  Please set HOME before building.") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109080)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 401, cols 7 to 21
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 402, cols 5 to 9
    _ifdoelse_std_3003_L17530:;
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<91232> := (getenv<80578>primfun[Win32] "FLX_HOME_DIR");
      _vI91232_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_HOME_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<91233>varname = getenv_mv_608<91232>varname;
      _vI91233_result_param_std_605 = _vI91232_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<91235> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<91233>varname), literal[size]("0"))));
      _vI91235_getenv_mv_612  = !((_vI91233_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI91235_getenv_mv_612%2==1) ) goto _ml614_L91234;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91229<91229> := result_param_std_605<91233>varname;
      _urv91229  = _vI91233_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_91238_L91238;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L91234:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91229<91229> := (join<82705>stackfun (HOME<17523>varname, ".felix"));
      _urv91229  = _fI82705_join(HOME, ::std::string(".felix")); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_91238_L91238:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 405, cols 5 to 65
      //FLX_HOME_DIR<17524>varname = _urv91229<91229>varname;
      FLX_HOME_DIR = _urv91229; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<91248> := (getenv<80578>primfun[Win32] "FLX_CACHE_TOP");
      _vI91248_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_CACHE_TOP")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<91249>varname = getenv_mv_608<91248>varname;
      _vI91249_result_param_std_605 = _vI91248_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<91251> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<91249>varname), literal[size]("0"))));
      _vI91251_getenv_mv_612  = !((_vI91249_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI91251_getenv_mv_612%2==1) ) goto _ml614_L91250;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91245<91245> := result_param_std_605<91249>varname;
      _urv91245  = _vI91249_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_91254_L91254;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L91250:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91245<91245> := (join<82705>stackfun (FLX_HOME_DIR<17524>varname, "cache"));
      _urv91245  = _fI82705_join(FLX_HOME_DIR, ::std::string("cache")); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_91254_L91254:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 406, cols 5 to 74
      //FLX_CACHE_TOP<17525>varname = _urv91245<91245>varname;
      FLX_CACHE_TOP = _urv91245; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<91264> := (getenv<80578>primfun[Win32] "FLX_PROFILE_DIR");
      _vI91264_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_PROFILE_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<91265>varname = getenv_mv_608<91264>varname;
      _vI91265_result_param_std_605 = _vI91264_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<91267> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<91265>varname), literal[size]("0"))));
      _vI91267_getenv_mv_612  = !((_vI91265_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI91267_getenv_mv_612%2==1) ) goto _ml614_L91266;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91261<91261> := result_param_std_605<91265>varname;
      _urv91261  = _vI91265_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_91270_L91270;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L91266:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91261<91261> := (join<82705>stackfun (FLX_HOME_DIR<17524>varname, "config"));
      _urv91261  = _fI82705_join(FLX_HOME_DIR, ::std::string("config")); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_91270_L91270:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 407, cols 5 to 79
      //FLX_PROFILE_DIR<17526>varname = _urv91261<91261>varname;
      FLX_PROFILE_DIR = _urv91261; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<91280> := (getenv<80578>primfun[Win32] "FLX_CACHE_DIR");
      _vI91280_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_CACHE_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<91281>varname = getenv_mv_608<91280>varname;
      _vI91281_result_param_std_605 = _vI91280_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<91283> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<91281>varname), literal[size]("0"))));
      _vI91283_getenv_mv_612  = !((_vI91281_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI91283_getenv_mv_612%2==1) ) goto _ml614_L91282;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91277<91277> := result_param_std_605<91281>varname;
      _urv91277  = _vI91281_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_91286_L91286;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L91282:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91277<91277> := (join<82705>stackfun (FLX_CACHE_TOP<17525>varname, "binary"));
      _urv91277  = _fI82705_join(FLX_CACHE_TOP, ::std::string("binary")); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_91286_L91286:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 409, cols 5 to 78
      //FLX_CACHE_DIR<17527>varname = _urv91277<91277>varname;
      FLX_CACHE_DIR = _urv91277; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 60 to 71
      //getenv_mv_608<91296> := (getenv<80578>primfun[Win32] "FLX_OUTPUT_DIR");
      _vI91296_getenv_mv_608  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_OUTPUT_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
/*match case 1:result_param_std_605*/
    // # C:/projects/felix/src/packages/program.fdoc: line 45, cols 51 to 56
      //result_param_std_605<91297>varname = getenv_mv_608<91296>varname;
      _vI91297_result_param_std_605 = _vI91296_getenv_mv_608; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //getenv_mv_612<91299> := (lnot<5216>primfun (==<81399>primfun[size] ((len<14304>primfun result_param_std_605<91297>varname), literal[size]("0"))));
      _vI91299_getenv_mv_612  = !((_vI91297_result_param_std_605.size() == 0)) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      if(!(_vI91299_getenv_mv_612%2==1) ) goto _ml614_L91298;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91293<91293> := result_param_std_605<91297>varname;
      _urv91293  = _vI91297_result_param_std_605; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      goto _end_inline_getenv_91302_L91302;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
    _ml614_L91298:;
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
/*match case 2:any*/
    // # C:/projects/felix/src/packages/program.fdoc: line 46, cols 5 to 54
      //_urv91293<91293> := (join<82705>stackfun (FLX_CACHE_TOP<17525>varname, "text"));
      _urv91293  = _fI82705_join(FLX_CACHE_TOP, ::std::string("text")); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 47, cols 3 to 4
    _end_inline_getenv_91302_L91302:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 410, cols 5 to 78
      //FLX_OUTPUT_DIR<17528>varname = _urv91293<91293>varname;
      FLX_OUTPUT_DIR = _urv91293; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 418, cols 5 to 6
      //return ( FLX_CACHE_DIR:FLX_CACHE_DIR<17527>varname, FLX_HOME_DIR:FLX_HOME_DIR<17524>varname, FLX_OUTPUT_DIR:FLX_OUTPUT_DIR<17528>varname, FLX_PROFILE_DIR:FLX_PROFILE_DIR<17526>varname);: type _art107708
      return _art107708(FLX_CACHE_DIR, FLX_HOME_DIR, FLX_OUTPUT_DIR, FLX_PROFILE_DIR);
}
//------------------------------
//FUNCTION <107504>: flx_processing::check_binary_uptodate::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI107504__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <105716>: flx_processing::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI105716__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <94923>: get_dflt_uncurry::_lam_1828: Apply method
 ::flx::rtl::cl_t _lam_1828::apply(){
    // # C:/projects/felix/src/packages/trees.fdoc: line 1274, cols 7 to 12
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/trees.fdoc",1274,7,1274,12); // HACK! 
}

//------------------------------
//FUNCTION <106105>: flx_processing::find_cxx_pkgs::iterator'2: Apply method
void* _fI106105_iterator__apos_2::apply(){
    // # C:/projects/felix/src/packages/io.fdoc: line 336, cols 11 to 18
      //_genout_urv98305<106110> := (readln<8425>primfun f<105744>varname);
      _genout_urv98305  = ::flx::rtl::ioutil::readln((ptrfind_cxx_pkgs->_vI105744_f)); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 336, cols 11 to 18
      //_genout_urv98291<106109> := _genout_urv98305<106110>varname;
      _genout_urv98291  = _genout_urv98305; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 336, cols 11 to 18
      //iterator'2_mv_636<106107> := _genout_urv98291<106109>varname;
      _vI106107_iterator__apos_2_mv_636  = _genout_urv98291; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/io.fdoc: line 337, cols 7 to 8
/*match case 1:""*/
    // # C:/projects/felix/src/packages/io.fdoc: line 337, cols 7 to 8
      if(!((::std::string("") == _vI106107_iterator__apos_2_mv_636)) ) goto _ml638_L106106;
    // # C:/projects/felix/src/packages/io.fdoc: line 338, cols 5 to 31
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/io.fdoc: line 337, cols 7 to 8
    _ml638_L106106:;
    // # C:/projects/felix/src/packages/io.fdoc: line 338, cols 7 to 10
/*match case 2:text_param_std_622*/
    // # C:/projects/felix/src/packages/io.fdoc: line 338, cols 7 to 10
      //text_param_std_622<106108>varname = iterator'2_mv_636<106107>varname;
      text_param_std_622 = _vI106107_iterator__apos_2_mv_636; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 338, cols 5 to 31
      //return (Some<80915>struct (rstrip<14873>stackfun (text_param_std_622<106108>varname, " \x09\x0A\x0D\x0C\x0B")));: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (rstrip(text_param_std_622, ::std::string(" \x09\n\x0D\x0C\x0B"))));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/io.fdoc",340,3,340,4); // HACK! 
}

//------------------------------

//PROCEDURE <89494:> process_config_text_uncurry: Call method
void process_config_text_uncurry::stack_call(_tt107714 const &_arg){
  ::flx::rtl::con_t *cc = call(0,_arg);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * process_config_text_uncurry::call(::flx::rtl::con_t *_ptr_caller, _tt107714 const &_arg){
  _caller = _ptr_caller;
  cfg_uncurry = _arg.mem_0;
  _vI90305_text = _arg.mem_1;
  INIT_PC
  return this;
}

//PROCEDURE <89494:> process_config_text_uncurry: Resume method
::flx::rtl::con_t *process_config_text_uncurry::resume(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 530, cols 5 to 44
      //_genout_urv91551<91551> := (_ctor_RE2<15267>primfun "([-a-zA-Z_]+) *: *(.*)");
      _genout_urv91551  = ::std::shared_ptr< ::re2::RE2>(new RE2((::std::string("([-a-zA-Z_]+) *: *(.*)")))); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 530, cols 5 to 44
      //re<90293>varname = _genout_urv91551<91551>varname;
      re = _genout_urv91551; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 531, cols 5 to 29
      //FLX_INSTALL_DIR<90294>varname = "";
      FLX_INSTALL_DIR = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 533, cols 5 to 40
      //lines<90295>varname = (aux_uncurry<91677>stackfun ((aux<91664>stackfun (text<90305>varname, Empty<80385>varname)), Empty<80385>varname));
      _vI90295_lines = _fI91677_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(aux(FLX_FPAR_PASS this)
      .apply(_tt107698(_vI90305_text, (void* /*VR_nullptr*/ )0)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<91691> := lines<90295>varname;
      _vI91691_xs  = _vI90295_lines; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv91690<91690> := iterator'2<91692>closure;
      _genout_urv91690  = (FLX_NEWP(_fI91692_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      //_generator_flx_10066<90296>varname = _genout_urv91690<91690>varname;
      _generator_flx_10066 = _genout_urv91690; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
    continue__ll_flx_10017_L90306:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      //process_config_text'2_mv_2952<90275> := apply(_generator_flx_10066<90296>varname, ());
      _vI90275_process_config_text__apos_2_mv_2952  = (_generator_flx_10066)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
/*match case 1:|Some line_param_std_2929*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      if(!andthen(FLX_VNI(_vI90275_process_config_text__apos_2_mv_2952)==1, (FLX_NEWP(_lam_2975)(FLX_FPAR_PASS this))) ) goto _ml2954_L90324;
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      //line_param_std_2929<90298>varname = (arg of case 1 of process_config_text'2_mv_2952<90275>varname);
      line_param_std_2929 = *((_a14239t_107672*)FLX_VNP(_vI90275_process_config_text__apos_2_mv_2952)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 535, cols 7 to 35
      //_genout_urv91818<91818> := (Match<15393>stackfun (re<90293>varname, line_param_std_2929<90298>varname));
      _genout_urv91818  = Match(FLX_FPAR_PASS re, line_param_std_2929); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 535, cols 7 to 35
      //found<90299>varname = _genout_urv91818<91818>varname;
      _vI90299_found = _genout_urv91818; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 536, cols 13 to 17
      //process_config_text'2_mv_2955<90278> := found<90299>varname;
      _vI90278_process_config_text__apos_2_mv_2955  = _vI90299_found; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 537, cols 9 to 34
/*match case 1:(|Some v_param_std_2931_param_std_2937 when (== ((int (len v_param_std_2931_param_std_2937)), 3)))*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 537, cols 9 to 34
      if(!andthen(andthen(FLX_VNI(_vI90278_process_config_text__apos_2_mv_2955)==1, (FLX_NEWP(_lam_2972)(FLX_FPAR_PASS this))), (FLX_NEWP(_lam_2973)(FLX_FPAR_PASS this))) ) goto _ml2957_L90321;
    // # C:/projects/felix/src/packages/flx.fdoc: line 537, cols 14 to 14
      //v_param_std_2931_param_std_2937<90302>varname = (arg of case 1 of process_config_text'2_mv_2955<90278>varname);
      v_param_std_2931_param_std_2937 = *((_poly_80462t_107729*)FLX_VNP(_vI90278_process_config_text__apos_2_mv_2955)); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(v_param_std_2931_param_std_2937))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/flx.fdoc: line 538, cols 9 to 20
      //p<90303>varname = (unsafe_get<83437>primfun[string] (v_param_std_2931_param_std_2937<90302>varname, (_ctor_size<83435>primfun[size] (_ctor_size<80270>primfun[int] 1))));
      p = v_param_std_2931_param_std_2937[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)]; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(2)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(v_param_std_2931_param_std_2937))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/flx.fdoc: line 539, cols 9 to 26
      //a<90304>varname = (lstrip<14855>stackfun ((rstrip<14873>stackfun ((unsafe_get<83437>primfun[string] (v_param_std_2931_param_std_2937<90302>varname, (_ctor_size<83435>primfun[size] (_ctor_size<80270>primfun[int] 2)))), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      _vI90304_a = lstrip(rstrip(v_param_std_2931_param_std_2937[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(2)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)], ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 540, cols 15 to 15
      //process_config_text'2_mv_2958<90281> := p<90303>varname;
      _vI90281_process_config_text__apos_2_mv_2958  = p; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 541, cols 11 to 27
/*match case 1:"FLX_INSTALL_DIR"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 541, cols 11 to 27
      if(!((::std::string("FLX_INSTALL_DIR") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2960_L90307;
    // # C:/projects/felix/src/packages/flx.fdoc: line 542, cols 11 to 29
      //FLX_INSTALL_DIR<90294>varname = a<90304>varname;
      FLX_INSTALL_DIR = _vI90304_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = (join<82705>stackfun (a<90304>varname, "host"));
      *(&cfg_uncurry->FLX_TARGET_DIR)  = _fI82705_join(_vI90304_a, ::std::string("host")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg_uncurry<90327>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun ((join<82705>stackfun (a<90304>varname, "host")), "config"))));
      *(&cfg_uncurry->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(_fI82705_join(_vI90304_a, ::std::string("host")), ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg_uncurry);
    // # C:/projects/felix/src/packages/flx.fdoc: line 494, cols 5 to 24
      //(deref<85463>primfun[string] apply((prj7:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = (join<82705>stackfun (a<90304>varname, "share"));
      *(&cfg_uncurry->FLX_SHARE_DIR)  = _fI82705_join(_vI90304_a, ::std::string("share")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg_uncurry);
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 541, cols 11 to 27
    _ml2960_L90307:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 545, cols 11 to 29
/*match case 2:"FLX_TARGET_SUBDIR"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 545, cols 11 to 29
      if(!((::std::string("FLX_TARGET_SUBDIR") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2961_L90310;
    // # C:/projects/felix/src/packages/flx.fdoc: line 552, cols 11 to 15
      if(!(!((FLX_INSTALL_DIR == ::std::string(""))) ) ) goto _ifdoend_std_2933_L90308;
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = (join<82705>stackfun (FLX_INSTALL_DIR<90294>varname, a<90304>varname));
      *(&cfg_uncurry->FLX_TARGET_DIR)  = _fI82705_join(FLX_INSTALL_DIR, _vI90304_a); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg_uncurry<90327>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun ((join<82705>stackfun (FLX_INSTALL_DIR<90294>varname, a<90304>varname)), "config"))));
      *(&cfg_uncurry->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(_fI82705_join(FLX_INSTALL_DIR, _vI90304_a), ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg_uncurry);
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 552, cols 11 to 15
    _ifdoend_std_2933_L90308:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("Cannot set FLX_TARGET_SUBDIR without setting FLX_INSTALL_DIR", "\x0A")));
      {
      _a14239t_107672 _tmp109081 = ::std::string("Cannot set FLX_TARGET_SUBDIR without setting FLX_INSTALL_DIR") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109081)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 551, cols 13 to 27
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 545, cols 11 to 29
    _ml2961_L90310:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 554, cols 11 to 25
/*match case 3:"FLX_SHARE_DIR"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 554, cols 11 to 25
      if(!((::std::string("FLX_SHARE_DIR") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2962_L90311;
    // # C:/projects/felix/src/packages/flx.fdoc: line 494, cols 5 to 24
      //(deref<85463>primfun[string] apply((prj7:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = a<90304>varname;
      *(&cfg_uncurry->FLX_SHARE_DIR)  = _vI90304_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg_uncurry);
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 554, cols 11 to 25
    _ml2962_L90311:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 555, cols 11 to 26
/*match case 4:"FLX_TARGET_DIR"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 555, cols 11 to 26
      if(!((::std::string("FLX_TARGET_DIR") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2963_L90312;
    // # C:/projects/felix/src/packages/flx.fdoc: line 488, cols 5 to 25
      //(deref<85463>primfun[string] apply((prj8:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = a<90304>varname;
      *(&cfg_uncurry->FLX_TARGET_DIR)  = _vI90304_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 489, cols 5 to 50
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg_uncurry<90327>varname)) = (Snoc<80397>struct (Empty<80385>varname, (join<82705>stackfun (a<90304>varname, "config"))));
      *(&cfg_uncurry->FLX_CONFIG_DIRS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, _fI82705_join(_vI90304_a, ::std::string("config"))))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 480, cols 3 to 4
  set_libs_and_rtls(FLX_FPAR_PASS cfg_uncurry);
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 555, cols 11 to 26
    _ml2963_L90312:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 556, cols 11 to 24
/*match case 5:"FLX_HOME_DIR"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 556, cols 11 to 24
      if(!((::std::string("FLX_HOME_DIR") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2964_L90313;
    // # C:/projects/felix/src/packages/flx.fdoc: line 499, cols 5 to 23
      //(deref<85463>primfun[string] apply((prj2:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = a<90304>varname;
      *(&cfg_uncurry->FLX_HOME_DIR)  = _vI90304_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 500, cols 5 to 35
      //(deref<85463>primfun[string] apply((prj5:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = (join<82705>stackfun (a<90304>varname, "config"));
      *(&cfg_uncurry->FLX_PROFILE_DIR)  = _fI82705_join(_vI90304_a, ::std::string("config")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 501, cols 5 to 41
      //(deref<85463>primfun[string] apply((prj0:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = (join<82705>stackfun ((join<82705>stackfun (a<90304>varname, "cache")), "binary"));
      *(&cfg_uncurry->FLX_CACHE_DIR)  = _fI82705_join(_fI82705_join(_vI90304_a, ::std::string("cache")), ::std::string("binary")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 502, cols 5 to 40
      //(deref<85463>primfun[string] apply((prj4:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = (join<82705>stackfun ((join<82705>stackfun (a<90304>varname, "cache")), "text"));
      *(&cfg_uncurry->FLX_OUTPUT_DIR)  = _fI82705_join(_fI82705_join(_vI90304_a, ::std::string("cache")), ::std::string("text")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 556, cols 11 to 24
    _ml2964_L90313:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 557, cols 11 to 27
/*match case 6:"FLX_PROFILE_DIR"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 557, cols 11 to 27
      if(!((::std::string("FLX_PROFILE_DIR") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2965_L90314;
    // # C:/projects/felix/src/packages/flx.fdoc: line 557, cols 32 to 55
      //(deref<85463>primfun[string] apply((prj5:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = a<90304>varname;
      *(&cfg_uncurry->FLX_PROFILE_DIR)  = _vI90304_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 557, cols 11 to 27
    _ml2965_L90314:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 558, cols 11 to 27
/*match case 7:"FLX_CONFIG_DIRS"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 558, cols 11 to 27
      if(!((::std::string("FLX_CONFIG_DIRS") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2966_L90315;
    // # C:/projects/felix/src/packages/strings.fdoc: line 677, cols 5 to 6
      //state<92269>varname = (respectful_parse_uncurry_uncurry<90457>stackfun (( dquote:keep-dquote<14987>varname, escape:keep-escape<14994>varname, quote:keep-quote<14980>varname), ( current:"", mode:skipping<15002>varname, parsed:Empty<80385>varname), a<90304>varname));
      _vI92269_state = respectful_parse_uncurry_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107724(_art107723(/*VR_int*/1, /*VR_int*/1, /*VR_int*/1), _art107719(::std::string(""), /*VR_int*/1, (void* /*VR_nullptr*/ )0), _vI90304_a)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 679, cols 11 to 20
      //respectful_split'2_mv_2356<92268> := apply((prj1:record(current:(string),mode:(mode_t),parsed:(list)) -> mode_t), state<92269>varname);
      _vI92268_respectful_split__apos_2_mv_2356  = _vI92269_state.mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
/*match case 1:|skipping*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      if(!(_vI92268_respectful_split__apos_2_mv_2356%7==1) ) goto _ml2358_L92270;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      goto _em2356_L92271;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
    _ml2358_L92270:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 12 to 54
      //apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92269>varname) = (+<80787>stackfun (apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92269>varname), apply((prj0:record(current:(string),mode:(mode_t),parsed:(list)) -> string), state<92269>varname)));
      _vI92269_state.parsed = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI92269_state.parsed, _vI92269_state.current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 682, cols 5 to 14
    _em2356_L92271:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 558, cols 32 to 72
      //(deref<80855>primfun[list] apply((prj1:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg_uncurry<90327>varname)) = apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92269>varname);
      *(&cfg_uncurry->FLX_CONFIG_DIRS)  = _vI92269_state.parsed; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 558, cols 11 to 27
    _ml2966_L90315:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 559, cols 11 to 25
/*match case 8:"FLX_CACHE_DIR"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 559, cols 11 to 25
      if(!((::std::string("FLX_CACHE_DIR") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2967_L90316;
    // # C:/projects/felix/src/packages/flx.fdoc: line 559, cols 30 to 51
      //(deref<85463>primfun[string] apply((prj0:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = a<90304>varname;
      *(&cfg_uncurry->FLX_CACHE_DIR)  = _vI90304_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 559, cols 11 to 25
    _ml2967_L90316:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 560, cols 11 to 26
/*match case 9:"FLX_OUTPUT_DIR"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 560, cols 11 to 26
      if(!((::std::string("FLX_OUTPUT_DIR") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2968_L90317;
    // # C:/projects/felix/src/packages/flx.fdoc: line 560, cols 31 to 53
      //(deref<85463>primfun[string] apply((prj4:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &string), cfg_uncurry<90327>varname)) = a<90304>varname;
      *(&cfg_uncurry->FLX_OUTPUT_DIR)  = _vI90304_a; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 560, cols 11 to 26
    _ml2968_L90317:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 561, cols 11 to 24
/*match case 10:"FLX_LIB_DIRS"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 561, cols 11 to 24
      if(!((::std::string("FLX_LIB_DIRS") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto _ml2969_L90318;
    // # C:/projects/felix/src/packages/strings.fdoc: line 677, cols 5 to 6
      //state<92286>varname = (respectful_parse_uncurry_uncurry<90457>stackfun (( dquote:keep-dquote<14987>varname, escape:keep-escape<14994>varname, quote:keep-quote<14980>varname), ( current:"", mode:skipping<15002>varname, parsed:Empty<80385>varname), a<90304>varname));
      _vI92286_state = respectful_parse_uncurry_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107724(_art107723(/*VR_int*/1, /*VR_int*/1, /*VR_int*/1), _art107719(::std::string(""), /*VR_int*/1, (void* /*VR_nullptr*/ )0), _vI90304_a)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 679, cols 11 to 20
      //respectful_split'2_mv_2356<92285> := apply((prj1:record(current:(string),mode:(mode_t),parsed:(list)) -> mode_t), state<92286>varname);
      _vI92285_respectful_split__apos_2_mv_2356  = _vI92286_state.mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
/*match case 1:|skipping*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      if(!(_vI92285_respectful_split__apos_2_mv_2356%7==1) ) goto _ml2358_L92287;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      goto _em2356_L92288;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
    _ml2358_L92287:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 12 to 54
      //apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92286>varname) = (+<80787>stackfun (apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92286>varname), apply((prj0:record(current:(string),mode:(mode_t),parsed:(list)) -> string), state<92286>varname)));
      _vI92286_state.parsed = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI92286_state.parsed, _vI92286_state.current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 682, cols 5 to 14
    _em2356_L92288:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 561, cols 29 to 67
      //(deref<80855>primfun[list] apply((prj3:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg_uncurry<90327>varname)) = apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92286>varname);
      *(&cfg_uncurry->FLX_LIB_DIRS)  = _vI92286_state.parsed; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 561, cols 11 to 24
    _ml2969_L90318:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 562, cols 11 to 24
/*match case 11:"FLX_RTL_DIRS"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 562, cols 11 to 24
      if(!((::std::string("FLX_RTL_DIRS") == _vI90281_process_config_text__apos_2_mv_2958)) ) goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/strings.fdoc: line 677, cols 5 to 6
      //state<92297>varname = (respectful_parse_uncurry_uncurry<90457>stackfun (( dquote:keep-dquote<14987>varname, escape:keep-escape<14994>varname, quote:keep-quote<14980>varname), ( current:"", mode:skipping<15002>varname, parsed:Empty<80385>varname), a<90304>varname));
      _vI92297_state = respectful_parse_uncurry_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107724(_art107723(/*VR_int*/1, /*VR_int*/1, /*VR_int*/1), _art107719(::std::string(""), /*VR_int*/1, (void* /*VR_nullptr*/ )0), _vI90304_a)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 679, cols 11 to 20
      //respectful_split'2_mv_2356<92296> := apply((prj1:record(current:(string),mode:(mode_t),parsed:(list)) -> mode_t), state<92297>varname);
      _vI92296_respectful_split__apos_2_mv_2356  = _vI92297_state.mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
/*match case 1:|skipping*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      if(!(_vI92296_respectful_split__apos_2_mv_2356%7==1) ) goto _ml2358_L92298;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
      goto _em2356_L92299;
    // # C:/projects/felix/src/packages/strings.fdoc: line 680, cols 7 to 15
    _ml2358_L92298:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 7 to 7
/*match case 2:any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 681, cols 12 to 54
      //apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92297>varname) = (+<80787>stackfun (apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92297>varname), apply((prj0:record(current:(string),mode:(mode_t),parsed:(list)) -> string), state<92297>varname)));
      _vI92297_state.parsed = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI92297_state.parsed, _vI92297_state.current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 682, cols 5 to 14
    _em2356_L92299:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 562, cols 29 to 66
      //(deref<80855>primfun[list] apply((prj6:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), cfg_uncurry<90327>varname)) = apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state<92297>varname);
      *(&cfg_uncurry->FLX_RTL_DIRS)  = _vI92297_state.parsed; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 563, cols 11 to 11
/*match case 12:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 537, cols 9 to 34
    _ml2957_L90321:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 565, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 565, cols 9 to 13
      if(!(FLX_VNI(_vI90278_process_config_text__apos_2_mv_2955)==0) ) goto _ml2974_L90322;
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 565, cols 9 to 13
    _ml2974_L90322:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 566, cols 7 to 16
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 566, cols 7 to 16
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",566,7,566,16);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",566,7,566,16);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      goto continue__ll_flx_10017_L90306;
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
    _ml2954_L90324:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      if(!(FLX_VNI(_vI90275_process_config_text__apos_2_mv_2952)==0) ) goto _ml2976_L90325;
    // # C:/projects/felix/src/packages/flx.fdoc: line 568, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
    _ml2976_L90325:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 567, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",567,5,567,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",567,5,567,9);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 568, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//C FUNC <82509>: strfiletime
_a14239t_107672 strfiletime(FLX_APAR_DECL double _vI82510_x){
   ::flx::rtl::cl_t strfiletime0_mv_773;
   ::flx::rtl::cl_t strfiletime0_mv_768;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 301, cols 5 to 20
      {if(FLX_UNLIKELY(!(!((_vI82510_x == 0.0)) )))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",301,5,301,20);}
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 293, cols 10 to 24
      //strfiletime0_mv_768<98468> := (==<82539>primfun[double] (x<82510>varname, (neg<82781>primfun[double] literal[double]("1.0"))));
      strfiletime0_mv_768  = (_vI82510_x == - 1.0 ); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
      if(!(strfiletime0_mv_768%2==1) ) goto _ml770_L98467;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
      //return "BIG BANG";: type _a14239t_107672
      return ::std::string("BIG BANG");
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
    _ml770_L98467:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 294, cols 12 to 28
      //strfiletime0_mv_773<98470> := (==<82539>primfun[double] (x<82510>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));
      strfiletime0_mv_773  = (_vI82510_x == (static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
      if(!(strfiletime0_mv_773%2==1) ) goto _ml775_L98469;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
      //return "BIG CRUNCH";: type _a14239t_107672
      return ::std::string("BIG CRUNCH");
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
    _ml775_L98469:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 295, cols 7 to 32
      //return (fmt<80548>stackfun (x<82510>varname, (fixed<5838>struct (0, 3))));: type _a14239t_107672
      return fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI82510_x, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(0, 3))))) /* apply_stack */;
}
//------------------------------
//FUNCTION <66922>: toolchain_clang_osx::debug_flags: Apply method
void* _fI66922_debug_flags::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 148, cols 3 to 44
      //return (Snoc<80397>struct (Empty<80385>varname, "-g"));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-g"))));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1467,3,1467,49); // HACK! 
}

//------------------------------

//PROCEDURE <106716:> flx_processing::calpackages: Call method
void _pI106716_calpackages::stack_call(_pt107743* const &_arg){
  _vI106719_ehandler = _arg;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 3 to 67
      //str_mv_152<107069> := calpackages_run<106715>varname;
      _vI107069_str_mv_152  = ptrflx_processing->calpackages_run; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      if(!(_vI107069_str_mv_152%2==1) ) goto _ml154_L107070;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      //_urv96201<107068> := "true";
      _vI107068__urv96201  = ::std::string("true"); //init
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      goto _end_inline_str_96206_L107071;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
    _ml154_L107070:;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
/*match case 2:any*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      //_urv96201<107068> := "false";
      _vI107068__urv96201  = ::std::string("false"); //init
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 3 to 67
    _end_inline_str_96206_L107071:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_96219_L107074;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ("[flx:calpackages] Calculating package requirements (calpackages_run=", _urv96201<107068>varname)), ")")))), "\x0A")));
      {
      _a14239t_107672 _tmp109084 = (::std::string("[flx] ") + ((::std::string("[flx:calpackages] Calculating package requirements (calpackages_run=") + _vI107068__urv96201 ) + ::std::string(")") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109084)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2051, cols 5 to 109
    _end_96219_L107074:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2077, cols 5 to 9
      if(ptrflx_processing->calpackages_run) goto _ifdoelse_bootflx_65848_L106721;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2053, cols 7 to 43
      //tc<106717>varname = apply(toolchain<68911>varname, dflt_clang_config<106705>varname);
      _vI106717_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(ptrflx_processing->_vI106705_dflt_clang_config) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2068, cols 7 to 9
      //x<106718>varname = (map_package_requirements_uncurry<89465>stackfun (ehandler<106719>varname, ( DLINK_STRINGS:apply((prj16:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), EXTRA_PACKAGES:apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), EXT_DYNAMIC_OBJ:apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<106717>varname), ()), EXT_EXE:apply(apply((prj15:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<106717>varname), ()), EXT_STATIC_OBJ:apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<106717>varname), ()), FLX_CONFIG_DIRS:apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), FLX_TARGET_DIR:apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), LINKER_SWITCHES:apply((prj42:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), LINKEXE:apply((prj43:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), SLINK_STRINGS:apply((prj62:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), STATIC:apply((prj64:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), cpp_filebase:apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname))));
      _vI106718_x = map_package_requirements_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt108152(_vI106719_ehandler, _art108151(ptrflx_processing->_vI107004_control.DLINK_STRINGS, ptrflx_processing->_vI107004_control.pkgs, (_vI106717_tc.dynamic_object_extension)->clone()
      ->apply() /* general apply */, (_vI106717_tc.executable_extension)->clone()
      ->apply() /* general apply */, (_vI106717_tc.static_object_extension)->clone()
      ->apply() /* general apply */, (*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (*ptrflx_processing->_vI68947_config ).FLX_TARGET_DIR, ptrflx_processing->_vI107004_control.LINKER_SWITCHES, ptrflx_processing->_vI107004_control.LINKEXE, ptrflx_processing->_vI107004_control.SLINK_STRINGS, ptrflx_processing->_vI107004_control.STATIC, ptrflx_processing->dvars.cpp_filebase))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2070, cols 7 to 50
      //apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname) = (join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), apply((prj0:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> list), x<106718>varname)));
      ptrflx_processing->_vI107004_control.CCFLAGS = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.CCFLAGS, _vI106718_x.CFLAGS)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2071, cols 7 to 51
      //apply((prj24:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname) = apply((prj3:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> list), x<106718>varname);
      ptrflx_processing->_vI107004_control.EXTRA_INCLUDE_FILES = _vI106718_x.INCLUDE_FILES; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2072, cols 7 to 39
      //apply((prj18:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname) = apply((prj1:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> string), x<106718>varname);
      ptrflx_processing->_vI107004_control.DRIVER_EXE = _vI106718_x.DRIVER_EXE; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2073, cols 7 to 41
      //apply((prj19:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname) = apply((prj2:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> list), x<106718>varname);
      ptrflx_processing->_vI107004_control.DRIVER_OBJS = _vI106718_x.DRIVER_OBJS; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2074, cols 7 to 43
      //apply((prj45:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname) = apply((prj4:record(CFLAGS:(list),DRIVER_EXE:(string),DRIVER_OBJS:(list),INCLUDE_FILES:(list),LINK_STRINGS:(list)) -> list), x<106718>varname);
      ptrflx_processing->_vI107004_control.LINK_STRINGS = _vI106718_x.LINK_STRINGS; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2076, cols 7 to 28
      //calpackages_run<106715>varname = (case 1 of bool);
      ptrflx_processing->calpackages_run = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/flx.fdoc: line 2077, cols 5 to 9
    _ifdoelse_bootflx_65848_L106721:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      return; // proc return from stackable 

}
//------------------------------
//FUNCTION <105539>: FlxPkgConfigQuery::getclosure::getclosure'2::aux_uncurry: Apply method
void* _fI105539_aux_uncurry::apply(_at107697 const &_arg ){
  _vI105540_x_uncurry = _arg.data[0];
  _vI105541_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L105548:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<105544> := x_uncurry<105540>varname;
      _vI105544_aux__apos_2_mv_1387  = _vI105540_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI105544_aux__apos_2_mv_1387)==0) ) goto _ml1389_L105543;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<105541>varname;: type void*
      return _vI105541_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L105543:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105544_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI105547__lam_1391)(FLX_FPAR_PASS this, ptr_fI68415_getclosure__apos_2, ptrgetclosure, ptrFlxPkgConfigQuery))) ) goto _ml1390_L105542;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<105545>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<105544>varname));
      _vI105545_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI105544_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<105546>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<105544>varname));
      _vI105546_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI105544_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<105541> := (Snoc<80397>struct (y<105541>varname, h_param_std_1269<105545>varname));
      _vI105541_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105541_y, _vI105545_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<105540> := t_param_std_1268<105546>varname;
      _vI105540_x_uncurry  = _vI105546_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L105548;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L105542:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <97190>: flx_pkgconfig::handle_pkg::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI97190__lam_1457::apply(_a14239t_107672 const &_arg ){
  _vI97191_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<81159>stackfun (x<97191>varname, pkg<68708>varname));: type  ::flx::rtl::cl_t
      return eq(_vI97191_x, ptrhandle_pkg->_vI68708_pkg);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <66521>: toolchain_gcc_linux::dynamic_object_extension: Apply method
_a14239t_107672 _fI66521_dynamic_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 739, cols 3 to 57
      //return "_dynamic.o";: type _a14239t_107672
      return ::std::string("_dynamic.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",739,3,739,57); // HACK! 
}

//------------------------------
//FUNCTION <96898>: flx_pkgconfig::lexstr::aux_uncurry: Apply method
void* _fI96898_aux_uncurry::apply(_at107697 const &_arg ){
  _vI96899_x_uncurry = _arg.data[0];
  _vI96900_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L96907:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<96903> := x_uncurry<96899>varname;
      _vI96903_aux__apos_2_mv_1387  = _vI96899_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI96903_aux__apos_2_mv_1387)==0) ) goto _ml1389_L96902;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<96900>varname;: type void*
      return _vI96900_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L96902:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI96903_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI96906__lam_1391)(FLX_FPAR_PASS this, ptrlexstr, ptrflx_pkgconfig))) ) goto _ml1390_L96901;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<96904>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<96903>varname));
      _vI96904_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI96903_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<96905>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<96903>varname));
      _vI96905_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI96903_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<96900> := (Snoc<80397>struct (y<96900>varname, h_param_std_1269<96904>varname));
      _vI96900_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96900_y, _vI96904_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<96899> := t_param_std_1268<96905>varname;
      _vI96899_x_uncurry  = _vI96905_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L96907;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L96901:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <96259>: list_eq::_lam_1560: Apply method
 ::flx::rtl::cl_t _lam_1560::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 7 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",640,7,640,17); // HACK! 
}

//------------------------------
//FUNCTION <66570>: toolchain_gcc_linux::static_library_linker: Apply method
int _fI66570_static_library_linker::apply(_art107763 const &_arg ){
  _vI66573_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 884, cols 5 to 6
      //result<66572>varname = (generic_static_library_uncurry<89475>stackfun (( CCFLAGS:(Snoc<80397>struct (Empty<80385>varname, "-rcs")), CCLINK_STATIC_LIB:"ar", SPEC_LIB_FILENAME:"", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66573>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66573>varname)));
      _vI66572_result = generic_static_library_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107809(_art107808(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-rcs")))), ::std::string("ar"), ::std::string(""), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66573_spec.srcs, _vI66573_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 885, cols 5 to 18
      //return result<66572>varname;: type int
      return _vI66572_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",886,3,886,4); // HACK! 
}

//------------------------------
//FUNCTION <106602>: flx_processing::run_program_dynamic::aux_uncurry: Apply method
void* _fI106602_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106603_inp_uncurry = _arg.data[0];
  _vI106604_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L106611:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<106607> := inp_uncurry<106603>varname;
      _vI106607_aux__apos_2_mv_1381  = _vI106603_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI106607_aux__apos_2_mv_1381)==0) ) goto _ml1383_L106606;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<106604>varname;: type void*
      return _vI106604_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L106606:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI106607_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI106610__lam_1385)(FLX_FPAR_PASS this, ptrrun_program_dynamic, ptrflx_processing))) ) goto _ml1384_L106605;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<106608>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<106607>varname));
      _vI106608_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI106607_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<106609>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<106607>varname));
      _vI106609_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI106607_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<106604> := (Snoc<80397>struct (out<106604>varname, (quote_arg<16873>stackfun h_param_std_1267<106608>varname)));
      _vI106604_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106604_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI106608_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<106603> := t_param_std_1266<106609>varname;
      _vI106603_inp_uncurry  = _vI106609_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L106611;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L106605:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <89126>: +: Apply method
void* _fI89126___plus_::apply(_tt107856 const &_arg ){
  _vI89192_x = _arg.mem_0;
  _vI89193_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<103197>stackfun ((Snoc<81403>struct ((aux_uncurry<103184>stackfun (x<89192>varname, Empty<81156>varname)), y<89193>varname)), Empty<81156>varname));: type void*
      return _fI103197_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107867(FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(_fI103184_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107867(_vI89192_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */, _vI89193_y))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",419,3,419,69); // HACK! 
}

//------------------------------
//FUNCTION <93403>: generic_cxx_gen_deps_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93403__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66610>: toolchain_gcc_osx::static_object_extension: Apply method
_a14239t_107672 _fI66610_static_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 973, cols 3 to 55
      //return "_static.o";: type _a14239t_107672
      return ::std::string("_static.o");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",973,3,973,55); // HACK! 
}

//------------------------------
//FUNCTION <106323>: flx_processing::cxx_compile_static::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI106323__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <99164>: cxx_depcheck::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI99164__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <97789>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI97789_aux::apply(_tt107698 const &_arg ){
  _vI97790_x = _arg.mem_0;
  _vI97791_y = _arg.mem_1;
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
    start_97483_L97801:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 62 to 85
      //find_first_of_mv_2155<97796> := (stl_find_first_of<14558>primfun (x<97790>varname, literal[cstring](" \x0A\x0D\x09,")));
      find_first_of_mv_2155  = _vI97790_x.find_first_of((" \n\x0D\x09,")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 94 to 113
/*match case 1:(i_param_std_1912 when (== (i_param_std_1912, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 94 to 113
      if(!((find_first_of_mv_2155 == ::std::string::npos)) ) goto _ml2157_L97798;
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 56 to 141
      //aux_mv_2296<97792> := None<81378>varname;
      aux_mv_2296  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 56 to 141
      goto _end_inline_find_first_of_97454_L97799;
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 94 to 113
    _ml2157_L97798:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 131 to 131
/*match case 2:i_param_std_1913*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 131 to 131
      //i_param_std_1913<97797>varname = find_first_of_mv_2155<97796>varname;
      i_param_std_1913 = find_first_of_mv_2155; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 56 to 141
      //aux_mv_2296<97792> := (Some<81379>struct i_param_std_1913<97797>varname);
      aux_mv_2296  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (i_param_std_1913)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 305, cols 3 to 151
    _end_inline_find_first_of_97454_L97799:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 501, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 501, cols 9 to 13
      if(!(FLX_VNI(aux_mv_2296)==0) ) goto _ml2298_L97794;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<80397>struct (y<97791>varname, x<97790>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97791_y, _vI97790_x)));
    // # C:/projects/felix/src/packages/strings.fdoc: line 501, cols 9 to 13
    _ml2298_L97794:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 9 to 14
/*match case 2:|Some n_param_std_1972*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 9 to 14
      if(!andthen(FLX_VNI(aux_mv_2296)==1, (FLX_NEWP(_lam_2300)(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml2299_L97795;
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 14 to 14
      //n_param_std_1972<97793>varname = (arg of case 1 of aux_mv_2296<97792>varname);
      n_param_std_1972 = *((_a5094t_107688*)FLX_VNP(aux_mv_2296)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
      //y<97791> := (Snoc<80397>struct (y<97791>varname, (copyto<81376>primfun[size] (x<97790>varname, n_param_std_1972<97793>varname))));
      _vI97791_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97791_y, ::flx::rtl::strutil::substr(_vI97790_x,0,n_param_std_1972)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
      //x<97790> := (copyfrom<81377>primfun[size] (x<97790>varname, (+<80900>primfun[size] (n_param_std_1972<97793>varname, literal[size]("1")))));
      _vI97790_x  = ::flx::rtl::strutil::substr(_vI97790_x,n_param_std_1972 + 1 ,_vI97790_x.size()); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 504, cols 5 to 6
      goto start_97483_L97801;
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 9 to 14
    _ml2299_L97795:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 7 to 61
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 7 to 61
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",502,7,502,61);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",502,7,502,61);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",504,5,504,6); // HACK! 
}

//------------------------------
//FUNCTION <105393>: FlxPkgConfigQuery::getpkgfield::getpkgfield'2::_lam_65346: Apply method
 ::flx::rtl::cl_t _lam_65346::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",495,9,495,13); // HACK! 
}

//------------------------------
//FUNCTION <93127>: toolchain_msvc_win32::dynamic_executable_linker::iterator'2: Apply method
void* _fI93127_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L93128:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<93132> := xs<93126>varname;
      _vI93132_iterator__apos_2_mv_1563  = ptrdynamic_executable_linker->_vI93126_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI93132_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI93135__lam_1566)(FLX_FPAR_PASS this, ptrdynamic_executable_linker, ptrtoolchain_msvc_win32))) ) goto _ml1565_L93131;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<93133>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<93132>varname));
      _vI93133_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI93132_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<93134>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<93132>varname));
      _vI93134_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI93132_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<93126>varname = t_param_std_1318<93134>varname;
      ptrdynamic_executable_linker->_vI93126_xs = _vI93134_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(109089)
      //yield (Some<80915>struct h_param_std_1319<93133>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI93133_h_param_std_1319));//yield
    FLX_CASE_LABEL(109089)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L93128;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L93131:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI93132_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L93130;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L93130:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L93128;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <94016>: generic_link_exe_dynamic_uncurry::aux_uncurry: Apply method
void* _fI94016_aux_uncurry::apply(_at107697 const &_arg ){
  _vI94017_inp_uncurry = _arg.data[0];
  _vI94018_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L94025:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<94021> := inp_uncurry<94017>varname;
      _vI94021_aux__apos_2_mv_1381  = _vI94017_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI94021_aux__apos_2_mv_1381)==0) ) goto _ml1383_L94020;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<94018>varname;: type void*
      return _vI94018_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L94020:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI94021_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI94024__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_link_exe_dynamic_uncurry))) ) goto _ml1384_L94019;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<94022>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<94021>varname));
      _vI94022_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI94021_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<94023>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<94021>varname));
      _vI94023_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI94021_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<94018> := (Snoc<80397>struct (out<94018>varname, (quote_arg<16873>stackfun h_param_std_1267<94022>varname)));
      _vI94018_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94018_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI94022_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<94017> := t_param_std_1266<94023>varname;
      _vI94017_inp_uncurry  = _vI94023_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L94025;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L94019:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <68324>: FlxPkgConfigQuery: Apply method
_art107753 FlxPkgConfigQuery::apply(void* const &_arg ){
  path = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 560, cols 3 to 4
      //FlxPkgConfigQuery_mv_65326<105553> := path<68424>varname;
      FlxPkgConfigQuery_mv_65326  = path; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 469, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 469, cols 9 to 14
      if(!(FLX_VNI(FlxPkgConfigQuery_mv_65326)==0) ) goto _ml65328_L105556;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 7 to 44
      //_urv105552<105552> := Empty<80385>varname;
      _urv105552  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 7 to 44
      goto _end_hash_702709440;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 469, cols 9 to 14
    _ml65328_L105556:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 470, cols 9 to 18
/*match case 2:|Cons (h_param_bootflx_65309, t_param_bootflx_65310)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 470, cols 9 to 18
      if(!andthen(!!FlxPkgConfigQuery_mv_65326 , (FLX_NEWP(_lam_65337)(FLX_FPAR_PASS this))) ) goto _ml65329_L105557;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 470, cols 17 to 17
      //t_param_bootflx_65310<105554>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] FlxPkgConfigQuery_mv_65326<105553>varname));
      t_param_bootflx_65310 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(FlxPkgConfigQuery_mv_65326))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 470, cols 15 to 15
      //h_param_bootflx_65309<105555>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] FlxPkgConfigQuery_mv_65326<105553>varname));
      h_param_bootflx_65309 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(FlxPkgConfigQuery_mv_65326))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 9 to 44
      //_urv105552<105552> := (Snoc<80397>struct ((aux_uncurry<105559>stackfun (t_param_bootflx_65310<105554>varname, Empty<80385>varname)), (+<14305>primfun ("--path=", h_param_bootflx_65309<105555>varname))));
      _urv105552  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI105559_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(t_param_bootflx_65310, (void* /*VR_nullptr*/ )0)) /* apply_stack */, ::std::string("--path=") + h_param_bootflx_65309 ))); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 9 to 44
      goto _end_hash_702709440;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 470, cols 9 to 18
    _ml65329_L105557:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 7 to 44
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 7 to 44
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",478,7,478,44);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",478,7,478,44);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 478, cols 7 to 44
    _end_hash_702709440:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 479, cols 5 to 6
      //paths<68346>varname = _urv105552<105552>varname;
      paths = _urv105552; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 560, cols 3 to 4
      //FlxPkgConfigQuery_mv_65338<65338> := path<68424>varname;
      FlxPkgConfigQuery_mv_65338  = path; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 480, cols 23 to 28
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 480, cols 23 to 28
      if(!(FLX_VNI(FlxPkgConfigQuery_mv_65338)==0) ) goto _em65338_L68427;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 480, cols 33 to 45
      {if(FLX_UNLIKELY(!(0)))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",480,33,480,45);}
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 480, cols 23 to 28
      goto _em65338_L68427;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 480, cols 49 to 49
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 480, cols 5 to 64
    _em65338_L68427:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 560, cols 3 to 4
      //return ( getclosure:getclosure<68413>closure, getpkgfield:getpkgfield<68350>closure, getpkgfield1:getpkgfield1<68371>closure, getpkgfielddflt:getpkgfielddflt<68401>closure, getpkgfieldopt:getpkgfieldopt<68386>closure, query:query<68347>closure);: type _art107753
      return _art107753((FLX_NEWP(getclosure)(FLX_FPAR_PASS this)), (FLX_NEWP(getpkgfield)(FLX_FPAR_PASS this)), (FLX_NEWP(getpkgfield1)(FLX_FPAR_PASS this)), (FLX_NEWP(getpkgfielddflt)(FLX_FPAR_PASS this)), (FLX_NEWP(getpkgfieldopt)(FLX_FPAR_PASS this)), (FLX_NEWP(query)(FLX_FPAR_PASS this)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",560,3,560,4); // HACK! 
}

//------------------------------
//FUNCTION <68960>: runflx: Apply method
int runflx::apply(void* const &_arg ){
  _vI68965_args = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<91115>varname = (aux_uncurry<91116>stackfun (args<68965>varname, Empty<80385>varname));
      _vI91115_r = _fI91116_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI68965_args, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<91115>ref;
      {
      void** _tmp109093 = (void**)&_vI91115_r;
      _rev(((_tmp109093)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("[bootflx] ", (cat_uncurry<89509>stackfun (" ", r<91115>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109094 = (::std::string("[bootflx] ") + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI91115_r)) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109094)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3316, cols 5 to 37
      //config<68962>varname = (std_config<17507>stackfun ());
      _vI68962_config = std_config(FLX_FPAR_PASS_ONLY); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 28 to 56
      //dflt_control_mv_65414<92476> := (getenv<80578>primfun[Win32] "FLX_BUNDLE_DIR");
      dflt_control_mv_65414  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_BUNDLE_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 65 to 66
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 65 to 66
      if(!((::std::string("") == dflt_control_mv_65414)) ) goto _ml65416_L92478;
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 22 to 100
      //_urv92463<92475> := None<80917>varname;
      _urv92463  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 22 to 100
      goto _end_hash_628737705;
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 65 to 66
    _ml65416_L92478:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 86 to 88
/*match case 2:dir_param_bootflx_65412*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 86 to 88
      //dir_param_bootflx_65412<92477>varname = dflt_control_mv_65414<92476>varname;
      dir_param_bootflx_65412 = dflt_control_mv_65414; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 22 to 100
      //_urv92463<92475> := (Some<80915>struct dir_param_bootflx_65412<92477>varname);
      _urv92463  = FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (dir_param_bootflx_65412)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 22 to 100
    _end_hash_628737705:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3317, cols 5 to 44
      //control<68963>varname = ( AUTOMATON:"", BUNDLE_DIR:_urv92463<92475>varname, CCFLAGS:Empty<80385>varname, CCOMPILEIT:1, CHECK_DEPENDENCIES:1, CHECK_EXPECT:0, CLEAR_CACHE:0, CMDLINE_INPUT:(case 0 of bool), COMPILER_PHASE:"", COMPILER_TIME:0, CXXONLY:0, CXX_INTERFACE_FILENAME:"", DEBUG:0, DEBUG_COMPILER:0, DEBUG_FLX:(case 0 of bool), DIST_ROOT:"", DLINK_STRINGS:Empty<80385>varname, DOREDUCE:1, DRIVER_EXE:"", DRIVER_OBJS:Empty<80385>varname, ECHO:0, EXPECT:"", EXTRA_CCFLAGS:Empty<80385>varname, EXTRA_INCLUDE_DIRS:Empty<80385>varname, EXTRA_INCLUDE_FILES:Empty<80385>varname, EXTRA_PACKAGES:Empty<80385>varname, FELIX:1, FLXG:"", FLXG_FORCE:0, FLXG_OPTIMISE:0, FLXRUN:Empty<80385>varname, FLX_INSTALL_DIR:"", FLX_INTERFACE_FILENAME:"", FLX_STD_LIBS:Empty<80385>varname, FLX_TARGET_SUBDIR:"", FLX_TOOLCHAIN:"", GRAMMAR_DIR:"", IMPORTS:Empty<80385>varname, INDIR:"", INLINE:25, INREGEX:"", LINKER_OUTPUT_FILENAME:"", LINKER_SWITCHES:Empty<80385>varname, LINKEXE:0, LINKIT:1, LINK_STRINGS:Empty<80385>varname, MACROS:Empty<80385>varname, NONSTOP:0, NOOPTIMISE:0, NOSTDLIB:0, OCAMLONLY:0, OPTIMISE:(Snoc<80397>struct (Empty<80385>varname, "-O1")), OUTPUT_DIRECTORY_SPECIFIED:0, OUTPUT_FILENAME_SPECIFIED:0, OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:0, PRINT_HELP:0, RECOMPILE:0, REPL_MODE:(case 0 of bool), RUNIT:1, RUNONLY:0, SET_STDIN:0, SHOWCODE:0, SLINK_STRINGS:Empty<80385>varname, STANDARD_INCLUDE_FILES:Empty<80385>varname, STATIC:0, STATICLIB:0, STDGRAMMAR:"", STDIMPORT:"plat/flx.flxh", STDIN:"", STDOUT:"", TIME:0, TIMECMD:"time -p", USAGE:"production", USER_ARGS:Empty<80385>varname, VALIDATE_CACHE:1, cache_time:literal[double]("0.0"), cppos:Empty<80385>varname, cpps:Empty<80385>varname, extra_pkgs:Empty<80385>varname, ocamls:Empty<80385>varname, pkgs:Empty<80385>varname);
      _vI68963_control = _art107702(::std::string(""), _urv92463, (void* /*VR_nullptr*/ )0, 1, 1, 0, 0, 0, ::std::string(""), 0, 0, ::std::string(""), 0, 0, 0, ::std::string(""), (void* /*VR_nullptr*/ )0, 1, ::std::string(""), (void* /*VR_nullptr*/ )0, 0, ::std::string(""), (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, 1, ::std::string(""), 0, 0, (void* /*VR_nullptr*/ )0, ::std::string(""), ::std::string(""), (void* /*VR_nullptr*/ )0, ::std::string(""), ::std::string(""), ::std::string(""), (void* /*VR_nullptr*/ )0, ::std::string(""), 25, ::std::string(""), ::std::string(""), (void* /*VR_nullptr*/ )0, 0, 1, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, 0, 0, 0, 0, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-O1")))), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, 0, 0, ::std::string(""), ::std::string("plat/flx.flxh"), ::std::string(""), ::std::string(""), 0, ::std::string("time -p"), ::std::string("production"), (void* /*VR_nullptr*/ )0, 1, 0.0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3318, cols 5 to 44
      //loopctl<68964>varname = ( argno:1, base:"", dir:"", ext:"", grab:1, path:"", progname:"");
      _vI68964_loopctl = _art107703(1, ::std::string(""), ::std::string(""), ::std::string(""), 1, ::std::string(""), ::std::string("")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3319, cols 5 to 61
      //return (flx_processing<68887>stackfun (&config<68962>ref, &control<68963>ref, &loopctl<68964>ref, args<68965>varname));: type int
      return flx_processing(FLX_FPAR_PASS_ONLY)
      .apply(_tt107707((_art107699*)&_vI68962_config, (_art107702*)&_vI68963_control, (_art107703*)&_vI68964_loopctl, _vI68965_args)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",3320,3,3320,4); // HACK! 
}

//------------------------------
//C FUNC <85777>: filetype
int filetype(_a14239t_107672 _vI85778_f){
   ::flx::rtl::cl_t filetype_mv_763;
   ::flx::rtl::cl_t filetype_mv_758;
   ::flx::rtl::cl_t filetype_mv_753;
  int _vI85780_err;
  _a16948t_107830 _vI85779_b;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 278, cols 5 to 20
      // primcall stat<16970>primproc (f<85778>varname, &b<85779>ref, &err<85780>ref);
      {
      _a16948t_107830* _tmp109095 = (_a16948t_107830*)&_vI85779_b;
      int* _tmp109096 = (int*)&_vI85780_err;
      *((_tmp109096))=_stat64(_vI85778_f.c_str(),((_tmp109095)));
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 280, cols 10 to 17
      //filetype_mv_753<95137> := (==<80201>primfun[int] (err<85780>varname, 0));
      filetype_mv_753  = (_vI85780_err == 0); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
      if(!(filetype_mv_753%2==1) ) goto _ml755_L95136;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
      //return (file_type<16974>stackfun &b<85779>ref);: type int
      return file_type((_a16948t_107830*)&_vI85779_b);
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
    _ml755_L95136:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 281, cols 12 to 26
      //filetype_mv_758<95139> := (==<16068>primfun (errno<16069>varname, EACCES<16071>varname));
      filetype_mv_758  = (errno == (EACCES)); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
      if(!(filetype_mv_758%2==1) ) goto _ml760_L95138;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
      //return NOPERMISSION<85829>varname;: type int
      return /*VR_int*/9;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
    _ml760_L95138:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 282, cols 12 to 26
      //filetype_mv_763<95141> := (==<16068>primfun (errno<16069>varname, ENOENT<16072>varname));
      filetype_mv_763  = (errno == (ENOENT)); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
      if(!(filetype_mv_763%2==1) ) goto _ml765_L95140;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
      //return NONEXISTANT<85854>varname;: type int
      return /*VR_int*/8;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
    _ml765_L95140:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 283, cols 7 to 25
      //return INDETERMINATE<85855>varname;: type int
      return /*VR_int*/7;
}
//------------------------------

//PROCEDURE <68642:> flx_pkgconfig::keep_val: Call method
::flx::rtl::con_t * keep_val::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI68644_v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <68642:> flx_pkgconfig::keep_val: Resume method
::flx::rtl::con_t *keep_val::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 283, cols 7 to 25
      //result<68598>varname = (+<80787>stackfun (result<68598>varname, v<68644>varname));
      ptrflx_pkgconfig->_vI68598_result = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_pkgconfig->_vI68598_result, _vI68644_v)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 284, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <95759>: str::_lam_1578: Apply method
_ft107734* _lam_1578::apply(_a14239t_107672 const &_arg ){
  _vI95760_a = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 706, cols 13 to 62
      //return _lam_1578'2<95761>closure;: type _ft107734*
      return (FLX_NEWP(_fI95761__lam_1578__apos_2)(FLX_FPAR_PASS this, ptrstr));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",706,13,706,62); // HACK! 
}

//------------------------------
//FUNCTION <107486>: flx_processing::check_binary_uptodate::aux_uncurry: Apply method
double _fI107486_aux_uncurry::apply(_tt108078 const &_arg ){
  _vI107487_init_uncurry = _arg.mem_0;
  _vI107488_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_98507_L107495:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<107491> := x<107488>varname;
      _vI107491_aux__apos_2_mv_1356  = _vI107488_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI107491_aux__apos_2_mv_1356)==0) ) goto _ml1358_L107490;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<107487>varname;: type double
      return _vI107487_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L107490:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI107491_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI107494__lam_1360)(FLX_FPAR_PASS this, ptr_fI106915_check_binary_uptodate, ptrflx_processing))) ) goto _ml1359_L107489;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<107492>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<107491>varname));
      _vI107492_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI107491_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<107493>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<107491>varname));
      _vI107493_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI107491_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<107488> := t_param_std_1258<107493>varname;
      _vI107488_x  = _vI107493_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<107487> := apply((maxf<106916>flxfun init_uncurry<107487>varname), h_param_std_1259<107492>varname);
      _vI107487_init_uncurry  = ((FLX_NEWP(_fI106916_maxf)(FLX_FPAR_PASS ptr_fI106915_check_binary_uptodate, ptrflx_processing))
      ->apply(_vI107487_init_uncurry))->clone()
      ->apply(_vI107492_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_98507_L107495;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L107489:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <96956>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::search_and_replace'2: Apply method
_a14239t_107672 _fI96956_search_and_replace__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI96960_v = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<96968> := variables<68648>varname;
      _vI96968_xs  = ptrhandle_pkg->variables; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv96915<96967> := iterator'2<96969>closure;
      _genout_urv96915  = (FLX_NEWP(_fI96969_iterator__apos_2)(FLX_FPAR_PASS this, ptr_lam_65288, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //_generator_strings_7556<96957>varname = _genout_urv96915<96967>varname;
      _vI96957__generator_strings_7556 = _genout_urv96915; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    continue__ll_strings_7551_L96961:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //search_and_replace'2_mv_2360<96955> := apply(_generator_strings_7556<96957>varname, ());
      _vI96955_search_and_replace__apos_2_mv_2360  = (_vI96957__generator_strings_7556)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 1:|Some (k_param_std_2017, b_param_std_2018)*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!andthen(FLX_VNI(_vI96955_search_and_replace__apos_2_mv_2360)==1, (FLX_NEWP(_fI96978__lam_2363)(FLX_FPAR_PASS this, ptr_lam_65288, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml2362_L96962;
    // # C:/projects/felix/src/packages/strings.fdoc: line 738, cols 13 to 13
      //b_param_std_2018<96958>varname = apply((prj1:string^2 -> string), (arg of case 1 of search_and_replace'2_mv_2360<96955>varname));
      _vI96958_b_param_std_2018 = ((*((_at107674*)FLX_VNP(_vI96955_search_and_replace__apos_2_mv_2360))).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 738, cols 11 to 11
      //k_param_std_2017<96959>varname = apply((prj0:string^2 -> string), (arg of case 1 of search_and_replace'2_mv_2360<96955>varname));
      _vI96959_k_param_std_2017 = ((*((_at107674*)FLX_VNP(_vI96955_search_and_replace__apos_2_mv_2360))).data)[0]; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 734, cols 3 to 4
      //spos<96982> := literal[size]("0");
      _vI96982_spos  = 0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 724, cols 5 to 18
      //m<96979>varname = (len<14304>primfun k_param_std_2017<96959>varname);
      _vI96979_m = _vI96959_k_param_std_2017.size(); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 725, cols 5 to 24
      //o<96980>varname = (copyto<81376>primfun[size] (v<96960>varname, spos<96982>varname));
      _vI96980_o = ::flx::rtl::strutil::substr(_vI96960_v,0,_vI96982_spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 726, cols 5 to 32
      //n<96981>varname = (stl_find<14443>primfun (v<96960>varname, k_param_std_2017<96959>varname, spos<96982>varname));
      _vI96981_n = _vI96960_v.find(_vI96959_k_param_std_2017,_vI96982_spos); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    continue__ll_strings_7537_L96983:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      if(FLX_UNLIKELY(!(!((_vI96981_n == ::std::string::npos)) ) )) goto break__ll_strings_7537_L96984;
    // # C:/projects/felix/src/packages/strings.fdoc: line 728, cols 7 to 24
      // primcall +=<14301>primproc (&o<96980>ref, (+<14305>primfun ((substring<81415>primfun[size, size] (v<96960>varname, spos<96982>varname, n<96981>varname)), b_param_std_2018<96958>varname)));
      {
      _a14239t_107672* _tmp109098 = (_a14239t_107672*)&_vI96980_o;
      _a14239t_107672 _tmp109099 = ::flx::rtl::strutil::substr(_vI96960_v,_vI96982_spos,_vI96981_n) + _vI96958_b_param_std_2018 ;
      ((_tmp109098))->append((_tmp109099));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 729, cols 7 to 16
      //spos<96982>varname = (+<80900>primfun[size] (n<96981>varname, m<96979>varname));
      _vI96982_spos = _vI96981_n + _vI96979_m ; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 730, cols 7 to 34
      //n<96981>varname = (_ctor_size<5394>primfun (stl_find<14443>primfun (v<96960>varname, k_param_std_2017<96959>varname, spos<96982>varname)));
      _vI96981_n = ((_vI96960_v.find(_vI96959_k_param_std_2017,_vI96982_spos)))/*int.flx: ctor size IDENT*/; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
      goto continue__ll_strings_7537_L96983;
    // # C:/projects/felix/src/packages/strings.fdoc: line 731, cols 5 to 9
    break__ll_strings_7537_L96984:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 732, cols 5 to 18
      // primcall +=<14301>primproc (&o<96980>ref, (copyfrom<81377>primfun[size] (v<96960>varname, spos<96982>varname)));
      {
      _a14239t_107672* _tmp109100 = (_a14239t_107672*)&_vI96980_o;
      _a14239t_107672 _tmp109101 = ::flx::rtl::strutil::substr(_vI96960_v,_vI96982_spos,_vI96960_v.size());
      ((_tmp109100))->append((_tmp109101));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 739, cols 7 to 36
      //v<96960>varname = o<96980>varname;
      _vI96960_v = _vI96980_o; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto continue__ll_strings_7551_L96961;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2362_L96962:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 2:|Some any*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!andthen(FLX_VNI(_vI96955_search_and_replace__apos_2_mv_2360)==1, (FLX_NEWP(_fI96985__lam_2365)(FLX_FPAR_PASS this, ptr_lam_65288, ptr_lam_65277, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml2364_L96963;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto continue__ll_strings_7551_L96961;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2364_L96963:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match case 3:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      if(!(FLX_VNI(_vI96955_search_and_replace__apos_2_mv_2360)==0) ) goto _ml2366_L96964;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      goto _em2360_L96965;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _ml2366_L96964:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
    _em2360_L96965:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 741, cols 5 to 13
      //return v<96960>varname;: type _a14239t_107672
      return _vI96960_v;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",742,3,742,4); // HACK! 
}

//------------------------------
//FUNCTION <90972>: _init_::aux_uncurry: Apply method
void* aux_uncurry::apply(_tt107682 const &_arg ){
  inp_uncurry = _arg.mem_0;
  out = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_90935_L90981:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<90977> := inp_uncurry<90973>varname;
      _vI90977_aux__apos_2_mv_1381  = inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI90977_aux__apos_2_mv_1381)==0) ) goto _ml1383_L90976;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<90974>varname;: type void*
      return out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L90976:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI90977_aux__apos_2_mv_1381)==1, (FLX_NEWP(_lam_1385)(FLX_FPAR_PASS this, ptr_init_))) ) goto _ml1384_L90975;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<90978>varname = apply((prj1:list * int -> int), (arg of case 1 of aux'2_mv_1381<90977>varname));
      h_param_std_1267 = (*((_tt107680*)FLX_VNP(_vI90977_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<90979>varname = apply((prj0:list * int -> list), (arg of case 1 of aux'2_mv_1381<90977>varname));
      t_param_std_1266 = (*((_tt107680*)FLX_VNP(_vI90977_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<90974> := (Snoc<80397>struct (out<90974>varname, (_a90817_argv<90817>stackfun h_param_std_1267<90978>varname)));
      out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(out, _a90817_argv(FLX_FPAR_PASS h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<90973> := t_param_std_1266<90979>varname;
      inp_uncurry  = t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_90935_L90981;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L90975:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93657>: generic_cxx_compile_for_static_uncurry::aux_uncurry: Apply method
void* _fI93657_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93658_inp_uncurry = _arg.data[0];
  _vI93659_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93666:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93662> := inp_uncurry<93658>varname;
      _vI93662_aux__apos_2_mv_1381  = _vI93658_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93662_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93661;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93659>varname;: type void*
      return _vI93659_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93661:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93662_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93665__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_compile_for_static_uncurry))) ) goto _ml1384_L93660;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93663>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93662>varname));
      _vI93663_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93662_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93664>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93662>varname));
      _vI93664_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93662_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93659> := (Snoc<80397>struct (out<93659>varname, (mkmac<68179>stackfun h_param_std_1267<93663>varname)));
      _vI93659_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93659_out, mkmac(_vI93663_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93658> := t_param_std_1266<93664>varname;
      _vI93658_inp_uncurry  = _vI93664_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93666;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93660:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93456>: generic_cxx_gen_deps_uncurry::aux_uncurry: Apply method
void* _fI93456_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93457_inp_uncurry = _arg.data[0];
  _vI93458_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93465:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93461> := inp_uncurry<93457>varname;
      _vI93461_aux__apos_2_mv_1381  = _vI93457_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93461_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93460;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93458>varname;: type void*
      return _vI93458_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93460:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93461_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93464__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_gen_deps_uncurry))) ) goto _ml1384_L93459;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93462>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93461>varname));
      _vI93462_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93461_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93463>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93461>varname));
      _vI93463_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93461_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93458> := (Snoc<80397>struct (out<93458>varname, (quote_arg<16873>stackfun h_param_std_1267<93462>varname)));
      _vI93458_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93458_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI93462_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93457> := t_param_std_1266<93463>varname;
      _vI93457_inp_uncurry  = _vI93463_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93465;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93459:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66295>: toolchain_msvc_win32::static_object_extension: Apply method
_a14239t_107672 static_object_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1737, cols 3 to 57
      //return "_static.obj";: type _a14239t_107672
      return ::std::string("_static.obj");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1737,3,1737,57); // HACK! 
}

//------------------------------
//FUNCTION <66606>: toolchain_gcc_osx::dependency_extension: Apply method
_a14239t_107672 _fI66606_dependency_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 971, cols 3 to 45
      //return ".d";: type _a14239t_107672
      return ::std::string(".d");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",971,3,971,45); // HACK! 
}

//------------------------------
//FUNCTION <93936>: generic_link_exe_static_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93936__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <92070>: +::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI92070__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <96709>: search_and_replace_uncurry::_lam_2365: Apply method
 ::flx::rtl::cl_t _lam_2365::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 740, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",740,5,740,9); // HACK! 
}

//------------------------------
//FUNCTION <106523>: flx_processing::check_binary_uptodate::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI106523__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <66916>: toolchain_clang_osx::static_library_extension: Apply method
_a14239t_107672 _fI66916_static_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1464, cols 3 to 49
      //return ".a";: type _a14239t_107672
      return ::std::string(".a");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1464,3,1464,49); // HACK! 
}

//------------------------------
//FUNCTION <66588>: toolchain_gcc_osx: Apply method
_art107765 toolchain_gcc_osx::apply(_art107755 const &_arg ){
  _vI66677_config = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94310>varname = Empty<80385>varname;
      _vI94310_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 3)) ) goto _ifdoelse_std_1250_L94306;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94311>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84373>varname[3]), 1));
      _vI94311_i = (static_cast<int>(3)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94311>ref;
      {
      int* _tmp109106 = (int*)&_vI94311_i;
      ++*((_tmp109106));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94309:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94311_i)) )) goto _ifdoelse_std_1250_L94306;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94311>ref;
      {
      int* _tmp109107 = (int*)&_vI94311_i;
      --*((_tmp109107));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94310>varname = (Snoc<80397>struct (o<94310>varname, apply(aprj(i<94311>varname : 3), ("-w", "-Wfatal-errors", "-Wno-invalid-offsetof"))));
      _vI94310_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94310_o, (_at107767(::std::string("-w"), ::std::string("-Wfatal-errors"), ::std::string("-Wno-invalid-offsetof")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94311_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94309;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94306:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 952, cols 3 to 4
      //cxx_compile_warning_flags<66590>varname = o<94310>varname;
      _vI66590_cxx_compile_warning_flags = _vI94310_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94320>varname = Empty<80385>varname;
      _vI94320_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L94316;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94321>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI94321_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94321>ref;
      {
      int* _tmp109108 = (int*)&_vI94321_i;
      ++*((_tmp109108));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94319:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94321_i)) )) goto _ifdoelse_std_1250_L94316;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94321>ref;
      {
      int* _tmp109109 = (int*)&_vI94321_i;
      --*((_tmp109109));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94320>varname = (Snoc<80397>struct (o<94320>varname, apply(aprj(i<94321>varname : bool), ("-w", "-Wfatal-errors"))));
      _vI94320_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94320_o, (_at107674(::std::string("-w"), ::std::string("-Wfatal-errors")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94321_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94319;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94316:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 953, cols 3 to 68
      //c_compile_warning_flags<66591>varname = o<94320>varname;
      _vI66591_c_compile_warning_flags = _vI94320_o; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 954, cols 3 to 25
      //c_compiler<66592>varname = "gcc";
      _vI66592_c_compiler = ::std::string("gcc"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 955, cols 3 to 27
      //cxx_compiler<66593>varname = "g++";
      _vI66593_cxx_compiler = ::std::string("g++"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 956, cols 3 to 21
      //linker<66594>varname = "g++";
      _vI66594_linker = ::std::string("g++"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 957, cols 3 to 62
      //ccflags_for_dynamic_link<66595>varname = (Snoc<80397>struct (Empty<80385>varname, "-dynamiclib"));
      _vI66595_ccflags_for_dynamic_link = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-dynamiclib")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 961, cols 3 to 4
      //base_c_compile_flags<66596>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (c_compile_warning_flags<66591>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname))), "-fno-strict-aliasing")), "-fno-common")), "-O1")), "-c")), "-g"));
      _vI66596_base_c_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI66591_c_compile_warning_flags, _vI66677_config.ccflags)) /* apply_stack */, ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 964, cols 3 to 4
      //base_cxx_compile_flags<66597>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (cxx_compile_warning_flags<66590>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname))), "-fno-strict-aliasing")), "-fno-common")), "-std=c++11")), "-O1")), "-c")), "-g"));
      _vI66597_base_cxx_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI66590_cxx_compile_warning_flags, _vI66677_config.ccflags)) /* apply_stack */, ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-std=c++11")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1171, cols 1 to 2
      //return ( c_dependency_generator:c_dependency_generator<66626>closure, c_dynamic_object_compiler:c_dynamic_object_compiler<66645>closure, c_static_object_compiler:c_static_object_compiler<66641>closure, cxx_compiler_vendor:cxx_compiler_vendor<66604>closure, cxx_dependency_generator:cxx_dependency_generator<66632>closure, cxx_dynamic_object_compiler:cxx_dynamic_object_compiler<66657>closure, cxx_static_library_object_compiler:cxx_static_library_object_compiler<66653>closure, cxx_static_object_compiler:cxx_static_object_compiler<66649>closure, debug_flags:debug_flags<66620>closure, dependency_extension:dependency_extension<66606>closure, dependency_parser:dependency_parser<66638>closure, dynamic_executable_linker:dynamic_executable_linker<66669>closure, dynamic_library_extension:dynamic_library_extension<66616>closure, dynamic_library_linker:dynamic_library_linker<66673>closure, dynamic_object_extension:dynamic_object_extension<66612>closure, executable_extension:executable_extension<66608>closure, get_base_c_compile_flags:get_base_c_compile_flags<66622>closure, get_base_cxx_compile_flags:get_base_cxx_compile_flags<66624>closure, host_os:host_os<66600>closure, pathname_separator:pathname_separator<66618>closure, static_executable_linker:static_executable_linker<66665>closure, static_library_extension:static_library_extension<66614>closure, static_library_linker:static_library_linker<66661>closure, static_object_extension:static_object_extension<66610>closure, target_os:target_os<66602>closure, whatami:whatami<66598>closure);: type _art107765
      return _art107765((FLX_NEWP(_fI66626_c_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66645_c_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66641_c_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66604_cxx_compiler_vendor)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66632_cxx_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66657_cxx_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66653_cxx_static_library_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66649_cxx_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66620_debug_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66606_dependency_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66638_dependency_parser)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66669_dynamic_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66616_dynamic_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66673_dynamic_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66612_dynamic_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66608_executable_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66622_get_base_c_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66624_get_base_cxx_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66600_host_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66618_pathname_separator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66665_static_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66614_static_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66661_static_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66610_static_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66602_target_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66598_whatami)(FLX_FPAR_PASS this)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1171,1,1171,2); // HACK! 
}

//------------------------------
//FUNCTION <97685>: flx_pkgconfig::parse_args::_lam_65234: Apply method
 ::flx::rtl::cl_t _lam_65234::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 154, cols 9 to 23
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",154,9,154,23); // HACK! 
}

//------------------------------
//FUNCTION <66507>: toolchain_gcc_linux::whatami: Apply method
_a14239t_107672 _fI66507_whatami::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 731, cols 3 to 61
      //return "toolchain_gcc_linux (version 2)";: type _a14239t_107672
      return ::std::string("toolchain_gcc_linux (version 2)");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",731,3,731,61); // HACK! 
}

//------------------------------
//FUNCTION <66657>: toolchain_gcc_osx::cxx_dynamic_object_compiler: Apply method
int _fI66657_cxx_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66660_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1103, cols 5 to 6
      //result<66659>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_cxx_compile_flags<66597>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:linker<66594>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66660>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66660>varname)));
      _vI66659_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_osx->_vI66597_base_cxx_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_gcc_osx->_vI66594_linker, ptrtoolchain_gcc_osx->_vI66677_config.header_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.macros, ::std::string("-o "), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66660_spec.src, _vI66660_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1104, cols 5 to 18
      //return result<66659>varname;: type int
      return _vI66659_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1105,3,1105,4); // HACK! 
}

//------------------------------
//FUNCTION <105025>: gramtime_uncurry::aux_uncurry: Apply method
void* _fI105025_aux_uncurry::apply(_at107697 const &_arg ){
  _vI105026_inp_uncurry = _arg.data[0];
  _vI105027_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L105034:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<105030> := inp_uncurry<105026>varname;
      _vI105030_aux__apos_2_mv_1381  = _vI105026_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI105030_aux__apos_2_mv_1381)==0) ) goto _ml1383_L105029;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<105027>varname;: type void*
      return _vI105027_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L105029:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI105030_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI105033__lam_1385)(FLX_FPAR_PASS this, ptrgramtime_uncurry))) ) goto _ml1384_L105028;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<105031>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<105030>varname));
      _vI105031_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI105030_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<105032>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<105030>varname));
      _vI105032_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI105030_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<105027> := (Snoc<80397>struct (out<105027>varname, (strip<14901>stackfun h_param_std_1267<105031>varname)));
      _vI105027_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105027_out, strip(_vI105031_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<105026> := t_param_std_1266<105032>varname;
      _vI105026_inp_uncurry  = _vI105032_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L105034;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L105028:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66529>: toolchain_gcc_linux::debug_flags: Apply method
void* _fI66529_debug_flags::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 148, cols 3 to 44
      //return (Snoc<80397>struct (Empty<80385>varname, "-g"));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-g"))));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",743,3,743,48); // HACK! 
}

//------------------------------
//FUNCTION <89475>: generic_static_library_uncurry: Apply method
int generic_static_library_uncurry::apply(_tt107809 const &_arg ){
  _vI89963_spec_uncurry = _arg.mem_0;
  _vI89959_cppos = _arg.mem_1;
  _vI89960_LINKER_OUTPUT_FILENAME = _arg.mem_2;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93857>varname = (aux_uncurry<93858>stackfun (apply((prj0:record(CCFLAGS:(list),CCLINK_STATIC_LIB:(string),SPEC_LIB_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89963>varname), Empty<80385>varname));
      _vI93857_r = _fI93858_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89963_spec_uncurry.CCFLAGS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93857>ref;
      {
      void** _tmp109111 = (void**)&_vI93857_r;
      _rev(((_tmp109111)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93879>varname = (aux_uncurry<93880>stackfun (cppos<89959>varname, Empty<80385>varname));
      _vI93879_r = _fI93880_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89959_cppos, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93879>ref;
      {
      void** _tmp109112 = (void**)&_vI93879_r;
      _rev(((_tmp109112)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 359, cols 5 to 6
      //CMD<89957>varname = (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun (""", apply((prj1:record(CCFLAGS:(list),CCLINK_STATIC_LIB:(string),SPEC_LIB_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89963>varname))), """)), " ")), (cat_uncurry<89509>stackfun (" ", r<93857>varname)))), " ")), (+<14305>primfun (apply((prj2:record(CCFLAGS:(list),CCLINK_STATIC_LIB:(string),SPEC_LIB_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89963>varname), (+<14305>primfun ((+<14305>primfun (""", LINKER_OUTPUT_FILENAME<89960>varname)), """)))))), " ")), (cat_uncurry<89509>stackfun (" ", r<93879>varname))));
      _vI89957_CMD = (((((((::std::string("\"") + _vI89963_spec_uncurry.CCLINK_STATIC_LIB ) + ::std::string("\"") ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI93857_r)) /* apply_stack */ ) + ::std::string(" ") ) + (_vI89963_spec_uncurry.SPEC_LIB_FILENAME + ((::std::string("\"") + _vI89960_LINKER_OUTPUT_FILENAME ) + ::std::string("\"") ) ) ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI93879_r)) /* apply_stack */ ; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 361, cols 5 to 49
      //run procedure call apply((prj3:record(CCFLAGS:(list),CCLINK_STATIC_LIB:(string),SPEC_LIB_FILENAME:(string),debugln:(string -> void)) -> string -> void), spec_uncurry<89963>varname) (+<14305>primfun ("Library archive command=", CMD<89957>varname));
      {
        ::flx::rtl::con_t *_p = (_vI89963_spec_uncurry.debugln)->clone()
      ->call(0, ::std::string("Library archive command=") + _vI89957_CMD );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L93895;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", CMD<89957>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109113 = (::std::string("[system] ") + _vI89957_CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109113)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L93895:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93902<93902> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", CMD<89957>varname)), """)));
      _genout_urv93902  = ::std::system(((::std::string("\"") + _vI89957_CMD ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<93899> := _genout_urv93902<93902>varname;
      _vI93899__genout_urv93723  = _genout_urv93902; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<93898> := _genout_urv93723<93899>varname;
      _vI93898__genout_urv93715  = _vI93899__genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<93897> := _genout_urv93715<93898>varname;
      _vI93897__genout_urv93710  = _vI93898__genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93893<93893> := _genout_urv93710<93897>varname;
      _genout_urv93893  = _vI93897__genout_urv93710; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 362, cols 5 to 35
      //result<89958>varname = _genout_urv93893<93893>varname;
      _vI89958_result = _genout_urv93893; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 365, cols 5 to 9
      if(!(!((_vI89958_result == 0)) ) ) goto _ifdoelse_bootflx_65404_L89962;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Library archive command=", CMD<89957>varname)), " FAILED")), "\x0A")));
      {
      _a14239t_107672 _tmp109114 = ((::std::string("Library archive command=") + _vI89957_CMD ) + ::std::string(" FAILED") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109114)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 365, cols 5 to 9
    _ifdoelse_bootflx_65404_L89962:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 366, cols 5 to 18
      //return result<89958>varname;: type int
      return _vI89958_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",367,3,367,4); // HACK! 
}

//------------------------------
//C FUNC <87413>: _fI87413_str
_a14239t_107672 _fI87413_str(_at107684 _vI87414_xs){
  _at107684 _vI102789_a;
  _a5094t_107688 _vI87442_i;
  _a5094t_107688 _vI87441_n;
  _a14239t_107672 _vI87439_o;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 559, cols 7 to 18
      //o<87439>varname = "(";
      _vI87439_o = ::std::string("("); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 560, cols 7 to 21
      //n<87441>varname = arrayindexcount<84373>varname[3];
      _vI87441_n = 3; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 567, cols 7 to 11
      if(!((0 < _vI87441_n)) ) goto _ifdoelse_std_1667_L87434;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 562, cols 9 to 22
      // primcall +=<14301>primproc (&o<87439>ref, (+<14305>primfun ((str<80203>primfun[int] apply(aprj(0 : 3), xs<87414>varname)), "")));
      {
      _a14239t_107672* _tmp109115 = (_a14239t_107672*)&_vI87439_o;
      _a14239t_107672 _tmp109116 = ::flx::rtl::strutil::str<int>((_vI87414_xs.data)[reinterpret< ::flx::rtl::cl_t>(0)]) + ::std::string("") ;
      ((_tmp109115))->append((_tmp109116));
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 566, cols 9 to 10
      //i<87442>varname = literal[size]("1");
      _vI87442_i = 1; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 566, cols 9 to 10
    redo__ll_arrays_5954_L87437:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 566, cols 9 to 10
      if(FLX_UNLIKELY(!(!((_vI87441_n - 1  < _vI87442_i)) ) )) goto _ifdoelse_std_1667_L87434;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(_vI87442_i)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < 3))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/arrays.fdoc: line 430, cols 5 to 69
      //a<102789> := xs<87414>varname;
      _vI102789_a  = _vI87414_xs; //init
    // # C:/projects/felix/src/packages/arrays.fdoc: line 565, cols 19 to 39
      // primcall +=<14301>primproc (&o<87439>ref, (+<14305>primfun (", ", (+<14305>primfun ((str<80203>primfun[int] apply(aprj((_ctor_size<83435>primfun[size] (_ctor_size<83435>primfun[size] i<87442>varname)) : 3), a<102789>varname)), "")))));
      {
      _a14239t_107672* _tmp109117 = (_a14239t_107672*)&_vI87439_o;
      _a14239t_107672 _tmp109118 = ::std::string(", ") + (::flx::rtl::strutil::str<int>((_vI102789_a.data)[reinterpret< ::flx::rtl::cl_t>(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(_vI87442_i)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)]) + ::std::string("") ) ;
      ((_tmp109117))->append((_tmp109118));
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 566, cols 9 to 10
      // primcall pre_incr<81537>primproc[size] &i<87442>ref;
      {
      _a5094t_107688* _tmp109119 = (_a5094t_107688*)&_vI87442_i;
      ++*((_tmp109119));
      }
    // # C:/projects/felix/src/packages/arrays.fdoc: line 566, cols 9 to 10
      goto redo__ll_arrays_5954_L87437;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 567, cols 7 to 11
    _ifdoelse_std_1667_L87434:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 568, cols 7 to 21
      //return (+<14305>primfun (o<87439>varname, ")"));: type _a14239t_107672
      return _vI87439_o + ::std::string(")") ;
}
//------------------------------
//FUNCTION <99796>: subscript::_lam_2065: Apply method
 ::flx::rtl::cl_t _lam_2065::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 228, cols 7 to 23
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",228,7,228,23); // HACK! 
}

//------------------------------
//FUNCTION <89472>: generic_link_lib_dynamic_uncurry: Apply method
int generic_link_lib_dynamic_uncurry::apply(_tt107813 const &_arg ){
  _vI89690_spec_uncurry = _arg.mem_0;
  _vI89686_cppos = _arg.mem_1;
  _vI89687_LINKER_OUTPUT_FILENAME = _arg.mem_2;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 253, cols 5 to 6
      //cmd<89683>varname = (Snoc<80397>struct ((join_uncurry<89534>stackfun (apply((prj0:record(CCFLAGS:(list),CCLINK_DLLIB:(string),EXT_SHARED_OBJ:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89690>varname), cppos<89686>varname)), apply((prj1:record(CCFLAGS:(list),CCLINK_DLLIB:(string),EXT_SHARED_OBJ:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89690>varname)));
      _vI89683_cmd = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI89690_spec_uncurry.CCFLAGS, _vI89686_cppos)) /* apply_stack */, _vI89690_spec_uncurry.CCLINK_DLLIB))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<94108>varname = (aux_uncurry<94109>stackfun (cmd<89683>varname, Empty<80385>varname));
      _vI94108_r = _fI94109_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89683_cmd, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<94108>ref;
      {
      void** _tmp109120 = (void**)&_vI94108_r;
      _rev(((_tmp109120)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<94130>varname = (aux_uncurry<94131>stackfun (apply((prj3:record(CCFLAGS:(list),CCLINK_DLLIB:(string),EXT_SHARED_OBJ:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89690>varname), Empty<80385>varname));
      _vI94130_r = _fI94131_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89690_spec_uncurry.LINK_STRINGS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<94130>ref;
      {
      void** _tmp109121 = (void**)&_vI94130_r;
      _rev(((_tmp109121)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 259, cols 5 to 6
      //CMD<89684>varname = (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((cat_uncurry<89509>stackfun (" ", r<94108>varname)), " ")), apply((prj4:record(CCFLAGS:(list),CCLINK_DLLIB:(string),EXT_SHARED_OBJ:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89690>varname))), (+<14305>primfun ((+<14305>primfun (""", LINKER_OUTPUT_FILENAME<89687>varname)), """)))), " ")), (cat_uncurry<89509>stackfun (" ", r<94130>varname))));
      _vI89684_CMD = ((((cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI94108_r)) /* apply_stack */ + ::std::string(" ") ) + _vI89690_spec_uncurry.SPEC_EXE_FILENAME ) + ((::std::string("\"") + _vI89687_LINKER_OUTPUT_FILENAME ) + ::std::string("\"") ) ) + ::std::string(" ") ) + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI94130_r)) /* apply_stack */ ; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 260, cols 5 to 38
      //run procedure call apply((prj5:record(CCFLAGS:(list),CCLINK_DLLIB:(string),EXT_SHARED_OBJ:(string),LINK_STRINGS:(list),SPEC_EXE_FILENAME:(string),debugln:(string -> void)) -> string -> void), spec_uncurry<89690>varname) (+<14305>primfun ("Link command=", CMD<89684>varname));
      {
        ::flx::rtl::con_t *_p = (_vI89690_spec_uncurry.debugln)->clone()
      ->call(0, ::std::string("Link command=") + _vI89684_CMD );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L94146;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", CMD<89684>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109122 = (::std::string("[system] ") + _vI89684_CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109122)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L94146:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv94153<94153> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", CMD<89684>varname)), """)));
      _genout_urv94153  = ::std::system(((::std::string("\"") + _vI89684_CMD ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<94150> := _genout_urv94153<94153>varname;
      _vI94150__genout_urv93723  = _genout_urv94153; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<94149> := _genout_urv93723<94150>varname;
      _vI94149__genout_urv93715  = _vI94150__genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<94148> := _genout_urv93715<94149>varname;
      _vI94148__genout_urv93710  = _vI94149__genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv94144<94144> := _genout_urv93710<94148>varname;
      _genout_urv94144  = _vI94148__genout_urv93710; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 261, cols 5 to 37
      //result<89685>varname = _genout_urv94144<94144>varname;
      _vI89685_result = _genout_urv94144; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 264, cols 5 to 9
      if(!(!((_vI89685_result == 0)) ) ) goto _ifdoelse_bootflx_65398_L89689;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Dynamic link command=", CMD<89684>varname)), " FAILED")), "\x0A")));
      {
      _a14239t_107672 _tmp109123 = ((::std::string("Dynamic link command=") + _vI89684_CMD ) + ::std::string(" FAILED") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109123)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 264, cols 5 to 9
    _ifdoelse_bootflx_65398_L89689:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 265, cols 5 to 18
      //return result<89685>varname;: type int
      return _vI89685_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",266,3,266,4); // HACK! 
}

//------------------------------
//FUNCTION <104992>: gramtime_uncurry::_lam_65075::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI104992__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <99198>: cxx_depcheck::aux_uncurry: Apply method
double _fI99198_aux_uncurry::apply(_tt108078 const &_arg ){
  _vI99199_init_uncurry = _arg.mem_0;
  _vI99200_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_98507_L99207:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<99203> := x<99200>varname;
      _vI99203_aux__apos_2_mv_1356  = _vI99200_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI99203_aux__apos_2_mv_1356)==0) ) goto _ml1358_L99202;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<99199>varname;: type double
      return _vI99199_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L99202:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI99203_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI99206__lam_1360)(FLX_FPAR_PASS this, ptrcxx_depcheck))) ) goto _ml1359_L99201;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<99204>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<99203>varname));
      _vI99204_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI99203_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<99205>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<99203>varname));
      _vI99205_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI99203_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<99200> := t_param_std_1258<99205>varname;
      _vI99200_x  = _vI99205_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<99199> := apply((maxf<67003>flxfun init_uncurry<99199>varname), h_param_std_1259<99204>varname);
      _vI99199_init_uncurry  = ((FLX_NEWP(maxf)(FLX_FPAR_PASS ptrcxx_depcheck))
      ->apply(_vI99199_init_uncurry))->clone()
      ->apply(_vI99204_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_98507_L99207;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L99201:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <96399>: flx_pkgconfig::add_val::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI96399__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <107404>: flx_processing::cxx_link_shared_exe::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI107404__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <105878>: flx_processing::cxx_link_shared_exe: Apply method
int cxx_link_shared_exe::apply(_pt107743* const &_arg ){
  _vI105892_ehandler = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106413>ref;
      {
      __timeb64* _tmp109125 = (__timeb64*)&_vI106413_tv;
      _ftime64_s(((_tmp109125)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99925<106412> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106413>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106413>varname)), literal[double]("1.0e3")))));
      _genout_urv99925  = (static_cast<double>((_vI106413_tv.time))) + ((static_cast<double>((_vI106413_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2545, cols 5 to 25
      //t0<105879>varname = _genout_urv99925<106412>varname;
      _vI105879_t0 = _genout_urv99925; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2546, cols 5 to 36
      //pkg_dstrings<105880>varname = Empty<80385>varname;
      _vI105880_pkg_dstrings = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2547, cols 5 to 34
      //pkgs<105881>varname = apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname);
      _vI105881_pkgs = ptrflx_processing->_vI106023_control.extra_pkgs; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2563, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI105881_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65935_L105896;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_shared_exe] Adding packages ", (str<81092>stackfun pkgs<105881>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109126 = (::std::string("[flx:cxx_link_shared_exe] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI105881_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109126)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<106414>varname = (aux_uncurry<106415>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI106414_r = _fI106415_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<106414>ref;
      {
      void** _tmp109127 = (void**)&_vI106414_r;
      _rev(((_tmp109127)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2553, cols 7 to 8
      //PKGCONFIG_PATH<105884>varname = r<106414>varname;
      _vI105884_PKGCONFIG_PATH = _vI106414_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2554, cols 7 to 126
      //allargs<105885>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<105884>varname, "-r")), "--field=provides_dlib")), "--field=requires_dlibs")), "--keepleftmost")), pkgs<105881>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI105885_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI105884_PKGCONFIG_PATH, ::std::string("-r"))) /* apply_stack */, ::std::string("--field=provides_dlib"))) /* apply_stack */, ::std::string("--field=requires_dlibs"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI105881_pkgs)) /* apply_stack */, ptrflx_processing->_vI106023_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2555, cols 7 to 64
      //_genout_urv99966<106425> := (flx_pkgconfig<68435>stackfun allargs<105885>varname);
      _genout_urv99966  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI105885_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2555, cols 7 to 64
      //_ds2_66100<105886>varname = _genout_urv99966<106425>varname;
      _ds2_66100 = _genout_urv99966; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2555, cols 7 to 64
      //ret<105887>varname = apply((prj0:int * list -> int), _ds2_66100<105886>varname);
      _vI105887_ret = _ds2_66100.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2555, cols 7 to 64
      //mydstrings<105888>varname = apply((prj1:int * list -> list), _ds2_66100<105886>varname);
      _vI105888_mydstrings = _ds2_66100.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2561, cols 7 to 11
      if(!(!((_vI105887_ret == 0)) ) ) goto _ifdoelse_bootflx_65937_L105894;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_shared_exe] Error ", (str<80203>primfun[int] ret<105887>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<105885>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109128 = (((::std::string("[flx:cxx_link_shared_exe] Error ") + ::flx::rtl::strutil::str<int>(_vI105887_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI105885_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109128)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<105892>varname);
      {
      _a6258t_107873 _tmp109129 = (_a6258t_107873)(_vI105892_ehandler);
      throw ((_tmp109129));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2561, cols 7 to 11
    _ifdoelse_bootflx_65937_L105894:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2562, cols 7 to 31
      //pkg_dstrings<105880>varname = mydstrings<105888>varname;
      _vI105880_pkg_dstrings = _vI105888_mydstrings; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2563, cols 5 to 9
    _ifdoelse_bootflx_65935_L105896:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 22 to 36
      //cxx_link_shared_exe_mv_66102<106427> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      _vI106427_cxx_link_shared_exe_mv_66102  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      if(!(_vI106427_cxx_link_shared_exe_mv_66102%2==1) ) goto _ml66104_L106428;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      //_urv99977<106426> := echoln<106025>closure;
      _urv99977  = (FLX_NEWP(echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      goto _end_hash_944128473;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
    _ml66104_L106428:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      //_urv99977<106426> := debugln<106024>closure;
      _urv99977  = (FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
    _end_hash_944128473:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 22 to 36
      //cxx_link_shared_exe_mv_66102<106431> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      cxx_link_shared_exe_mv_66102  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      if(!(cxx_link_shared_exe_mv_66102%2==1) ) goto _ml66104_L106432;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      goto _end_hash_818803212;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
    _ml66104_L106432:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
    _end_hash_818803212:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2572, cols 5 to 6
      //tc<105889>varname = apply(toolchain<68911>varname, ( ccflags:apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), debugln:_urv99977<106426>varname, dynamic_libraries:(join_uncurry<89534>stackfun (apply((prj45:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), pkg_dstrings<105880>varname)), header_search_dirs:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), macros:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<105724>varname)));
      _vI105889_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(ptrflx_processing->_vI105724_dflt_clang_config.ccflags, _urv99977, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.LINK_STRINGS, _vI105880_pkg_dstrings)) /* apply_stack */, ptrflx_processing->_vI105724_dflt_clang_config.header_search_dirs, ptrflx_processing->_vI105724_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI105724_dflt_clang_config.macros, ptrflx_processing->_vI105724_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Toolchain loaded ", apply(apply((prj25:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<105889>varname), ()))), "\x0A")));
      {
      _a14239t_107672 _tmp109130 = (::std::string("Toolchain loaded ") + (_vI105889_tc.whatami)->clone()
      ->apply() /* general apply */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109130)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2578, cols 5 to 57
      //EXT_DYNAMIC_OBJ<105890>varname = apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<105889>varname), ());
      EXT_DYNAMIC_OBJ = (_vI105889_tc.dynamic_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2598, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65938_L105897;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2589, cols 7 to 8
      //result<105891>varname = apply(apply((prj11:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<105889>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), srcs:(+<80787>stackfun ((+<80787>stackfun ((join_uncurry<89534>stackfun (apply((prj19:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname))), (+<14305>primfun ((+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), "_static_link_thunk")), EXT_DYNAMIC_OBJ<105890>varname)))), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), EXT_DYNAMIC_OBJ<105890>varname))))));
      _vI105891_result = (_vI105889_tc.dynamic_executable_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI106023_control.DRIVER_OBJS, ptrflx_processing->_vI106023_control.cppos)) /* apply_stack */, (ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string("_static_link_thunk") ) + EXT_DYNAMIC_OBJ )) /* apply_stack */, ptrflx_processing->_vI105620_dvars.cpp_filebase + EXT_DYNAMIC_OBJ )) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2598, cols 5 to 9
      goto _ifdoelse_bootflx_65939_L105898;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2598, cols 5 to 9
    _ifdoend_bootflx_65938_L105897:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2596, cols 7 to 10
      //result<105891>varname = apply(apply((prj11:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<105889>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), srcs:apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      _vI105891_result = (_vI105889_tc.dynamic_executable_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, ptrflx_processing->_vI106023_control.cppos)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2598, cols 5 to 9
    _ifdoelse_bootflx_65939_L105898:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _end_100016_L106441;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106440>ref;
      {
      __timeb64* _tmp109131 = (__timeb64*)&_vI106440_tv;
      _ftime64_s(((_tmp109131)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106439> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106440>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106440>varname)), literal[double]("1.0e3")))));
      _vI106439__genout_urv96124  = (static_cast<double>((_vI106440_tv.time))) + ((static_cast<double>((_vI106440_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106434>varname = (-<80547>primfun[double] (_genout_urv96124<106439>varname, t0<105879>varname));
      _vI106434_elapsed = _vI106439__genout_urv96124 - _vI105879_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106435>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106434>varname, literal[double]("60.0"))));
      _vI106435_minutes = ::std::floor((_vI106434_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106436>varname = (-<80547>primfun[double] (elapsed<106434>varname, (*<80818>primfun[double] (minutes<106435>varname, literal[double]("60.0")))));
      _vI106436_seconds = _vI106434_elapsed - (_vI106435_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106435>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106436>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Dynamic executable link  : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109132 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106435_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106436_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Dynamic executable link  : ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109132)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2599, cols 5 to 78
    _end_100016_L106441:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2602, cols 5 to 9
      if(!(!((_vI105891_result == 0)) ) ) goto _ifdoelse_bootflx_65941_L105900;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ dynamic executable link ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp109133 = ((::std::string("[flx] C++ dynamic executable link ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109133)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2602, cols 5 to 9
    _ifdoelse_bootflx_65941_L105900:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2603, cols 5 to 18
      //return result<105891>varname;: type int
      return _vI105891_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2604,3,2604,4); // HACK! 
}

//------------------------------

//PROCEDURE <105635:> flx_processing::rfi: Call method
void rfi::stack_call(_a14239t_107672 const &_arg){
  ::flx::rtl::con_t *cc = call(0,_arg);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * rfi::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  dname2 = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <105635:> flx_processing::rfi: Resume method
::flx::rtl::con_t *rfi::resume(){
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 575, cols 7 to 48
      if(!((dname2 == ::std::string(".")) || (dname2 == ::std::string("..")) ) ) goto _ifret_std_799_L105646;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 575, cols 7 to 48
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 575, cols 7 to 48
    _ifret_std_799_L105646:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 24 to 35
      //rfi_mv_857<105662> := (==<80464>primfun[string] (dname2<105645>varname, ""));
      rfi_mv_857  = (dname2 == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 21 to 81
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 21 to 81
      if(!(rfi_mv_857%2==1) ) goto _ml859_L105663;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 21 to 81
      //_urv95030<105661> := apply((prj38:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname));
      _urv95030  = (*ptrflx_processing->_vI68948_control).INDIR; //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 21 to 81
      goto _end_inline_rfi_mf_856_95034_L105664;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 21 to 81
    _ml859_L105663:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 21 to 81
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 21 to 81
      //_urv95030<105661> := (join<82705>stackfun (apply((prj38:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)), dname2<105645>varname));
      _urv95030  = _fI82705_join((*ptrflx_processing->_vI68948_control).INDIR, dname2); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 21 to 81
    _end_inline_rfi_mf_856_95034_L105664:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 577, cols 7 to 82
      //newpath<105636>varname = _urv95030<105661>varname;
      newpath = _urv95030; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 581, cols 7 to 49
      //newfiles<105637>varname = (filesin<17016>stackfun newpath<105636>varname);
      newfiles = filesin(FLX_FPAR_PASS newpath); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 585, cols 13 to 20
      //rfi_mv_861<105631> := newfiles<105637>varname;
      rfi_mv_861  = newfiles; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 586, cols 9 to 13
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 586, cols 9 to 13
      if(!(FLX_VNI(rfi_mv_861)==0) ) goto _ml863_L105647;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 586, cols 18 to 24
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 586, cols 9 to 13
    _ml863_L105647:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 587, cols 9 to 18
/*match case 2:|Some files_param_std_801*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 587, cols 9 to 18
      if(!andthen(FLX_VNI(rfi_mv_861)==1, (FLX_NEWP(_lam_875)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml864_L105659;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 587, cols 14 to 18
      //files_param_std_801<105638>varname = (arg of case 1 of rfi_mv_861<105631>varname);
      files_param_std_801 = *((void**)FLX_VNP(rfi_mv_861)); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<105667> := files_param_std_801<105638>varname;
      _vI105667_xs  = files_param_std_801; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv95065<105666> := iterator'2<105668>closure;
      _genout_urv95065  = (FLX_NEWP(_fI105668_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      //_generator_filesystem_4194<105639>varname = _genout_urv95065<105666>varname;
      _generator_filesystem_4194 = _genout_urv95065; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
    continue__ll_filesystem_4160_L105648:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      //rfi_mv_865<105632> := apply(_generator_filesystem_4194<105639>varname, ());
      rfi_mv_865  = (_generator_filesystem_4194)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
/*match case 1:|Some f_param_std_803_param_std_811*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      if(!andthen(FLX_VNI(rfi_mv_865)==1, (FLX_NEWP(_lam_873)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml867_L105656;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      //f_param_std_803_param_std_811<105640>varname = (arg of case 1 of rfi_mv_865<105632>varname);
      f_param_std_803_param_std_811 = *((_a14239t_107672*)FLX_VNP(rfi_mv_865)); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 611, cols 11 to 15
      if(!((f_param_std_803_param_std_811 == ::std::string(".")) || (f_param_std_803_param_std_811 == ::std::string("..")) ) ) goto _ifdoend_std_804_L105649;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      goto continue__ll_filesystem_4160_L105648;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 611, cols 11 to 15
    _ifdoend_std_804_L105649:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 593, cols 13 to 46
      //d<105641>varname = (join<82705>stackfun (dname2<105645>varname, f_param_std_803_param_std_811<105640>varname));
      _vI105641_d = _fI82705_join(dname2, f_param_std_803_param_std_811); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 595, cols 13 to 52
      //fullpath<105642>varname = (join<82705>stackfun (apply((prj38:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)), d<105641>varname));
      fullpath = _fI82705_join((*ptrflx_processing->_vI68948_control).INDIR, _vI105641_d); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 597, cols 13 to 48
      //t<105643>varname = (filetype<85777>stackfun fullpath<105642>varname);
      _vI105643_t = filetype(fullpath); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 598, cols 19 to 19
      //rfi_mv_868<105633> := t<105643>varname;
      rfi_mv_868  = _vI105643_t; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 599, cols 17 to 24
/*match case 1:|REGULAR*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 599, cols 17 to 24
      if(!(rfi_mv_868%10==4) ) goto _ml870_L105652;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 601, cols 17 to 37
      //result<105644>varname = (\in<15410>primfun (d<105641>varname, regex<105611>varname));
      _vI105644_result = (ptrflx_processing->regex)->Match(::re2::StringPiece(_vI105641_d),0, ::re2::StringPiece(_vI105641_d).length(),::re2::RE2::ANCHOR_BOTH, (::re2::StringPiece*)0, 0); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 605, cols 17 to 21
      if(!_vI105644_result ) goto continue__ll_filesystem_4160_L105648;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 604, cols 17 to 49
      //foundfiles<105634>varname = (Snoc<80397>struct (foundfiles<105634>varname, d<105641>varname));
      ptrflx_processing->foundfiles = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrflx_processing->foundfiles, _vI105641_d))); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      goto continue__ll_filesystem_4160_L105648;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      goto continue__ll_filesystem_4160_L105648;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 599, cols 17 to 24
    _ml870_L105652:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 606, cols 17 to 26
/*match case 2:|DIRECTORY*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 606, cols 17 to 26
      if(!(rfi_mv_868%10==2) ) goto continue__ll_filesystem_4160_L105648;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 614, cols 5 to 6
      //run procedure stackcall rfi<105635>stackproc  d<105641>varname;
      {
      rfi(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI105641_d);
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      goto continue__ll_filesystem_4160_L105648;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 609, cols 17 to 17
/*match case 3:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      goto continue__ll_filesystem_4160_L105648;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      goto continue__ll_filesystem_4160_L105648;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
    _ml867_L105656:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      if(!(FLX_VNI(rfi_mv_865)==0) ) goto _ml874_L105657;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 614, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
    _ml874_L105657:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
/*match failure*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 612, cols 9 to 13
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",612,9,612,13);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",612,9,612,13);
;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 614, cols 5 to 6
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 587, cols 9 to 18
    _ml864_L105659:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 613, cols 7 to 16
/*match failure*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 613, cols 7 to 16
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",613,7,613,16);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",613,7,613,16);
;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 614, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <97739>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI97739_aux::apply(_at107697 const &_arg ){
  _vI97740_inp = _arg.data[0];
  _vI97741_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
    start_96482_L97760:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //aux_mv_1493<97744> := inp<97740>varname;
      _vI97744_aux_mv_1493  = _vI97740_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
      if(!(FLX_VNI(_vI97744_aux_mv_1493)==0) ) goto _ml1495_L97743;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<97747>stackfun ((Snoc<80397>struct (out<97741>varname, "Requires")), Empty<80385>varname));: type void*
      return _fI97747_aux_uncurry(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig)
      .apply(_at107697(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97741_out, ::std::string("Requires")))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 578, cols 9 to 14
    _ml1495_L97743:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1301, h_param_std_1302)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      if(!andthen(FLX_VNI(_vI97744_aux_mv_1493)==1, (FLX_NEWP(_fI97757__lam_1502)(FLX_FPAR_PASS this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml1496_L97742;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 16 to 16
      //h_param_std_1302<97745>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1493<97744>varname));
      _vI97745_h_param_std_1302 = (*((_tt107677*)FLX_VNP(_vI97744_aux_mv_1493))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 14 to 14
      //t_param_std_1301<97746>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1493<97744>varname));
      _vI97746_t_param_std_1301 = (*((_tt107677*)FLX_VNP(_vI97744_aux_mv_1493))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 580, cols 12 to 24
      //aux_mv_1498<97759> := (lnot<5216>primfun (eq<81159>stackfun (h_param_std_1302<97745>varname, "Requires")));
      _vI97759_aux_mv_1498  = !eq(_vI97745_h_param_std_1302, ::std::string("Requires")) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
      if(!(_vI97759_aux_mv_1498%2==1) ) goto _ml1500_L97758;
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //out<97741> := (Snoc<80397>struct (out<97741>varname, h_param_std_1302<97745>varname));
      _vI97741_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97741_out, _vI97745_h_param_std_1302))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<97740> := t_param_std_1301<97746>varname;
      _vI97740_inp  = _vI97746_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_96482_L97760;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
    _ml1500_L97758:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 581, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      //inp<97740> := t_param_std_1301<97746>varname;
      _vI97740_inp  = _vI97746_t_param_std_1301; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 584, cols 5 to 6
      goto start_96482_L97760;
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
    _ml1496_L97742:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 582, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",582,7,582,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",584,5,584,6); // HACK! 
}

//------------------------------
//FUNCTION <68388>: FlxPkgConfigQuery::getpkgfieldopt::getpkgfieldopt'2: Apply method
void* _fI68388_getpkgfieldopt__apos_2::apply(_at107674 const &_arg ){
  _vI68394_pkg = _arg.data[0];
  _vI68395_field = _arg.data[1];
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 526, cols 7 to 52
      //values<68390>varname = (getpkgfield_uncurry<89507>stackfun (ehandler<68400>varname, pkg<68394>varname, field<68395>varname));
      _vI68390_values = getpkgfield_uncurry(FLX_FPAR_PASS ptrFlxPkgConfigQuery)
      .apply(_tt107874(ptrgetpkgfieldopt->_vI68400_ehandler, _vI68394_pkg, _vI68395_field)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 527, cols 13 to 18
      //getpkgfieldopt'2_mv_65354<65354> := values<68390>varname;
      _vI65354_getpkgfieldopt__apos_2_mv_65354  = _vI68390_values; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 9 to 23
/*match case 1:|Cons (h_param_bootflx_65321, |Empty)*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 9 to 23
      if(!andthen(!!_vI65354_getpkgfieldopt__apos_2_mv_65354 , (FLX_NEWP(_lam_65357)(FLX_FPAR_PASS this, ptrgetpkgfieldopt, ptrFlxPkgConfigQuery))) ) goto _ml65356_L68396;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 15 to 15
      //h_param_bootflx_65321<68393>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] getpkgfieldopt'2_mv_65354<65354>varname));
      h_param_bootflx_65321 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(_vI65354_getpkgfieldopt__apos_2_mv_65354))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 28 to 41
      //return (Some<80915>struct h_param_bootflx_65321<68393>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (h_param_bootflx_65321));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 9 to 23
    _ml65356_L68396:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 529, cols 9 to 14
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 529, cols 9 to 14
      if(!(FLX_VNI(_vI65354_getpkgfieldopt__apos_2_mv_65354)==0) ) goto _ml65358_L68397;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 529, cols 19 to 38
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 529, cols 9 to 14
    _ml65358_L68397:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 530, cols 9 to 9
/*match case 3:any*/
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Multiple values for field ", field<68395>varname)), " in ")), pkg<68394>varname)), " not allowed, got")), (str<81092>stackfun values<68390>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109138 = (((((::std::string("Multiple values for field ") + _vI68395_field ) + ::std::string(" in ") ) + _vI68394_pkg ) + ::std::string(" not allowed, got") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI68390_values) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109138)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<68400>varname);
      {
      _a6258t_107873 _tmp109139 = (_a6258t_107873)(ptrgetpkgfieldopt->_vI68400_ehandler);
      throw ((_tmp109139));
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 530, cols 9 to 9
      FLX_HALT("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",530,9,530,9,"HALT: Jump to end of function");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",536,5,536,6); // HACK! 
}

//------------------------------
//FUNCTION <66547>: toolchain_gcc_linux::dependency_parser: Apply method
void* _fI66547_dependency_parser::apply(_a14239t_107672 const &_arg ){
  _vI66549_data = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 783, cols 3 to 4
      //return (generic_dependency_parser<68198>stackfun data<66549>varname);: type void*
      return generic_dependency_parser(FLX_FPAR_PASS_ONLY)
      .apply(_vI66549_data) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",783,3,783,4); // HACK! 
}

//------------------------------
//FUNCTION <89512>: generic_cxx_compile_for_dynamic_uncurry: Apply method
int generic_cxx_compile_for_dynamic_uncurry::apply(_tt107807 const &_arg ){
  _vI89924_spec_uncurry = _arg.mem_0;
  _vI89920_src = _arg.mem_1;
  _vI89921_dst = _arg.mem_2;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93747>varname = (aux_uncurry<93748>stackfun (apply((prj2:record(CCFLAGS:(list),CCOBJ_DLLIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89924>varname), Empty<80385>varname));
      _vI93747_r = _fI93748_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89924_spec_uncurry.INCLUDE_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93747>ref;
      {
      void** _tmp109140 = (void**)&_vI93747_r;
      _rev(((_tmp109140)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93768>varname = (aux_uncurry<93769>stackfun (apply((prj3:record(CCFLAGS:(list),CCOBJ_DLLIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89924>varname), Empty<80385>varname));
      _vI93768_r = _fI93769_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89924_spec_uncurry.MACROS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93768>ref;
      {
      void** _tmp109141 = (void**)&_vI93768_r;
      _rev(((_tmp109141)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 176, cols 5 to 6
      //cmd<89917>varname = (Snoc<80397>struct ((+<80787>stackfun ((join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (apply((prj0:record(CCFLAGS:(list),CCOBJ_DLLIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> list), spec_uncurry<89924>varname), r<93747>varname)), r<93768>varname)), src<89920>varname)), apply((prj1:record(CCFLAGS:(list),CCOBJ_DLLIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89924>varname)));
      _vI89917_cmd = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI89924_spec_uncurry.CCFLAGS, _vI93747_r)) /* apply_stack */, _vI93768_r)) /* apply_stack */, _vI89920_src)) /* apply_stack */, _vI89924_spec_uncurry.CCOBJ_DLLIB))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93791>varname = (aux_uncurry<93792>stackfun (cmd<89917>varname, Empty<80385>varname));
      _vI93791_r = _fI93792_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89917_cmd, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93791>ref;
      {
      void** _tmp109142 = (void**)&_vI93791_r;
      _rev(((_tmp109142)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 179, cols 5 to 6
      //CMD<89918>varname = (+<14305>primfun ((+<14305>primfun ((cat_uncurry<89509>stackfun (" ", r<93791>varname)), " ")), (+<14305>primfun (apply((prj4:record(CCFLAGS:(list),CCOBJ_DLLIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> string), spec_uncurry<89924>varname), (+<14305>primfun ((+<14305>primfun (""", dst<89921>varname)), """))))));
      _vI89918_CMD = (cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI93791_r)) /* apply_stack */ + ::std::string(" ") ) + (_vI89924_spec_uncurry.SPEC_OBJ_FILENAME + ((::std::string("\"") + _vI89921_dst ) + ::std::string("\"") ) ) ; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 180, cols 4 to 39
      //run procedure call apply((prj5:record(CCFLAGS:(list),CCOBJ_DLLIB:(string),INCLUDE_DIRS:(list),MACROS:(list),SPEC_OBJ_FILENAME:(string),debugln:(string -> void)) -> string -> void), spec_uncurry<89924>varname) (+<14305>primfun ("C++ compile: ", CMD<89918>varname));
      {
        ::flx::rtl::con_t *_p = (_vI89924_spec_uncurry.debugln)->clone()
      ->call(0, ::std::string("C++ compile: ") + _vI89918_CMD );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_503_L93811;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[system] ", CMD<89918>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109143 = (::std::string("[system] ") + _vI89918_CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109143)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 778, cols 5 to 9
    _ifdoelse_std_503_L93811:;
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93818<93818> := (raw_system<80581>primfun[Win32, process_status_t] (+<14305>primfun ((+<14305>primfun (""", CMD<89918>varname)), """)));
      _genout_urv93818  = ::std::system(((::std::string("\"") + _vI89918_CMD ) + ::std::string("\"") ).c_str()); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93723<93815> := _genout_urv93818<93818>varname;
      _vI93815__genout_urv93723  = _genout_urv93818; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93715<93814> := _genout_urv93723<93815>varname;
      _vI93814__genout_urv93715  = _vI93815__genout_urv93723; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93710<93813> := _genout_urv93715<93814>varname;
      _vI93813__genout_urv93710  = _vI93814__genout_urv93715; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 772, cols 3 to 4
      //_genout_urv93809<93809> := _genout_urv93710<93813>varname;
      _genout_urv93809  = _vI93813__genout_urv93710; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 181, cols 5 to 37
      //result<89919>varname = _genout_urv93809<93809>varname;
      _vI89919_result = _genout_urv93809; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 184, cols 5 to 9
      if(!(!((_vI89919_result == 0)) ) ) goto _ifdoelse_bootflx_65394_L89923;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("C++ command=", CMD<89918>varname)), " FAILED")), "\x0A")));
      {
      _a14239t_107672 _tmp109144 = ((::std::string("C++ command=") + _vI89918_CMD ) + ::std::string(" FAILED") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109144)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 184, cols 5 to 9
    _ifdoelse_bootflx_65394_L89923:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 185, cols 5 to 18
      //return result<89919>varname;: type int
      return _vI89919_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",186,3,186,4); // HACK! 
}

//------------------------------
//FUNCTION <93316>: toolchain_msvc_win32::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93316__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66902>: toolchain_clang_osx::host_os: Apply method
_a14239t_107672 _fI66902_host_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1456, cols 3 to 33
      //return "OSX";: type _a14239t_107672
      return ::std::string("OSX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1456,3,1456,33); // HACK! 
}

//------------------------------
//FUNCTION <97009>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI97009__lam_1457::apply(_a14239t_107672 const &_arg ){
  _vI97010_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<81159>stackfun (x<97010>varname, key<68665>varname));: type  ::flx::rtl::cl_t
      return eq(_vI97010_x, ptr_lam_65288->_vI68665_key);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <90457>: respectful_parse_uncurry_uncurry: Apply method
_art107719 respectful_parse_uncurry_uncurry::apply(_tt107724 const &_arg ){
  action_uncurry_uncurry = _arg.mem_0;
  state_uncurry = _arg.mem_1;
  _vI90658_s = _arg.mem_2;
    // # C:/projects/felix/src/packages/strings.fdoc: line 543, cols 7 to 28
      //mode<90630>varname = apply((prj1:record(current:(string),mode:(mode_t),parsed:(list)) -> mode_t), state_uncurry<90697>varname);
      _vI90630_mode = state_uncurry.mode; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 544, cols 7 to 34
      //current<90631>varname = apply((prj0:record(current:(string),mode:(mode_t),parsed:(list)) -> string), state_uncurry<90697>varname);
      _vI90631_current = state_uncurry.current; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 545, cols 7 to 33
      //result<90632>varname = Empty<80385>varname;
      _vI90632_result = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 365, cols 5 to 6
      //x<92106> := s<90658>varname;
      _vI92106_x  = _vI90658_s; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 365, cols 5 to 6
      //_genout_urv92101<92101> := iterator'2<92102>closure;
      _genout_urv92101  = (FLX_NEWP(_fI92102_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      //_generator_strings_7499<90655>varname = _genout_urv92101<92101>varname;
      _generator_strings_7499 = _genout_urv92101; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
    continue__ll_strings_7415_L90659:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      //respectful_parse'3_mv_2322<90603> := apply(_generator_strings_7499<90655>varname, ());
      _vI90603_respectful_parse__apos_3_mv_2322  = (_generator_strings_7499)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
/*match case 1:|Some ch_param_std_1986*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      if(!andthen(FLX_VNI(_vI90603_respectful_parse__apos_3_mv_2322)==1, (FLX_NEWP(_lam_2354)(FLX_FPAR_PASS this))) ) goto _ml2324_L90694;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      //ch_param_std_1986<90657>varname = (arg of case 1 of respectful_parse'3_mv_2322<90603>varname);
      ch_param_std_1986 = *((char*)FLX_VNP(_vI90603_respectful_parse__apos_3_mv_2322)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 589, cols 15 to 18
      //respectful_parse'3_mv_2325<90606> := mode<90630>varname;
      _vI90606_respectful_parse__apos_3_mv_2325  = _vI90630_mode; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 590, cols 11 to 18
/*match case 1:|copying*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 590, cols 11 to 18
      if(!(_vI90606_respectful_parse__apos_3_mv_2325%7==0) ) goto _ml2327_L90660;
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      //run procedure stackcall handlecopying<90633>stackproc  ch_param_std_1986<90657>varname;
      {
      handlecopying(FLX_FPAR_PASS this)
      .stack_call(ch_param_std_1986);
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 590, cols 11 to 18
    _ml2327_L90660:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 591, cols 11 to 16
/*match case 2:|quote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 591, cols 11 to 16
      if(!(_vI90606_respectful_parse__apos_3_mv_2325%7==2) ) goto _ml2328_L90673;
    // # C:/projects/felix/src/packages/strings.fdoc: line 615, cols 11 to 15
      if(!((ch_param_std_1986 == ::flx::rtl::strutil::subscript(::std::string("'"),0))) ) goto _ifdoend_std_1988_L90665;
    // # C:/projects/felix/src/packages/strings.fdoc: line 593, cols 19 to 30
      //respectful_parse'3_mv_2329<90610> := apply((prj2:record(dquote:(dquote_action_t),escape:(escape_action_t),quote:(quote_action_t)) -> quote_action_t), action_uncurry_uncurry<90698>varname);
      _vI90610_respectful_parse__apos_3_mv_2329  = action_uncurry_uncurry.quote; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 594, cols 15 to 27
/*match case 1:|ignore-quote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 594, cols 15 to 27
      if(!(_vI90610_respectful_parse__apos_3_mv_2329%3==0) ) goto _ml2331_L90661;
    // # C:/projects/felix/src/packages/strings.fdoc: line 595, cols 15 to 27
      {if(FLX_UNLIKELY(!(0)))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/strings.fdoc",595,15,595,27);}
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 594, cols 15 to 27
    _ml2331_L90661:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 597, cols 15 to 25
/*match case 2:|keep-quote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 597, cols 15 to 25
      if(!(_vI90610_respectful_parse__apos_3_mv_2329%3==1) ) goto _ml2332_L90662;
    // # C:/projects/felix/src/packages/strings.fdoc: line 598, cols 15 to 27
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109146 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109146)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 599, cols 15 to 28
      //mode<90630>varname = copying<15000>varname;
      _vI90630_mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 597, cols 15 to 25
    _ml2332_L90662:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 600, cols 15 to 25
/*match case 3:|drop-quote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 600, cols 15 to 25
      if(!(_vI90610_respectful_parse__apos_3_mv_2329%3==2) ) goto _ml2333_L90663;
    // # C:/projects/felix/src/packages/strings.fdoc: line 601, cols 15 to 28
      //mode<90630>varname = copying<15000>varname;
      _vI90630_mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 600, cols 15 to 25
    _ml2333_L90663:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 602, cols 13 to 22
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 602, cols 13 to 22
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",602,13,602,22);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",602,13,602,22);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 615, cols 11 to 15
    _ifdoend_std_1988_L90665:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 614, cols 11 to 27
      if(!((ch_param_std_1986 == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoend_std_1991_L90670;
    // # C:/projects/felix/src/packages/strings.fdoc: line 604, cols 19 to 31
      //respectful_parse'3_mv_2334<90614> := apply((prj1:record(dquote:(dquote_action_t),escape:(escape_action_t),quote:(quote_action_t)) -> escape_action_t), action_uncurry_uncurry<90698>varname);
      _vI90614_respectful_parse__apos_3_mv_2334  = action_uncurry_uncurry.escape; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 605, cols 15 to 28
/*match case 1:|ignore-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 605, cols 15 to 28
      if(!(_vI90614_respectful_parse__apos_3_mv_2334%3==0) ) goto _ml2336_L90666;
    // # C:/projects/felix/src/packages/strings.fdoc: line 606, cols 15 to 27
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109148 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109148)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 605, cols 15 to 28
    _ml2336_L90666:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 607, cols 15 to 26
/*match case 2:|keep-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 607, cols 15 to 26
      if(!(_vI90614_respectful_parse__apos_3_mv_2334%3==1) ) goto _ml2337_L90667;
    // # C:/projects/felix/src/packages/strings.fdoc: line 608, cols 15 to 27
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109149 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109149)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 609, cols 15 to 33
      //mode<90630>varname = escape-quote<15010>varname;
      _vI90630_mode = /*VR_int*/5; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 607, cols 15 to 26
    _ml2337_L90667:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 610, cols 15 to 26
/*match case 3:|drop-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 610, cols 15 to 26
      if(!(_vI90614_respectful_parse__apos_3_mv_2334%3==2) ) goto _ml2338_L90668;
    // # C:/projects/felix/src/packages/strings.fdoc: line 611, cols 15 to 33
      //mode<90630>varname = escape-quote<15010>varname;
      _vI90630_mode = /*VR_int*/5; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 610, cols 15 to 26
    _ml2338_L90668:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 612, cols 13 to 22
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 612, cols 13 to 22
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",612,13,612,22);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",612,13,612,22);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 614, cols 11 to 27
    _ifdoend_std_1991_L90670:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 614, cols 13 to 25
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109151 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109151)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 591, cols 11 to 16
    _ml2328_L90673:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 617, cols 11 to 17
/*match case 3:|dquote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 617, cols 11 to 17
      if(!(_vI90606_respectful_parse__apos_3_mv_2325%7==3) ) goto _ml2339_L90686;
    // # C:/projects/felix/src/packages/strings.fdoc: line 641, cols 11 to 15
      if(!((ch_param_std_1986 == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_std_1996_L90678;
    // # C:/projects/felix/src/packages/strings.fdoc: line 619, cols 19 to 31
      //respectful_parse'3_mv_2340<90619> := apply((prj0:record(dquote:(dquote_action_t),escape:(escape_action_t),quote:(quote_action_t)) -> dquote_action_t), action_uncurry_uncurry<90698>varname);
      _vI90619_respectful_parse__apos_3_mv_2340  = action_uncurry_uncurry.dquote; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 620, cols 15 to 28
/*match case 1:|ignore-dquote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 620, cols 15 to 28
      if(!(_vI90619_respectful_parse__apos_3_mv_2340%3==0) ) goto _ml2342_L90674;
    // # C:/projects/felix/src/packages/strings.fdoc: line 621, cols 15 to 27
      {if(FLX_UNLIKELY(!(0)))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/strings.fdoc",621,15,621,27);}
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 620, cols 15 to 28
    _ml2342_L90674:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 623, cols 15 to 26
/*match case 2:|keep-dquote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 623, cols 15 to 26
      if(!(_vI90619_respectful_parse__apos_3_mv_2340%3==1) ) goto _ml2343_L90675;
    // # C:/projects/felix/src/packages/strings.fdoc: line 624, cols 15 to 27
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109152 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109152)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 625, cols 15 to 28
      //mode<90630>varname = copying<15000>varname;
      _vI90630_mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 623, cols 15 to 26
    _ml2343_L90675:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 626, cols 15 to 26
/*match case 3:|drop-dquote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 626, cols 15 to 26
      if(!(_vI90619_respectful_parse__apos_3_mv_2340%3==2) ) goto _ml2344_L90676;
    // # C:/projects/felix/src/packages/strings.fdoc: line 627, cols 15 to 28
      //mode<90630>varname = copying<15000>varname;
      _vI90630_mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 626, cols 15 to 26
    _ml2344_L90676:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 628, cols 13 to 22
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 628, cols 13 to 22
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",628,13,628,22);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",628,13,628,22);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 641, cols 11 to 15
    _ifdoend_std_1996_L90678:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 640, cols 11 to 27
      if(!((ch_param_std_1986 == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoend_std_1999_L90683;
    // # C:/projects/felix/src/packages/strings.fdoc: line 630, cols 19 to 31
      //respectful_parse'3_mv_2345<90623> := apply((prj1:record(dquote:(dquote_action_t),escape:(escape_action_t),quote:(quote_action_t)) -> escape_action_t), action_uncurry_uncurry<90698>varname);
      _vI90623_respectful_parse__apos_3_mv_2345  = action_uncurry_uncurry.escape; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 631, cols 15 to 28
/*match case 1:|ignore-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 631, cols 15 to 28
      if(!(_vI90623_respectful_parse__apos_3_mv_2345%3==0) ) goto _ml2347_L90679;
    // # C:/projects/felix/src/packages/strings.fdoc: line 632, cols 15 to 27
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109154 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109154)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 631, cols 15 to 28
    _ml2347_L90679:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 633, cols 15 to 26
/*match case 2:|keep-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 633, cols 15 to 26
      if(!(_vI90623_respectful_parse__apos_3_mv_2345%3==1) ) goto _ml2348_L90680;
    // # C:/projects/felix/src/packages/strings.fdoc: line 634, cols 15 to 27
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109155 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109155)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 635, cols 15 to 34
      //mode<90630>varname = escape-dquote<15012>varname;
      _vI90630_mode = /*VR_int*/6; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 633, cols 15 to 26
    _ml2348_L90680:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 636, cols 15 to 26
/*match case 3:|drop-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 636, cols 15 to 26
      if(!(_vI90623_respectful_parse__apos_3_mv_2345%3==2) ) goto _ml2349_L90681;
    // # C:/projects/felix/src/packages/strings.fdoc: line 637, cols 15 to 34
      //mode<90630>varname = escape-dquote<15012>varname;
      _vI90630_mode = /*VR_int*/6; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 636, cols 15 to 26
    _ml2349_L90681:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 638, cols 13 to 22
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 638, cols 13 to 22
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",638,13,638,22);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",638,13,638,22);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 640, cols 11 to 27
    _ifdoend_std_1999_L90683:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 640, cols 13 to 25
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109157 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109157)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 617, cols 11 to 17
    _ml2339_L90686:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 643, cols 11 to 25
/*match case 4:|escape-copying*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 643, cols 11 to 25
      if(!(_vI90606_respectful_parse__apos_3_mv_2325%7==4) ) goto _ml2350_L90687;
    // # C:/projects/felix/src/packages/strings.fdoc: line 644, cols 12 to 24
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109158 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109158)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 645, cols 12 to 25
      //mode<90630>varname = copying<15000>varname;
      _vI90630_mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 643, cols 11 to 25
    _ml2350_L90687:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 647, cols 11 to 23
/*match case 5:|escape-quote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 647, cols 11 to 23
      if(!(_vI90606_respectful_parse__apos_3_mv_2325%7==5) ) goto _ml2351_L90688;
    // # C:/projects/felix/src/packages/strings.fdoc: line 648, cols 12 to 24
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109159 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109159)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 649, cols 12 to 23
      //mode<90630>varname = quote<15004>varname;
      _vI90630_mode = /*VR_int*/2; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 647, cols 11 to 23
    _ml2351_L90688:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 651, cols 11 to 24
/*match case 6:|escape-dquote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 651, cols 11 to 24
      if(!(_vI90606_respectful_parse__apos_3_mv_2325%7==6) ) goto _ml2352_L90689;
    // # C:/projects/felix/src/packages/strings.fdoc: line 652, cols 12 to 24
      // primcall +=<14303>primproc (&current<90631>ref, ch_param_std_1986<90657>varname);
      {
      _a14239t_107672* _tmp109160 = (_a14239t_107672*)&_vI90631_current;
      *((_tmp109160)) += ch_param_std_1986;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 653, cols 12 to 24
      //mode<90630>varname = dquote<15006>varname;
      _vI90630_mode = /*VR_int*/3; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 651, cols 11 to 24
    _ml2352_L90689:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 655, cols 11 to 19
/*match case 7:|skipping*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 655, cols 11 to 19
      if(!(_vI90606_respectful_parse__apos_3_mv_2325%7==1) ) goto _ml2353_L90692;
    // # C:/projects/felix/src/packages/strings.fdoc: line 658, cols 11 to 15
      if(!((((int)(::flx::rtl::strutil::subscript(::std::string(" "),0)) ) < ((int)ch_param_std_1986 ))) ) goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      //run procedure stackcall handlecopying<90633>stackproc  ch_param_std_1986<90657>varname;
      {
      handlecopying(FLX_FPAR_PASS this)
      .stack_call(ch_param_std_1986);
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 655, cols 11 to 19
    _ml2353_L90692:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 659, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 659, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",659,9,659,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",659,9,659,18);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto continue__ll_strings_7415_L90659;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
    _ml2324_L90694:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      if(!(FLX_VNI(_vI90603_respectful_parse__apos_3_mv_2322)==0) ) goto _ml2355_L90695;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      goto _em2322_L90696;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
    _ml2355_L90695:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",660,7,660,11);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",660,7,660,11);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 660, cols 7 to 11
    _em2322_L90696:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 661, cols 7 to 72
      //return ( current:current<90631>varname, mode:mode<90630>varname, parsed:(join_uncurry<89534>stackfun (apply((prj2:record(current:(string),mode:(mode_t),parsed:(list)) -> list), state_uncurry<90697>varname), result<90632>varname)));: type _art107719
      return _art107719(_vI90631_current, _vI90630_mode, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(state_uncurry.parsed, _vI90632_result)) /* apply_stack */);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",662,5,662,6); // HACK! 
}

//------------------------------
//FUNCTION <66285>: toolchain_msvc_win32::host_os: Apply method
_a14239t_107672 host_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1731, cols 3 to 35
      //return "Win32";: type _a14239t_107672
      return ::std::string("Win32");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1731,3,1731,35); // HACK! 
}

//------------------------------
//FUNCTION <103279>: handle_filename::_lam_1596: Apply method
 ::flx::rtl::cl_t _lam_1596::apply(_a14239t_107672 const &_arg ){
  _vI103280_a = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 766, cols 11 to 32
      //return (eq<81159>stackfun (a<103280>varname, apply((prj1:string^2 -> string), (split_extension<83124>stackfun arg<68008>varname))));: type  ::flx::rtl::cl_t
      return eq(_vI103280_a, (split_extension(ptrhandle_filename->_vI68008_arg).data)[1]);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",766,11,766,32); // HACK! 
}

//------------------------------
//FUNCTION <103687>: setup-from-file_uncurry::_lam_65634: Apply method
 ::flx::rtl::cl_t _lam_65634::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",959,3,959,7); // HACK! 
}

//------------------------------
//FUNCTION <106001>: flx_processing::runit: Apply method
int runit::apply(_pt107743* const &_arg ){
  _vI106003_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2909, cols 5 to 19
      //result<106002>varname = 0;
      _vI106002_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2915, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.FELIX == 1)) ) goto _ifdoend_bootflx_65986_L106005;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2911, cols 7 to 54
      //_genout_urv100552<106663> := (run_felix_compiler_if_required<105786>stackfun ehandler<106003>varname);
      _genout_urv100552  = run_felix_compiler_if_required(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106003_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2911, cols 7 to 54
      //result<106002>varname = _genout_urv100552<106663>varname;
      _vI106002_result = _genout_urv100552; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2912, cols 7 to 35
      if(!(!((_vI106002_result == 0)) ) ) goto _ifdoelse_bootflx_65987_L106006;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2912, cols 7 to 35
      //return result<106002>varname;: type int
      return _vI106002_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2915, cols 5 to 9
      goto _ifdoelse_bootflx_65987_L106006;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2915, cols 5 to 9
    _ifdoend_bootflx_65986_L106005:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65987_L106006;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Felix compilation skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp109164 = (::std::string("[flx] ") + ::std::string("Felix compilation skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109164)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2915, cols 5 to 9
    _ifdoelse_bootflx_65987_L106006:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<105735>stackproc  ehandler<106003>varname;
      {
      calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI106003_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2924, cols 5 to 9
      if(!(!((ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65991_L106008;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 33 to 41
      //dirname_mv_730<106667> := (split1<84047>stackfun apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname));
      dirname_mv_730  = split1(FLX_FPAR_PASS_ONLY)
      .apply(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 50 to 52
/*match case 1:(d_param_std_676, any)*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 79, cols 50 to 50
      //d_param_std_676<106668>varname = apply((prj0:string^2 -> string), dirname_mv_730<106667>varname);
      d_param_std_676 = (dirname_mv_730.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1101, cols 5 to 6
  mkdirs(FLX_FPAR_PASS d_param_std_676);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2924, cols 5 to 9
    _ifdoelse_bootflx_65991_L106008:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2931, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CCOMPILEIT == 1)) ) goto _ifdoend_bootflx_65992_L106010;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2927, cols 7 to 52
      //_genout_urv100592<106669> := (run_cxx_compiler_if_required<105833>stackfun ehandler<106003>varname);
      _genout_urv100592  = run_cxx_compiler_if_required(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106003_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2927, cols 7 to 52
      //result<106002>varname = _genout_urv100592<106669>varname;
      _vI106002_result = _genout_urv100592; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2928, cols 7 to 35
      if(!(!((_vI106002_result == 0)) ) ) goto _ifdoelse_bootflx_65993_L106011;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2928, cols 7 to 35
      //return result<106002>varname;: type int
      return _vI106002_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2931, cols 5 to 9
      goto _ifdoelse_bootflx_65993_L106011;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2931, cols 5 to 9
    _ifdoend_bootflx_65992_L106010:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65993_L106011;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++ compilation (and linking and running) skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp109166 = (::std::string("[flx] ") + ::std::string("C++ compilation (and linking and running) skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109166)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2931, cols 5 to 9
    _ifdoelse_bootflx_65993_L106011:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2937, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CCOMPILEIT == 1)) ) goto _ifdoend_bootflx_65996_L106012;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2434, cols 4 to 33
      //_genout_urv100603<106673> := (ocaml_compile<105838>stackfun ehandler<106003>varname);
      _genout_urv100603  = ocaml_compile(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106003_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2934, cols 7 to 54
      //result<106002>varname = _genout_urv100603<106673>varname;
      _vI106002_result = _genout_urv100603; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2937, cols 5 to 9
      goto _ifdoelse_bootflx_65997_L106013;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2937, cols 5 to 9
    _ifdoend_bootflx_65996_L106012:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65997_L106013;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Ocaml compilation skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp109167 = (::std::string("[flx] ") + ::std::string("Ocaml compilation skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109167)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2937, cols 5 to 9
    _ifdoelse_bootflx_65997_L106013:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2944, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.LINKIT == 1)) ) goto _ifdoend_bootflx_65998_L106015;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2940, cols 7 to 46
      //_genout_urv100611<106677> := (run_linker_if_required<105948>stackfun ehandler<106003>varname);
      _genout_urv100611  = run_linker_if_required(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106003_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2940, cols 7 to 46
      //result<106002>varname = _genout_urv100611<106677>varname;
      _vI106002_result = _genout_urv100611; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2941, cols 7 to 35
      if(!(!((_vI106002_result == 0)) ) ) goto _ifdoelse_bootflx_65999_L106016;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2941, cols 7 to 35
      //return result<106002>varname;: type int
      return _vI106002_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2944, cols 5 to 9
      goto _ifdoelse_bootflx_65999_L106016;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2944, cols 5 to 9
    _ifdoend_bootflx_65998_L106015:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65999_L106016;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Link step skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp109168 = (::std::string("[flx] ") + ::std::string("Link step skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109168)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2944, cols 5 to 9
    _ifdoelse_bootflx_65999_L106016:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2951, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.RUNIT == 1)) ) goto _ifdoend_bootflx_66002_L106018;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2947, cols 7 to 47
      //_genout_urv100622<106681> := (run_program_if_required<105983>stackfun ehandler<106003>varname);
      _genout_urv100622  = run_program_if_required(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106003_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2947, cols 7 to 47
      //result<106002>varname = _genout_urv100622<106681>varname;
      _vI106002_result = _genout_urv100622; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2948, cols 7 to 35
      if(!(!((_vI106002_result == 0)) ) ) goto _ifdoelse_bootflx_66003_L106019;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2948, cols 7 to 35
      //return result<106002>varname;: type int
      return _vI106002_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2951, cols 5 to 9
      goto _ifdoelse_bootflx_66003_L106019;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2951, cols 5 to 9
    _ifdoend_bootflx_66002_L106018:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_66003_L106019;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Running program skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp109169 = (::std::string("[flx] ") + ::std::string("Running program skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109169)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2951, cols 5 to 9
    _ifdoelse_bootflx_66003_L106019:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2956, cols 5 to 9
      if(!(!((ptrflx_processing->_vI106023_control.EXPECT == ::std::string(""))) ) ) goto _ifdoelse_bootflx_66007_L106022;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2954, cols 7 to 40
      //_genout_urv100639<106685> := (check_output_if_required<105988>stackfun ());
      _genout_urv100639  = check_output_if_required(ptrflx_processing)
      .apply() /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2954, cols 7 to 40
      //result<106002>varname = _genout_urv100639<106685>varname;
      _vI106002_result = _genout_urv100639; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2955, cols 7 to 35
      if(!(!((_vI106002_result == 0)) ) ) goto _ifdoelse_bootflx_66007_L106022;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2955, cols 7 to 35
      //return result<106002>varname;: type int
      return _vI106002_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2956, cols 5 to 9
    _ifdoelse_bootflx_66007_L106022:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2957, cols 5 to 18
      //return result<106002>varname;: type int
      return _vI106002_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2958,3,2958,4); // HACK! 
}

//------------------------------
//FUNCTION <68620>: flx_pkgconfig::get_variable: Apply method
_at107674 get_variable::apply(_a14239t_107672 const &_arg ){
  _vI68633_line = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 52 to 66
      //find_mv_2105<96642> := (stl_find<14446>primfun (line<68633>varname, (subscript<81183>primfun[int] ("=", 0))));
      _vI96642_find_mv_2105  = _vI68633_line.find((::flx::rtl::strutil::subscript(::std::string("="),0))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
/*match case 1:(i_param_std_1892 when (== (i_param_std_1892, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
      if(!((_vI96642_find_mv_2105 == ::std::string::npos)) ) goto _ml2107_L96644;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //get_variable_mv_65259<96638> := None<81378>varname;
      get_variable_mv_65259  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      goto _end_inline_find_96622_L96645;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 75 to 94
    _ml2107_L96644:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
/*match case 2:i_param_std_1893*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 112 to 112
      //i_param_std_1893<96643>varname = find_mv_2105<96642>varname;
      _vI96643_i_param_std_1893 = _vI96642_find_mv_2105; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 46 to 122
      //get_variable_mv_65259<96638> := (Some<81379>struct i_param_std_1893<96643>varname);
      get_variable_mv_65259  = FLX_VNR(1, new(*PTF gcp, _a5094t_107688_ptr_map, true) _a5094t_107688 (_vI96643_i_param_std_1893)); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 279, cols 3 to 132
    _end_inline_find_96622_L96645:;
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 264, cols 11 to 15
/*match case 1:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 264, cols 11 to 15
      if(!(FLX_VNI(get_variable_mv_65259)==0) ) goto _ml65261_L96640;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 9 to 56
      //return ("", "");: type _at107674
      return _at107674(::std::string(""), ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 264, cols 11 to 15
    _ml65261_L96640:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 11 to 16
/*match case 2:|Some n_param_bootflx_65181*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 11 to 16
      if(!andthen(FLX_VNI(get_variable_mv_65259)==1, (FLX_NEWP(_lam_65276)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65262_L96641;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 16 to 16
      //n_param_bootflx_65181<96639>varname = (arg of case 1 of get_variable_mv_65259<96638>varname);
      n_param_bootflx_65181 = *((_a5094t_107688*)FLX_VNP(get_variable_mv_65259)); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 450, cols 3 to 61
      //get_variable_mv_65264<96647> := (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyto<81376>primfun[size] (line<68633>varname, n_param_bootflx_65181<96639>varname)), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      get_variable_mv_65264  = lstrip(rstrip(::flx::rtl::strutil::substr(_vI68633_line,0,n_param_bootflx_65181), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 266, cols 17 to 20
/*match case 1:name_param_bootflx_65182*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 266, cols 17 to 20
      //name_param_bootflx_65182<96648>varname = get_variable_mv_65264<96647>varname;
      name_param_bootflx_65182 = get_variable_mv_65264; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 450, cols 3 to 61
      //get_variable_mv_65268<96649> := (lstrip<14855>stackfun ((rstrip<14873>stackfun ((copyfrom<81377>primfun[size] (line<68633>varname, (+<5396>primfun (n_param_bootflx_65181<96639>varname, 1)))), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      get_variable_mv_65268  = lstrip(rstrip(::flx::rtl::strutil::substr(_vI68633_line,n_param_bootflx_65181 + 1 ,_vI68633_line.size()), ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 267, cols 17 to 21
/*match case 1:value_param_bootflx_65183*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 267, cols 17 to 21
      //value_param_bootflx_65183<96650>varname = get_variable_mv_65268<96649>varname;
      value_param_bootflx_65183 = get_variable_mv_65268; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 16 to 28
      //get_variable_mv_65272<96651> := (check_id<68599>stackfun name_param_bootflx_65182<96648>varname);
      get_variable_mv_65272  = check_id(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(name_param_bootflx_65182) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
      if(!(get_variable_mv_65272%2==1) ) goto _ml65274_L96652;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
      //return (name_param_bootflx_65182<96648>varname, value_param_bootflx_65183<96650>varname);: type _at107674
      return _at107674(name_param_bootflx_65182, value_param_bootflx_65183);
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
    _ml65274_L96652:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 13 to 55
      //return ("", "");: type _at107674
      return _at107674(::std::string(""), ::std::string(""));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 265, cols 11 to 16
    _ml65262_L96641:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 9 to 56
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 268, cols 9 to 56
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",268,9,268,56);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",268,9,268,56);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",270,5,270,8); // HACK! 
}

//------------------------------
//FUNCTION <68386>: FlxPkgConfigQuery::getpkgfieldopt: Apply method
_ft107749* getpkgfieldopt::apply(_pt107743* const &_arg ){
  _vI68400_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 536, cols 5 to 6
      //return getpkgfieldopt'2<68388>closure;: type _ft107749*
      return (FLX_NEWP(_fI68388_getpkgfieldopt__apos_2)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",536,5,536,6); // HACK! 
}

//------------------------------
//FUNCTION <106599>: flx_processing::run_program_dynamic::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI106599__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <107324>: flx_processing::ocaml_compile::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI107324__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <99206>: cxx_depcheck::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI99206__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <89860>: gramtime_uncurry::_lam_65074: Apply method
 ::flx::rtl::cl_t _lam_65074::apply(_a14239t_107672 const &_arg ){
  _vI89861_s = _arg;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //return (lnot<5216>primfun (==<80464>primfun[string] (s<89861>varname, "")));: type  ::flx::rtl::cl_t
      return !((_vI89861_s == ::std::string(""))) ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",101,23,101,47); // HACK! 
}

//------------------------------
//C FUNC <82067>: repr
_a14239t_107672 repr(char _vI82068_c){
  _a14239t_107672 repr_mv_202;
  _a14239t_107672 _vI82085_s;
    // # C:/projects/felix/src/packages/char.fdoc: line 88, cols 5 to 18
      //s<82085>varname = (str<82084>primfun[char] c<82068>varname);
      _vI82085_s = ::flx::rtl::strutil::str<char>(_vI82068_c); //assign simple
    // # C:/projects/felix/src/packages/char.fdoc: line 90, cols 13 to 13
      //repr_mv_202<95684> := s<82085>varname;
      repr_mv_202  = _vI82085_s; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/char.fdoc: line 91, cols 9 to 11
/*match case 1:"'"*/
    // # C:/projects/felix/src/packages/char.fdoc: line 91, cols 9 to 11
      if(!((::std::string("'") == repr_mv_202)) ) goto _ml204_L95683;
    // # C:/projects/felix/src/packages/char.fdoc: line 97, cols 7 to 18
      //return "\'";: type _a14239t_107672
      return ::std::string("\\'");
    // # C:/projects/felix/src/packages/char.fdoc: line 91, cols 9 to 11
    _ml204_L95683:;
    // # C:/projects/felix/src/packages/char.fdoc: line 92, cols 9 to 12
/*match case 2:"	"*/
    // # C:/projects/felix/src/packages/char.fdoc: line 92, cols 9 to 12
      if(!((::std::string("\x09") == repr_mv_202)) ) goto _ml205_L95682;
    // # C:/projects/felix/src/packages/char.fdoc: line 97, cols 7 to 18
      //return "\t";: type _a14239t_107672
      return ::std::string("\\t");
    // # C:/projects/felix/src/packages/char.fdoc: line 92, cols 9 to 12
    _ml205_L95682:;
    // # C:/projects/felix/src/packages/char.fdoc: line 93, cols 9 to 12
/*match case 3:"
"*/
    // # C:/projects/felix/src/packages/char.fdoc: line 93, cols 9 to 12
      if(!((::std::string("\n") == repr_mv_202)) ) goto _ml206_L95681;
    // # C:/projects/felix/src/packages/char.fdoc: line 97, cols 7 to 18
      //return "\n";: type _a14239t_107672
      return ::std::string("\\n");
    // # C:/projects/felix/src/packages/char.fdoc: line 93, cols 9 to 12
    _ml206_L95681:;
    // # C:/projects/felix/src/packages/char.fdoc: line 94, cols 9 to 12
/*match case 4:""*/
    // # C:/projects/felix/src/packages/char.fdoc: line 94, cols 9 to 12
      if(!((::std::string("\x0D") == repr_mv_202)) ) goto _ml207_L95680;
    // # C:/projects/felix/src/packages/char.fdoc: line 97, cols 7 to 18
      //return "\r";: type _a14239t_107672
      return ::std::string("\\r");
    // # C:/projects/felix/src/packages/char.fdoc: line 94, cols 9 to 12
    _ml207_L95680:;
    // # C:/projects/felix/src/packages/char.fdoc: line 95, cols 9 to 12
/*match case 5:""*/
    // # C:/projects/felix/src/packages/char.fdoc: line 95, cols 9 to 12
      if(!((::std::string("\x0C") == repr_mv_202)) ) goto _ml208_L95679;
    // # C:/projects/felix/src/packages/char.fdoc: line 97, cols 7 to 18
      //return "\f";: type _a14239t_107672
      return ::std::string("\\f");
    // # C:/projects/felix/src/packages/char.fdoc: line 95, cols 9 to 12
    _ml208_L95679:;
    // # C:/projects/felix/src/packages/char.fdoc: line 96, cols 9 to 12
/*match case 6:""*/
    // # C:/projects/felix/src/packages/char.fdoc: line 96, cols 9 to 12
      if(!((::std::string("\x0B") == repr_mv_202)) ) goto _ml209_L95678;
    // # C:/projects/felix/src/packages/char.fdoc: line 97, cols 7 to 18
      //return "\v";: type _a14239t_107672
      return ::std::string("\\v");
    // # C:/projects/felix/src/packages/char.fdoc: line 96, cols 9 to 12
    _ml209_L95678:;
    // # C:/projects/felix/src/packages/char.fdoc: line 97, cols 9 to 9
/*match case 7:any*/
    // # C:/projects/felix/src/packages/char.fdoc: line 97, cols 7 to 18
      //return s<82085>varname;: type _a14239t_107672
      return _vI82085_s;
}
//------------------------------

//PROCEDURE <99186:> cxx_depcheck::_lam_641: Call method
::flx::rtl::con_t * _lam_641::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI99187_s = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <99186:> cxx_depcheck::_lam_641: Resume method
::flx::rtl::con_t *_lam_641::resume(){
    // # C:/projects/felix/src/packages/io.fdoc: line 429, cols 29 to 41
      // primcall writeln<8438>primproc (f<99185>varname, s<99187>varname);
      ::flx::rtl::ioutil::writeln((ptrcxx_depcheck->f),_vI99187_s);
    // # C:/projects/felix/src/packages/io.fdoc: line 429, cols 11 to 43
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//C FUNC <82955>: basic_get_stdout
_tt107757 basic_get_stdout(_a14239t_107672 _vI82956_cmd){
  _a17040t_107972 _genout_urv92690;
  _a14239t_107672 _genout_urv92689;
   ::flx::rtl::cl_t _genout_urv92688;
  _a8394t_107876 _genout_urv92687;
  _a17040t_107972 _genout_urv92666;
  _a14239t_107672 _genout_urv92665;
   ::flx::rtl::cl_t _genout_urv92664;
  _a8394t_107876 _genout_urv92663;
  _a17040t_107972 _vI92679_result;
  _a14239t_107672 _vI92678_output;
  _a8394t_107876 fout;
    // # C:/projects/felix/src/packages/program.fdoc: line 1062, cols 7 to 43
      //_genout_urv92687<92687> := (popen_in<17038>primfun (+<14305>primfun ((+<14305>primfun (""", cmd<82956>varname)), """)));
      _genout_urv92687  = _popen(((::std::string("\"") + _vI82956_cmd ) + ::std::string("\"") ).c_str(), "r"); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1062, cols 7 to 43
      //_genout_urv92663<92682> := _genout_urv92687<92687>varname;
      _genout_urv92663  = _genout_urv92687; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1062, cols 7 to 43
      //fout<92677>varname = _genout_urv92663<92682>varname;
      fout = _genout_urv92663; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1070, cols 7 to 11
      //_genout_urv92688<92688> := (valid<8422>primfun fout<92677>varname);
      _genout_urv92688  = fout!=(FILE*)0; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1070, cols 7 to 11
      //_genout_urv92664<92683> := _genout_urv92688<92688>varname;
      _genout_urv92664  = _genout_urv92688; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1070, cols 7 to 11
      if(!_genout_urv92664 ) goto _ifdoend_std_2795_L92681;
    // # C:/projects/felix/src/packages/program.fdoc: line 1064, cols 9 to 31
      //_genout_urv92689<92689> := (load<8424>primfun fout<92677>varname);
      _genout_urv92689  = ::flx::rtl::ioutil::load_file(fout); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1064, cols 9 to 31
      //_genout_urv92665<92684> := _genout_urv92689<92689>varname;
      _genout_urv92665  = _genout_urv92689; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1064, cols 9 to 31
      //output<92678>varname = _genout_urv92665<92684>varname;
      _vI92678_output = _genout_urv92665; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1065, cols 9 to 47
      //_genout_urv92690<92690> := (pclose<17039>primfun fout<92677>varname);
      _genout_urv92690  = _pclose(fout); //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1065, cols 9 to 47
      //_genout_urv92666<92685> := _genout_urv92690<92690>varname;
      _genout_urv92666  = _genout_urv92690; //init
    // # C:/projects/felix/src/packages/program.fdoc: line 1065, cols 9 to 47
      //result<92679>varname = _genout_urv92666<92685>varname;
      _vI92679_result = _genout_urv92666; //assign simple
    // # C:/projects/felix/src/packages/program.fdoc: line 1066, cols 9 to 68
      //return ((int_of_process_status_t<17044>primfun result<92679>varname), output<92678>varname);: type _tt107757
      return _tt107757((int)_vI92679_result , _vI92678_output);
    // # C:/projects/felix/src/packages/program.fdoc: line 1070, cols 7 to 11
    _ifdoend_std_2795_L92681:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Unable to run command '", (+<14305>primfun ((+<14305>primfun ((+<14305>primfun (""", cmd<82956>varname)), """)), "'")))), "\x0A")));
      {
      _a14239t_107672 _tmp109171 = (::std::string("Unable to run command '") + (((::std::string("\"") + _vI82956_cmd ) + ::std::string("\"") ) + ::std::string("'") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109171)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/program.fdoc: line 1069, cols 9 to 21
      //return (-1, "");: type _tt107757
      return _tt107757(-1, ::std::string(""));
}
//------------------------------
//FUNCTION <97080>: flx_pkgconfig::handle_pkg::_lam_65277::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97080__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <105763>: flx_processing::cal_time_from_flxdepfile::maxf::maxf'2: Apply method
double _fI105763_maxf__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI105766_f = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2114, cols 7 to 34
      if(!((_vI105766_f == ::std::string(""))) ) goto _ifdoend_bootflx_65859_L105767;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2114, cols 21 to 29
      //return x<105768>varname;: type double
      return ptr_fI105762_maxf->_vI105768_x;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2114, cols 7 to 34
    _ifdoend_bootflx_65859_L105767:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2115, cols 7 to 42
      //ext<105764>varname = apply((prj1:string^2 -> string), (split_extension<83124>stackfun f<105766>varname));
      ext = (split_extension(_vI105766_f).data)[1]; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //maxf'2_mv_66029<106125> := (lnot<5216>primfun (==<80464>primfun[string] (ext<105764>varname, "")));
      _vI106125_maxf__apos_2_mv_66029  = !((ext == ::std::string(""))) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
      if(!(_vI106125_maxf__apos_2_mv_66029%2==1) ) goto _ml66031_L106126;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
      //_urv98428<106124> := (dfiletime<82503>stackfun (f<105766>varname, (neg<82781>primfun[double] literal[double]("1.0"))));
      _urv98428  = dfiletime(_vI105766_f, - 1.0 ); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
      goto _end_hash_699248310;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
    _ml66031_L106126:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<106128> := (<<82604>primfun[double] ((dfiletime<82503>stackfun ((+<14305>primfun (f<105766>varname, ".fdoc")), (neg<82781>primfun[double] literal[double]("1.0")))), (dfiletime<82503>stackfun ((+<14305>primfun (f<105766>varname, ".flx")), (neg<82781>primfun[double] literal[double]("1.0"))))));
      _vI106128_max_mv_106  = (dfiletime(_vI105766_f + ::std::string(".fdoc") , - 1.0 ) < dfiletime(_vI105766_f + ::std::string(".flx") , - 1.0 )); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI106128_max_mv_106%2==1) ) goto _ml108_L106127;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv98428<106124> := (dfiletime<82503>stackfun ((+<14305>primfun (f<105766>varname, ".flx")), (neg<82781>primfun[double] literal[double]("1.0"))));
      _urv98428  = dfiletime(_vI105766_f + ::std::string(".flx") , - 1.0 ); //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      goto _end_hash_699248310;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L106127:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv98428<106124> := (dfiletime<82503>stackfun ((+<14305>primfun (f<105766>varname, ".fdoc")), (neg<82781>primfun[double] literal[double]("1.0"))));
      _urv98428  = dfiletime(_vI105766_f + ::std::string(".fdoc") , - 1.0 ); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2117, cols 16 to 121
    _end_hash_699248310:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2118, cols 7 to 8
      //ft<105765>varname = _urv98428<106124>varname;
      ft = _urv98428; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2119, cols 7 to 59
      //run procedure call debugln<105772>varname (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Time ", f<105766>varname)), " = ")), (strfiletime<82509>stackfun ft<105765>varname)));
      {
        ::flx::rtl::con_t *_p = (ptrcal_time_from_flxdepfile->_vI105772_debugln)->clone()
      ->call(0, ((::std::string("Time ") + _vI105766_f ) + ::std::string(" = ") ) + strfiletime(FLX_FPAR_PASS ft) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 15 to 40
      //maxf'2_mv_66034<106131> := (==<82539>primfun[double] (ft<105765>varname, (neg<82781>primfun[double] literal[double]("1.0"))));
      _vI106131_maxf__apos_2_mv_66034  = (ft == - 1.0 ); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
      if(!(_vI106131_maxf__apos_2_mv_66034%2==1) ) goto _ml66036_L106132;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 289, cols 3 to 42
      //_urv98473<106130> := (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1));
      _urv98473  = static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 289, cols 3 to 42
      goto _end_hash_497988069;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
    _ml66036_L106132:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
      //_urv98473<106130> := ft<105765>varname;
      _urv98473  = ft; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 12 to 76
    _end_hash_497988069:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2120, cols 7 to 76
      //ft<105765>varname = _urv98473<106130>varname;
      ft = _urv98473; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<106135> := (<<82604>primfun[double] (x<105768>varname, ft<105765>varname));
      _vI106135_max_mv_106  = (ptr_fI105762_maxf->_vI105768_x < ft); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI106135_max_mv_106%2==1) ) goto _ml108_L106134;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return ft<105765>varname;: type double
      return ft;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L106134:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return x<105768>varname;: type double
      return ptr_fI105762_maxf->_vI105768_x;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2122,5,2122,6); // HACK! 
}

//------------------------------
//FUNCTION <99791>: subscript::_lam_2055: Apply method
 ::flx::rtl::cl_t _lam_2055::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 223, cols 7 to 24
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",223,7,223,24); // HACK! 
}

//------------------------------
//FUNCTION <106917>: flx_processing::check_binary_uptodate::maxf::maxf'2: Apply method
double _fI106917_maxf__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI106918_f = _arg;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<107468> := (<<82604>primfun[double] (t<106919>varname, (dfiletime<82503>stackfun (f<106918>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))))));
      _vI107468_max_mv_106  = (ptr_fI106916_maxf->_vI106919_t < dfiletime(_vI106918_f, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI107468_max_mv_106%2==1) ) goto _ml108_L107467;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return (dfiletime<82503>stackfun (f<106918>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));: type double
      return dfiletime(_vI106918_f, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)));
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L107467:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return t<106919>varname;: type double
      return ptr_fI106916_maxf->_vI106919_t;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2723,5,2723,95); // HACK! 
}

//------------------------------
//FUNCTION <103668>: setup-from-file_uncurry::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI103668__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <98783>: run_felix_compiler::aux_uncurry: Apply method
void* _fI98783_aux_uncurry::apply(_at107697 const &_arg ){
  _vI98784_inp_uncurry = _arg.data[0];
  _vI98785_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L98792:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<98788> := inp_uncurry<98784>varname;
      _vI98788_aux__apos_2_mv_1381  = _vI98784_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI98788_aux__apos_2_mv_1381)==0) ) goto _ml1383_L98787;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<98785>varname;: type void*
      return _vI98785_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L98787:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI98788_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI98791__lam_1385)(FLX_FPAR_PASS this, ptrrun_felix_compiler))) ) goto _ml1384_L98786;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<98789>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<98788>varname));
      _vI98789_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI98788_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<98790>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<98788>varname));
      _vI98790_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI98788_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<98785> := (Snoc<80397>struct (out<98785>varname, (_lam_65389<68297>stackfun h_param_std_1267<98789>varname)));
      _vI98785_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98785_out, _lam_65389(ptrrun_felix_compiler)
      .apply(_vI98789_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<98784> := t_param_std_1266<98790>varname;
      _vI98784_inp_uncurry  = _vI98790_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L98792;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L98786:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <105500>: FlxPkgConfigQuery::getpkgfieldopt_uncurry::_lam_65357: Apply method
 ::flx::rtl::cl_t _fI105500__lam_65357::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 9 to 23
      //return (match case 0)(apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] getpkgfieldopt'2_mv_65354<90251>varname)));: type  ::flx::rtl::cl_t
      return FLX_VNI((reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>((ptrgetpkgfieldopt_uncurry->_vI90251_getpkgfieldopt__apos_2_mv_65354)))).mem_1)==0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",528,9,528,23); // HACK! 
}

//------------------------------
//FUNCTION <66616>: toolchain_gcc_osx::dynamic_library_extension: Apply method
_a14239t_107672 _fI66616_dynamic_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 976, cols 3 to 54
      //return ".dylib";: type _a14239t_107672
      return ::std::string(".dylib");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",976,3,976,54); // HACK! 
}

//------------------------------
//FUNCTION <105389>: FlxPkgConfigQuery::getpkgfield::getpkgfield'2::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI105389__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <97200>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97200__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <103033>: exts::aux_uncurry: Apply method
void* _fI103033_aux_uncurry::apply(_tt107865 const &_arg ){
  _vI103034_inp_uncurry = _arg.mem_0;
  _vI103035_out = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_103010_L103042:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<103038> := inp_uncurry<103034>varname;
      _vI103038_aux__apos_2_mv_1381  = _vI103034_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI103038_aux__apos_2_mv_1381)==0) ) goto _ml1383_L103037;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<103035>varname;: type void*
      return _vI103035_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L103037:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI103038_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI103041__lam_1385)(FLX_FPAR_PASS this, ptrexts))) ) goto _ml1384_L103036;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<103039>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<103038>varname));
      _vI103039_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI103038_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<103040>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<103038>varname));
      _vI103040_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI103038_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<103035> := (Snoc<81403>struct (out<103035>varname, (_lam_65651<68024>stackfun h_param_std_1267<103039>varname)));
      _vI103035_out  = FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(_vI103035_out, _lam_65651(ptrexts)
      .apply(_vI103039_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<103034> := t_param_std_1266<103040>varname;
      _vI103034_inp_uncurry  = _vI103040_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_103010_L103042;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L103036:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <96381>: flx_pkgconfig::add_val::aux_uncurry: Apply method
void* _fI96381_aux_uncurry::apply(_at107697 const &_arg ){
  _vI96382_x_uncurry = _arg.data[0];
  _vI96383_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L96390:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<96386> := x_uncurry<96382>varname;
      _vI96386_aux__apos_2_mv_1387  = _vI96382_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI96386_aux__apos_2_mv_1387)==0) ) goto _ml1389_L96385;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<96383>varname;: type void*
      return _vI96383_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L96385:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI96386_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI96389__lam_1391)(FLX_FPAR_PASS this, ptradd_val, ptrflx_pkgconfig))) ) goto _ml1390_L96384;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<96387>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<96386>varname));
      _vI96387_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI96386_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<96388>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<96386>varname));
      _vI96388_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI96386_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<96383> := (Snoc<80397>struct (y<96383>varname, h_param_std_1269<96387>varname));
      _vI96383_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96383_y, _vI96387_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<96382> := t_param_std_1268<96388>varname;
      _vI96382_x_uncurry  = _vI96388_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L96390;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L96384:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <66740>: toolchain_clang_linux::cxx_static_object_compiler: Apply method
int _fI66740_cxx_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66743_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1316, cols 5 to 6
      //result<66742>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_cxx_compile_flags<66687>varname, CCOBJ_STATIC_LIB:cxx_compiler<66684>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66743>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66743>varname)));
      _vI66742_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_linux->_vI66687_base_cxx_compile_flags, ptrtoolchain_clang_linux->_vI66684_cxx_compiler, ptrtoolchain_clang_linux->_vI66768_config.header_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.macros, ::std::string("-o "), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66743_spec.src, _vI66743_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1317, cols 5 to 18
      //return result<66742>varname;: type int
      return _vI66742_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1318,3,1318,4); // HACK! 
}

//------------------------------
//FUNCTION <94131>: generic_link_lib_dynamic_uncurry::aux_uncurry: Apply method
void* _fI94131_aux_uncurry::apply(_at107697 const &_arg ){
  _vI94132_inp_uncurry = _arg.data[0];
  _vI94133_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L94140:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<94136> := inp_uncurry<94132>varname;
      _vI94136_aux__apos_2_mv_1381  = _vI94132_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI94136_aux__apos_2_mv_1381)==0) ) goto _ml1383_L94135;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<94133>varname;: type void*
      return _vI94133_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L94135:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI94136_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI94139__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_link_lib_dynamic_uncurry))) ) goto _ml1384_L94134;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<94137>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<94136>varname));
      _vI94137_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI94136_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<94138>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<94136>varname));
      _vI94138_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI94136_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<94133> := (Snoc<80397>struct (out<94133>varname, (quote_arg<16873>stackfun h_param_std_1267<94137>varname)));
      _vI94133_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94133_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI94137_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<94132> := t_param_std_1266<94138>varname;
      _vI94132_inp_uncurry  = _vI94138_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L94140;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L94134:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <105774>: flx_processing::cal_cxx_uptodate: Apply method
 ::flx::rtl::cl_t cal_cxx_uptodate::apply(_tt107889 const &_arg ){
  _vI105779_debugln = _arg.mem_0;
  OUTPUT_DIR = _arg.mem_1;
  _vI105781_f = _arg.mem_2;
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<106155> := (+<14305>primfun (f<105781>varname, ".dep"));
      _vI106155_f  = _vI105781_f + ::std::string(".dep") ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI106155_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L106156;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<106155>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<106155>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<106155>varname, 2))));
      _vI106155_f = ::flx::rtl::strutil::substr(_vI106155_f,0,1) + ::flx::rtl::strutil::substr(_vI106155_f,2,_vI106155_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L106159;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L106156:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI106155_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L106159;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<106155>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<106155>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<106155>varname, 2))));
      _vI106155_f = (::flx::rtl::strutil::substr(_vI106155_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI106155_f,2,_vI106155_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L106159:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI106155_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L106161;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<106155>varname = (copyfrom<81959>primfun[int] (f<106155>varname, 1));
      _vI106155_f = ::flx::rtl::strutil::substr(_vI106155_f,1,_vI106155_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L106161:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<106154>varname = (join<82705>stackfun (OUTPUT_DIR<105780>varname, f<106155>varname));
      _vI106154_k = _fI82705_join(OUTPUT_DIR, _vI106155_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2139, cols 5 to 56
      //depfilename<105775>varname = k<106154>varname;
      depfilename = _vI106154_k; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2140, cols 5 to 53
      //run procedure call debugln<105779>varname (+<14305>primfun ("Dependency file name = ", depfilename<105775>varname));
      {
        ::flx::rtl::con_t *_p = (_vI105779_debugln)->clone()
      ->call(0, ::std::string("Dependency file name = ") + depfilename );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2141, cols 5 to 80
      //depfiletime<105776>varname = (dfiletime<82503>stackfun (depfilename<105775>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));
      depfiletime = dfiletime(depfilename, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2145, cols 5 to 9
      if(!((depfiletime == (static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/))))) ) goto _ifdoend_bootflx_65862_L105782;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2143, cols 7 to 47
      //run procedure call debugln<105779>varname "Dependency file doesn't exist";
      {
        ::flx::rtl::con_t *_p = (_vI105779_debugln)->clone()
      ->call(0, ::std::string("Dependency file doesn't exist"));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2144, cols 7 to 19
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2145, cols 5 to 9
    _ifdoend_bootflx_65862_L105782:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2147, cols 5 to 66
      //deptime<105777>varname = (cal_time_from_flxdepfile<105761>stackfun (debugln<105779>varname, depfilename<105775>varname));
      _vI105777_deptime = cal_time_from_flxdepfile(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt108171(_vI105779_debugln, depfilename)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2148, cols 5 to 59
      //run procedure call debugln<105779>varname (+<14305>primfun ("dep time = ", (strfiletime<82509>stackfun deptime<105777>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI105779_debugln)->clone()
      ->call(0, ::std::string("dep time = ") + strfiletime(FLX_FPAR_PASS _vI105777_deptime) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2149, cols 5 to 67
      //run procedure call debugln<105779>varname (+<14305>primfun ("depfile time = ", (strfiletime<82509>stackfun depfiletime<105776>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI105779_debugln)->clone()
      ->call(0, ::std::string("depfile time = ") + strfiletime(FLX_FPAR_PASS depfiletime) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2150, cols 5 to 45
      //cxx_uptodate<105778>varname = (<<82604>primfun[double] (deptime<105777>varname, depfiletime<105776>varname));
      cxx_uptodate = (_vI105777_deptime < depfiletime); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 49 to 60
      //cal_cxx_uptodate_mv_66048<106163> := cxx_uptodate<105778>varname;
      cal_cxx_uptodate_mv_66048  = cxx_uptodate; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
      if(!(cal_cxx_uptodate_mv_66048%2==1) ) goto _ml66050_L106164;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
      //_urv98599<106162> := "";
      _urv98599  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
      goto _end_hash_111334661;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
    _ml66050_L106164:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
      //_urv98599<106162> := " NOT ";
      _urv98599  = ::std::string(" NOT "); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 46 to 81
    _end_hash_111334661:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2151, cols 5 to 101
      //run procedure call debugln<105779>varname (+<14305>primfun ((+<14305>primfun ("cxx generated by flxg is = ", _urv98599<106162>varname)), "uptodate"));
      {
        ::flx::rtl::con_t *_p = (_vI105779_debugln)->clone()
      ->call(0, (::std::string("cxx generated by flxg is = ") + _urv98599 ) + ::std::string("uptodate") );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2152, cols 5 to 24
      //return cxx_uptodate<105778>varname;: type  ::flx::rtl::cl_t
      return cxx_uptodate;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2153,3,2153,4); // HACK! 
}

//------------------------------
//FUNCTION <105449>: FlxPkgConfigQuery::getpkgfield_uncurry::_lam_65346: Apply method
 ::flx::rtl::cl_t _fI105449__lam_65346::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 495, cols 9 to 13
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",495,9,495,13); // HACK! 
}

//------------------------------
//FUNCTION <105057>: gramtime_uncurry::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI105057__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <67005>: cxx_depcheck::maxf::maxf'2: Apply method
double _fI67005_maxf__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI67007_f = _arg;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<99098> := (<<82604>primfun[double] (t<67008>varname, (dfiletime<82503>stackfun (f<67007>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))))));
      max_mv_106  = (ptrmaxf->_vI67008_t < dfiletime(_vI67007_f, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)))); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(max_mv_106%2==1) ) goto _ml108_L99097;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return (dfiletime<82503>stackfun (f<67007>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));: type double
      return dfiletime(_vI67007_f, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)));
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L99097:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //return t<67008>varname;: type double
      return ptrmaxf->_vI67008_t;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",401,5,401,95); // HACK! 
}

//------------------------------
//FUNCTION <107254>: flx_processing::cxx_compile_dynamic::_lam_66072: Apply method
 ::flx::rtl::cl_t _fI107254__lam_66072::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2293,5,2293,9); // HACK! 
}

//------------------------------
//FUNCTION <66713>: toolchain_clang_linux::get_base_c_compile_flags: Apply method
void* _fI66713_get_base_c_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1227, cols 3 to 65
      //return base_c_compile_flags<66688>varname;: type void*
      return ptrtoolchain_clang_linux->_vI66688_base_c_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1227,3,1227,65); // HACK! 
}

//------------------------------
//FUNCTION <89465>: map_package_requirements_uncurry: Apply method
_art108150 map_package_requirements_uncurry::apply(_tt108152 const &_arg ){
  _vI90386_ehandler_uncurry = _arg.mem_0;
  _vI90375_spec = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<98013>varname = (aux_uncurry<98014>stackfun (apply((prj5:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname), Empty<80385>varname));
      _vI98013_r = _fI98014_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI90375_spec.FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<98013>ref;
      {
      void** _tmp109176 = (void**)&_vI98013_r;
      _rev(((_tmp109176)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 714, cols 5 to 6
      //PKGCONFIG_PATH<90349>varname = r<98013>varname;
      PKGCONFIG_PATH = _vI98013_r; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 715, cols 5 to 45
      //RESH<90350>varname = (+<14305>primfun ((+<14305>primfun ("@", apply((prj11:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname))), ".resh"));
      RESH = (::std::string("@") + _vI90375_spec.cpp_filebase ) + ::std::string(".resh") ; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 734, cols 5 to 26
      //e<90363>varname = Empty<80385>varname;
      e = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 737, cols 5 to 61
      //_genout_urv98027<98027> := (pkgconfl<90351>stackfun (+<80787>stackfun ((+<80787>stackfun (e<90363>varname, "--field=cflags")), "--keepleftmost")));
      _genout_urv98027  = pkgconfl(FLX_FPAR_PASS this)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(e, ::std::string("--field=cflags"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 737, cols 5 to 61
      //CFLAGS<90364>varname = _genout_urv98027<98027>varname;
      CFLAGS = _genout_urv98027; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 740, cols 5 to 70
      //_genout_urv98028<98028> := (pkgconfl<90351>stackfun (+<80787>stackfun ((+<80787>stackfun (e<90363>varname, "--field=includes")), "--keepleftmost")));
      _genout_urv98028  = pkgconfl(FLX_FPAR_PASS this)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(e, ::std::string("--field=includes"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 740, cols 5 to 70
      //INCLUDE_FILES<90365>varname = _genout_urv98028<98028>varname;
      INCLUDE_FILES = _genout_urv98028; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 732, cols 5 to 73
      //_genout_urv97933<98031> := (pkgconfl<90351>stackfun (+<80787>stackfun (e<90363>varname, "--field=flx_requires_driver")));
      _genout_urv97933  = pkgconfl(FLX_FPAR_PASS this)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(e, ::std::string("--field=flx_requires_driver"))) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 732, cols 5 to 73
      //_genout_urv98029<98029> := (cat_uncurry<89509>stackfun (" ", _genout_urv97933<98031>varname));
      _genout_urv98029  = cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _genout_urv97933)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 744, cols 5 to 61
      //DRIVER_PKG<90366>varname = _genout_urv98029<98029>varname;
      DRIVER_PKG = _genout_urv98029; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 745, cols 5 to 53
      if(!((DRIVER_PKG == ::std::string(""))) ) goto _ifdoelse_bootflx_65086_L90377;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 745, cols 28 to 47
      //DRIVER_PKG<90366>varname = "flx_run";
      DRIVER_PKG = ::std::string("flx_run"); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 745, cols 5 to 53
    _ifdoelse_bootflx_65086_L90377:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 790, cols 5 to 9
      if(!((_vI90375_spec.STATIC == 0)) ) goto _ifdoend_bootflx_65087_L90380;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 773, cols 7 to 11
      if(!((_vI90375_spec.LINKEXE == 0)) ) goto _ifdoend_bootflx_65089_L90378;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<98040>varname = Empty<80385>varname;
      _vI98040_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 3)) ) goto _ifdoelse_std_1250_L98036;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<98041>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84373>varname[3]), 1));
      _vI98041_i = (static_cast<int>(3)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<98041>ref;
      {
      int* _tmp109177 = (int*)&_vI98041_i;
      ++*((_tmp109177));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L98039:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI98041_i)) )) goto _ifdoelse_std_1250_L98036;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<98041>ref;
      {
      int* _tmp109178 = (int*)&_vI98041_i;
      --*((_tmp109178));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<98040>varname = (Snoc<80397>struct (o<98040>varname, apply(aprj(i<98041>varname : 3), (apply((prj6:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname), "bin", (+<14305>primfun (DRIVER_PKG<90366>varname, apply((prj3:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname)))))));
      _vI98040_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98040_o, (_at107767(_vI90375_spec.FLX_TARGET_DIR, ::std::string("bin"), DRIVER_PKG + _vI90375_spec.EXT_EXE ).data)[reinterpret< ::flx::rtl::cl_t>(_vI98041_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L98039;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L98036:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 755, cols 9 to 11
      //DRIVER_EXE<90367>varname = (aux_uncurry<98064>stackfun ("", o<98040>varname));
      DRIVER_EXE = _fI98064_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107698(::std::string(""), _vI98040_o)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 756, cols 9 to 40
      //DRIVER_OBJS<90368>varname = Empty<80385>varname;
      DRIVER_OBJS = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 790, cols 5 to 9
      goto _ifdoelse_bootflx_65088_L90381;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 773, cols 7 to 11
    _ifdoend_bootflx_65089_L90378:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<98082>varname = Empty<80385>varname;
      _vI98082_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 4)) ) goto _ifdoelse_std_1250_L98078;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<98083>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84297>varname[4]), 1));
      _vI98083_i = (static_cast<int>(4)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<98083>ref;
      {
      int* _tmp109179 = (int*)&_vI98083_i;
      ++*((_tmp109179));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L98081:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI98083_i)) )) goto _ifdoelse_std_1250_L98078;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<98083>ref;
      {
      int* _tmp109180 = (int*)&_vI98083_i;
      --*((_tmp109180));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<98082>varname = (Snoc<80397>struct (o<98082>varname, apply(aprj(i<98083>varname : 4), (apply((prj6:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname), "lib", "rtl", (+<14305>primfun ((+<14305>primfun (DRIVER_PKG<90366>varname, "_lib_static")), apply((prj2:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname)))))));
      _vI98082_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98082_o, (_at107820(_vI90375_spec.FLX_TARGET_DIR, ::std::string("lib"), ::std::string("rtl"), (DRIVER_PKG + ::std::string("_lib_static") ) + _vI90375_spec.EXT_DYNAMIC_OBJ ).data)[reinterpret< ::flx::rtl::cl_t>(_vI98083_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L98081;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L98078:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<98106>varname = Empty<80385>varname;
      _vI98106_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 4)) ) goto _ifdoelse_std_1250_L98102;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<98107>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84297>varname[4]), 1));
      _vI98107_i = (static_cast<int>(4)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<98107>ref;
      {
      int* _tmp109181 = (int*)&_vI98107_i;
      ++*((_tmp109181));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L98105:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI98107_i)) )) goto _ifdoelse_std_1250_L98102;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<98107>ref;
      {
      int* _tmp109182 = (int*)&_vI98107_i;
      --*((_tmp109182));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<98106>varname = (Snoc<80397>struct (o<98106>varname, apply(aprj(i<98107>varname : 4), (apply((prj6:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname), "lib", "rtl", (+<14305>primfun ((+<14305>primfun (DRIVER_PKG<90366>varname, "_main")), apply((prj2:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname)))))));
      _vI98106_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98106_o, (_at107820(_vI90375_spec.FLX_TARGET_DIR, ::std::string("lib"), ::std::string("rtl"), (DRIVER_PKG + ::std::string("_main") ) + _vI90375_spec.EXT_DYNAMIC_OBJ ).data)[reinterpret< ::flx::rtl::cl_t>(_vI98107_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L98105;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L98102:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<98130>varname = Empty<80385>varname;
      _vI98130_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L98126;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<98131>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI98131_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<98131>ref;
      {
      int* _tmp109183 = (int*)&_vI98131_i;
      ++*((_tmp109183));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L98129:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI98131_i)) )) goto _ifdoelse_std_1250_L98126;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<98131>ref;
      {
      int* _tmp109184 = (int*)&_vI98131_i;
      --*((_tmp109184));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<98130>varname = (Snoc<80397>struct (o<98130>varname, apply(aprj(i<98131>varname : bool), ((aux_uncurry<98088>stackfun ("", o<98082>varname)), (aux_uncurry<98112>stackfun ("", o<98106>varname))))));
      _vI98130_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98130_o, (_at107674(_fI98088_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107698(::std::string(""), _vI98082_o)) /* apply_stack */, _fI98112_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107698(::std::string(""), _vI98106_o)) /* apply_stack */).data)[reinterpret< ::flx::rtl::cl_t>(_vI98131_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L98129;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L98126:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 771, cols 9 to 10
      //DRIVER_OBJS<90368>varname = o<98130>varname;
      DRIVER_OBJS = _vI98130_o; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 772, cols 9 to 23
      //DRIVER_EXE<90367>varname = "";
      DRIVER_EXE = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 790, cols 5 to 9
      goto _ifdoelse_bootflx_65088_L90381;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 790, cols 5 to 9
    _ifdoend_bootflx_65087_L90380:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<98140>varname = Empty<80385>varname;
      _vI98140_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 4)) ) goto _ifdoelse_std_1250_L98136;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<98141>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84297>varname[4]), 1));
      _vI98141_i = (static_cast<int>(4)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<98141>ref;
      {
      int* _tmp109185 = (int*)&_vI98141_i;
      ++*((_tmp109185));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L98139:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI98141_i)) )) goto _ifdoelse_std_1250_L98136;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<98141>ref;
      {
      int* _tmp109186 = (int*)&_vI98141_i;
      --*((_tmp109186));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<98140>varname = (Snoc<80397>struct (o<98140>varname, apply(aprj(i<98141>varname : 4), (apply((prj6:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname), "lib", "rtl", (+<14305>primfun ((+<14305>primfun (DRIVER_PKG<90366>varname, "_lib_static")), apply((prj4:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname)))))));
      _vI98140_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98140_o, (_at107820(_vI90375_spec.FLX_TARGET_DIR, ::std::string("lib"), ::std::string("rtl"), (DRIVER_PKG + ::std::string("_lib_static") ) + _vI90375_spec.EXT_STATIC_OBJ ).data)[reinterpret< ::flx::rtl::cl_t>(_vI98141_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L98139;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L98136:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<98164>varname = Empty<80385>varname;
      _vI98164_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 4)) ) goto _ifdoelse_std_1250_L98160;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<98165>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84297>varname[4]), 1));
      _vI98165_i = (static_cast<int>(4)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<98165>ref;
      {
      int* _tmp109187 = (int*)&_vI98165_i;
      ++*((_tmp109187));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L98163:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI98165_i)) )) goto _ifdoelse_std_1250_L98160;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<98165>ref;
      {
      int* _tmp109188 = (int*)&_vI98165_i;
      --*((_tmp109188));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<98164>varname = (Snoc<80397>struct (o<98164>varname, apply(aprj(i<98165>varname : 4), (apply((prj6:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname), "lib", "rtl", (+<14305>primfun ((+<14305>primfun (DRIVER_PKG<90366>varname, "_main")), apply((prj4:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> string), spec<90375>varname)))))));
      _vI98164_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98164_o, (_at107820(_vI90375_spec.FLX_TARGET_DIR, ::std::string("lib"), ::std::string("rtl"), (DRIVER_PKG + ::std::string("_main") ) + _vI90375_spec.EXT_STATIC_OBJ ).data)[reinterpret< ::flx::rtl::cl_t>(_vI98165_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L98163;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L98160:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<98188>varname = Empty<80385>varname;
      _vI98188_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L98184;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<98189>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI98189_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<98189>ref;
      {
      int* _tmp109189 = (int*)&_vI98189_i;
      ++*((_tmp109189));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L98187:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI98189_i)) )) goto _ifdoelse_std_1250_L98184;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<98189>ref;
      {
      int* _tmp109190 = (int*)&_vI98189_i;
      --*((_tmp109190));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<98188>varname = (Snoc<80397>struct (o<98188>varname, apply(aprj(i<98189>varname : bool), ((aux_uncurry<98146>stackfun ("", o<98140>varname)), (aux_uncurry<98170>stackfun ("", o<98164>varname))))));
      _vI98188_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98188_o, (_at107674(_fI98146_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107698(::std::string(""), _vI98140_o)) /* apply_stack */, _fI98170_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107698(::std::string(""), _vI98164_o)) /* apply_stack */).data)[reinterpret< ::flx::rtl::cl_t>(_vI98189_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L98187;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L98184:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 788, cols 7 to 8
      //DRIVER_OBJS<90368>varname = o<98188>varname;
      DRIVER_OBJS = _vI98188_o; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 789, cols 7 to 21
      //DRIVER_EXE<90367>varname = "";
      DRIVER_EXE = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 790, cols 5 to 9
    _ifdoelse_bootflx_65088_L90381:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 814, cols 5 to 9
      if(!((_vI90375_spec.STATIC == 0)) ) goto _ifdoend_bootflx_65091_L90384;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 805, cols 7 to 11
      if(!((_vI90375_spec.LINKEXE == 0)) ) goto _ifdoend_bootflx_65093_L90382;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 798, cols 9 to 106
      //_genout_urv98198<98198> := (pkgconfl<90351>stackfun (+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (e<90363>varname, "-r")), "--keeprightmost")), "--field=provides_dlib")), "--field=requires_dlibs")), DRIVER_PKG<90366>varname)));
      _genout_urv98198  = pkgconfl(FLX_FPAR_PASS this)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(e, ::std::string("-r"))) /* apply_stack */, ::std::string("--keeprightmost"))) /* apply_stack */, ::std::string("--field=provides_dlib"))) /* apply_stack */, ::std::string("--field=requires_dlibs"))) /* apply_stack */, DRIVER_PKG)) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 798, cols 9 to 106
      //LINK_STRINGS<90369>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (apply((prj0:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname), apply((prj7:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname))), _genout_urv98198<98198>varname));
      LINK_STRINGS = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI90375_spec.DLINK_STRINGS, _vI90375_spec.LINKER_SWITCHES)) /* apply_stack */, _genout_urv98198)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 814, cols 5 to 9
      goto _ifdoelse_bootflx_65092_L90385;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 805, cols 7 to 11
    _ifdoend_bootflx_65093_L90382:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 804, cols 9 to 104
      //_genout_urv98211<98211> := (pkgconfl<90351>stackfun (+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (e<90363>varname, "-r")), "--keepleftmost")), "--field=provides_dlib")), "--field=requires_dlibs")), DRIVER_PKG<90366>varname)));
      _genout_urv98211  = pkgconfl(FLX_FPAR_PASS this)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(e, ::std::string("-r"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, ::std::string("--field=provides_dlib"))) /* apply_stack */, ::std::string("--field=requires_dlibs"))) /* apply_stack */, DRIVER_PKG)) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 804, cols 9 to 104
      //LINK_STRINGS<90369>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (apply((prj0:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname), apply((prj7:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname))), _genout_urv98211<98211>varname));
      LINK_STRINGS = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI90375_spec.DLINK_STRINGS, _vI90375_spec.LINKER_SWITCHES)) /* apply_stack */, _genout_urv98211)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 814, cols 5 to 9
      goto _ifdoelse_bootflx_65092_L90385;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 814, cols 5 to 9
    _ifdoend_bootflx_65091_L90384:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 813, cols 7 to 103
      //_genout_urv98224<98224> := (pkgconfl<90351>stackfun (+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (e<90363>varname, "-r")), "--keeprightmost")), "--field=provides_slib")), "--field=requires_slibs")), DRIVER_PKG<90366>varname)));
      _genout_urv98224  = pkgconfl(FLX_FPAR_PASS this)
      .apply(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(e, ::std::string("-r"))) /* apply_stack */, ::std::string("--keeprightmost"))) /* apply_stack */, ::std::string("--field=provides_slib"))) /* apply_stack */, ::std::string("--field=requires_slibs"))) /* apply_stack */, DRIVER_PKG)) /* apply_stack */) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 813, cols 7 to 103
      //LINK_STRINGS<90369>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (apply((prj9:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname), apply((prj7:record(DLINK_STRINGS:(list),EXTRA_PACKAGES:(list),EXT_DYNAMIC_OBJ:(string),EXT_EXE:(string),EXT_STATIC_OBJ:(string),FLX_CONFIG_DIRS:(list),FLX_TARGET_DIR:(string),LINKER_SWITCHES:(list),LINKEXE:(int),SLINK_STRINGS:(list),STATIC:(int),cpp_filebase:(string)) -> list), spec<90375>varname))), _genout_urv98224<98224>varname));
      LINK_STRINGS = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI90375_spec.SLINK_STRINGS, _vI90375_spec.LINKER_SWITCHES)) /* apply_stack */, _genout_urv98224)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 814, cols 5 to 9
    _ifdoelse_bootflx_65092_L90385:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 823, cols 5 to 19
      //LINK_STRINGS<90369>varname = (aux_uncurry<98235>stackfun (Empty<80385>varname, LINK_STRINGS<90369>varname));
      LINK_STRINGS = _fI98235_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697((void* /*VR_nullptr*/ )0, LINK_STRINGS)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 832, cols 5 to 7
      //return ( CFLAGS:CFLAGS<90364>varname, DRIVER_EXE:DRIVER_EXE<90367>varname, DRIVER_OBJS:DRIVER_OBJS<90368>varname, INCLUDE_FILES:INCLUDE_FILES<90365>varname, LINK_STRINGS:LINK_STRINGS<90369>varname);: type _art108150
      return _art108150(CFLAGS, DRIVER_EXE, DRIVER_OBJS, INCLUDE_FILES, LINK_STRINGS);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",833,3,833,4); // HACK! 
}

//------------------------------
//FUNCTION <68582>: flx_pkgconfig::reattach_drive_letters: Apply method
void* reattach_drive_letters::apply(void* const &_arg ){
  _a = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 238, cols 5 to 6
      //reattach_drive_letters_mv_65236<97856> := _a<68596>varname;
      reattach_drive_letters_mv_65236  = _a; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 9 to 32
/*match case 1:|Cons (a_param_bootflx_65174, |Cons (b_param_bootflx_65175, tail_param_bootflx_65176))*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 9 to 32
      if(!andthen(!!reattach_drive_letters_mv_65236 , (FLX_NEWP(_lam_65244)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65238_L97861;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 27 to 30
      //tail_param_bootflx_65176<97857>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] reattach_drive_letters_mv_65236<97856>varname))));
      tail_param_bootflx_65176 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(((reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(reattach_drive_letters_mv_65236))).mem_1)))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 24 to 24
      //b_param_bootflx_65175<97858>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] reattach_drive_letters_mv_65236<97856>varname))));
      b_param_bootflx_65175 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(((reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(reattach_drive_letters_mv_65236))).mem_1)))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 15 to 15
      //a_param_bootflx_65174<97859>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] reattach_drive_letters_mv_65236<97856>varname));
      a_param_bootflx_65174 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(reattach_drive_letters_mv_65236))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 232, cols 15 to 72
      //reattach_drive_letters_mv_65240<97864> := (land<5211>primfun ((land<5211>primfun ((==<81399>primfun[size] ((len<14304>primfun a_param_bootflx_65174<97859>varname), (_ctor_size<80270>primfun[int] 1))), (isalpha<5697>primfun (subscript<81183>primfun[int] (a_param_bootflx_65174<97859>varname, 0))))), (==<80464>primfun[string] ((copyto<81376>primfun[size] (b_param_bootflx_65175<97858>varname, (len<14304>primfun "\"))), "\"))));
      reattach_drive_letters_mv_65240  = ((a_param_bootflx_65174.size() == (static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/)) && (!!isalpha((::flx::rtl::strutil::subscript(a_param_bootflx_65174,0)))) ) && (::flx::rtl::strutil::substr(b_param_bootflx_65175,0,::std::string("\\").size()) == ::std::string("\\")) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 235, cols 11 to 62
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 235, cols 11 to 62
      if(!(reattach_drive_letters_mv_65240%2==1) ) goto _ml65242_L97865;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<80397>struct ((reattach_drive_letters<68582>stackfun tail_param_bootflx_65176<97857>varname), (+<14305>primfun ((+<14305>primfun (a_param_bootflx_65174<97859>varname, ":")), b_param_bootflx_65175<97858>varname))));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(reattach_drive_letters(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(tail_param_bootflx_65176) /* apply_stack */, (a_param_bootflx_65174 + ::std::string(":") ) + b_param_bootflx_65175 )));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 235, cols 11 to 62
    _ml65242_L97865:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 235, cols 11 to 62
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //return (Snoc<80397>struct ((reattach_drive_letters<68582>stackfun (Snoc<80397>struct (tail_param_bootflx_65176<97857>varname, b_param_bootflx_65175<97858>varname))), a_param_bootflx_65174<97859>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(reattach_drive_letters(FLX_FPAR_PASS ptrflx_pkgconfig)
      .apply(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(tail_param_bootflx_65176, b_param_bootflx_65175)))) /* apply_stack */, a_param_bootflx_65174)));
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 231, cols 9 to 32
    _ml65238_L97861:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 237, cols 9 to 13
/*match case 2:other_param_bootflx_65177*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 237, cols 9 to 13
      //other_param_bootflx_65177<97860>varname = reattach_drive_letters_mv_65236<97856>varname;
      other_param_bootflx_65177 = reattach_drive_letters_mv_65236; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 238, cols 5 to 6
      //return other_param_bootflx_65177<97860>varname;: type void*
      return other_param_bootflx_65177;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",238,5,238,6); // HACK! 
}

//------------------------------
//FUNCTION <66527>: toolchain_gcc_linux::pathname_separator: Apply method
_a14239t_107672 _fI66527_pathname_separator::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 742, cols 3 to 42
      //return "/";: type _a14239t_107672
      return ::std::string("/");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",742,3,742,42); // HACK! 
}

//------------------------------
//FUNCTION <93464>: generic_cxx_gen_deps_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93464__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <97888>: flx_pkgconfig::aux_uncurry: Apply method
void* _fI97888_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97889_x_uncurry = _arg.data[0];
  _vI97890_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97897:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97893> := x_uncurry<97889>varname;
      _vI97893_aux__apos_2_mv_1387  = _vI97889_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97893_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97892;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97890>varname;: type void*
      return _vI97890_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97892:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97893_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97896__lam_1391)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml1390_L97891;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97894>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97893>varname));
      _vI97894_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97893_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97895>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97893>varname));
      _vI97895_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97893_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97890> := (Snoc<80397>struct (y<97890>varname, h_param_std_1269<97894>varname));
      _vI97890_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97890_y, _vI97894_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97889> := t_param_std_1268<97895>varname;
      _vI97889_x_uncurry  = _vI97895_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97897;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97891:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <99170>: cxx_depcheck::_lam_66159: Apply method
 ::flx::rtl::cl_t _lam_66159::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 415, cols 9 to 13
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",415,9,415,13); // HACK! 
}

//------------------------------
//FUNCTION <93289>: toolchain_msvc_win32::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI93289__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <66497>: toolchain_gcc_linux: Apply method
_art107765 toolchain_gcc_linux::apply(_art107755 const &_arg ){
  _vI66586_config = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94192>varname = Empty<80385>varname;
      _vI94192_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 9)) ) goto _ifdoelse_std_1250_L94188;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94193>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<86468>varname[9]), 1));
      _vI94193_i = (static_cast<int>(9)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94193>ref;
      {
      int* _tmp109192 = (int*)&_vI94193_i;
      ++*((_tmp109192));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94191:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI94193_i)) )) goto _ifdoelse_std_1250_L94188;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94193>ref;
      {
      int* _tmp109193 = (int*)&_vI94193_i;
      --*((_tmp109193));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94192>varname = (Snoc<80397>struct (o<94192>varname, apply(aprj(i<94193>varname : 9), ("-w", "-Wfatal-errors", "-Wno-invalid-offsetof", "-Wno-parentheses", "-Wno-unused-variable", "-Wno-unused-label", "-Wno-unused-function", "-Wno-sign-compare", "-Wno-missing-braces"))));
      _vI94192_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI94192_o, (_at107799(::std::string("-w"), ::std::string("-Wfatal-errors"), ::std::string("-Wno-invalid-offsetof"), ::std::string("-Wno-parentheses"), ::std::string("-Wno-unused-variable"), ::std::string("-Wno-unused-label"), ::std::string("-Wno-unused-function"), ::std::string("-Wno-sign-compare"), ::std::string("-Wno-missing-braces")).data)[reinterpret< ::flx::rtl::cl_t>(_vI94193_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94191;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94188:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 716, cols 3 to 4
      //cxx_compile_warning_flags<66499>varname = o<94192>varname;
      cxx_compile_warning_flags = _vI94192_o; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<94202>varname = Empty<80385>varname;
      o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L94198;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<94203>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<94203>ref;
      {
      int* _tmp109194 = (int*)&i;
      ++*((_tmp109194));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L94201:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < i)) )) goto _ifdoelse_std_1250_L94198;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<94203>ref;
      {
      int* _tmp109195 = (int*)&i;
      --*((_tmp109195));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<94202>varname = (Snoc<80397>struct (o<94202>varname, apply(aprj(i<94203>varname : bool), ("-w", "-Wfatal-errors"))));
      o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(o, (_at107674(::std::string("-w"), ::std::string("-Wfatal-errors")).data)[reinterpret< ::flx::rtl::cl_t>(i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L94201;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L94198:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 717, cols 3 to 69
      //c_compile_warning_flags<66500>varname = o<94202>varname;
      c_compile_warning_flags = o; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 718, cols 3 to 25
      //c_compiler<66501>varname = "gcc";
      c_compiler = ::std::string("gcc"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 719, cols 3 to 27
      //cxx_compiler<66502>varname = "g++";
      cxx_compiler = ::std::string("g++"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 720, cols 3 to 21
      //linker<66503>varname = "g++";
      linker = ::std::string("g++"); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 721, cols 3 to 58
      //ccflags_for_dynamic_link<66504>varname = (Snoc<80397>struct (Empty<80385>varname, "-shared"));
      ccflags_for_dynamic_link = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-shared")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 725, cols 3 to 4
      //base_c_compile_flags<66505>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (c_compile_warning_flags<66500>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname))), "-fno-strict-aliasing")), "-fno-common")), "-O1")), "-c")), "-g")), "-D_POSIX"));
      _vI66505_base_c_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(c_compile_warning_flags, _vI66586_config.ccflags)) /* apply_stack */, ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))), ::std::string("-D_POSIX")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 729, cols 3 to 4
      //base_cxx_compile_flags<66506>varname = (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun (cxx_compile_warning_flags<66499>varname, apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname))), "-std=gnu++11")), "-fno-strict-aliasing")), "-fno-common")), "-O1")), "-c")), "-g")), "-D_POSIX"));
      _vI66506_base_cxx_compile_flags = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(cxx_compile_warning_flags, _vI66586_config.ccflags)) /* apply_stack */, ::std::string("-std=gnu++11")))), ::std::string("-fno-strict-aliasing")))), ::std::string("-fno-common")))), ::std::string("-O1")))), ::std::string("-c")))), ::std::string("-g")))), ::std::string("-D_POSIX")))); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 936, cols 1 to 2
      //return ( c_dependency_generator:c_dependency_generator<66535>closure, c_dynamic_object_compiler:c_dynamic_object_compiler<66554>closure, c_static_object_compiler:c_static_object_compiler<66550>closure, cxx_compiler_vendor:cxx_compiler_vendor<66513>closure, cxx_dependency_generator:cxx_dependency_generator<66541>closure, cxx_dynamic_object_compiler:cxx_dynamic_object_compiler<66566>closure, cxx_static_library_object_compiler:cxx_static_library_object_compiler<66562>closure, cxx_static_object_compiler:cxx_static_object_compiler<66558>closure, debug_flags:debug_flags<66529>closure, dependency_extension:dependency_extension<66515>closure, dependency_parser:dependency_parser<66547>closure, dynamic_executable_linker:dynamic_executable_linker<66578>closure, dynamic_library_extension:dynamic_library_extension<66525>closure, dynamic_library_linker:dynamic_library_linker<66582>closure, dynamic_object_extension:dynamic_object_extension<66521>closure, executable_extension:executable_extension<66517>closure, get_base_c_compile_flags:get_base_c_compile_flags<66531>closure, get_base_cxx_compile_flags:get_base_cxx_compile_flags<66533>closure, host_os:host_os<66509>closure, pathname_separator:pathname_separator<66527>closure, static_executable_linker:static_executable_linker<66574>closure, static_library_extension:static_library_extension<66523>closure, static_library_linker:static_library_linker<66570>closure, static_object_extension:static_object_extension<66519>closure, target_os:target_os<66511>closure, whatami:whatami<66507>closure);: type _art107765
      return _art107765((FLX_NEWP(_fI66535_c_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66554_c_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66550_c_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66513_cxx_compiler_vendor)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66541_cxx_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66566_cxx_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66562_cxx_static_library_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66558_cxx_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66529_debug_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66515_dependency_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66547_dependency_parser)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66578_dynamic_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66525_dynamic_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66582_dynamic_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66521_dynamic_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66517_executable_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66531_get_base_c_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66533_get_base_cxx_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66509_host_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66527_pathname_separator)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66574_static_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66523_static_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66570_static_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66519_static_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66511_target_os)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI66507_whatami)(FLX_FPAR_PASS this)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",936,1,936,2); // HACK! 
}

//------------------------------
//FUNCTION <97781>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97781__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//C FUNC <68848>: validate_cache
_tt107735 validate_cache(FLX_APAR_DECL _art107736 _vI68862_spec){
  _a8395t_107675 _genout_urv105166;
  _a8395t_107675 _vI105163__genout_urv98870;
  _a8395t_107675 _genout_urv105159;
  double x_param_bootflx_65048;
  double validate_cache_mv_65077;
  double _urv104949;
  _a8395t_107675 _vI68861_f;
  double automaton_time;
  _a14239t_107672 automaton_name;
  double grammar_time;
  double flxg_stamp_time;
  _a14239t_107672 flxg_stamp_data;
  double cache_time;
  _a14239t_107672 flxg_stamp;
  double flxg_time;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1101, cols 5 to 6
  mkdirs(FLX_FPAR_PASS _vI68862_spec.CACHE_DIR);
    // # C:/projects/felix/src/packages/flx.fdoc: line 183, cols 5 to 75
      //flxg_time<68850>varname = (dfiletime<82503>stackfun (apply((prj3:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname), (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));
      flxg_time = dfiletime(_vI68862_spec.FLXG, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 184, cols 5 to 38
      //run procedure call apply((prj8:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> void), spec<68862>varname) (+<14305>primfun ("Flxg=", apply((prj3:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI68862_spec.debugln)->clone()
      ->call(0, ::std::string("Flxg=") + _vI68862_spec.FLXG );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 185, cols 5 to 66
      //run procedure call apply((prj8:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> void), spec<68862>varname) (+<14305>primfun ("Flxg_time=", (strfiletime<82509>stackfun flxg_time<68850>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI68862_spec.debugln)->clone()
      ->call(0, ::std::string("Flxg_time=") + strfiletime(FLX_FPAR_PASS flxg_time) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 189, cols 5 to 69
      //flxg_stamp<68851>varname = (join<82705>stackfun (apply((prj1:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname), "flxg_time.stamp"));
      flxg_stamp = _fI82705_join(_vI68862_spec.CACHE_DIR, ::std::string("flxg_time.stamp")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 190, cols 5 to 76
      //cache_time<68852>varname = (dfiletime<82503>stackfun (flxg_stamp<68851>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));
      cache_time = dfiletime(flxg_stamp, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 191, cols 5 to 68
      //run procedure call apply((prj8:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> void), spec<68862>varname) (+<14305>primfun ("cache_time=", (strfiletime<82509>stackfun cache_time<68852>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI68862_spec.debugln)->clone()
      ->call(0, ::std::string("cache_time=") + strfiletime(FLX_FPAR_PASS cache_time) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L104946;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", flxg_stamp<68851>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109196 = (::std::string("[load] ") + flxg_stamp ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109196)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L104946:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 194, cols 5 to 42
      //flxg_stamp_data<68853>varname = (raw_load<8396>primfun flxg_stamp<68851>varname);
      flxg_stamp_data = ::flx::rtl::ioutil::load_file(flxg_stamp); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 33 to 52
      //validate_cache_mv_65077<104950> := (atof<15212>primfun flxg_stamp_data<68853>varname);
      validate_cache_mv_65077  = ::std::atof(flxg_stamp_data.c_str()); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 61 to 63
/*match case 1:literal[double]("0.0")*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 61 to 63
      if(!((0.0 == validate_cache_mv_65077)) ) goto _ml65079_L104952;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 288, cols 3 to 27
      //_urv104949<104949> := (neg<82781>primfun[double] literal[double]("1.0"));
      _urv104949  = - 1.0 ; //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 288, cols 3 to 27
      goto _end_hash_95999329;
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 61 to 63
    _ml65079_L104952:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 91 to 91
/*match case 2:x_param_bootflx_65048*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 91 to 91
      //x_param_bootflx_65048<104951>varname = validate_cache_mv_65077<104950>varname;
      x_param_bootflx_65048 = validate_cache_mv_65077; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 27 to 96
      //_urv104949<104949> := x_param_bootflx_65048<104951>varname;
      _urv104949  = x_param_bootflx_65048; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 27 to 96
    _end_hash_95999329:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 200, cols 5 to 97
      //flxg_stamp_time<68857>varname = _urv104949<104949>varname;
      flxg_stamp_time = _urv104949; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 202, cols 5 to 80
      //run procedure call apply((prj8:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> void), spec<68862>varname) (+<14305>primfun ("Flxg_stamp_data : ", (strfiletime<82509>stackfun flxg_stamp_time<68857>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI68862_spec.debugln)->clone()
      ->call(0, ::std::string("Flxg_stamp_data : ") + strfiletime(FLX_FPAR_PASS flxg_stamp_time) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 206, cols 5 to 85
      //grammar_time<68858>varname = (gramtime_uncurry<89478>stackfun (apply((prj8:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> void), spec<68862>varname), apply((prj5:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname), (+<14305>primfun ("@", apply((prj7:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname)))));
      grammar_time = gramtime_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107889(_vI68862_spec.debugln, _vI68862_spec.GRAMMAR_DIR, ::std::string("@") + _vI68862_spec.STDGRAMMAR )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 207, cols 5 to 78
      //run procedure call apply((prj8:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> void), spec<68862>varname) (+<14305>primfun ("Grammar text time=", (strfiletime<82509>stackfun grammar_time<68858>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI68862_spec.debugln)->clone()
      ->call(0, ::std::string("Grammar text time=") + strfiletime(FLX_FPAR_PASS grammar_time) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 210, cols 5 to 40
      //automaton_name<68859>varname = apply((prj0:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname);
      automaton_name = _vI68862_spec.AUTOMATON; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 213, cols 5 to 82
      //automaton_time<68860>varname = (dfiletime<82503>stackfun (automaton_name<68859>varname, (neg<82781>primfun[double] literal[double]("1.0"))));
      automaton_time = dfiletime(automaton_name, - 1.0 ); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 214, cols 5 to 99
      //run procedure call apply((prj8:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> void), spec<68862>varname) (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Automaton ", automaton_name<68859>varname)), " time=")), (strfiletime<82509>stackfun automaton_time<68860>varname)));
      {
        ::flx::rtl::con_t *_p = (_vI68862_spec.debugln)->clone()
      ->call(0, ((::std::string("Automaton ") + automaton_name ) + ::std::string(" time=") ) + strfiletime(FLX_FPAR_PASS automaton_time) );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 240, cols 5 to 9
      if(!(!((cache_time == (static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/)))))  && !((flxg_stamp_time == flxg_time))  ) ) goto _ifdoend_bootflx_65049_L68865;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Cache may be out of date due to compiler change!", "\x0A")));
      {
      _a14239t_107672 _tmp109197 = ::std::string("Cache may be out of date due to compiler change!") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109197)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Flxg compiler time stamp=", (strfiletime<82509>stackfun flxg_time<68850>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109198 = (::std::string("Flxg compiler time stamp=") + strfiletime(FLX_FPAR_PASS flxg_time) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109198)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Cache time stamp        =", (strfiletime<82509>stackfun cache_time<68852>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109199 = (::std::string("Cache time stamp        =") + strfiletime(FLX_FPAR_PASS cache_time) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109199)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 231, cols 7 to 11
      if((((_vI68862_spec.OUTPUT_DIR == ::std::string("/")) || (_vI68862_spec.OUTPUT_DIR == ::std::string("")) ) || (_vI68862_spec.OUTPUT_DIR == ::std::string(".")) ) || (((_vI68862_spec.CACHE_DIR == ::std::string("/")) || (_vI68862_spec.CACHE_DIR == ::std::string("")) ) || (_vI68862_spec.CACHE_DIR == ::std::string(".")) ) ) goto _ifdoelse_bootflx_65050_L68868;
    // # C:/projects/felix/src/packages/flx.fdoc: line 230, cols 9 to 28
      //apply((prj2:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> int), spec<68862>varname) = 1;
      _vI68862_spec.CLEAR_CACHE = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 240, cols 5 to 9
      goto _ifdoelse_bootflx_65050_L68868;
    // # C:/projects/felix/src/packages/flx.fdoc: line 240, cols 5 to 9
      goto _ifdoelse_bootflx_65050_L68868;
    // # C:/projects/felix/src/packages/flx.fdoc: line 240, cols 5 to 9
    _ifdoend_bootflx_65049_L68865:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 239, cols 5 to 28
      if(!((automaton_time < grammar_time)) ) goto _ifdoelse_bootflx_65050_L68868;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Cache may be out of date due to grammar upgrade!", "\x0A")));
      {
      _a14239t_107672 _tmp109200 = ::std::string("Cache may be out of date due to grammar upgrade!") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109200)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Grammar time stamp          =", (strfiletime<82509>stackfun grammar_time<68858>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109201 = (::std::string("Grammar time stamp          =") + strfiletime(FLX_FPAR_PASS grammar_time) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109201)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Automaton.syntax time stamp =", (strfiletime<82509>stackfun automaton_time<68860>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109202 = (::std::string("Automaton.syntax time stamp =") + strfiletime(FLX_FPAR_PASS automaton_time) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109202)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 239, cols 7 to 26
      //apply((prj2:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> int), spec<68862>varname) = 1;
      _vI68862_spec.CLEAR_CACHE = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 240, cols 5 to 9
    _ifdoelse_bootflx_65050_L68868:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 277, cols 5 to 9
      if(!(!((_vI68862_spec.CLEAR_CACHE == 0)) ) ) goto _ifdoelse_bootflx_65056_L68872;
    // # C:/projects/felix/src/packages/flx.fdoc: line 254, cols 7 to 11
      if(!((((_vI68862_spec.OUTPUT_DIR == ::std::string("/")) || (_vI68862_spec.OUTPUT_DIR == ::std::string("")) ) || (_vI68862_spec.OUTPUT_DIR == ::std::string(".")) ) || (((_vI68862_spec.CACHE_DIR == ::std::string("/")) || (_vI68862_spec.CACHE_DIR == ::std::string("")) ) || (_vI68862_spec.CACHE_DIR == ::std::string(".")) ) ) ) goto _ifdoelse_bootflx_65058_L68870;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("WILL NOT DELETE CACHES", "\x0A")));
      {
      _a14239t_107672 _tmp109203 = ::std::string("WILL NOT DELETE CACHES") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109203)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("output cache ", apply((prj6:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109204 = (::std::string("output cache ") + _vI68862_spec.OUTPUT_DIR ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109204)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("binary cache ", apply((prj1:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109205 = (::std::string("binary cache ") + _vI68862_spec.CACHE_DIR ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109205)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 253, cols 9 to 24
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 254, cols 7 to 11
    _ifdoelse_bootflx_65058_L68870:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Delete cache ", apply((prj6:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109206 = (::std::string("Delete cache ") + _vI68862_spec.OUTPUT_DIR ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109206)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 258, cols 11 to 133
      // primcall ignore<82871>primproc[string] apply(apply((prj10:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> string), spec<68862>varname), (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("mkdir ", apply(apply((prj9:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> string), spec<68862>varname), (+<14305>primfun (apply((prj6:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname), "\rubbish"))))), "& rmdir /Q /S ")), apply(apply((prj9:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> string), spec<68862>varname), apply((prj6:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname)))));
      {
      _a14239t_107672 _tmp109207 = ((::std::string("mkdir ") + (_vI68862_spec.quote)->clone()
      ->apply(_vI68862_spec.OUTPUT_DIR + ::std::string("\\rubbish") ) /* general apply */ ) + ::std::string("& rmdir /Q /S ") ) + (_vI68862_spec.quote)->clone()
      ->apply(_vI68862_spec.OUTPUT_DIR) /* general apply */ ;
      _a14239t_107672 _tmp109208 = (_vI68862_spec.xqt)->clone()
      ->apply((_tmp109207)) /* general apply */;
      (void)(_tmp109208);
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Delete cache ", apply((prj1:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109209 = (::std::string("Delete cache ") + _vI68862_spec.CACHE_DIR ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109209)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 265, cols 11 to 127
      // primcall ignore<82871>primproc[string] apply(apply((prj10:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> string), spec<68862>varname), (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("mkdir ", apply(apply((prj9:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> string), spec<68862>varname), (+<14305>primfun (apply((prj1:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname), "\rubbish"))))), "& rd /Q /S ")), apply(apply((prj9:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string -> string), spec<68862>varname), apply((prj1:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> string), spec<68862>varname)))));
      {
      _a14239t_107672 _tmp109210 = ((::std::string("mkdir ") + (_vI68862_spec.quote)->clone()
      ->apply(_vI68862_spec.CACHE_DIR + ::std::string("\\rubbish") ) /* general apply */ ) + ::std::string("& rd /Q /S ") ) + (_vI68862_spec.quote)->clone()
      ->apply(_vI68862_spec.CACHE_DIR) /* general apply */ ;
      _a14239t_107672 _tmp109211 = (_vI68862_spec.xqt)->clone()
      ->apply((_tmp109210)) /* general apply */;
      (void)(_tmp109211);
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1101, cols 5 to 6
  mkdirs(FLX_FPAR_PASS _vI68862_spec.CACHE_DIR);
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_624_L105161;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_output] ", flxg_stamp<68851>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109212 = (::std::string("[Open_output] ") + flxg_stamp ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109212)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
    _ifdoelse_std_624_L105161:;
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv105166<105166> := (raw_fopen_output<8432>primfun flxg_stamp<68851>varname);
      _genout_urv105166  = fopen(flxg_stamp.c_str(),"wb"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98870<105163> := _genout_urv105166<105166>varname;
      _vI105163__genout_urv98870  = _genout_urv105166; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv105159<105159> := _genout_urv98870<105163>varname;
      _genout_urv105159  = _vI105163__genout_urv98870; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 274, cols 7 to 38
      //f<68861>varname = _genout_urv105159<105159>varname;
      _vI68861_f = _genout_urv105159; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 275, cols 7 to 44
      // primcall write<8439>primproc (f<68861>varname, (fmt<80548>stackfun (flxg_time<68850>varname, (fixed<5838>struct (0, 3)))));
      {
      _a14239t_107672 _tmp109213 = fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(flxg_time, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(0, 3))))) /* apply_stack */;
      ::flx::rtl::ioutil::write(_vI68861_f,((_tmp109213)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 276, cols 7 to 15
      // primcall fclose<8437>primproc f<68861>varname;
      (void)fclose(_vI68861_f);
    // # C:/projects/felix/src/packages/flx.fdoc: line 277, cols 5 to 9
    _ifdoelse_bootflx_65056_L68872:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 278, cols 5 to 40
      //return (apply((prj2:record(AUTOMATON:(string),CACHE_DIR:(string),CLEAR_CACHE:(int),FLXG:(string),FLX_SHARE_DIR:(string),GRAMMAR_DIR:(string),OUTPUT_DIR:(string),STDGRAMMAR:(string),debugln:(string -> void),quote:(string -> string),xqt:(string -> string)) -> int), spec<68862>varname), cache_time<68852>varname);: type _tt107735
      return _tt107735(_vI68862_spec.CLEAR_CACHE, cache_time);
}
//------------------------------
//FUNCTION <103050>: exts::aux_uncurry: Apply method
void* _fI103050_aux_uncurry::apply(_tt107865 const &_arg ){
  _vI103051_inp_uncurry = _arg.mem_0;
  _vI103052_out = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_103010_L103059:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<103055> := inp_uncurry<103051>varname;
      _vI103055_aux__apos_2_mv_1381  = _vI103051_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI103055_aux__apos_2_mv_1381)==0) ) goto _ml1383_L103054;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<103052>varname;: type void*
      return _vI103052_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L103054:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI103055_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI103058__lam_1385)(FLX_FPAR_PASS this, ptrexts))) ) goto _ml1384_L103053;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<103056>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<103055>varname));
      _vI103056_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI103055_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<103057>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<103055>varname));
      _vI103057_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI103055_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<103052> := (Snoc<81403>struct (out<103052>varname, (_lam_65652<68027>stackfun h_param_std_1267<103056>varname)));
      _vI103052_out  = FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(_vI103052_out, _lam_65652(ptrexts)
      .apply(_vI103056_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<103051> := t_param_std_1266<103057>varname;
      _vI103051_inp_uncurry  = _vI103057_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_103010_L103059;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L103053:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <92946>: mem_uncurry::_lam_1456: Apply method
 ::flx::rtl::cl_t _lam_1456::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 7 to 15
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",505,7,505,15); // HACK! 
}

//------------------------------
//FUNCTION <66760>: toolchain_clang_linux::dynamic_executable_linker: Apply method
int _fI66760_dynamic_executable_linker::apply(_art107763 const &_arg ){
  _vI66763_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1398, cols 5 to 6
      //result<66762>varname = (generic_link_exe_dynamic_uncurry<89454>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<66685>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66763>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66763>varname)));
      _vI66762_result = generic_link_exe_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_clang_linux->_vI66685_linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_linux->_vI66768_config.library_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66763_spec.srcs, _vI66763_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1399, cols 5 to 18
      //return result<66762>varname;: type int
      return _vI66762_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1400,3,1400,4); // HACK! 
}

//------------------------------
//FUNCTION <97810>: flx_pkgconfig::parse_args::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI97810__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//FUNCTION <89726>: toolchain_clang_apple_iOS_maker_uncurry::get: Apply method
_a14239t_107672 get::apply(_a14239t_107672 const &_arg ){
  _vI89731_s = _arg;
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_507_L94471;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[get_stdout] ", s<89731>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109215 = (::std::string("[get_stdout] ") + _vI89731_s ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109215)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
    _ifdoelse_std_507_L94471:;
    // # C:/projects/felix/src/packages/program.fdoc: line 812, cols 5 to 32
      //_genout_urv94469<94469> := (basic_get_stdout<82955>stackfun s<89731>varname);
      _genout_urv94469  = basic_get_stdout(_vI89731_s); //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1942, cols 5 to 40
      //_ds2_66183<89727>varname = _genout_urv94469<94469>varname;
      _ds2_66183 = _genout_urv94469; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1942, cols 5 to 40
      //err<89728>varname = apply((prj0:int * string -> int), _ds2_66183<89727>varname);
      _vI89728_err = _ds2_66183.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1942, cols 5 to 40
      //res<89729>varname = apply((prj1:int * string -> string), _ds2_66183<89727>varname);
      res = _ds2_66183.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1947, cols 5 to 9
      if(!(!((_vI89728_err == 0)) ) ) goto _ifdoelse_bootflx_66182_L89733;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1944, cols 7 to 60
      //msg<89730>varname = (+<14305>primfun ("Abort: Error executing shell command ", s<89731>varname));
      msg = ::std::string("Abort: Error executing shell command ") + _vI89731_s ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun (msg<89730>varname, "\x0A")));
      {
      _a14239t_107672 _tmp109216 = msg + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109216)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1946, cols 7 to 20
      // primcall abort<7638>primproc ();
      (fprintf(stderr,"Felix code calling abort\n"),::std::abort());
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1947, cols 5 to 9
    _ifdoelse_bootflx_66182_L89733:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1948, cols 5 to 15
      //return res<89729>varname;: type _a14239t_107672
      return res;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1949,3,1949,4); // HACK! 
}

//------------------------------
//FUNCTION <89758>: toolchain_clang_apple_iOS_maker_uncurry::static_library_extension: Apply method
_a14239t_107672 _fI89758_static_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1996, cols 3 to 49
      //return ".a";: type _a14239t_107672
      return ::std::string(".a");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1996,3,1996,49); // HACK! 
}

//------------------------------

//PROCEDURE <68638:> flx_pkgconfig::tail_val: Call method
::flx::rtl::con_t * tail_val::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI68640_v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <68638:> flx_pkgconfig::tail_val: Resume method
::flx::rtl::con_t *tail_val::resume(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 278, cols 8 to 44
      //result<68598>varname = (aux<96488>stackfun (result<68598>varname, Empty<80385>varname));
      ptrflx_pkgconfig->_vI68598_result = _fI96488_aux(FLX_FPAR_PASS this, ptrflx_pkgconfig)
      .apply(_at107697(ptrflx_pkgconfig->_vI68598_result, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 280, cols 5 to 6
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <66293>: toolchain_msvc_win32::executable_extension: Apply method
_a14239t_107672 executable_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1736, cols 3 to 47
      //return ".exe";: type _a14239t_107672
      return ::std::string(".exe");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1736,3,1736,47); // HACK! 
}

//------------------------------
//FUNCTION <104984>: gramtime_uncurry::_lam_65075::aux_uncurry: Apply method
_a14239t_107672 _fI104984_aux_uncurry::apply(_tt107698 const &_arg ){
  _vI104985_init_uncurry = _arg.mem_0;
  _vI104986_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
    start_95735_L104993:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //aux'2_mv_1356<104989> := x<104986>varname;
      _vI104989_aux__apos_2_mv_1356  = _vI104986_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
      if(!(FLX_VNI(_vI104989_aux__apos_2_mv_1356)==0) ) goto _ml1358_L104988;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      //return init_uncurry<104985>varname;: type _a14239t_107672
      return _vI104985_init_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 233, cols 11 to 16
    _ml1358_L104988:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1258, h_param_std_1259)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      if(!andthen(FLX_VNI(_vI104989_aux__apos_2_mv_1356)==1, (FLX_NEWP(_fI104992__lam_1360)(FLX_FPAR_PASS this, ptr_lam_65075, ptrgramtime_uncurry))) ) goto _ml1359_L104987;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 18 to 18
      //h_param_std_1259<104990>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1356<104989>varname));
      _vI104990_h_param_std_1259 = (*((_tt107677*)FLX_VNP(_vI104989_aux__apos_2_mv_1356))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 16 to 16
      //t_param_std_1258<104991>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1356<104989>varname));
      _vI104991_t_param_std_1258 = (*((_tt107677*)FLX_VNP(_vI104989_aux__apos_2_mv_1356))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //x<104986> := t_param_std_1258<104991>varname;
      _vI104986_x  = _vI104991_t_param_std_1258; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      //init_uncurry<104985> := apply((join<84379>flxfun init_uncurry<104985>varname), h_param_std_1259<104990>varname);
      _vI104985_init_uncurry  = ((FLX_NEWP(join)(FLX_FPAR_PASS_ONLY))
      ->apply(_vI104985_init_uncurry))->clone()
      ->apply(_vI104990_h_param_std_1259) /* general apply */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 236, cols 7 to 8
      goto start_95735_L104993;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
    _ml1359_L104987:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,9,234,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",236,7,236,8); // HACK! 
}

//------------------------------
//FUNCTION <106764>: flx_processing::check_cxx_uptodate: Apply method
 ::flx::rtl::cl_t _fI106764_check_cxx_uptodate::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_98608_L107149;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Check Felix->C++ uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109219 = (::std::string("[flx] ") + ::std::string("Check Felix->C++ uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109219)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2157, cols 5 to 40
    _end_98608_L107149:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2167, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.RECOMPILE == 1)) ) goto _ifdoend_bootflx_65864_L106765;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_98612_L107152;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Felix->C++ dependency checking skipped due to switch RECOMPILE=1: forced not uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109220 = (::std::string("[flx] ") + ::std::string("Felix->C++ dependency checking skipped due to switch RECOMPILE=1: forced not uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109220)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2159, cols 7 to 103
    _end_98612_L107152:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2160, cols 7 to 19
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2167, cols 5 to 9
    _ifdoend_bootflx_65864_L106765:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2166, cols 5 to 19
      if(!((ptrflx_processing->_vI107004_control.CHECK_DEPENDENCIES == 1)) ) goto _ifdoend_bootflx_65866_L106766;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_98616_L107155;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Checking Felix->C++ dependencies since CHECK_DEPENDENCIES=1 to see if the cxx is uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109221 = (::std::string("[flx] ") + ::std::string("Checking Felix->C++ dependencies since CHECK_DEPENDENCIES=1 to see if the cxx is uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109221)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2162, cols 7 to 106
    _end_98616_L107155:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2163, cols 7 to 87
      //return (cal_cxx_uptodate<106755>stackfun (debugln<107005>closure, apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname)));: type  ::flx::rtl::cl_t
      return _fI106755_cal_cxx_uptodate(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107889((FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS ptrflx_processing)), (*ptrflx_processing->_vI68947_config ).FLX_OUTPUT_DIR, ptrflx_processing->dvars.filebase)) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2166, cols 5 to 19
    _ifdoend_bootflx_65866_L106766:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_98620_L107158;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Felix->C++ dependency checking skipped due to switch CHECK_DEPENDENCIES=0: forced uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109222 = (::std::string("[flx] ") + ::std::string("Felix->C++ dependency checking skipped due to switch CHECK_DEPENDENCIES=0: forced uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109222)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2165, cols 7 to 108
    _end_98620_L107158:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2166, cols 7 to 18
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2168,3,2168,4); // HACK! 
}

//------------------------------
//FUNCTION <105934>: flx_processing::check_binary_uptodate: Apply method
 ::flx::rtl::cl_t check_binary_uptodate::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100188_L106490;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Check C++->binary uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109223 = (::std::string("[flx] ") + ::std::string("Check C++->binary uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109223)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2725, cols 5 to 41
    _end_100188_L106490:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2760, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.RECOMPILE == 1)) ) goto _ifdoend_bootflx_65954_L105946;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100192_L106493;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++->binary dependency checking skipped due to switch RECOMPILE=1: forced not uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109224 = (::std::string("[flx] ") + ::std::string("C++->binary dependency checking skipped due to switch RECOMPILE=1: forced not uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109224)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2727, cols 7 to 104
    _end_100192_L106493:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2728, cols 7 to 19
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2760, cols 5 to 9
    _ifdoend_bootflx_65954_L105946:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2759, cols 5 to 19
      if(!((ptrflx_processing->_vI106023_control.CHECK_DEPENDENCIES == 1)) ) goto _ifdoend_bootflx_65956_L105947;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100196_L106496;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Checking C++->binary dependencies since CHECK_DEPENDENCIES=1 to see if the output is uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109225 = (::std::string("[flx] ") + ::std::string("Checking C++->binary dependencies since CHECK_DEPENDENCIES=1 to see if the output is uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109225)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2730, cols 7 to 110
    _end_100196_L106496:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2732, cols 7 to 91
      //xtime<105939>varname = (dfiletime<82503>stackfun (apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), (neg<82781>primfun[double] literal[double]("1.0"))));
      xtime = dfiletime(ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME, - 1.0 ); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<106498> := (+<14305>primfun (apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), ".dep"));
      _vI106498_f  = ptrflx_processing->_vI105620_dvars.filebase + ::std::string(".dep") ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI106498_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L106499;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<106498>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<106498>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<106498>varname, 2))));
      _vI106498_f = ::flx::rtl::strutil::substr(_vI106498_f,0,1) + ::flx::rtl::strutil::substr(_vI106498_f,2,_vI106498_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L106502;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L106499:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI106498_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L106502;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<106498>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<106498>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<106498>varname, 2))));
      _vI106498_f = (::flx::rtl::strutil::substr(_vI106498_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI106498_f,2,_vI106498_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L106502:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI106498_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L106504;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<106498>varname = (copyfrom<81959>primfun[int] (f<106498>varname, 1));
      _vI106498_f = ::flx::rtl::strutil::substr(_vI106498_f,1,_vI106498_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L106504:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<106497>varname = (join<82705>stackfun (apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), f<106498>varname));
      _vI106497_k = _fI82705_join((*ptrflx_processing->_vI68947_config ).FLX_OUTPUT_DIR, _vI106498_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2733, cols 7 to 82
      //depfilename<105940>varname = k<106497>varname;
      _vI105940_depfilename = _vI106497_k; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2734, cols 7 to 81
      //flx_srctime<105941>varname = (dfiletime<82503>stackfun (depfilename<105940>varname, (_ctor_double<82646>primfun[ulong] (_ctor_ulong<82647>primfun[int] -1))));
      flx_srctime = dfiletime(_vI105940_depfilename, static_cast<double>((static_cast<_a5090t_107887>((-1))/*int.flx: ctor*/))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2735, cols 7 to 73
      //cpp_srctime<105942>varname = (aux_uncurry<106505>stackfun ((neg<82781>primfun[double] literal[double]("1.0")), apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      cpp_srctime = _fI106505_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_tt108078(- 1.0 , ptrflx_processing->_vI106023_control.cpps)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2736, cols 7 to 74
      //obj_srctime<105943>varname = (aux_uncurry<106515>stackfun ((neg<82781>primfun[double] literal[double]("1.0")), apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)));
      obj_srctime = _fI106515_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_tt108078(- 1.0 , ptrflx_processing->_vI106023_control.cppos)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<106527> := (<<82604>primfun[double] (flx_srctime<105941>varname, cpp_srctime<105942>varname));
      _vI106527_max_mv_106  = (flx_srctime < cpp_srctime); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI106527_max_mv_106%2==1) ) goto _ml108_L106526;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv100256<106525> := cpp_srctime<105942>varname;
      _urv100256  = cpp_srctime; //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      goto _end_inline_max_100263_L106528;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L106526:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv100256<106525> := flx_srctime<105941>varname;
      _urv100256  = flx_srctime; //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 3 to 52
    _end_inline_max_100263_L106528:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 27 to 31
      //max_mv_106<106531> := (<<82604>primfun[double] (_urv100256<106525>varname, obj_srctime<105943>varname));
      _vI106531_max_mv_106  = (_urv100256 < obj_srctime); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      if(!(_vI106531_max_mv_106%2==1) ) goto _ml108_L106530;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv100264<106529> := obj_srctime<105943>varname;
      _urv100264  = obj_srctime; //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      goto _end_inline_max_100271_L106532;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
    _ml108_L106530:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 24 to 45
      //_urv100264<106529> := _urv100256<106525>varname;
      _urv100264  = _urv100256; //init
    // # C:/projects/felix/src/packages/algebra.fdoc: line 428, cols 3 to 52
    _end_inline_max_100271_L106532:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2737, cols 7 to 70
      //deptime<105944>varname = _urv100264<106529>varname;
      _vI105944_deptime = _urv100264; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2738, cols 7 to 37
      //uptodate<105945>varname = (<<82604>primfun[double] (deptime<105944>varname, xtime<105939>varname));
      _vI105945_uptodate = (_vI105944_deptime < xtime); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100281_L106535;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Extra c++ sources  ", (str<81092>stackfun apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109226 = (::std::string("[flx] ") + (::std::string("Extra c++ sources  ") + str(FLX_FPAR_PASS_ONLY)
      .apply(ptrflx_processing->_vI106023_control.cpps) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109226)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2741, cols 7 to 55
    _end_100281_L106535:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100285_L106538;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Extra object files ", (str<81092>stackfun apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109227 = (::std::string("[flx] ") + (::std::string("Extra object files ") + str(FLX_FPAR_PASS_ONLY)
      .apply(ptrflx_processing->_vI106023_control.cppos) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109227)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2742, cols 7 to 56
    _end_100285_L106538:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100289_L106541;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Extra ocaml files  ", (str<81092>stackfun apply((prj79:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109228 = (::std::string("[flx] ") + (::std::string("Extra ocaml files  ") + str(FLX_FPAR_PASS_ONLY)
      .apply(ptrflx_processing->_vI106023_control.ocamls) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109228)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2744, cols 7 to 57
    _end_100289_L106541:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100293_L106544;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Filebase = ", apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109229 = (::std::string("[flx] ") + (::std::string("Filebase = ") + ptrflx_processing->_vI105620_dvars.filebase ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109229)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2746, cols 7 to 46
    _end_100293_L106544:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100297_L106547;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("cache   time = ", (strfiletime<82509>stackfun apply((prj75:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> double), control<106023>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109230 = (::std::string("[flx] ") + (::std::string("cache   time = ") + strfiletime(FLX_FPAR_PASS ptrflx_processing->_vI106023_control.cache_time) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109230)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2748, cols 7 to 78
    _end_100297_L106547:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100301_L106550;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("flx_src time = ", (strfiletime<82509>stackfun flx_srctime<105941>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109231 = (::std::string("[flx] ") + (::std::string("flx_src time = ") + strfiletime(FLX_FPAR_PASS flx_srctime) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109231)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2749, cols 7 to 71
    _end_100301_L106550:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100305_L106553;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("cpp_src time = ", (strfiletime<82509>stackfun cpp_srctime<105942>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109232 = (::std::string("[flx] ") + (::std::string("cpp_src time = ") + strfiletime(FLX_FPAR_PASS cpp_srctime) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109232)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2750, cols 7 to 71
    _end_100305_L106553:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100309_L106556;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("obj_src time = ", (strfiletime<82509>stackfun obj_srctime<105943>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109233 = (::std::string("[flx] ") + (::std::string("obj_src time = ") + strfiletime(FLX_FPAR_PASS obj_srctime) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109233)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2751, cols 7 to 71
    _end_100309_L106556:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100313_L106559;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("dep     time = ", (strfiletime<82509>stackfun deptime<105944>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109234 = (::std::string("[flx] ") + (::std::string("dep     time = ") + strfiletime(FLX_FPAR_PASS _vI105944_deptime) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109234)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2753, cols 7 to 67
    _end_100313_L106559:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100317_L106562;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Binary  time = ", (strfiletime<82509>stackfun xtime<105939>varname))), " for ")), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109235 = (::std::string("[flx] ") + (((::std::string("Binary  time = ") + strfiletime(FLX_FPAR_PASS xtime) ) + ::std::string(" for ") ) + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109235)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2754, cols 7 to 108
    _end_100317_L106562:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 34 to 41
      //check_binary_uptodate_mv_66119<106564> := uptodate<105945>varname;
      check_binary_uptodate_mv_66119  = _vI105945_uptodate; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
      if(!(check_binary_uptodate_mv_66119%2==1) ) goto _ml66121_L106565;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
      //_urv100318<106563> := "";
      _urv100318  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
      goto _end_hash_94552281;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
    _ml66121_L106565:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
      //_urv100318<106563> := " NOT ";
      _urv100318  = ::std::string(" NOT "); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 31 to 62
    _end_hash_94552281:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100326_L106569;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ((+<14305>primfun ("output is ", _urv100318<106563>varname)), " up to date")))), "\x0A")));
      {
      _a14239t_107672 _tmp109236 = (::std::string("[flx] ") + ((::std::string("output is ") + _urv100318 ) + ::std::string(" up to date") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109236)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2755, cols 7 to 85
    _end_100326_L106569:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2756, cols 7 to 22
      //return uptodate<105945>varname;: type  ::flx::rtl::cl_t
      return _vI105945_uptodate;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2759, cols 5 to 19
    _ifdoend_bootflx_65956_L105947:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100330_L106572;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++->binary dependency checking skipped due to switch CHECK_DEPENDENCIES=0: forced uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109237 = (::std::string("[flx] ") + ::std::string("C++->binary dependency checking skipped due to switch CHECK_DEPENDENCIES=0: forced uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109237)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2758, cols 7 to 109
    _end_100330_L106572:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2759, cols 7 to 18
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2761,3,2761,4); // HACK! 
}

//------------------------------
//FUNCTION <93353>: toolchain_msvc_win32::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93353__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <84381>: join::join'2: Apply method
_a14239t_107672 _fI84381_join__apos_2::apply(_a14239t_107672 const &_arg ){
  _vI84382_y = _arg;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 95, cols 3 to 45
      //return (join<82705>stackfun (x<84380>varname, y<84382>varname));: type _a14239t_107672
      return _fI82705_join(ptrjoin->_vI84380_x, _vI84382_y);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",95,3,95,45); // HACK! 
}

//------------------------------
//FUNCTION <89743>: toolchain_clang_apple_iOS_maker_uncurry::_lam_66184::_lam_66184'2: Apply method
void* _fI89743__lam_66184__apos_2::apply(_a14239t_107672 const &_arg ){
  arch = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1973, cols 34 to 93
      //return (Snoc<80397>struct ((Snoc<80397>struct (acc<89745>varname, "-arch")), arch<89744>varname));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptr_lam_66184->_vI89745_acc, ::std::string("-arch")))), arch)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1973,34,1973,93); // HACK! 
}

//------------------------------
//FUNCTION <66669>: toolchain_gcc_osx::dynamic_executable_linker: Apply method
int _fI66669_dynamic_executable_linker::apply(_art107763 const &_arg ){
  _vI66672_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1150, cols 5 to 6
      //result<66671>varname = (generic_link_exe_dynamic_uncurry<89454>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<66594>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66672>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66672>varname)));
      _vI66671_result = generic_link_exe_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_gcc_osx->_vI66594_linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_gcc_osx->_vI66677_config.library_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66672_spec.srcs, _vI66672_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1151, cols 5 to 18
      //return result<66671>varname;: type int
      return _vI66671_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1152,3,1152,4); // HACK! 
}

//------------------------------
//FUNCTION <89791>: toolchain_clang_apple_iOS_maker_uncurry::static_library_linker: Apply method
int _fI89791_static_library_linker::apply(_art107763 const &_arg ){
  _vI89793_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2139, cols 5 to 6
      //result<89792>varname = (generic_static_library_uncurry<89475>stackfun (( CCFLAGS:(Snoc<80397>struct (Empty<80385>varname, "-static")), CCLINK_STATIC_LIB:"libtool", SPEC_LIB_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<89803>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<89793>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<89793>varname)));
      _vI89792_result = generic_static_library_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107809(_art107808(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-static")))), ::std::string("libtool"), ::std::string("-o "), ptrtoolchain_clang_apple_iOS_maker_uncurry->_vI89803_config.debugln), _vI89793_spec.srcs, _vI89793_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 2140, cols 5 to 18
      //return result<89792>varname;: type int
      return _vI89792_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",2141,3,2141,4); // HACK! 
}

//------------------------------
//FUNCTION <89446>: generic_cxx_gen_deps_uncurry: Apply method
_tt107757 generic_cxx_gen_deps_uncurry::apply(_tt107802 const &_arg ){
  spec_uncurry = _arg.mem_0;
  _vI89822_src = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93394>varname = (aux_uncurry<93395>stackfun (apply((prj2:record(CCDEP:(string),CCFLAGS:(list),INCLUDE_DIRS:(list),MACROS:(list),debugln:(string -> void)) -> list), spec_uncurry<89825>varname), Empty<80385>varname));
      _vI93394_r = _fI93395_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(spec_uncurry.INCLUDE_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93394>ref;
      {
      void** _tmp109238 = (void**)&_vI93394_r;
      _rev(((_tmp109238)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93432>varname = (aux_uncurry<93433>stackfun (apply((prj3:record(CCDEP:(string),CCFLAGS:(list),INCLUDE_DIRS:(list),MACROS:(list),debugln:(string -> void)) -> list), spec_uncurry<89825>varname), Empty<80385>varname));
      _vI93432_r = _fI93433_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(spec_uncurry.MACROS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93432>ref;
      {
      void** _tmp109239 = (void**)&_vI93432_r;
      _rev(((_tmp109239)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 132, cols 5 to 6
      //cmd<89817>varname = (Snoc<80397>struct ((+<80787>stackfun ((join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun (apply((prj1:record(CCDEP:(string),CCFLAGS:(list),INCLUDE_DIRS:(list),MACROS:(list),debugln:(string -> void)) -> list), spec_uncurry<89825>varname), r<93394>varname)), r<93432>varname)), src<89822>varname)), apply((prj0:record(CCDEP:(string),CCFLAGS:(list),INCLUDE_DIRS:(list),MACROS:(list),debugln:(string -> void)) -> string), spec_uncurry<89825>varname)));
      _vI89817_cmd = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(spec_uncurry.CCFLAGS, _vI93394_r)) /* apply_stack */, _vI93432_r)) /* apply_stack */, _vI89822_src)) /* apply_stack */, spec_uncurry.CCDEP))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93455>varname = (aux_uncurry<93456>stackfun (cmd<89817>varname, Empty<80385>varname));
      _vI93455_r = _fI93456_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_vI89817_cmd, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93455>ref;
      {
      void** _tmp109240 = (void**)&_vI93455_r;
      _rev(((_tmp109240)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 133, cols 5 to 46
      //CMD<89818>varname = (cat_uncurry<89509>stackfun (" ", r<93455>varname));
      _vI89818_CMD = cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI93455_r)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 134, cols 5 to 55
      //run procedure call apply((prj4:record(CCDEP:(string),CCFLAGS:(list),INCLUDE_DIRS:(list),MACROS:(list),debugln:(string -> void)) -> string -> void), spec_uncurry<89825>varname) (+<14305>primfun ("C++ generate dependencies : ", CMD<89818>varname));
      {
        ::flx::rtl::con_t *_p = (spec_uncurry.debugln)->clone()
      ->call(0, ::std::string("C++ generate dependencies : ") + _vI89818_CMD );
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_507_L93471;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[get_stdout] ", CMD<89818>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109241 = (::std::string("[get_stdout] ") + _vI89818_CMD ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109241)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/program.fdoc: line 811, cols 5 to 9
    _ifdoelse_std_507_L93471:;
    // # C:/projects/felix/src/packages/program.fdoc: line 812, cols 5 to 32
      //_genout_urv93469<93469> := (basic_get_stdout<82955>stackfun CMD<89818>varname);
      _genout_urv93469  = basic_get_stdout(_vI89818_CMD); //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 135, cols 5 to 47
      //_ds2_65405<89819>varname = _genout_urv93469<93469>varname;
      _ds2_65405 = _genout_urv93469; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 135, cols 5 to 47
      //result<89820>varname = apply((prj0:int * string -> int), _ds2_65405<89819>varname);
      _vI89820_result = _ds2_65405.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 135, cols 5 to 47
      //data<89821>varname = apply((prj1:int * string -> string), _ds2_65405<89819>varname);
      _vI89821_data = _ds2_65405.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 138, cols 5 to 9
      if(!(!((_vI89820_result == 0)) ) ) goto _ifdoelse_bootflx_65391_L89824;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("C++ command=", CMD<89818>varname)), " FAILED")), "\x0A")));
      {
      _a14239t_107672 _tmp109242 = ((::std::string("C++ command=") + _vI89818_CMD ) + ::std::string(" FAILED") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109242)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 138, cols 5 to 9
    _ifdoelse_bootflx_65391_L89824:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 139, cols 5 to 24
      //return (result<89820>varname, data<89821>varname);: type _tt107757
      return _tt107757(_vI89820_result, _vI89821_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",140,3,140,4); // HACK! 
}

//------------------------------
//FUNCTION <92075>: +::aux_uncurry: Apply method
void* _fI92075_aux_uncurry::apply(_at107697 const &_arg ){
  _vI92076_x_uncurry = _arg.data[0];
  _vI92077_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L92084:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<92080> := x_uncurry<92076>varname;
      _vI92080_aux__apos_2_mv_1387  = _vI92076_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI92080_aux__apos_2_mv_1387)==0) ) goto _ml1389_L92079;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<92077>varname;: type void*
      return _vI92077_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L92079:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI92080_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI92083__lam_1391)(FLX_FPAR_PASS this, ptr_fI80787___plus_))) ) goto _ml1390_L92078;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<92081>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<92080>varname));
      _vI92081_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI92080_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<92082>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<92080>varname));
      _vI92082_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI92080_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<92077> := (Snoc<80397>struct (y<92077>varname, h_param_std_1269<92081>varname));
      _vI92077_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI92077_y, _vI92081_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<92076> := t_param_std_1268<92082>varname;
      _vI92076_x_uncurry  = _vI92082_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L92084;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L92078:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <105678>: flx_processing::aux_uncurry: Apply method
void* _fI105678_aux_uncurry::apply(_at107697 const &_arg ){
  _vI105679_x_uncurry = _arg.data[0];
  _vI105680_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L105687:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<105683> := x_uncurry<105679>varname;
      _vI105683_aux__apos_2_mv_1387  = _vI105679_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI105683_aux__apos_2_mv_1387)==0) ) goto _ml1389_L105682;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<105680>varname;: type void*
      return _vI105680_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L105682:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105683_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI105686__lam_1391)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml1390_L105681;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<105684>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<105683>varname));
      _vI105684_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI105683_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<105685>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<105683>varname));
      _vI105685_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI105683_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<105680> := (Snoc<80397>struct (y<105680>varname, h_param_std_1269<105684>varname));
      _vI105680_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105680_y, _vI105684_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<105679> := t_param_std_1268<105685>varname;
      _vI105679_x_uncurry  = _vI105685_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L105687;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L105681:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <84379>: join: Apply method
_ft107734* join::apply(_a14239t_107672 const &_arg ){
  _vI84380_x = _arg;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 95, cols 3 to 45
      //return join'2<84381>closure;: type _ft107734*
      return (FLX_NEWP(_fI84381_join__apos_2)(FLX_FPAR_PASS this));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",95,3,95,45); // HACK! 
}

//------------------------------
//C FUNC <16974>: file_type
int file_type(_a16948t_107830* _vI16982_s){
   ::flx::rtl::cl_t file_type_mv_2849;
   ::flx::rtl::cl_t file_type_mv_2844;
  _a16947t_107969 m_param_std_2838;
  _a16947t_107969 file_type_mv_2840;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 452, cols 3 to 40
      //file_type_mv_2840<95122> := (\&<85897>primfun[mode_t] ((raw_mode<16960>primfun s<16982>varname), _S_IFMT<16954>varname));
      file_type_mv_2840  = (_vI16982_s->st_mode) & (_S_IFMT) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 480, cols 11 to 11
/*match case 1:m_param_std_2838*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 480, cols 11 to 11
      //m_param_std_2838<95123>varname = file_type_mv_2840<95122>varname;
      m_param_std_2838 = file_type_mv_2840; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 481, cols 10 to 22
      //file_type_mv_2844<95124> := (==<16953>primfun (m_param_std_2838<95123>varname, _S_IFDIR<16955>varname));
      file_type_mv_2844  = (m_param_std_2838 == (_S_IFDIR)); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
      if(!(file_type_mv_2844%2==1) ) goto _ml2846_L95125;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
      //return DIRECTORY<85875>varname;: type int
      return /*VR_int*/2;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
    _ml2846_L95125:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 482, cols 12 to 24
      //file_type_mv_2849<95126> := (==<16953>primfun (m_param_std_2838<95123>varname, _S_IFREG<16956>varname));
      file_type_mv_2849  = (m_param_std_2838 == (_S_IFREG)); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
      if(!(file_type_mv_2849%2==1) ) goto _ml2851_L95127;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
      //return REGULAR<85895>varname;: type int
      return /*VR_int*/4;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
    _ml2851_L95127:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 483, cols 7 to 25
      //return INDETERMINATE<85855>varname;: type int
      return /*VR_int*/7;
}
//------------------------------
//FUNCTION <66287>: toolchain_msvc_win32::target_os: Apply method
_a14239t_107672 target_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1732, cols 3 to 37
      //return "Win32";: type _a14239t_107672
      return ::std::string("Win32");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1732,3,1732,37); // HACK! 
}

//------------------------------
//FUNCTION <107494>: flx_processing::check_binary_uptodate::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI107494__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <97783>: flx_pkgconfig::parse_args::aux::_lam_1502: Apply method
 ::flx::rtl::cl_t _fI97783__lam_1502::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",579,9,579,17); // HACK! 
}

//------------------------------
//FUNCTION <107608>: flx_processing::run_program_static::aux_uncurry: Apply method
void* _fI107608_aux_uncurry::apply(_at107697 const &_arg ){
  _vI107609_inp_uncurry = _arg.data[0];
  _vI107610_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L107617:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<107613> := inp_uncurry<107609>varname;
      _vI107613_aux__apos_2_mv_1381  = _vI107609_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI107613_aux__apos_2_mv_1381)==0) ) goto _ml1383_L107612;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<107610>varname;: type void*
      return _vI107610_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L107612:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI107613_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI107616__lam_1385)(FLX_FPAR_PASS this, ptr_fI106955_run_program_static, ptrflx_processing))) ) goto _ml1384_L107611;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<107614>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<107613>varname));
      _vI107614_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI107613_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<107615>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<107613>varname));
      _vI107615_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI107613_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<107610> := (Snoc<80397>struct (out<107610>varname, (quote_arg<16873>stackfun h_param_std_1267<107614>varname)));
      _vI107610_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI107610_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI107614_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<107609> := t_param_std_1266<107615>varname;
      _vI107609_inp_uncurry  = _vI107615_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L107617;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L107611:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <107266>: flx_processing::cxx_compile_static1_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI107266__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------

//PROCEDURE <90633:> respectful_parse_uncurry_uncurry::handlecopying: Call method
void handlecopying::stack_call(char const &_arg){
  ch = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 585, cols 9 to 13
      if(!((ch == ::flx::rtl::strutil::subscript(::std::string("'"),0))) ) goto _ifdoend_std_1974_L90639;
    // # C:/projects/felix/src/packages/strings.fdoc: line 549, cols 17 to 28
      //handlecopying_mv_2307<90591> := apply((prj2:record(dquote:(dquote_action_t),escape:(escape_action_t),quote:(quote_action_t)) -> quote_action_t), action_uncurry_uncurry<90698>varname);
      handlecopying_mv_2307  = ptrrespectful_parse_uncurry_uncurry->action_uncurry_uncurry.quote; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 550, cols 13 to 25
/*match case 1:|ignore-quote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 550, cols 13 to 25
      if(!(handlecopying_mv_2307%3==0) ) goto _ml2309_L90635;
    // # C:/projects/felix/src/packages/strings.fdoc: line 551, cols 13 to 25
      // primcall +=<14303>primproc (&current<90631>ref, ch<90634>varname);
      {
      _a14239t_107672* _tmp109246 = (_a14239t_107672*)&ptrrespectful_parse_uncurry_uncurry->_vI90631_current;
      *((_tmp109246)) += ch;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 550, cols 13 to 25
    _ml2309_L90635:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 552, cols 13 to 23
/*match case 2:|keep-quote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 552, cols 13 to 23
      if(!(handlecopying_mv_2307%3==1) ) goto _ml2310_L90636;
    // # C:/projects/felix/src/packages/strings.fdoc: line 553, cols 13 to 25
      // primcall +=<14303>primproc (&current<90631>ref, ch<90634>varname);
      {
      _a14239t_107672* _tmp109247 = (_a14239t_107672*)&ptrrespectful_parse_uncurry_uncurry->_vI90631_current;
      *((_tmp109247)) += ch;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 554, cols 13 to 24
      //mode<90630>varname = quote<15004>varname;
      ptrrespectful_parse_uncurry_uncurry->_vI90630_mode = /*VR_int*/2; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 552, cols 13 to 23
    _ml2310_L90636:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 555, cols 13 to 23
/*match case 3:|drop-quote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 555, cols 13 to 23
      if(!(handlecopying_mv_2307%3==2) ) goto _ml2311_L90637;
    // # C:/projects/felix/src/packages/strings.fdoc: line 556, cols 13 to 24
      //mode<90630>varname = quote<15004>varname;
      ptrrespectful_parse_uncurry_uncurry->_vI90630_mode = /*VR_int*/2; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 555, cols 13 to 23
    _ml2311_L90637:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 557, cols 11 to 20
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 557, cols 11 to 20
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",557,11,557,20);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",557,11,557,20);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 585, cols 9 to 13
    _ifdoend_std_1974_L90639:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 584, cols 9 to 26
      if(!((ch == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_std_1977_L90644;
    // # C:/projects/felix/src/packages/strings.fdoc: line 559, cols 17 to 29
      //handlecopying_mv_2312<90595> := apply((prj0:record(dquote:(dquote_action_t),escape:(escape_action_t),quote:(quote_action_t)) -> dquote_action_t), action_uncurry_uncurry<90698>varname);
      handlecopying_mv_2312  = ptrrespectful_parse_uncurry_uncurry->action_uncurry_uncurry.dquote; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 560, cols 13 to 26
/*match case 1:|ignore-dquote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 560, cols 13 to 26
      if(!(handlecopying_mv_2312%3==0) ) goto _ml2314_L90640;
    // # C:/projects/felix/src/packages/strings.fdoc: line 561, cols 13 to 25
      // primcall +=<14303>primproc (&current<90631>ref, ch<90634>varname);
      {
      _a14239t_107672* _tmp109249 = (_a14239t_107672*)&ptrrespectful_parse_uncurry_uncurry->_vI90631_current;
      *((_tmp109249)) += ch;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 560, cols 13 to 26
    _ml2314_L90640:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 562, cols 13 to 24
/*match case 2:|keep-dquote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 562, cols 13 to 24
      if(!(handlecopying_mv_2312%3==1) ) goto _ml2315_L90641;
    // # C:/projects/felix/src/packages/strings.fdoc: line 563, cols 13 to 25
      // primcall +=<14303>primproc (&current<90631>ref, ch<90634>varname);
      {
      _a14239t_107672* _tmp109250 = (_a14239t_107672*)&ptrrespectful_parse_uncurry_uncurry->_vI90631_current;
      *((_tmp109250)) += ch;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 564, cols 13 to 25
      //mode<90630>varname = dquote<15006>varname;
      ptrrespectful_parse_uncurry_uncurry->_vI90630_mode = /*VR_int*/3; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 562, cols 13 to 24
    _ml2315_L90641:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 565, cols 13 to 24
/*match case 3:|drop-dquote*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 565, cols 13 to 24
      if(!(handlecopying_mv_2312%3==2) ) goto _ml2316_L90642;
    // # C:/projects/felix/src/packages/strings.fdoc: line 566, cols 13 to 25
      //mode<90630>varname = dquote<15006>varname;
      ptrrespectful_parse_uncurry_uncurry->_vI90630_mode = /*VR_int*/3; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 565, cols 13 to 24
    _ml2316_L90642:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 567, cols 11 to 20
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 567, cols 11 to 20
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",567,11,567,20);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",567,11,567,20);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 584, cols 9 to 26
    _ifdoend_std_1977_L90644:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 584, cols 9 to 26
      if(!((ch == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoend_std_1980_L90649;
    // # C:/projects/felix/src/packages/strings.fdoc: line 569, cols 17 to 29
      //handlecopying_mv_2317<90599> := apply((prj1:record(dquote:(dquote_action_t),escape:(escape_action_t),quote:(quote_action_t)) -> escape_action_t), action_uncurry_uncurry<90698>varname);
      handlecopying_mv_2317  = ptrrespectful_parse_uncurry_uncurry->action_uncurry_uncurry.escape; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 570, cols 13 to 26
/*match case 1:|ignore-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 570, cols 13 to 26
      if(!(handlecopying_mv_2317%3==0) ) goto _ml2319_L90645;
    // # C:/projects/felix/src/packages/strings.fdoc: line 571, cols 13 to 25
      // primcall +=<14303>primproc (&current<90631>ref, ch<90634>varname);
      {
      _a14239t_107672* _tmp109252 = (_a14239t_107672*)&ptrrespectful_parse_uncurry_uncurry->_vI90631_current;
      *((_tmp109252)) += ch;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 570, cols 13 to 26
    _ml2319_L90645:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 572, cols 13 to 24
/*match case 2:|keep-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 572, cols 13 to 24
      if(!(handlecopying_mv_2317%3==1) ) goto _ml2320_L90646;
    // # C:/projects/felix/src/packages/strings.fdoc: line 573, cols 13 to 25
      // primcall +=<14303>primproc (&current<90631>ref, ch<90634>varname);
      {
      _a14239t_107672* _tmp109253 = (_a14239t_107672*)&ptrrespectful_parse_uncurry_uncurry->_vI90631_current;
      *((_tmp109253)) += ch;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 574, cols 13 to 33
      //mode<90630>varname = escape-copying<15008>varname;
      ptrrespectful_parse_uncurry_uncurry->_vI90630_mode = /*VR_int*/4; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 572, cols 13 to 24
    _ml2320_L90646:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 575, cols 13 to 24
/*match case 3:|drop-escape*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 575, cols 13 to 24
      if(!(handlecopying_mv_2317%3==2) ) goto _ml2321_L90647;
    // # C:/projects/felix/src/packages/strings.fdoc: line 576, cols 13 to 33
      //mode<90630>varname = escape-copying<15008>varname;
      ptrrespectful_parse_uncurry_uncurry->_vI90630_mode = /*VR_int*/4; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 575, cols 13 to 24
    _ml2321_L90647:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 577, cols 11 to 20
/*match failure*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 577, cols 11 to 20
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",577,11,577,20);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/strings.fdoc",577,11,577,20);
;
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 584, cols 9 to 26
    _ifdoend_std_1980_L90649:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 584, cols 9 to 26
      if(!(!((((int)(::flx::rtl::strutil::subscript(::std::string(" "),0)) ) < ((int)ch ))) ) ) goto _ifdoend_std_1983_L90650;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &result<90632>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &result<90632>ref), current<90631>varname));
      *((void**)&ptrrespectful_parse_uncurry_uncurry->_vI90632_result)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&ptrrespectful_parse_uncurry_uncurry->_vI90632_result) , ptrrespectful_parse_uncurry_uncurry->_vI90631_current)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 580, cols 11 to 22
      //current<90631>varname = "";
      ptrrespectful_parse_uncurry_uncurry->_vI90631_current = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 581, cols 11 to 25
      //mode<90630>varname = skipping<15002>varname;
      ptrrespectful_parse_uncurry_uncurry->_vI90630_mode = /*VR_int*/1; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 
    // # C:/projects/felix/src/packages/strings.fdoc: line 584, cols 9 to 26
    _ifdoend_std_1983_L90650:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 583, cols 11 to 23
      // primcall +=<14303>primproc (&current<90631>ref, ch<90634>varname);
      {
      _a14239t_107672* _tmp109255 = (_a14239t_107672*)&ptrrespectful_parse_uncurry_uncurry->_vI90631_current;
      *((_tmp109255)) += ch;
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 584, cols 11 to 24
      //mode<90630>varname = copying<15000>varname;
      ptrrespectful_parse_uncurry_uncurry->_vI90630_mode = /*VR_int*/0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 586, cols 7 to 8
      return; // proc return from stackable 

}
//------------------------------
//FUNCTION <66513>: toolchain_gcc_linux::cxx_compiler_vendor: Apply method
_a14239t_107672 _fI66513_cxx_compiler_vendor::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 734, cols 3 to 45
      //return "GNU";: type _a14239t_107672
      return ::std::string("GNU");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",734,3,734,45); // HACK! 
}

//------------------------------
//FUNCTION <93958>: generic_link_exe_static_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93958__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <106393>: flx_processing::cxx_link_shared_library::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI106393__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <97116>: flx_pkgconfig::handle_pkg::_lam_65277::aux::_lam_1502: Apply method
 ::flx::rtl::cl_t _fI97116__lam_1502::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 579, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",579,9,579,17); // HACK! 
}

//------------------------------
//C FUNC <86071>: flx_dlsym
_tt108008 flx_dlsym(FLX_APAR_DECL  _a7876t_107991 _vI86077_linst, _a14239t_107672 _vI86078_sym){
  _cft108007* _vI86086_typed_sym;
  _a5106t_107998 _vI86083_raw_sym;
  _a5106t_107998 _vI86082_tf;
  _a7803t_107993 _vI86081_dlibrary;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1074, cols 5 to 46
      //dlibrary<86081>varname = (get_library<7893>primfun linst<86077>varname);
      _vI86081_dlibrary = _vI86077_linst->lib; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1075, cols 5 to 45
      //tf<86082>varname = (get_thread_frame<7894>primfun linst<86077>varname);
      _vI86082_tf = (void*)_vI86077_linst->thread_frame; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1077, cols 5 to 51
      //raw_sym<86083>varname = (find_sym<7860>stackfun (dlibrary<86081>varname, sym<86078>varname));
      _vI86083_raw_sym = find_sym(FLX_FPAR_PASS_ONLY)
      .apply(_tt108011(_vI86081_dlibrary, _vI86078_sym)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1081, cols 5 to 9
      if(!(0==_vI86083_raw_sym) ) goto _ifdoelse_std_542_L86079;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Unable to load symbol ", sym<86078>varname)), " from library ")), (filename<7891>primfun linst<86077>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109256 = (((::std::string("Unable to load symbol ") + _vI86078_sym ) + ::std::string(" from library ") ) + ::std::string(_vI86077_linst->lib->filename) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109256)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1080, cols 7 to 84
      // primcall raise<86084>primproc[flx_link_failure_t] (_ctor_flx_link_failure_t<7797>primfun ((filename<7891>primfun linst<86077>varname), "dlsym", (+<14305>primfun ("Cannot find symbol ", sym<86078>varname))));
      {
      _a7796t_108012 _tmp109257 = ::flx::rtl::flx_link_failure_t((::std::string(_vI86077_linst->lib->filename)),(::std::string("dlsym")),(::std::string("Cannot find symbol ") + _vI86078_sym ));
      (throw ((_tmp109257)));
      }
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1081, cols 5 to 9
    _ifdoelse_std_542_L86079:;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1083, cols 5 to 44
      //typed_sym<86086>varname = (cast<86085>primfun[address * record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) --> record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)), address] raw_sym<86083>varname);
      _vI86086_typed_sym = (_cft108007*)(_vI86083_raw_sym); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1084, cols 5 to 25
      //return (typed_sym<86086>varname, tf<86082>varname);: type _tt108008
      return _tt108008(_vI86086_typed_sym, _vI86082_tf);
}
//------------------------------
//FUNCTION <105786>: flx_processing::run_felix_compiler_if_required: Apply method
int run_felix_compiler_if_required::apply(_pt107743* const &_arg ){
  _vI105790_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2172, cols 5 to 19
      //result<105787>varname = 0;
      _vI105787_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2173, cols 5 to 41
      //_genout_urv98643<106178> := (check_cxx_uptodate<105783>stackfun ());
      _genout_urv98643  = check_cxx_uptodate(FLX_FPAR_PASS ptrflx_processing)
      .apply() /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2173, cols 5 to 41
      //uptodate<105788>varname = _genout_urv98643<106178>varname;
      uptodate = _genout_urv98643; //assign simple
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 3 to 67
      //str_mv_152<106180> := uptodate<105788>varname;
      _vI106180_str_mv_152  = uptodate; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      if(!(_vI106180_str_mv_152%2==1) ) goto _ml154_L106181;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      //_urv98644<106179> := "true";
      _urv98644  = ::std::string("true"); //init
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      goto _end_inline_str_98649_L106182;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
    _ml154_L106181:;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
/*match case 2:any*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      //_urv98644<106179> := "false";
      _urv98644  = ::std::string("false"); //init
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 3 to 67
    _end_inline_str_98649_L106182:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_98653_L106185;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("[run_felix_compiler_if_required] Uptodate=", _urv98644<106179>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109258 = (::std::string("[flx] ") + (::std::string("[run_felix_compiler_if_required] Uptodate=") + _urv98644 ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109258)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2174, cols 5 to 73
    _end_98653_L106185:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
      if(uptodate) goto _ifdoend_bootflx_65868_L105793;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_98657_L106188;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Running flxg because target is not uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109259 = (::std::string("[flx] ") + ::std::string("Running flxg because target is not uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109259)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2176, cols 7 to 61
    _end_98657_L106188:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106190>ref;
      {
      __timeb64* _tmp109260 = (__timeb64*)&_vI106190_tv;
      _ftime64_s(((_tmp109260)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv98658<106189> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106190>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106190>varname)), literal[double]("1.0e3")))));
      _genout_urv98658  = (static_cast<double>((_vI106190_tv.time))) + ((static_cast<double>((_vI106190_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2177, cols 7 to 27
      //t0<105789>varname = _genout_urv98658<106189>varname;
      t0 = _genout_urv98658; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 20 to 45
      //run_felix_compiler_if_required_mv_66053<106192> := (==<80201>primfun[int] (apply((prj29:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 0));
      run_felix_compiler_if_required_mv_66053  = (ptrflx_processing->_vI106023_control.FLXG_OPTIMISE == 0); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
      if(!(run_felix_compiler_if_required_mv_66053%2==1) ) goto _ml66055_L106193;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
      //_urv98662<106191> := Empty<80385>varname;
      _urv98662  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
      goto _end_hash_1043956636;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
    _ml66055_L106193:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 148, cols 3 to 44
      //_urv98662<106191> := (Snoc<80397>struct (Empty<80385>varname, "--optimise"));
      _urv98662  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("--optimise")))); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
    _end_hash_1043956636:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 22 to 36
      //run_felix_compiler_if_required_mv_66058<106196> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), 1));
      run_felix_compiler_if_required_mv_66058  = (ptrflx_processing->_vI106023_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
      if(!(run_felix_compiler_if_required_mv_66058%2==1) ) goto _ml66060_L106197;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
      //_urv98673<106195> := echoln<106025>closure;
      _urv98673  = (FLX_NEWP(echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
      goto _end_hash_745975847;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
    _ml66060_L106197:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
      //_urv98673<106195> := debugln<106024>closure;
      _urv98673  = (FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
    _end_hash_745975847:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2201, cols 7 to 8
      //_genout_urv98845<106199> := (run_felix_compiler<68288>stackfun ( AUTOMATON:apply((prj0:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), BUNDLE_DIR:apply((prj1:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> opt), control<106023>varname), CACHE_DIR:apply((prj0:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), COMPILER_PHASE:apply((prj8:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), DOREDUCE:apply((prj17:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), FLAGS:_urv98662<106191>varname, FLXG:apply((prj27:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname), FLXLIBS:apply((prj2:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<105620>varname), FORCE:apply((prj28:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), IMPORTS:(Snoc<80397>struct (apply((prj37:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname), apply((prj67:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), INCLUDE_DIRS:apply((prj3:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), INLINE:apply((prj39:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), OUTPUT_DIR:apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), STDGRAMMAR:(+<14305>primfun ("@", apply((prj66:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), TIME:apply((prj9:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<106023>varname), VERBOSE:apply((prj6:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<105620>varname), debugln:_urv98673<106195>varname, filebase:apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), use_ext:apply((prj10:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname)));
      _genout_urv98845  = run_felix_compiler(FLX_FPAR_PASS_ONLY)
      .apply(_art108159(ptrflx_processing->_vI106023_control.AUTOMATON, ptrflx_processing->_vI106023_control.BUNDLE_DIR, (*ptrflx_processing->_vI68947_config ).FLX_CACHE_DIR, ptrflx_processing->_vI106023_control.COMPILER_PHASE, ptrflx_processing->_vI106023_control.DOREDUCE, _urv98662, ptrflx_processing->_vI106023_control.FLXG, ptrflx_processing->_vI105620_dvars.FLX_STD_LIBS, ptrflx_processing->_vI106023_control.FLXG_FORCE, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrflx_processing->_vI106023_control.IMPORTS, ptrflx_processing->_vI106023_control.STDIMPORT))), (*ptrflx_processing->_vI68947_config ).FLX_LIB_DIRS, ptrflx_processing->_vI106023_control.INLINE, (*ptrflx_processing->_vI68947_config ).FLX_OUTPUT_DIR, ::std::string("@") + ptrflx_processing->_vI106023_control.STDGRAMMAR , ptrflx_processing->_vI106023_control.COMPILER_TIME, ptrflx_processing->_vI105620_dvars.VERBOSE, _urv98673, ptrflx_processing->_vI105620_dvars.filebase, ptrflx_processing->_vI105620_dvars.use_ext)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2201, cols 7 to 8
      //result<105787>varname = _genout_urv98845<106199>varname;
      _vI105787_result = _genout_urv98845; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _end_98855_L106207;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106206>ref;
      {
      __timeb64* _tmp109261 = (__timeb64*)&_vI106206_tv;
      _ftime64_s(((_tmp109261)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106205> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106206>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106206>varname)), literal[double]("1.0e3")))));
      _genout_urv96124  = (static_cast<double>((_vI106206_tv.time))) + ((static_cast<double>((_vI106206_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106200>varname = (-<80547>primfun[double] (_genout_urv96124<106205>varname, t0<105789>varname));
      _vI106200_elapsed = _genout_urv96124 - t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106201>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106200>varname, literal[double]("60.0"))));
      minutes = ::std::floor((_vI106200_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106202>varname = (-<80547>primfun[double] (elapsed<106200>varname, (*<80818>primfun[double] (minutes<106201>varname, literal[double]("60.0")))));
      seconds = _vI106200_elapsed - (minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106201>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106202>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Felix flxg   : ", apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109262 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Felix flxg   : ") + ptrflx_processing->_vI105620_dvars.cpp_filebase ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109262)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2202, cols 7 to 57
    _end_98855_L106207:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2207, cols 7 to 11
      if(!((_vI105787_result == 0)) ) goto _ifdoelse_bootflx_65869_L105794;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_98860_L106210;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Felix compilation succeeded")), "\x0A")));
      {
      _a14239t_107672 _tmp109263 = (::std::string("[flx] ") + ::std::string("Felix compilation succeeded") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109263)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2204, cols 9 to 47
    _end_98860_L106210:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<105735>stackproc  ehandler<105790>varname;
      {
      calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI105790_ehandler);
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_624_L106215;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_output] ", (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), ".includes")))), "\x0A")));
      {
      _a14239t_107672 _tmp109265 = (::std::string("[Open_output] ") + (ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string(".includes") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109265)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
    _ifdoelse_std_624_L106215:;
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98893<106219> := (raw_fopen_output<8432>primfun (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), ".includes")));
      _genout_urv98893  = fopen((ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string(".includes") ).c_str(),"wb"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98879<106218> := _genout_urv98893<106219>varname;
      _genout_urv98879  = _genout_urv98893; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98870<106217> := _genout_urv98879<106218>varname;
      _vI106217__genout_urv98870  = _genout_urv98879; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98872<106214> := _genout_urv98870<106217>varname;
      _genout_urv98872  = _vI106217__genout_urv98870; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 836, cols 5 to 43
      //f<106211>varname = _genout_urv98872<106214>varname;
      _vI106211_f = _genout_urv98872; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //run procedure directcall iter_uncurry<89522>directproc (_lam_65109<106212>closure, apply((prj24:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname));
      {
      _pt107730* _tmp109266 = (FLX_NEWP(_lam_65109)(FLX_FPAR_PASS this, ptrflx_processing));
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
          ->call(0, _tt107731((_tmp109266), ptrflx_processing->_vI106023_control.EXTRA_INCLUDE_FILES));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller run_felix_compiler_if_required\n");
            fprintf(stderr,"Calls  iter_uncurry\n");
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 841, cols 5 to 13
      // primcall fclose<8437>primproc f<106211>varname;
      (void)fclose(_vI106211_f);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
      goto _ifdoelse_bootflx_65869_L105794;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
      goto _ifdoelse_bootflx_65869_L105794;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
    _ifdoend_bootflx_65868_L105793:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65869_L105794;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "skipping flxg because output is uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109268 = (::std::string("[flx] ") + ::std::string("skipping flxg because output is uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109268)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
    _ifdoelse_bootflx_65869_L105794:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2211, cols 5 to 18
      //return result<105787>varname;: type int
      return _vI105787_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2212,3,2212,4); // HACK! 
}

//------------------------------
//FUNCTION <96769>: flx_pkgconfig::handle_pkg::_lam_65277::_lam_65288::_lam_1457: Apply method
 ::flx::rtl::cl_t _fI96769__lam_1457::apply(_a14239t_107672 const &_arg ){
  _vI96770_x = _arg;
    // # C:/projects/felix/src/packages/lists.fdoc: line 513, cols 10 to 30
      //return (eq<81159>stackfun (x<96770>varname, key<68665>varname));: type  ::flx::rtl::cl_t
      return eq(_vI96770_x, ptr_lam_65288->_vI68665_key);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",513,10,513,30); // HACK! 
}

//------------------------------
//FUNCTION <89742>: toolchain_clang_apple_iOS_maker_uncurry::_lam_66184: Apply method
_ft107744* _lam_66184::apply(void* const &_arg ){
  _vI89745_acc = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1973, cols 34 to 93
      //return _lam_66184'2<89743>closure;: type _ft107744*
      return (FLX_NEWP(_fI89743__lam_66184__apos_2)(FLX_FPAR_PASS this, ptrtoolchain_clang_apple_iOS_maker_uncurry));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1973,34,1973,93); // HACK! 
}

//------------------------------
//FUNCTION <103192>: +::aux_uncurry::_lam_1391: Apply method
 ::flx::rtl::cl_t _fI103192__lam_1391::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,11,321,19); // HACK! 
}

//------------------------------
//C FUNC <82503>: dfiletime
double dfiletime( _a14239t_107672 _vI82782_f, double _vI82783_dflt){
   ::flx::rtl::cl_t dfiletime_mv_778;
  double _urv95441;
   ::flx::rtl::cl_t _vI95438_filetime_mv_748;
  int _vI95436_err;
  _a16948t_107830 _vI95435_b;
  double _urv95433;
  double _vI82785_x;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 255, cols 5 to 20
      // primcall stat<16970>primproc (f<82782>varname, &b<95435>ref, &err<95436>ref);
      {
      _a16948t_107830* _tmp109269 = (_a16948t_107830*)&_vI95435_b;
      int* _tmp109270 = (int*)&_vI95436_err;
      *((_tmp109270))=_stat64(_vI82782_f.c_str(),((_tmp109269)));
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 15 to 22
      //filetime_mv_748<95438> := (==<80201>primfun[int] (err<95436>varname, 0));
      _vI95438_filetime_mv_748  = (_vI95436_err == 0); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      if(!(_vI95438_filetime_mv_748%2==1) ) goto _ml750_L95437;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      //_urv95433<95433> := (mtime<82837>primfun[Win32, stat_t, mode_t] &b<95435>ref);
      _urv95433  = (double)(((_a16948t_107830*)&_vI95435_b)->st_mtime); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      goto _end_inline_filetime_95440_L95440;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
    _ml750_L95437:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      //_urv95433<95433> := literal[double]("0.0");
      _urv95433  = 0.0; //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 257, cols 3 to 4
    _end_inline_filetime_95440_L95440:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 307, cols 5 to 35
      //x<82785>varname = _urv95433<95433>varname;
      _vI82785_x = _urv95433; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 12 to 19
      //dfiletime_mv_778<95443> := (==<82539>primfun[double] (x<82785>varname, literal[double]("0.0")));
      dfiletime_mv_778  = (_vI82785_x == 0.0); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 9 to 36
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 9 to 36
      if(!(dfiletime_mv_778%2==1) ) goto _ml780_L95442;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 9 to 36
      //_urv95441<95441> := dflt<82783>varname;
      _urv95441  = _vI82783_dflt; //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 9 to 36
      goto _end_hash_653299700;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 9 to 36
    _ml780_L95442:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 9 to 36
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 9 to 36
      //_urv95441<95441> := x<82785>varname;
      _urv95441  = _vI82785_x; //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 9 to 36
    _end_hash_653299700:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 308, cols 5 to 42
      //x<82785>varname = _urv95441<95441>varname;
      _vI82785_x = _urv95441; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 310, cols 5 to 13
      //return x<82785>varname;: type double
      return _vI82785_x;
}
//------------------------------

//PROCEDURE <66354:> toolchain_msvc_win32::checkwarn: Call method
void checkwarn::stack_call(_tt107757 const &_arg){
  ::flx::rtl::con_t *cc = call(0,_arg);
  while(cc) cc = cc->resume();

}
::flx::rtl::con_t * checkwarn::call(::flx::rtl::con_t *_ptr_caller, _tt107757 const &_arg){
  _caller = _ptr_caller;
  _vI66360_result = _arg.mem_0;
  text = _arg.mem_1;
  INIT_PC
  return this;
}

//PROCEDURE <66354:> toolchain_msvc_win32::checkwarn: Resume method
::flx::rtl::con_t *checkwarn::resume(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1796, cols 5 to 9
      if(!(!((_vI66360_result == 0)) ) ) goto _ifdoend_bootflx_66197_L66362;
    // # C:/projects/felix/src/packages/io.fdoc: line 440, cols 53 to 69
      // primcall write<8439>primproc (cstdout<8414>varname, text<66361>varname);
      ::flx::rtl::ioutil::write(stdout,text);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1796, cols 5 to 9
    _ifdoend_bootflx_66197_L66362:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<92769> := (aux_uncurry<92755>stackfun ((aux<92742>stackfun (text<66361>varname, Empty<80385>varname)), Empty<80385>varname));
      xs  = _fI92755_aux_uncurry(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)
      .apply(_at107697(_fI92742_aux(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)
      .apply(_tt107698(text, (void* /*VR_nullptr*/ )0)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv92768<92768> := iterator'2<92770>closure;
      _genout_urv92768  = (FLX_NEWP(_fI92770_iterator__apos_2)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)); //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      //_generator_toolchain_4028<66356>varname = _genout_urv92768<92768>varname;
      _generator_toolchain_4028 = _genout_urv92768; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
    continue__ll_toolchain_4009_L66363:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      //checkwarn_mv_66243<66243> := apply(_generator_toolchain_4028<66356>varname, ());
      checkwarn_mv_66243  = (_generator_toolchain_4028)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
/*match case 1:|Some line_param_bootflx_66200*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      if(!andthen(FLX_VNI(checkwarn_mv_66243)==1, (FLX_NEWP(_lam_66246)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml66245_L66366;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      //line_param_bootflx_66200<66359>varname = (arg of case 1 of checkwarn_mv_66243<66243>varname);
      line_param_bootflx_66200 = *((_a14239t_107672*)FLX_VNP(checkwarn_mv_66243)); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1794, cols 9 to 13
      if(!(!((line_param_bootflx_66200.find((::std::string("warning"))) == ::std::string::npos))  || !((line_param_bootflx_66200.find((::std::string("note:"))) == ::std::string::npos))  ) ) goto continue__ll_toolchain_4009_L66363;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun (line_param_bootflx_66200<66359>varname, "\x0A")));
      {
      _a14239t_107672 _tmp109271 = line_param_bootflx_66200 + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109271)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      goto continue__ll_toolchain_4009_L66363;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      goto continue__ll_toolchain_4009_L66363;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
    _ml66245_L66366:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      if(!(FLX_VNI(checkwarn_mv_66243)==0) ) goto _ml66247_L66367;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
    _ml66247_L66367:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
/*match failure*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1795, cols 7 to 11
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1795,7,1795,11);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1795,7,1795,11);
;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <105697>: flx_processing::aux_uncurry: Apply method
_a5094t_107688 _fI105697_aux_uncurry::apply(_tt107728 const &_arg ){
  _vI105698_acc_uncurry = _arg.mem_0;
  _vI105699_x = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
    start_95253_L105705:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //aux'2_mv_1335<105702> := x<105699>varname;
      _vI105702_aux__apos_2_mv_1335  = _vI105699_x; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
      if(!(FLX_VNI(_vI105702_aux__apos_2_mv_1335)==0) ) goto _ml1337_L105701;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
      //return acc_uncurry<105698>varname;: type _a5094t_107688
      return _vI105698_acc_uncurry;
    // # C:/projects/felix/src/packages/lists.fdoc: line 201, cols 11 to 16
    _ml1337_L105701:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1252, any)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105702_aux__apos_2_mv_1335)==1, (FLX_NEWP(_fI105704__lam_1339)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml1338_L105700;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 16 to 16
      //t_param_std_1252<105703>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1335<105702>varname));
      _vI105703_t_param_std_1252 = (*((_tt107677*)FLX_VNP(_vI105702_aux__apos_2_mv_1335))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //x<105699> := t_param_std_1252<105703>varname;
      _vI105699_x  = _vI105703_t_param_std_1252; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      //acc_uncurry<105698> := (+<80900>primfun[size] (acc_uncurry<105698>varname, literal[size]("1")));
      _vI105698_acc_uncurry  = _vI105698_acc_uncurry + 1 ; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 204, cols 7 to 8
      goto start_95253_L105705;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 11 to 19
    _ml1338_L105700:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 202, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,9,202,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",202,9,202,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",204,7,204,8); // HACK! 
}

//------------------------------
//FUNCTION <105481>: FlxPkgConfigQuery::getpkgfieldopt::getpkgfieldopt'2::_lam_65357: Apply method
 ::flx::rtl::cl_t _lam_65357::apply(){
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 528, cols 9 to 23
      //return (match case 0)(apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] getpkgfieldopt'2_mv_65354<65354>varname)));: type  ::flx::rtl::cl_t
      return FLX_VNI((reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>((ptr_fI68388_getpkgfieldopt__apos_2->_vI65354_getpkgfieldopt__apos_2_mv_65354)))).mem_1)==0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",528,9,528,23); // HACK! 
}

//------------------------------
//FUNCTION <99794>: subscript::_lam_2061: Apply method
 ::flx::rtl::cl_t _lam_2061::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 226, cols 7 to 35
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",226,7,226,35); // HACK! 
}

//------------------------------
//FUNCTION <89753>: toolchain_clang_apple_iOS_maker_uncurry::cxx_compiler_vendor: Apply method
_a14239t_107672 _fI89753_cxx_compiler_vendor::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1990, cols 3 to 47
      //return "clang";: type _a14239t_107672
      return ::std::string("clang");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1990,3,1990,47); // HACK! 
}

//------------------------------
//FUNCTION <106955>: flx_processing::run_program_static: Apply method
int _fI106955_run_program_static::apply(_pt107743* const &_arg ){
  _vI106959_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2838, cols 5 to 19
      //result<106956>varname = 0;
      _vI106956_result = 0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<107607>varname = (aux_uncurry<107608>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun (apply((prj4:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<106689>varname), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), apply((prj7:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<106689>varname))), Empty<80385>varname));
      _vI107607_r = _fI107608_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_processing->dvars.STATIC_ENV, ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME)) /* apply_stack */, ptrflx_processing->dvars.args)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<107607>ref;
      {
      void** _tmp109274 = (void**)&_vI107607_r;
      _rev(((_tmp109274)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2841, cols 5 to 6
      //CMD<106957>varname = (cat_uncurry<89509>stackfun (" ", r<107607>varname));
      _vI106957_CMD = cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI107607_r)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2843, cols 5 to 85
      if(!(!((ptrflx_processing->_vI107004_control.STDOUT == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65975_L106961;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2843, cols 32 to 79
      //CMD<106957>varname = (+<14305>primfun ((+<14305>primfun (CMD<106957>varname, " > ")), (+<14305>primfun ((+<14305>primfun (""", apply((prj69:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), """))));
      _vI106957_CMD = (_vI106957_CMD + ::std::string(" > ") ) + ((::std::string("\"") + ptrflx_processing->_vI107004_control.STDOUT ) + ::std::string("\"") ) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2843, cols 5 to 85
    _ifdoelse_bootflx_65975_L106961:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2844, cols 5 to 82
      if(!(!((ptrflx_processing->_vI107004_control.STDIN == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65977_L106963;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2844, cols 31 to 76
      //CMD<106957>varname = (+<14305>primfun ((+<14305>primfun (CMD<106957>varname, " < ")), (+<14305>primfun ((+<14305>primfun (""", apply((prj68:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), """))));
      _vI106957_CMD = (_vI106957_CMD + ::std::string(" < ") ) + ((::std::string("\"") + ptrflx_processing->_vI107004_control.STDIN ) + ::std::string("\"") ) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2844, cols 5 to 82
    _ifdoelse_bootflx_65977_L106963:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_100500_L107620;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Run command=", CMD<106957>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109275 = (::std::string("[flx] ") + (::std::string("Run command=") + _vI106957_CMD ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109275)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2845, cols 5 to 32
    _end_100500_L107620:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107622>ref;
      {
      __timeb64* _tmp109276 = (__timeb64*)&_vI107622_tv;
      _ftime64_s(((_tmp109276)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv100501<107621> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107622>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107622>varname)), literal[double]("1.0e3")))));
      _vI107621__genout_urv100501  = (static_cast<double>((_vI107622_tv.time))) + ((static_cast<double>((_vI107622_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2846, cols 5 to 25
      //t0<106958>varname = _genout_urv100501<107621>varname;
      _vI106958_t0 = _vI107621__genout_urv100501; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2847, cols 5 to 22
      //_genout_urv100505<107623> := (system<106706>stackfun CMD<106957>varname);
      _vI107623__genout_urv100505  = _fI106706_system(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI106957_CMD) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2847, cols 5 to 22
      //result<106956>varname = _genout_urv100505<107623>varname;
      _vI106956_result = _vI107623__genout_urv100505; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _end_100515_L107631;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107630>ref;
      {
      __timeb64* _tmp109277 = (__timeb64*)&_vI107630_tv;
      _ftime64_s(((_tmp109277)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107629> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107630>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107630>varname)), literal[double]("1.0e3")))));
      _vI107629__genout_urv96124  = (static_cast<double>((_vI107630_tv.time))) + ((static_cast<double>((_vI107630_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107624>varname = (-<80547>primfun[double] (_genout_urv96124<107629>varname, t0<106958>varname));
      _vI107624_elapsed = _vI107629__genout_urv96124 - _vI106958_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107625>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107624>varname, literal[double]("60.0"))));
      _vI107625_minutes = ::std::floor((_vI107624_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107626>varname = (-<80547>primfun[double] (elapsed<107624>varname, (*<80818>primfun[double] (minutes<107625>varname, literal[double]("60.0")))));
      _vI107626_seconds = _vI107624_elapsed - (_vI107625_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107625>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107626>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Static Run   : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109278 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107625_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107626_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Static Run   : ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109278)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2848, cols 5 to 66
    _end_100515_L107631:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2849, cols 5 to 18
      //return result<106956>varname;: type int
      return _vI106956_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2850,3,2850,4); // HACK! 
}

//------------------------------

//PROCEDURE <89521:> setup-from-file_uncurry: Call method
::flx::rtl::con_t * _pI89521_setup__hyphen_from__hyphen_file_uncurry::call(::flx::rtl::con_t *_ptr_caller, _tt107853 const &_arg){
  _caller = _ptr_caller;
  _vI89602_debugln_uncurry = _arg.mem_0;
  _vI89573_config = _arg.mem_1;
  _vI89574_control = _arg.mem_2;
  _vI89575_arg = _arg.mem_3;
  INIT_PC
  return this;
}

//PROCEDURE <89521:> setup-from-file_uncurry: Resume method
::flx::rtl::con_t *_pI89521_setup__hyphen_from__hyphen_file_uncurry::resume(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/flx.fdoc: line 908, cols 3 to 32
      //call debugln_uncurry<89602>varname (+<14305>primfun ("Setup file: ", arg<89575>varname));
      FLX_SET_PC(109279)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("Setup file: ") + _vI89575_arg );
    FLX_CASE_LABEL(109279)
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L103498;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", arg<89575>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109280 = (::std::string("[load] ") + _vI89575_arg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109280)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L103498:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 909, cols 3 to 22
      //text<89563>varname = (raw_load<8396>primfun arg<89575>varname);
      _vI89563_text = ::flx::rtl::ioutil::load_file(_vI89575_arg); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 568, cols 3 to 4
      //run procedure stackcall process_config_text_uncurry<89494>stackproc  (config<89573>varname, text<89563>varname);
      {
      process_config_text_uncurry(FLX_FPAR_PASS_ONLY)
      .stack_call(_tt107714(_vI89573_config, _vI89563_text));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 459, cols 7 to 17
      //s<103503>varname = "";
      _vI103503_s = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 460, cols 7 to 23
      // primcall reserve<87393>primproc[int] (&s<103503>ref, 1000);
      {
      _a14239t_107672* _tmp109282 = (_a14239t_107672*)&_vI103503_s;
      ((_tmp109282))->reserve(1000);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 461, cols 7 to 49
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("(FLX_SHARE_DIR=", apply((prj7:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp109283 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109284 = (::std::string("(FLX_SHARE_DIR=") + (*_vI89573_config ).FLX_SHARE_DIR ) + ::std::string(",\n") ;
      ((_tmp109283))->append((_tmp109284));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 462, cols 7 to 51
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("FLX_TARGET_DIR=", apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp109285 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109286 = (::std::string("FLX_TARGET_DIR=") + (*_vI89573_config ).FLX_TARGET_DIR ) + ::std::string(",\n") ;
      ((_tmp109285))->append((_tmp109286));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 463, cols 7 to 46
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("FLX_HOME_DIR=", apply((prj2:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp109287 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109288 = (::std::string("FLX_HOME_DIR=") + (*_vI89573_config ).FLX_HOME_DIR ) + ::std::string(",\n") ;
      ((_tmp109287))->append((_tmp109288));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 464, cols 7 to 52
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("FLX_PROFILE_DIR=", apply((prj5:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp109289 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109290 = (::std::string("FLX_PROFILE_DIR=") + (*_vI89573_config ).FLX_PROFILE_DIR ) + ::std::string(",\n") ;
      ((_tmp109289))->append((_tmp109290));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 465, cols 7 to 48
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("FLX_CACHE_DIR=", apply((prj0:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp109291 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109292 = (::std::string("FLX_CACHE_DIR=") + (*_vI89573_config ).FLX_CACHE_DIR ) + ::std::string(",\n") ;
      ((_tmp109291))->append((_tmp109292));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 466, cols 7 to 50
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("FLX_OUTPUT_DIR=", apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname)))), ",\x0A")));
      {
      _a14239t_107672* _tmp109293 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109294 = (::std::string("FLX_OUTPUT_DIR=") + (*_vI89573_config ).FLX_OUTPUT_DIR ) + ::std::string(",\n") ;
      ((_tmp109293))->append((_tmp109294));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 467, cols 7 to 50
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("FLX_LIB_DIRS=", (str<81092>stackfun apply((prj3:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname))))), ",\x0A")));
      {
      _a14239t_107672* _tmp109295 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109296 = (::std::string("FLX_LIB_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI89573_config ).FLX_LIB_DIRS) /* apply_stack */ ) + ::std::string(",\n") ;
      ((_tmp109295))->append((_tmp109296));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 468, cols 7 to 56
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("FLX_CONFIG_DIRS=", (str<81092>stackfun apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname))))), ",\x0A")));
      {
      _a14239t_107672* _tmp109297 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109298 = (::std::string("FLX_CONFIG_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI89573_config ).FLX_CONFIG_DIRS) /* apply_stack */ ) + ::std::string(",\n") ;
      ((_tmp109297))->append((_tmp109298));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 469, cols 7 to 50
      // primcall +=<14301>primproc (&s<103503>ref, (+<14305>primfun ((+<14305>primfun ("FLX_RTL_DIRS=", (str<81092>stackfun apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<89573>varname))))), ")\x0A")));
      {
      _a14239t_107672* _tmp109299 = (_a14239t_107672*)&_vI103503_s;
      _a14239t_107672 _tmp109300 = (::std::string("FLX_RTL_DIRS=") + str(FLX_FPAR_PASS_ONLY)
      .apply((*_vI89573_config ).FLX_RTL_DIRS) /* apply_stack */ ) + ::std::string(")\n") ;
      ((_tmp109299))->append((_tmp109300));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 911, cols 3 to 65
      //call debugln_uncurry<89602>varname (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Config[after setupfile ", arg<89575>varname)), "] =\x0A")), s<103503>varname));
      FLX_SET_PC(109301)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ((::std::string("Config[after setupfile ") + _vI89575_arg ) + ::std::string("] =\n") ) + _vI103503_s );
    FLX_CASE_LABEL(109301)
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 28 to 56
      //dflt_control_mv_65414<103509> := (getenv<80578>primfun[Win32] "FLX_BUNDLE_DIR");
      _vI103509_dflt_control_mv_65414  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_BUNDLE_DIR")).c_str())); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 65 to 66
/*match case 1:""*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 65 to 66
      if(!((::std::string("") == _vI103509_dflt_control_mv_65414)) ) goto _ml65416_L103511;
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 22 to 100
      //_urv92463<103508> := None<80917>varname;
      _vI103508__urv92463  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 22 to 100
      goto _end_hash_31756313;
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 65 to 66
    _ml65416_L103511:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 86 to 88
/*match case 2:dir_param_bootflx_65412*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 86 to 88
      //dir_param_bootflx_65412<103510>varname = dflt_control_mv_65414<103509>varname;
      _vI103510_dir_param_bootflx_65412 = _vI103509_dflt_control_mv_65414; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 22 to 100
      //_urv92463<103508> := (Some<80915>struct dir_param_bootflx_65412<103510>varname);
      _vI103508__urv92463  = FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI103510_dir_param_bootflx_65412)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 743, cols 22 to 100
    _end_hash_31756313:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 912, cols 3 to 39
      //(deref<80489>primfun[record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list))] control<89574>varname) = ( AUTOMATON:"", BUNDLE_DIR:_urv92463<103508>varname, CCFLAGS:Empty<80385>varname, CCOMPILEIT:1, CHECK_DEPENDENCIES:1, CHECK_EXPECT:0, CLEAR_CACHE:0, CMDLINE_INPUT:(case 0 of bool), COMPILER_PHASE:"", COMPILER_TIME:0, CXXONLY:0, CXX_INTERFACE_FILENAME:"", DEBUG:0, DEBUG_COMPILER:0, DEBUG_FLX:(case 0 of bool), DIST_ROOT:"", DLINK_STRINGS:Empty<80385>varname, DOREDUCE:1, DRIVER_EXE:"", DRIVER_OBJS:Empty<80385>varname, ECHO:0, EXPECT:"", EXTRA_CCFLAGS:Empty<80385>varname, EXTRA_INCLUDE_DIRS:Empty<80385>varname, EXTRA_INCLUDE_FILES:Empty<80385>varname, EXTRA_PACKAGES:Empty<80385>varname, FELIX:1, FLXG:"", FLXG_FORCE:0, FLXG_OPTIMISE:0, FLXRUN:Empty<80385>varname, FLX_INSTALL_DIR:"", FLX_INTERFACE_FILENAME:"", FLX_STD_LIBS:Empty<80385>varname, FLX_TARGET_SUBDIR:"", FLX_TOOLCHAIN:"", GRAMMAR_DIR:"", IMPORTS:Empty<80385>varname, INDIR:"", INLINE:25, INREGEX:"", LINKER_OUTPUT_FILENAME:"", LINKER_SWITCHES:Empty<80385>varname, LINKEXE:0, LINKIT:1, LINK_STRINGS:Empty<80385>varname, MACROS:Empty<80385>varname, NONSTOP:0, NOOPTIMISE:0, NOSTDLIB:0, OCAMLONLY:0, OPTIMISE:(Snoc<80397>struct (Empty<80385>varname, "-O1")), OUTPUT_DIRECTORY_SPECIFIED:0, OUTPUT_FILENAME_SPECIFIED:0, OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:0, PRINT_HELP:0, RECOMPILE:0, REPL_MODE:(case 0 of bool), RUNIT:1, RUNONLY:0, SET_STDIN:0, SHOWCODE:0, SLINK_STRINGS:Empty<80385>varname, STANDARD_INCLUDE_FILES:Empty<80385>varname, STATIC:0, STATICLIB:0, STDGRAMMAR:"", STDIMPORT:"plat/flx.flxh", STDIN:"", STDOUT:"", TIME:0, TIMECMD:"time -p", USAGE:"production", USER_ARGS:Empty<80385>varname, VALIDATE_CACHE:1, cache_time:literal[double]("0.0"), cppos:Empty<80385>varname, cpps:Empty<80385>varname, extra_pkgs:Empty<80385>varname, ocamls:Empty<80385>varname, pkgs:Empty<80385>varname);
      *_vI89574_control  = _art107702(::std::string(""), _vI103508__urv92463, (void* /*VR_nullptr*/ )0, 1, 1, 0, 0, 0, ::std::string(""), 0, 0, ::std::string(""), 0, 0, 0, ::std::string(""), (void* /*VR_nullptr*/ )0, 1, ::std::string(""), (void* /*VR_nullptr*/ )0, 0, ::std::string(""), (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, 1, ::std::string(""), 0, 0, (void* /*VR_nullptr*/ )0, ::std::string(""), ::std::string(""), (void* /*VR_nullptr*/ )0, ::std::string(""), ::std::string(""), ::std::string(""), (void* /*VR_nullptr*/ )0, ::std::string(""), 25, ::std::string(""), ::std::string(""), (void* /*VR_nullptr*/ )0, 0, 1, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, 0, 0, 0, 0, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-O1")))), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, 0, 0, ::std::string(""), ::std::string("plat/flx.flxh"), ::std::string(""), ::std::string(""), 0, ::std::string("time -p"), ::std::string("production"), (void* /*VR_nullptr*/ )0, 1, 0.0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 913, cols 3 to 65
      if(!(*_vI89574_control).DEBUG_FLX ) goto _ifdoelse_bootflx_65419_L89577;
    // # C:/projects/felix/src/packages/flx.fdoc: line 660, cols 1 to 2
      //run procedure stackcall print_options<68156>stackproc  (deref<80489>primfun[record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list))] control<89574>varname);
      {
      _art107702 _tmp109302 = *_vI89574_control ;
      print_options(FLX_FPAR_PASS_ONLY)
      .stack_call((_tmp109302));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 913, cols 3 to 65
    _ifdoelse_bootflx_65419_L89577:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 916, cols 3 to 45
      //_genout_urv103633<103633> := (_ctor_RE2<15267>primfun "([-_a-zA-Z0-9]+) *: *(.*)");
      _genout_urv103633  = ::std::shared_ptr< ::re2::RE2>(new RE2((::std::string("([-_a-zA-Z0-9]+) *: *(.*)")))); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 916, cols 3 to 45
      //re<89564>varname = _genout_urv103633<103633>varname;
      _vI89564_re = _genout_urv103633; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L103637;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", arg<89575>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109304 = (::std::string("[load] ") + _vI89575_arg ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109304)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L103637:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 917, cols 3 to 41
      //lines<89565>varname = (aux_uncurry<103660>stackfun ((aux<103647>stackfun ((raw_load<8396>primfun arg<89575>varname), Empty<80385>varname)), Empty<80385>varname));
      _vI89565_lines = _fI103660_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_fI103647_aux(FLX_FPAR_PASS this)
      .apply(_tt107698(::flx::rtl::ioutil::load_file(_vI89575_arg), (void* /*VR_nullptr*/ )0)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<103674> := lines<89565>varname;
      _vI103674_xs  = _vI89565_lines; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv103673<103673> := iterator'2<103675>closure;
      _genout_urv103673  = (FLX_NEWP(_fI103675_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      //_generator_flx_1116<89566>varname = _genout_urv103673<103673>varname;
      _generator_flx_1116 = _genout_urv103673; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
    continue__ll_flx_1052_L89578:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      //setup-from-file'2_mv_65607<89540> := apply(_generator_flx_1116<89566>varname, ());
      _vI89540_setu_hash_864469243  = (_generator_flx_1116)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
/*match case 1:|Some line_param_bootflx_65421*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      if(!andthen(FLX_VNI(_vI89540_setu_hash_864469243)==1, (FLX_NEWP(_lam_65634)(FLX_FPAR_PASS this))) ) goto _ml65609_L89599;
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      //line_param_bootflx_65421<89568>varname = (arg of case 1 of setup-from-file'2_mv_65607<89540>varname);
      line_param_bootflx_65421 = *((_a14239t_107672*)FLX_VNP(_vI89540_setu_hash_864469243)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 919, cols 11 to 25
      //setup-from-file'2_mv_65610<89543> := (Match<15393>stackfun (re<89564>varname, line_param_bootflx_65421<89568>varname));
      _vI89543_setu_hash_864469269  = Match(FLX_FPAR_PASS _vI89564_re, line_param_bootflx_65421); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 920, cols 7 to 12
/*match case 1:|Some v_param_bootflx_65423_param_bootflx_65427*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 920, cols 7 to 12
      if(!andthen(FLX_VNI(_vI89543_setu_hash_864469269)==1, (FLX_NEWP(_lam_65632)(FLX_FPAR_PASS this))) ) goto _ml65612_L89596;
    // # C:/projects/felix/src/packages/flx.fdoc: line 920, cols 12 to 12
      //v_param_bootflx_65423_param_bootflx_65427<89570>varname = (arg of case 1 of setup-from-file'2_mv_65610<89543>varname);
      _vI89570_v_pa_hash_820627456 = *((_poly_80462t_107729*)FLX_VNP(_vI89543_setu_hash_864469269)); //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(_vI89570_v_pa_hash_820627456))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/flx.fdoc: line 921, cols 7 to 22
      //field<89571>varname = (unsafe_get<83437>primfun[string] (v_param_bootflx_65423_param_bootflx_65427<89570>varname, (_ctor_size<83435>primfun[size] (_ctor_size<80270>primfun[int] 1))));
      _vI89571_field = _vI89570_v_pa_hash_820627456[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(1)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)]; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 46, cols 5 to 26
      {if(FLX_UNLIKELY(!(((static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(2)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/) < (PTF gcp->collector->get_used(_vI89570_v_pa_hash_820627456))))))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/arrays.fdoc",46,5,46,26);}
    // # C:/projects/felix/src/packages/flx.fdoc: line 922, cols 7 to 27
      //data<89572>varname = (lstrip<14855>stackfun ((rstrip<14873>stackfun ((unsafe_get<83437>primfun[string] (v_param_bootflx_65423_param_bootflx_65427<89570>varname, (_ctor_size<83435>primfun[size] (_ctor_size<80270>primfun[int] 2)))), " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));
      _vI89572_data = lstrip(rstrip(_vI89570_v_pa_hash_820627456[(static_cast<_a5094t_107688>((static_cast<_a5094t_107688>(2)/*int.flx: ctor size from _a5094t_107688*/))/*int.flx: ctor size from _a5094t_107688*/)], ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 923, cols 13 to 17
      //setup-from-file'2_mv_65613<89546> := field<89571>varname;
      _vI89546_setu_hash_864469272  = _vI89571_field; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 924, cols 9 to 24
/*match case 1:"felix-compiler"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 924, cols 9 to 24
      if(!((::std::string("felix-compiler") == _vI89546_setu_hash_864469272)) ) goto _ml65615_L89579;
    // # C:/projects/felix/src/packages/flx.fdoc: line 924, cols 29 to 56
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set flxg ", data<89572>varname));
      FLX_SET_PC(109305)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set flxg ") + _vI89572_data );
    FLX_CASE_LABEL(109305)
    // # C:/projects/felix/src/packages/flx.fdoc: line 924, cols 58 to 76
      //(deref<85463>primfun[string] apply((prj27:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<89574>varname)) = data<89572>varname;
      *(&_vI89574_control->FLXG)  = _vI89572_data; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 924, cols 9 to 24
    _ml65615_L89579:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 925, cols 9 to 19
/*match case 2:"toolchain"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 925, cols 9 to 19
      if(!((::std::string("toolchain") == _vI89546_setu_hash_864469272)) ) goto _ml65616_L89580;
    // # C:/projects/felix/src/packages/flx.fdoc: line 925, cols 24 to 54
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set toolchain ", data<89572>varname));
      FLX_SET_PC(109306)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set toolchain ") + _vI89572_data );
    FLX_CASE_LABEL(109306)
    // # C:/projects/felix/src/packages/flx.fdoc: line 925, cols 56 to 84
      //(deref<85463>primfun[string] apply((prj35:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<89574>varname)) = data<89572>varname;
      *(&_vI89574_control->FLX_TOOLCHAIN)  = _vI89572_data; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 925, cols 9 to 19
    _ml65616_L89580:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 926, cols 9 to 23
/*match case 3:"linker-switch"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 926, cols 9 to 23
      if(!((::std::string("linker-switch") == _vI89546_setu_hash_864469272)) ) goto _ml65617_L89581;
    // # C:/projects/felix/src/packages/flx.fdoc: line 926, cols 28 to 62
      //call debugln_uncurry<89602>varname (+<14305>primfun ("add linker switch ", data<89572>varname));
      FLX_SET_PC(109307)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("add linker switch ") + _vI89572_data );
    FLX_CASE_LABEL(109307)
    // # C:/projects/felix/src/packages/flx.fdoc: line 927, cols 11 to 68
      //(deref<80855>primfun[list] apply((prj42:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj42:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->LINKER_SWITCHES)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).LINKER_SWITCHES, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 926, cols 9 to 23
    _ml65617_L89581:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 928, cols 9 to 22
/*match case 4:"macro-switch"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 928, cols 9 to 22
      if(!((::std::string("macro-switch") == _vI89546_setu_hash_864469272)) ) goto _ml65618_L89582;
    // # C:/projects/felix/src/packages/flx.fdoc: line 928, cols 27 to 62
      //call debugln_uncurry<89602>varname (+<14305>primfun ("add macro switches ", data<89572>varname));
      FLX_SET_PC(109308)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("add macro switches ") + _vI89572_data );
    FLX_CASE_LABEL(109308)
    // # C:/projects/felix/src/packages/flx.fdoc: line 929, cols 11 to 50
      //(deref<80855>primfun[list] apply((prj46:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj46:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->MACROS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).MACROS, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 928, cols 9 to 22
    _ml65618_L89582:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 930, cols 9 to 29
/*match case 5:"optimisation-switch"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 930, cols 9 to 29
      if(!((::std::string("optimisation-switch") == _vI89546_setu_hash_864469272)) ) goto _ml65619_L89583;
    // # C:/projects/felix/src/packages/flx.fdoc: line 930, cols 34 to 77
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set C++ optimisation level ", data<89572>varname));
      FLX_SET_PC(109309)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set C++ optimisation level ") + _vI89572_data );
    FLX_CASE_LABEL(109309)
    // # C:/projects/felix/src/packages/flx.fdoc: line 931, cols 11 to 54
      //(deref<80855>primfun[list] apply((prj51:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj51:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->OPTIMISE)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).OPTIMISE, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 930, cols 9 to 29
    _ml65619_L89583:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 933, cols 9 to 29
/*match case 6:"optimization-switch"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 933, cols 9 to 29
      if(!((::std::string("optimization-switch") == _vI89546_setu_hash_864469272)) ) goto _ml65620_L89584;
    // # C:/projects/felix/src/packages/flx.fdoc: line 933, cols 34 to 77
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set C++ optimization level ", data<89572>varname));
      FLX_SET_PC(109310)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set C++ optimization level ") + _vI89572_data );
    FLX_CASE_LABEL(109310)
    // # C:/projects/felix/src/packages/flx.fdoc: line 934, cols 11 to 54
      //(deref<80855>primfun[list] apply((prj51:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj51:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->OPTIMISE)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).OPTIMISE, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 933, cols 9 to 29
    _ml65620_L89584:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 935, cols 9 to 15
/*match case 7:"cflag"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 935, cols 9 to 15
      if(!((::std::string("cflag") == _vI89546_setu_hash_864469272)) ) goto _ml65621_L89585;
    // # C:/projects/felix/src/packages/flx.fdoc: line 935, cols 20 to 50
      //call debugln_uncurry<89602>varname (+<14305>primfun ("add C++ cflag ", data<89572>varname));
      FLX_SET_PC(109311)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("add C++ cflag ") + _vI89572_data );
    FLX_CASE_LABEL(109311)
    // # C:/projects/felix/src/packages/flx.fdoc: line 936, cols 11 to 64
      //(deref<80855>primfun[list] apply((prj22:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj22:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->EXTRA_CCFLAGS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).EXTRA_CCFLAGS, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 935, cols 9 to 15
    _ml65621_L89585:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 937, cols 9 to 25
/*match case 8:"flx-include-dir"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 937, cols 9 to 25
      if(!((::std::string("flx-include-dir") == _vI89546_setu_hash_864469272)) ) goto _ml65622_L89586;
    // # C:/projects/felix/src/packages/flx.fdoc: line 937, cols 30 to 68
      //call debugln_uncurry<89602>varname (+<14305>primfun ("add Felix include dir ", data<89572>varname));
      FLX_SET_PC(109312)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("add Felix include dir ") + _vI89572_data );
    FLX_CASE_LABEL(109312)
    // # C:/projects/felix/src/packages/flx.fdoc: line 938, cols 11 to 60
      //(deref<80855>primfun[list] apply((prj3:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<89573>varname)) = (+<80787>stackfun (apply((prj3:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), *(config<89573>varname)), data<89572>varname));
      *(&_vI89573_config->FLX_LIB_DIRS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89573_config).FLX_LIB_DIRS, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 937, cols 9 to 25
    _ml65622_L89586:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 939, cols 9 to 25
/*match case 9:"rtl-include-dir"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 939, cols 9 to 25
      if(!((::std::string("rtl-include-dir") == _vI89546_setu_hash_864469272)) ) goto _ml65623_L89587;
    // # C:/projects/felix/src/packages/flx.fdoc: line 939, cols 30 to 80
      //call debugln_uncurry<89602>varname (+<14305>primfun ("add Felix and C++ rtl include dir ", data<89572>varname));
      FLX_SET_PC(109313)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("add Felix and C++ rtl include dir ") + _vI89572_data );
    FLX_CASE_LABEL(109313)
    // # C:/projects/felix/src/packages/flx.fdoc: line 940, cols 11 to 60
      //(deref<80855>primfun[list] apply((prj6:&record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> &list), config<89573>varname)) = (+<80787>stackfun (apply((prj6:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), *(config<89573>varname)), data<89572>varname));
      *(&_vI89573_config->FLX_RTL_DIRS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89573_config).FLX_RTL_DIRS, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 939, cols 9 to 25
    _ml65623_L89587:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 941, cols 9 to 21
/*match case 10:"grammar-dir"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 941, cols 9 to 21
      if(!((::std::string("grammar-dir") == _vI89546_setu_hash_864469272)) ) goto _ml65624_L89588;
    // # C:/projects/felix/src/packages/flx.fdoc: line 941, cols 26 to 70
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set Felix grammar directory ", data<89572>varname));
      FLX_SET_PC(109314)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set Felix grammar directory ") + _vI89572_data );
    FLX_CASE_LABEL(109314)
    // # C:/projects/felix/src/packages/flx.fdoc: line 942, cols 11 to 37
      //(deref<85463>primfun[string] apply((prj36:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<89574>varname)) = data<89572>varname;
      *(&_vI89574_control->GRAMMAR_DIR)  = _vI89572_data; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 941, cols 9 to 21
    _ml65624_L89588:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 943, cols 9 to 17
/*match case 11:"grammar"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 943, cols 9 to 17
      if(!((::std::string("grammar") == _vI89546_setu_hash_864469272)) ) goto _ml65625_L89589;
    // # C:/projects/felix/src/packages/flx.fdoc: line 943, cols 22 to 68
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set Felix grammar (in stdlib) ", data<89572>varname));
      FLX_SET_PC(109315)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set Felix grammar (in stdlib) ") + _vI89572_data );
    FLX_CASE_LABEL(109315)
    // # C:/projects/felix/src/packages/flx.fdoc: line 944, cols 11 to 36
      //(deref<85463>primfun[string] apply((prj66:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<89574>varname)) = data<89572>varname;
      *(&_vI89574_control->STDGRAMMAR)  = _vI89572_data; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 943, cols 9 to 17
    _ml65625_L89589:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 945, cols 9 to 20
/*match case 12:"std-import"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 945, cols 9 to 20
      if(!((::std::string("std-import") == _vI89546_setu_hash_864469272)) ) goto _ml65626_L89590;
    // # C:/projects/felix/src/packages/flx.fdoc: line 945, cols 25 to 79
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set Felix standard import (in stdlib) ", data<89572>varname));
      FLX_SET_PC(109316)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set Felix standard import (in stdlib) ") + _vI89572_data );
    FLX_CASE_LABEL(109316)
    // # C:/projects/felix/src/packages/flx.fdoc: line 946, cols 11 to 35
      //(deref<85463>primfun[string] apply((prj67:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<89574>varname)) = data<89572>varname;
      *(&_vI89574_control->STDIMPORT)  = _vI89572_data; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 945, cols 9 to 20
    _ml65626_L89590:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 947, cols 9 to 22
/*match case 13:"extra-import"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 947, cols 9 to 22
      if(!((::std::string("extra-import") == _vI89546_setu_hash_864469272)) ) goto _ml65627_L89591;
    // # C:/projects/felix/src/packages/flx.fdoc: line 947, cols 27 to 78
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set Felix extra import (in stdlib) ", data<89572>varname));
      FLX_SET_PC(109317)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set Felix extra import (in stdlib) ") + _vI89572_data );
    FLX_CASE_LABEL(109317)
    // # C:/projects/felix/src/packages/flx.fdoc: line 948, cols 11 to 52
      //(deref<80855>primfun[list] apply((prj37:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj37:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->IMPORTS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).IMPORTS, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 947, cols 9 to 22
    _ml65627_L89591:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 949, cols 9 to 19
/*match case 14:"extra-cpp"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 949, cols 9 to 19
      if(!((::std::string("extra-cpp") == _vI89546_setu_hash_864469272)) ) goto _ml65628_L89592;
    // # C:/projects/felix/src/packages/flx.fdoc: line 949, cols 24 to 65
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set Felix extra C++ file ", data<89572>varname));
      FLX_SET_PC(109318)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set Felix extra C++ file ") + _vI89572_data );
    FLX_CASE_LABEL(109318)
    // # C:/projects/felix/src/packages/flx.fdoc: line 950, cols 11 to 46
      //(deref<80855>primfun[list] apply((prj77:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->cpps)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).cpps, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 949, cols 9 to 19
    _ml65628_L89592:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 951, cols 9 to 19
/*match case 15:"extra-obj"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 951, cols 9 to 19
      if(!((::std::string("extra-obj") == _vI89546_setu_hash_864469272)) ) goto _ml65629_L89593;
    // # C:/projects/felix/src/packages/flx.fdoc: line 951, cols 24 to 68
      //call debugln_uncurry<89602>varname (+<14305>primfun ("set Felix extra object file ", data<89572>varname));
      FLX_SET_PC(109319)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("set Felix extra object file ") + _vI89572_data );
    FLX_CASE_LABEL(109319)
    // # C:/projects/felix/src/packages/flx.fdoc: line 952, cols 11 to 48
      //(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->cppos)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).cppos, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 951, cols 9 to 19
    _ml65629_L89593:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 953, cols 9 to 21
/*match case 16:"flx-std-lib"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 953, cols 9 to 21
      if(!((::std::string("flx-std-lib") == _vI89546_setu_hash_864469272)) ) goto _ml65630_L89594;
    // # C:/projects/felix/src/packages/flx.fdoc: line 953, cols 26 to 78
      //call debugln_uncurry<89602>varname (+<14305>primfun ("add Felix standard (cached) library ", data<89572>varname));
      FLX_SET_PC(109320)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("add Felix standard (cached) library ") + _vI89572_data );
    FLX_CASE_LABEL(109320)
    // # C:/projects/felix/src/packages/flx.fdoc: line 954, cols 11 to 61
      //(deref<80855>primfun[list] apply((prj33:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<89574>varname)) = (+<80787>stackfun (apply((prj33:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<89574>varname)), data<89572>varname));
      *(&_vI89574_control->FLX_STD_LIBS)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677((*_vI89574_control).FLX_STD_LIBS, _vI89572_data)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 953, cols 9 to 21
    _ml65630_L89594:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 955, cols 9 to 9
/*match case 17:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 955, cols 14 to 47
      //call debugln_uncurry<89602>varname (+<14305>primfun ("Unknown field ", field<89571>varname));
      FLX_SET_PC(109321)
      return (_vI89602_debugln_uncurry)->clone()
      ->call(this, ::std::string("Unknown field ") + _vI89571_field );
    FLX_CASE_LABEL(109321)
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 920, cols 7 to 12
    _ml65612_L89596:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 957, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 957, cols 7 to 11
      if(!(FLX_VNI(_vI89543_setu_hash_864469269)==0) ) goto _ml65633_L89597;
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 957, cols 7 to 11
    _ml65633_L89597:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 958, cols 5 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 958, cols 5 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",958,5,958,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",958,5,958,14);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      goto continue__ll_flx_1052_L89578;
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
    _ml65609_L89599:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      if(!(FLX_VNI(_vI89540_setu_hash_864469243)==0) ) goto _ml65635_L89600;
    // # C:/projects/felix/src/packages/flx.fdoc: line 960, cols 1 to 2
      FLX_RETURN // procedure return
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
    _ml65635_L89600:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 959, cols 3 to 7
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",959,3,959,7);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",959,3,959,7);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 960, cols 1 to 2
      FLX_RETURN // procedure return
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <66311>: toolchain_msvc_win32::_lam_66227: Apply method
_a14239t_107672 _lam_66227::apply(_a14239t_107672 const &_arg ){
  _vI66313_s = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1746, cols 31 to 54
      //return (+<14305>primfun ("/I", s<66313>varname));: type _a14239t_107672
      return ::std::string("/I") + _vI66313_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1746,31,1746,54); // HACK! 
}

//------------------------------
//FUNCTION <66975>: toolchain_clang_osx::dynamic_library_linker: Apply method
int _fI66975_dynamic_library_linker::apply(_art107763 const &_arg ){
  _vI66978_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1657, cols 5 to 6
      //result<66977>varname = (generic_link_lib_dynamic_uncurry<89472>stackfun (( CCFLAGS:ccflags_for_dynamic_link<66897>varname, CCLINK_DLLIB:linker<66896>varname, EXT_SHARED_OBJ:".dylib", LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66978>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66978>varname)));
      _vI66977_result = generic_link_lib_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107813(_art107812(ptrtoolchain_clang_osx->_vI66897_ccflags_for_dynamic_link, ptrtoolchain_clang_osx->_vI66896_linker, ::std::string(".dylib"), _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_clang_osx->_vI66979_config.library_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66978_spec.srcs, _vI66978_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1658, cols 5 to 18
      //return result<66977>varname;: type int
      return _vI66977_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1659,3,1659,4); // HACK! 
}

//------------------------------
//FUNCTION <66598>: toolchain_gcc_osx::whatami: Apply method
_a14239t_107672 _fI66598_whatami::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 966, cols 3 to 59
      //return "toolchain_gcc_osx (version 2)";: type _a14239t_107672
      return ::std::string("toolchain_gcc_osx (version 2)");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",966,3,966,59); // HACK! 
}

//------------------------------
//FUNCTION <97192>: flx_pkgconfig::handle_pkg::aux_uncurry: Apply method
void* _fI97192_aux_uncurry::apply(_at107697 const &_arg ){
  _vI97193_x_uncurry = _arg.data[0];
  _vI97194_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L97201:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<97197> := x_uncurry<97193>varname;
      _vI97197_aux__apos_2_mv_1387  = _vI97193_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI97197_aux__apos_2_mv_1387)==0) ) goto _ml1389_L97196;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<97194>varname;: type void*
      return _vI97194_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L97196:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI97197_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI97200__lam_1391)(FLX_FPAR_PASS this, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml1390_L97195;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<97198>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<97197>varname));
      _vI97198_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI97197_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<97199>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<97197>varname));
      _vI97199_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI97197_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<97194> := (Snoc<80397>struct (y<97194>varname, h_param_std_1269<97198>varname));
      _vI97194_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI97194_y, _vI97198_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<97193> := t_param_std_1268<97199>varname;
      _vI97193_x_uncurry  = _vI97199_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L97201;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L97195:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <93636>: generic_cxx_compile_for_static_uncurry::aux_uncurry: Apply method
void* _fI93636_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93637_inp_uncurry = _arg.data[0];
  _vI93638_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93645:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93641> := inp_uncurry<93637>varname;
      _vI93641_aux__apos_2_mv_1381  = _vI93637_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93641_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93640;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93638>varname;: type void*
      return _vI93638_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93640:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93641_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93644__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_compile_for_static_uncurry))) ) goto _ml1384_L93639;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93642>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93641>varname));
      _vI93642_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93641_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93643>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93641>varname));
      _vI93643_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93641_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93638> := (Snoc<80397>struct (out<93638>varname, (mkinc<68173>stackfun h_param_std_1267<93642>varname)));
      _vI93638_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93638_out, mkinc(_vI93642_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93637> := t_param_std_1266<93643>varname;
      _vI93637_inp_uncurry  = _vI93643_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93645;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93639:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66578>: toolchain_gcc_linux::dynamic_executable_linker: Apply method
int _fI66578_dynamic_executable_linker::apply(_art107763 const &_arg ){
  _vI66581_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 916, cols 5 to 6
      //result<66580>varname = (generic_link_exe_dynamic_uncurry<89454>stackfun (( CCFLAGS:Empty<80385>varname, CCLINK_STATIC:linker<66503>varname, LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66581>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66581>varname)));
      _vI66580_result = generic_link_exe_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107811(_art107810((void* /*VR_nullptr*/ )0, ptrtoolchain_gcc_linux->linker, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_gcc_linux->_vI66586_config.library_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66581_spec.srcs, _vI66581_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 917, cols 5 to 18
      //return result<66580>varname;: type int
      return _vI66580_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",918,3,918,4); // HACK! 
}

//------------------------------
//FUNCTION <66443>: toolchain_msvc_win32::static_executable_linker: Apply method
int static_executable_linker::apply(_art107763 const &_arg ){
  _vI66454_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1887, cols 5 to 35
      //link_specs<66445>varname = Empty<80385>varname;
      link_specs = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1888, cols 5 to 34
      //obj_specs<66446>varname = Empty<80385>varname;
      obj_specs = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<93048> := (join_uncurry<89534>stackfun (apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66454>varname), static_link_strings<66329>varname));
      _vI93048_xs  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI66454_spec.srcs, ptrtoolchain_msvc_win32->static_link_strings)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv93047<93047> := iterator'2<93049>closure;
      _genout_urv93047  = (FLX_NEWP(_fI93049_iterator__apos_2)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32)); //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      //_generator_toolchain_4165<66447>varname = _genout_urv93047<93047>varname;
      _generator_toolchain_4165 = _genout_urv93047; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
    continue__ll_toolchain_4142_L66455:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      //static_executable_linker_mv_66261<66261> := apply(_generator_toolchain_4165<66447>varname, ());
      static_executable_linker_mv_66261  = (_generator_toolchain_4165)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
/*match case 1:|Some term_param_bootflx_66212*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      if(!andthen(FLX_VNI(static_executable_linker_mv_66261)==1, (FLX_NEWP(_lam_66264)(FLX_FPAR_PASS this, ptrtoolchain_msvc_win32))) ) goto _ml66263_L66462;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      //term_param_bootflx_66212<66450>varname = (arg of case 1 of static_executable_linker_mv_66261<66261>varname);
      term_param_bootflx_66212 = *((_a14239t_107672*)FLX_VNP(static_executable_linker_mv_66261)); //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1895, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(term_param_bootflx_66212,0,::std::string("/DEFAULTLIB:").size()) == ::std::string("/DEFAULTLIB:"))) ) goto _ifdoend_bootflx_66213_L66456;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &link_specs<66445>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &link_specs<66445>ref), term_param_bootflx_66212<66450>varname));
      *((void**)&link_specs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&link_specs) , term_param_bootflx_66212)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      goto continue__ll_toolchain_4142_L66455;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1895, cols 7 to 11
    _ifdoend_bootflx_66213_L66456:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1894, cols 7 to 27
      if(!((::flx::rtl::strutil::substr(term_param_bootflx_66212,0,::std::string("/LIBPATH:").size()) == ::std::string("/LIBPATH:"))) ) goto _ifdoend_bootflx_66215_L66457;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &link_specs<66445>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &link_specs<66445>ref), term_param_bootflx_66212<66450>varname));
      *((void**)&link_specs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&link_specs) , term_param_bootflx_66212)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      goto continue__ll_toolchain_4142_L66455;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1894, cols 7 to 27
    _ifdoend_bootflx_66215_L66457:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1894, cols 7 to 27
      if(!((::flx::rtl::strutil::substr(term_param_bootflx_66212,- ::std::string(".obj").size() ,term_param_bootflx_66212.size()) == ::std::string(".obj")) || (::flx::rtl::strutil::substr(term_param_bootflx_66212,- ::std::string(".obj").size() ,term_param_bootflx_66212.size()) == ::std::string(".obj")) ) ) goto _ifdoend_bootflx_66217_L66458;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &obj_specs<66446>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &obj_specs<66446>ref), term_param_bootflx_66212<66450>varname));
      *((void**)&obj_specs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&obj_specs) , term_param_bootflx_66212)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      goto continue__ll_toolchain_4142_L66455;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1894, cols 7 to 27
    _ifdoend_bootflx_66217_L66458:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &obj_specs<66446>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &obj_specs<66446>ref), term_param_bootflx_66212<66450>varname));
      *((void**)&obj_specs)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&obj_specs) , term_param_bootflx_66212)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      goto continue__ll_toolchain_4142_L66455;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
    _ml66263_L66462:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      if(!(FLX_VNI(static_executable_linker_mv_66261)==0) ) goto _ml66265_L66463;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      goto _em66261_L66464;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
    _ml66265_L66463:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1896,5,1896,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1896,5,1896,9);
;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1896, cols 5 to 9
    _em66261_L66464:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1897, cols 5 to 136
      //_genout_urv93114<93114> := (xpopen<66338>stackfun (Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((Snoc<80397>struct ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun (obj_specs<66446>varname, (+<14305>primfun ("/Fe", apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66454>varname))))), "/link")), link_specs<66445>varname)), "/MDd")), "/DFLX_STATIC_LINK")), "/nologo")), "cl.exe")));
      _genout_urv93114  = xpopen(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .apply(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(obj_specs, ::std::string("/Fe") + _vI66454_spec.dst )) /* apply_stack */, ::std::string("/link"))) /* apply_stack */, link_specs)) /* apply_stack */, ::std::string("/MDd")))), ::std::string("/DFLX_STATIC_LINK")))), ::std::string("/nologo")))), ::std::string("cl.exe"))))) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1897, cols 5 to 136
      //_ds2_66266<66451>varname = _genout_urv93114<93114>varname;
      _ds2_66266 = _genout_urv93114; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1897, cols 5 to 136
      //result<66452>varname = apply((prj0:int * string -> int), _ds2_66266<66451>varname);
      _vI66452_result = _ds2_66266.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1897, cols 5 to 136
      //text<66453>varname = apply((prj1:int * string -> string), _ds2_66266<66451>varname);
      _vI66453_text = _ds2_66266.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1797, cols 3 to 4
      //run procedure stackcall checkwarn<66354>stackproc  (result<66452>varname, text<66453>varname);
      {
      checkwarn(FLX_FPAR_PASS ptrtoolchain_msvc_win32)
      .stack_call(_tt107757(_vI66452_result, _vI66453_text));
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1899, cols 5 to 18
      //return result<66452>varname;: type int
      return _vI66452_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1900,3,1900,4); // HACK! 
}

//------------------------------
//FUNCTION <92645>: toolchain_msvc_win32::xpopen::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI92645__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66951>: toolchain_clang_osx::cxx_static_object_compiler: Apply method
int _fI66951_cxx_static_object_compiler::apply(_art107759 const &_arg ){
  _vI66954_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1557, cols 5 to 6
      //result<66953>varname = (generic_cxx_compile_for_static_uncurry<89466>stackfun (( CCFLAGS:base_cxx_compile_flags<66899>varname, CCOBJ_STATIC_LIB:cxx_compiler<66895>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66954>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66954>varname)));
      _vI66953_result = generic_cxx_compile_for_static_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107805(_art107804(ptrtoolchain_clang_osx->_vI66899_base_cxx_compile_flags, ptrtoolchain_clang_osx->_vI66895_cxx_compiler, ptrtoolchain_clang_osx->_vI66979_config.header_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.macros, ::std::string("-o "), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66954_spec.src, _vI66954_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1558, cols 5 to 18
      //return result<66953>varname;: type int
      return _vI66953_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1559,3,1559,4); // HACK! 
}

//------------------------------
//FUNCTION <103148>: exts::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI103148__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66748>: toolchain_clang_linux::cxx_dynamic_object_compiler: Apply method
int _fI66748_cxx_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66751_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1351, cols 5 to 6
      //result<66750>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_cxx_compile_flags<66687>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:linker<66685>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66768>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66768>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66751>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66751>varname)));
      _vI66750_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_linux->_vI66687_base_cxx_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_clang_linux->_vI66685_linker, ptrtoolchain_clang_linux->_vI66768_config.header_search_dirs, ptrtoolchain_clang_linux->_vI66768_config.macros, ::std::string("-o "), ptrtoolchain_clang_linux->_vI66768_config.debugln), _vI66751_spec.src, _vI66751_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1352, cols 5 to 18
      //return result<66750>varname;: type int
      return _vI66750_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1353,3,1353,4); // HACK! 
}

//------------------------------
//FUNCTION <99792>: subscript::_lam_2057: Apply method
 ::flx::rtl::cl_t _lam_2057::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 224, cols 7 to 25
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",224,7,224,25); // HACK! 
}

//------------------------------
//FUNCTION <89504>: mem_uncurry: Apply method
 ::flx::rtl::cl_t mem_uncurry::apply(_tt107790 const &_arg ){
  eq_uncurry = _arg.mem_0;
  _vI89873_xs = _arg.mem_1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
    start_92950_L92950:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
      //mem'2_mv_1447<92943> := xs<89873>varname;
      _vI92943_mem__apos_2_mv_1447  = _vI89873_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 504, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 504, cols 7 to 12
      if(!(FLX_VNI(_vI92943_mem__apos_2_mv_1447)==0) ) goto _ml1449_L92942;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 5 to 58
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 504, cols 7 to 12
    _ml1449_L92942:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 7 to 15
/*match case 2:|Snoc (t_param_std_1295, h_param_std_1296)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 7 to 15
      if(!andthen(FLX_VNI(_vI92943_mem__apos_2_mv_1447)==1, (FLX_NEWP(_lam_1456)(FLX_FPAR_PASS this))) ) goto _ml1450_L92941;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 14 to 14
      //h_param_std_1296<92944>varname = apply((prj1:list * string -> string), (arg of case 1 of mem'2_mv_1447<92943>varname));
      h_param_std_1296 = (*((_tt107677*)FLX_VNP(_vI92943_mem__apos_2_mv_1447))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 12 to 12
      //t_param_std_1295<92945>varname = apply((prj0:list * string -> list), (arg of case 1 of mem'2_mv_1447<92943>varname));
      t_param_std_1295 = (*((_tt107677*)FLX_VNP(_vI92943_mem__apos_2_mv_1447))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 23 to 27
      //mem'2_mv_1452<92948> := apply(eq_uncurry<89872>varname, h_param_std_1296<92944>varname);
      _vI92948_mem__apos_2_mv_1452  = (eq_uncurry)->clone()
      ->apply(h_param_std_1296) /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
      if(!(_vI92948_mem__apos_2_mv_1452%2==1) ) goto _ml1454_L92947;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
    _ml1454_L92947:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 20 to 51
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
      //xs<89873> := t_param_std_1295<92945>varname;
      _vI89873_xs  = t_param_std_1295; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 507, cols 3 to 4
      goto start_92950_L92950;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 7 to 15
    _ml1450_L92941:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 5 to 58
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 505, cols 5 to 58
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",505,5,505,58);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",505,5,505,58);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",507,3,507,4); // HACK! 
}

//------------------------------
//FUNCTION <105795>: flx_processing::cxx_compile_dynamic: Apply method
int cxx_compile_dynamic::apply(_pt107743* const &_arg ){
  _vI105801_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2262, cols 5 to 83
      //EXT_SHARED_OBJ<105796>varname = apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), apply(toolchain<68911>varname, dflt_clang_config<105724>varname)), ());
      _vI105796_EXT_SHARED_OBJ = ((ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(ptrflx_processing->_vI105724_dflt_clang_config) /* general apply */.dynamic_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2276, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0) && ((ptrflx_processing->_vI106023_control.LINKIT == 1) || ((ptrflx_processing->_vI106023_control.OUTPUT_FILENAME_SPECIFIED == 0) && (ptrflx_processing->_vI106023_control.OUTP_hash_48688961 == 0) ) ) ) ) goto _ifdoelse_bootflx_65879_L105804;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2274, cols 7 to 9
      //result<105797>varname = (cxx_compile_dynamic1_uncurry<106032>stackfun (ehandler<105801>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), "_static_link_thunk.cpp")), (+<14305>primfun ((+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), "_static_link_thunk")), EXT_SHARED_OBJ<105796>varname))));
      _vI105797_result = cxx_compile_dynamic1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI105801_ehandler, ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string("_static_link_thunk.cpp") , (ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string("_static_link_thunk") ) + _vI105796_EXT_SHARED_OBJ )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2275, cols 7 to 35
      if(!(!((_vI105797_result == 0)) ) ) goto _ifdoelse_bootflx_65879_L105804;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2275, cols 7 to 35
      //return result<105797>varname;: type int
      return _vI105797_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2276, cols 5 to 9
    _ifdoelse_bootflx_65879_L105804:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2286, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CXXONLY == 0)) ) goto _ifdoelse_bootflx_65883_L105810;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2285, cols 7 to 11
      if(!((ptrflx_processing->_vI106023_control.LINKIT == 0)) ) goto _ifdoend_bootflx_65884_L105806;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2280, cols 9 to 106
      //result<105797>varname = (cxx_compile_dynamic1_uncurry<106032>stackfun (ehandler<105801>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), ".cpp")), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname)));
      _vI105797_result = cxx_compile_dynamic1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI105801_ehandler, ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string(".cpp") , ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2281, cols 9 to 37
      if(!(!((_vI105797_result == 0)) ) ) goto _ifdoelse_bootflx_65883_L105810;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2281, cols 9 to 37
      //return result<105797>varname;: type int
      return _vI105797_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2286, cols 5 to 9
      goto _ifdoelse_bootflx_65883_L105810;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2285, cols 7 to 11
    _ifdoend_bootflx_65884_L105806:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2283, cols 9 to 109
      //result<105797>varname = (cxx_compile_dynamic1_uncurry<106032>stackfun (ehandler<105801>varname, (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), ".cpp")), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<105620>varname), EXT_SHARED_OBJ<105796>varname))));
      _vI105797_result = cxx_compile_dynamic1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI105801_ehandler, ptrflx_processing->_vI105620_dvars.cpp_filebase + ::std::string(".cpp") , ptrflx_processing->_vI105620_dvars.cpp_filebase + _vI105796_EXT_SHARED_OBJ )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2284, cols 9 to 37
      if(!(!((_vI105797_result == 0)) ) ) goto _ifdoelse_bootflx_65883_L105810;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2284, cols 9 to 37
      //return result<105797>varname;: type int
      return _vI105797_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2286, cols 5 to 9
    _ifdoelse_bootflx_65883_L105810:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<106263> := apply((prj77:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<106023>varname);
      _vI106263_xs  = ptrflx_processing->_vI106023_control.cpps; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv99242<106262> := iterator'2<106264>closure;
      _genout_urv99242  = (FLX_NEWP(_fI106264_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      //_generator_flx_2483<105798>varname = _genout_urv99242<106262>varname;
      _generator_flx_2483 = _genout_urv99242; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
    continue__ll_flx_2471_L105811:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      //cxx_compile_dynamic_mv_66069<105721> := apply(_generator_flx_2483<105798>varname, ());
      cxx_compile_dynamic_mv_66069  = (_generator_flx_2483)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
/*match case 1:|Some src_param_bootflx_65891*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      if(!andthen(FLX_VNI(cxx_compile_dynamic_mv_66069)==1, (FLX_NEWP(_lam_66072)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66071_L105813;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      //src_param_bootflx_65891<105799>varname = (arg of case 1 of cxx_compile_dynamic_mv_66069<105721>varname);
      src_param_bootflx_65891 = *((_a14239t_107672*)FLX_VNP(cxx_compile_dynamic_mv_66069)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2289, cols 7 to 63
      //dst<105800>varname = (+<14305>primfun (apply((prj0:string^2 -> string), (split_extension<83124>stackfun src_param_bootflx_65891<105799>varname)), EXT_SHARED_OBJ<105796>varname));
      _vI105800_dst = (split_extension(src_param_bootflx_65891).data)[0] + _vI105796_EXT_SHARED_OBJ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2290, cols 7 to 54
      //result<105797>varname = (cxx_compile_dynamic1_uncurry<106032>stackfun (ehandler<105801>varname, src_param_bootflx_65891<105799>varname, dst<105800>varname));
      _vI105797_result = cxx_compile_dynamic1_uncurry(FLX_FPAR_PASS ptrflx_processing)
      .apply(_tt107874(_vI105801_ehandler, src_param_bootflx_65891, _vI105800_dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2291, cols 7 to 35
      if(!(!((_vI105797_result == 0)) ) ) goto _ifdoend_bootflx_65892_L105812;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2291, cols 7 to 35
      //return result<105797>varname;: type int
      return _vI105797_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2291, cols 7 to 35
    _ifdoend_bootflx_65892_L105812:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<106023>ref))) = (+<80787>stackfun ((deref<80855>primfun[list] &(deref<80855>primfun[list] apply((prj76:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), &control<106023>ref))), dst<105800>varname));
      *(&(*(&((_art107702*)&ptrflx_processing->_vI106023_control)->cppos) ))  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*(&(*(&((_art107702*)&ptrflx_processing->_vI106023_control)->cppos) )) , _vI105800_dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      goto continue__ll_flx_2471_L105811;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
    _ml66071_L105813:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      if(!(FLX_VNI(cxx_compile_dynamic_mv_66069)==0) ) goto _ml66073_L105814;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      goto _em66069_L105815;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
    _ml66073_L105814:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2293,5,2293,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2293,5,2293,9);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2293, cols 5 to 9
    _em66069_L105815:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2294, cols 5 to 13
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2295,3,2295,4); // HACK! 
}

//------------------------------
//C FUNC <14873>: rstrip
_a14239t_107672 rstrip( _a14239t_107672 _vI14878_x, _a14239t_107672 _vI14879_e){
  _a5094t_107688 j;
   ::flx::rtl::cl_t _vI14876_found;
  _a5094t_107688 _vI14875_i;
    // # C:/projects/felix/src/packages/strings.fdoc: line 444, cols 5 to 9
      if(!((0 < _vI14878_x.size())) ) goto _ifdoelse_std_1963_L14890;
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      //i<14875>varname = (-<81536>primfun[size] ((len<14304>primfun x<14878>varname), literal[size]("1")));
      _vI14875_i = _vI14878_x.size() - 1 ; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      // primcall pre_incr<81537>primproc[size] &i<14875>ref;
      {
      _a5094t_107688* _tmp109330 = (_a5094t_107688*)&_vI14875_i;
      ++*((_tmp109330));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
    redo__ll_strings_7274_L14880:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI14875_i)) )) goto _ifdoelse_std_1963_L14890;
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      // primcall pre_decr<81538>primproc[size] &i<14875>ref;
      {
      _a5094t_107688* _tmp109331 = (_a5094t_107688*)&_vI14875_i;
      --*((_tmp109331));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 433, cols 9 to 26
      //found<14876>varname = (case 0 of bool);
      _vI14876_found = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
      //j<14877>varname = literal[size]("0");
      j = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
    redo__ll_strings_7278_L14881:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
      if(FLX_UNLIKELY(!(!((_vI14879_e.size() - 1  < j)) ) )) goto break__ll_strings_7278_L14885;
    // # C:/projects/felix/src/packages/strings.fdoc: line 437, cols 11 to 15
      if(!((::flx::rtl::strutil::subscript(_vI14878_x,_vI14875_i) == ::flx::rtl::strutil::subscript(_vI14879_e,j))) ) goto _ifdoelse_std_1965_L14883;
    // # C:/projects/felix/src/packages/strings.fdoc: line 436, cols 13 to 24
      //found<14876>varname = (case 1 of bool);
      _vI14876_found = 1; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 437, cols 11 to 15
    _ifdoelse_std_1965_L14883:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
      // primcall pre_incr<81537>primproc[size] &j<14877>ref;
      {
      _a5094t_107688* _tmp109332 = (_a5094t_107688*)&j;
      ++*((_tmp109332));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
      goto redo__ll_strings_7278_L14881;
    // # C:/projects/felix/src/packages/strings.fdoc: line 438, cols 9 to 13
    break__ll_strings_7278_L14885:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 442, cols 9 to 13
      if(_vI14876_found) goto redo__ll_strings_7274_L14880;
    // # C:/projects/felix/src/packages/strings.fdoc: line 441, cols 11 to 34
      //return (copyto<81541>primfun[int] (x<14878>varname, (+<80315>primfun[int] ((_ctor_int<81465>primfun[size] i<14875>varname), 1))));: type _a14239t_107672
      return ::flx::rtl::strutil::substr(_vI14878_x,0,(static_cast<int>(_vI14875_i)/*int.flx: ctor*/) + 1 );
    // # C:/projects/felix/src/packages/strings.fdoc: line 443, cols 7 to 11
      goto redo__ll_strings_7274_L14880;
    // # C:/projects/felix/src/packages/strings.fdoc: line 444, cols 5 to 9
    _ifdoelse_std_1963_L14890:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 445, cols 5 to 14
      //return "";: type _a14239t_107672
      return ::std::string("");
}
//------------------------------
//FUNCTION <68413>: FlxPkgConfigQuery::getclosure: Apply method
_ft107744* getclosure::apply(_pt107743* const &_arg ){
  _vI68423_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 559, cols 5 to 6
      //return getclosure'2<68415>closure;: type _ft107744*
      return (FLX_NEWP(_fI68415_getclosure__apos_2)(FLX_FPAR_PASS this, ptrFlxPkgConfigQuery));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",559,5,559,6); // HACK! 
}

//------------------------------
//FUNCTION <90371>: map_package_requirements_uncurry::_lam_65103::_lam_65103'2: Apply method
void* _fI90371__lam_65103__apos_2::apply(_a14239t_107672 const &_arg ){
  elt = _arg;
    // # C:/projects/felix/src/packages/strings.fdoc: line 373, cols 3 to 4
      //_lam_65103'2_mv_65105<97982> := (==<80464>primfun[string] ((copyto<81376>primfun[size] (elt<90373>varname, (len<14304>primfun "---"))), "---"));
      _vI97982__lam_65103__apos_2_mv_65105  = (::flx::rtl::strutil::substr(elt,0,::std::string("---").size()) == ::std::string("---")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 819, cols 9 to 23
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 819, cols 9 to 23
      if(!(_vI97982__lam_65103__apos_2_mv_65105%2==1) ) goto _ml65107_L97983;
    // # C:/projects/felix/src/packages/lists.fdoc: line 408, cols 3 to 61
      //return (join_uncurry<89534>stackfun (acc<90374>varname, (aux_uncurry<97997>stackfun ((aux<97984>stackfun ((copyfrom<81959>primfun[int] (elt<90373>varname, 2)), Empty<80385>varname)), Empty<80385>varname))));: type void*
      return _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptr_lam_65103->_vI90374_acc, _fI97997_aux_uncurry(FLX_FPAR_PASS this, ptr_lam_65103, ptrmap_package_requirements_uncurry)
      .apply(_at107697(_fI97984_aux(FLX_FPAR_PASS this, ptr_lam_65103, ptrmap_package_requirements_uncurry)
      .apply(_tt107698(::flx::rtl::strutil::substr(elt,2,elt.size()), (void* /*VR_nullptr*/ )0)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */)) /* apply_stack */;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 819, cols 9 to 23
    _ml65107_L97983:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 819, cols 9 to 23
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 819, cols 9 to 23
      //return (+<80787>stackfun (acc<90374>varname, elt<90373>varname));: type void*
      return _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptr_lam_65103->_vI90374_acc, elt)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",820,8,820,14); // HACK! 
}

//------------------------------
//FUNCTION <98813>: run_felix_compiler::aux_uncurry: Apply method
void* _fI98813_aux_uncurry::apply(_at107697 const &_arg ){
  _vI98814_inp_uncurry = _arg.data[0];
  _vI98815_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L98822:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<98818> := inp_uncurry<98814>varname;
      _vI98818_aux__apos_2_mv_1381  = _vI98814_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI98818_aux__apos_2_mv_1381)==0) ) goto _ml1383_L98817;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<98815>varname;: type void*
      return _vI98815_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L98817:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI98818_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI98821__lam_1385)(FLX_FPAR_PASS this, ptrrun_felix_compiler))) ) goto _ml1384_L98816;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<98819>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<98818>varname));
      _vI98819_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI98818_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<98820>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<98818>varname));
      _vI98820_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI98818_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<98815> := (Snoc<80397>struct (out<98815>varname, (quote_arg<16873>stackfun h_param_std_1267<98819>varname)));
      _vI98815_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98815_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI98819_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<98814> := t_param_std_1266<98820>varname;
      _vI98814_inp_uncurry  = _vI98820_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L98822;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L98816:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------

//PROCEDURE <102659:> flx_processing::_lam_1728: Call method
::flx::rtl::con_t * _lam_1728::call(::flx::rtl::con_t *_ptr_caller, _a14239t_107672 const &_arg){
  _caller = _ptr_caller;
  _vI102660_v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <102659:> flx_processing::_lam_1728: Resume method
::flx::rtl::con_t *_lam_1728::resume(){
    // # C:/projects/felix/src/packages/arrays.fdoc: line 689, cols 5 to 9
      if(!(!(((PTF gcp->collector->get_used((ptrflx_processing->_vI102658_a))) < (PTF gcp->collector->get_count((ptrflx_processing->_vI102658_a))))) ) ) goto _ifdoelse_std_1697_L102661;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("ctor3: attempt to push_back on full varray size ", (str<83517>primfun[size] (maxlen<83516>primfun[string] a<102658>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109334 = (::std::string("ctor3: attempt to push_back on full varray size ") + ::flx::rtl::strutil::str<_a5094t_107688>((PTF gcp->collector->get_count((ptrflx_processing->_vI102658_a)))) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109334)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/arrays.fdoc: line 689, cols 5 to 9
    _ifdoelse_std_1697_L102661:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 772, cols 5 to 9
      if(!(!(((PTF gcp->collector->get_used((ptrflx_processing->_vI102658_a))) < (PTF gcp->collector->get_count((ptrflx_processing->_vI102658_a))))) ) ) goto _ifdoelse_std_1701_L102663;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("attempt to push_back on full varray size ", (str<83517>primfun[size] (maxlen<83516>primfun[string] a<102658>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109335 = (::std::string("attempt to push_back on full varray size ") + ::flx::rtl::strutil::str<_a5094t_107688>((PTF gcp->collector->get_count((ptrflx_processing->_vI102658_a)))) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109335)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/arrays.fdoc: line 772, cols 5 to 9
    _ifdoelse_std_1701_L102663:;
    // # C:/projects/felix/src/packages/arrays.fdoc: line 773, cols 5 to 21
      // primcall _push_back<83547>primproc[string] (a<102658>varname, v<102660>varname);
      
    {
      //_a14239t_107672 * _p = *(ptrflx_processing->_vI102658_a);
      size_t n = PTF gcp->collector->get_used((ptrflx_processing->_vI102658_a));
      PTF gcp->collector->incr_used((ptrflx_processing->_vI102658_a),1L);
      new((ptrflx_processing->_vI102658_a)+n) _a14239t_107672(_vI102660_v);
    }
  
    // # C:/projects/felix/src/packages/arrays.fdoc: line 691, cols 11 to 7
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <107616>: flx_processing::run_program_static::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI107616__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <93644>: generic_cxx_compile_for_static_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93644__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <68887>: flx_processing: Apply method
int flx_processing::apply(_tt107707 const &_arg ){
  _vI68947_config = _arg.mem_0;
  _vI68948_control = _arg.mem_1;
  _vI68949_loopctl = _arg.mem_2;
  _vI68950_args = _arg.mem_3;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3219, cols 5 to 19
      //result<68889>varname = 0;
      _vI68889_result = 0; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 684, cols 5 to 23
      //n<102657>varname = (_ctor_size<5394>primfun (aux_uncurry<102665>stackfun (literal[size]("0"), args<68950>varname)));
      _vI102657_n = ((_fI102665_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107728(0, _vI68950_args)) /* apply_stack */))/*int.flx: ctor size IDENT*/; //assign simple
    // # C:/projects/felix/src/packages/arrays.fdoc: line 685, cols 5 to 24
      //a<102658>varname = (_ctor_varray<83511>primfun[string] n<102657>varname);
      _vI102658_a = (_a14239t_107672*)(PTF gcp->collector->create_empty_array(&_a14239t_107672_ptr_map,_vI102657_n)); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //run procedure directcall iter_uncurry<89522>directproc (_lam_1728<102659>closure, args<68950>varname);
      {
      _pt107730* _tmp109336 = (FLX_NEWP(_lam_1728)(FLX_FPAR_PASS this));
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
          ->call(0, _tt107731((_tmp109336), _vI68950_args));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller flx_processing\n");
            fprintf(stderr,"Calls  iter_uncurry\n");
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1656, cols 1 to 2
      //run procedure directcall processing_stage1<68085>directproc (config<68947>varname, control<68948>varname, loopctl<68949>varname, a<102658>varname);
      {
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(processing_stage1)(FLX_FPAR_PASS_ONLY))
          ->call(0, _tt107732(_vI68947_config, _vI68948_control, _vI68949_loopctl, _vI102658_a));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller flx_processing\n");
            fprintf(stderr,"Calls  processing_stage1\n");
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 3224, cols 5 to 9
      if(!(((*_vI68948_control).VALIDATE_CACHE == 1)) ) goto _ifdoelse_bootflx_64993_L68952;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1962, cols 1 to 2
      //_genout_urv104918<105214> := dxqt'2<105216>closure;
      _genout_urv104918  = (FLX_NEWP(_fI105216_dxqt__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1985, cols 3 to 4
      //_genout_urv105168<105215> := (validate_cache<68848>stackfun ( AUTOMATON:apply((prj0:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)), CACHE_DIR:apply((prj0:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68947>varname)), CLEAR_CACHE:apply((prj6:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), *(control<68948>varname)), FLXG:apply((prj27:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)), FLX_SHARE_DIR:apply((prj7:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68947>varname)), GRAMMAR_DIR:apply((prj36:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)), OUTPUT_DIR:apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68947>varname)), STDGRAMMAR:apply((prj66:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)), debugln:xdebugln'2<105210>closure, quote:quote_arg<16873>closure, xqt:_genout_urv104918<105214>varname));
      _genout_urv105168  = validate_cache(FLX_FPAR_PASS _art107736((*_vI68948_control).AUTOMATON, (*_vI68947_config).FLX_CACHE_DIR, (*_vI68948_control).CLEAR_CACHE, (*_vI68948_control).FLXG, (*_vI68947_config).FLX_SHARE_DIR, (*_vI68948_control).GRAMMAR_DIR, (*_vI68947_config).FLX_OUTPUT_DIR, (*_vI68948_control).STDGRAMMAR, (FLX_NEWP(_pI105210_xdebugln__apos_2)(FLX_FPAR_PASS this)), (FLX_NEWP(quote_arg)(FLX_FPAR_PASS_ONLY)), _genout_urv104918)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1985, cols 3 to 4
      //_ds1_66017<105207>varname = _genout_urv105168<105215>varname;
      _ds1_66017 = _genout_urv105168; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1985, cols 3 to 4
      //apply((prj6:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), *(control<68948>varname)) = apply((prj0:int * double -> int), _ds1_66017<105207>varname);
      (*_vI68948_control).CLEAR_CACHE = _ds1_66017.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1985, cols 3 to 4
      //apply((prj75:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> double), *(control<68948>varname)) = apply((prj1:int * double -> double), _ds1_66017<105207>varname);
      (*_vI68948_control).cache_time = _ds1_66017.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3224, cols 5 to 9
    _ifdoelse_bootflx_64993_L68952:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3234, cols 5 to 9
      if(!(((*_vI68949_loopctl).base == ::std::string("")) && ((*_vI68948_control).INREGEX == ::std::string("")) ) ) goto _ifdoelse_bootflx_64995_L68956;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3231, cols 7 to 11
      if(!(!(((*_vI68948_control).CLEAR_CACHE == 1)) ) ) goto _ifdoelse_bootflx_64997_L68954;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("usage: flx [options] filename", "\x0A")));
      {
      _a14239t_107672 _tmp109339 = ::std::string("usage: flx [options] filename") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109339)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3230, cols 9 to 24
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3231, cols 7 to 11
    _ifdoelse_bootflx_64997_L68954:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3233, cols 7 to 22
      // primcall exit<7637>primproc 0;
      ::std::exit(0);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3234, cols 5 to 9
    _ifdoelse_bootflx_64995_L68956:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3240, cols 5 to 50
      //dbdir<68897>varname = (join<82705>stackfun (apply((prj8:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), *(config<68947>varname)), "config"));
      dbdir = _fI82705_join((*_vI68947_config).FLX_TARGET_DIR, ::std::string("config")); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3241, cols 5 to 72
      //pkgconfig<68898>varname = (FlxPkgConfigQuery<68324>flxfun (Snoc<80397>struct (Empty<80385>varname, dbdir<68897>varname)));
      pkgconfig = (FLX_NEWP(FlxPkgConfigQuery)(FLX_FPAR_PASS_ONLY))
      ->apply(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, dbdir)))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3243, cols 10 to 37
      //flx_processing_mv_65010<105586> := (==<80464>primfun[string] (apply((prj35:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)), ""));
      flx_processing_mv_65010  = ((*_vI68948_control).FLX_TOOLCHAIN == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3244, cols 7 to 34
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3244, cols 7 to 34
      if(!(flx_processing_mv_65010%2==1) ) goto _ml65012_L105587;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3244, cols 7 to 34
      //_urv105585<105585> := apply(apply(apply((prj2:record(getclosure:((unit -> void) -> (string -> list)),getpkgfield:((unit -> void) -> (string^2 -> list)),getpkgfield1:((unit -> void) -> (string^2 -> string)),getpkgfielddflt:((unit -> void) -> (string^2 -> string)),getpkgfieldopt:((unit -> void) -> (string^2 -> opt)),query:(list -> int * list)) -> (unit -> void) -> (string^2 -> string)), pkgconfig<68898>varname), ehandler<68894>closure), ("toolchain", "toolchain"));
      _urv105585  = ((pkgconfig.getpkgfield1)->clone()
      ->apply((FLX_NEWP(ehandler)(FLX_FPAR_PASS this))) /* general apply */)->clone()
      ->apply(_at107674(::std::string("toolchain"), ::std::string("toolchain"))) /* general apply */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3244, cols 7 to 34
      goto _end_hash_125122758;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3244, cols 7 to 34
    _ml65012_L105587:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3244, cols 7 to 34
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3244, cols 7 to 34
      //_urv105585<105585> := apply((prj35:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname));
      _urv105585  = (*_vI68948_control).FLX_TOOLCHAIN; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3244, cols 7 to 34
    _end_hash_125122758:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3245, cols 5 to 6
      //toolchain_name<68901>varname = _urv105585<105585>varname;
      toolchain_name = _urv105585; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3248, cols 14 to 27
      //flx_processing_mv_65015<105591> := toolchain_name<68901>varname;
      flx_processing_mv_65015  = toolchain_name; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3250, cols 10 to 30
/*match case 1:"toolchain_clang_osx"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3250, cols 10 to 30
      if(!((::std::string("toolchain_clang_osx") == flx_processing_mv_65015)) ) goto _ml65017_L105593;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      //_urv105590<105590> := toolchain_clang_osx<66890>closure;
      _urv105590  = (FLX_NEWP(toolchain_clang_osx)(FLX_FPAR_PASS_ONLY)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      goto _end_hash_450889609;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3250, cols 10 to 30
    _ml65017_L105593:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3252, cols 10 to 29
/*match case 2:"toolchain_iphoneos"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3252, cols 10 to 29
      if(!((::std::string("toolchain_iphoneos") == flx_processing_mv_65015)) ) goto _ml65018_L105594;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      //_urv105590<105590> := toolchain_clang_apple_iPhoneOS_armv7_arm64<66883>closure;
      _urv105590  = (FLX_NEWP(_fI66883_tool_hash_1053775159)(FLX_FPAR_PASS_ONLY)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      goto _end_hash_450889609;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3252, cols 10 to 29
    _ml65018_L105594:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3253, cols 10 to 36
/*match case 3:"toolchain_iphonesimulator"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3253, cols 10 to 36
      if(!((::std::string("toolchain_iphonesimulator") == flx_processing_mv_65015)) ) goto _ml65019_L105595;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      //_urv105590<105590> := toolchain_clang_apple_iPhoneSimulator<66886>closure;
      _urv105590  = (FLX_NEWP(toolchain_clang_apple_iPhoneSimulator)(FLX_FPAR_PASS_ONLY)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      goto _end_hash_450889609;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3253, cols 10 to 36
    _ml65019_L105595:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3255, cols 10 to 32
/*match case 4:"toolchain_clang_linux"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3255, cols 10 to 32
      if(!((::std::string("toolchain_clang_linux") == flx_processing_mv_65015)) ) goto _ml65020_L105596;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      //_urv105590<105590> := toolchain_clang_linux<66679>closure;
      _urv105590  = (FLX_NEWP(toolchain_clang_linux)(FLX_FPAR_PASS_ONLY)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      goto _end_hash_450889609;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3255, cols 10 to 32
    _ml65020_L105596:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3256, cols 10 to 28
/*match case 5:"toolchain_gcc_osx"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3256, cols 10 to 28
      if(!((::std::string("toolchain_gcc_osx") == flx_processing_mv_65015)) ) goto _ml65021_L105597;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      //_urv105590<105590> := toolchain_gcc_osx<66588>closure;
      _urv105590  = (FLX_NEWP(toolchain_gcc_osx)(FLX_FPAR_PASS_ONLY)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      goto _end_hash_450889609;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3256, cols 10 to 28
    _ml65021_L105597:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3257, cols 10 to 30
/*match case 6:"toolchain_gcc_linux"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3257, cols 10 to 30
      if(!((::std::string("toolchain_gcc_linux") == flx_processing_mv_65015)) ) goto _ml65022_L105598;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      //_urv105590<105590> := toolchain_gcc_linux<66497>closure;
      _urv105590  = (FLX_NEWP(toolchain_gcc_linux)(FLX_FPAR_PASS_ONLY)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      goto _end_hash_450889609;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3257, cols 10 to 30
    _ml65022_L105598:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3258, cols 10 to 31
/*match case 7:"toolchain_msvc_win32"*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3258, cols 10 to 31
      if(!((::std::string("toolchain_msvc_win32") == flx_processing_mv_65015)) ) goto _ml65023_L105599;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      //_urv105590<105590> := toolchain_msvc_win32<66276>closure;
      _urv105590  = (FLX_NEWP(toolchain_msvc_win32)(FLX_FPAR_PASS_ONLY)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      goto _end_hash_450889609;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3258, cols 10 to 31
    _ml65023_L105599:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3259, cols 10 to 10
/*match case 8:x_param_bootflx_64998*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3259, cols 10 to 10
      //x_param_bootflx_64998<105592>varname = flx_processing_mv_65015<105591>varname;
      x_param_bootflx_64998 = flx_processing_mv_65015; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
      //_urv105590<105590> := (load-plugin-func1<86040>stackfun (x_param_bootflx_64998<105592>varname, "", ""));
      _urv105590  = _fI86040_load__hyphen_plugin__hyphen_func1(FLX_FPAR_PASS x_param_bootflx_64998, ::std::string(""), ::std::string("")); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3260, cols 8 to 93
    _end_hash_450889609:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3262, cols 5 to 6
      //toolchain<68911>varname = _urv105590<105590>varname;
      _vI68911_toolchain = _urv105590; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3308, cols 5 to 9
      if(!(!(((*_vI68948_control).INREGEX == ::std::string(""))) ) ) goto _ifdoend_bootflx_64999_L68957;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3266, cols 9 to 91
      //(deref<80855>primfun[list] apply((prj73:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<68948>varname)) = (Snoc<80397>struct (apply((prj73:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<68948>varname)), (+<14305>primfun ((+<14305>primfun ((+<14305>primfun (""", apply((prj6:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(loopctl<68949>varname)))), """)), " "))));
      *(&_vI68948_control->USER_ARGS)  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((*_vI68948_control).USER_ARGS, ((::std::string("\"") + (*_vI68949_loopctl).progname ) + ::std::string("\"") ) + ::std::string(" ") ))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3267, cols 9 to 61
      if(!(((*_vI68948_control).INDIR == ::std::string(""))) ) goto _ifdoelse_bootflx_65002_L105624;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3267, cols 36 to 55
      //(deref<85463>primfun[string] apply((prj38:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68948>varname)) = ".";
      *(&_vI68948_control->INDIR)  = ::std::string("."); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3267, cols 9 to 61
    _ifdoelse_bootflx_65002_L105624:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3268, cols 9 to 41
      //_genout_urv106687<106687> := (_ctor_RE2<15267>primfun apply((prj40:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)));
      _genout_urv106687  = ::std::shared_ptr< ::re2::RE2>(new RE2(((*_vI68948_control).INREGEX))); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3268, cols 9 to 41
      //_genout_urv95014<105630> := _genout_urv106687<106687>varname;
      _genout_urv95014  = _genout_urv106687; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3268, cols 9 to 41
      //regex<105611>varname = _genout_urv95014<105630>varname;
      regex = _genout_urv95014; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3273, cols 9 to 13
      if(regex->ok()) goto _ifdoend_bootflx_65003_L105625;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("Malformed regex ", apply((prj40:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109340 = (::std::string("Malformed regex ") + (*_vI68948_control).INREGEX ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109340)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3271, cols 11 to 20
      //result<68889>varname = 1;
      _vI68889_result = 1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3272, cols 11 to 22
      goto endoff_L68959;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3273, cols 9 to 13
    _ifdoend_bootflx_65003_L105625:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 570, cols 5 to 35
      //foundfiles<105634>varname = Empty<80385>varname;
      foundfiles = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 614, cols 5 to 6
      //run procedure stackcall rfi<105635>stackproc  "";
      {
      rfi(FLX_FPAR_PASS this)
      .stack_call(::std::string(""));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 3274, cols 9 to 67
      //files<105612>varname = (aux_uncurry<105678>stackfun (foundfiles<105634>varname, Empty<80385>varname));
      _vI105612_files = _fI105678_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(foundfiles, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3275, cols 9 to 30
      //n<105613>varname = (_ctor_int<81465>primfun[size] (aux_uncurry<105688>stackfun (literal[size]("0"), files<105612>varname)));
      _vI105613_n = static_cast<int>((_fI105688_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107728(0, _vI105612_files)) /* apply_stack */))/*int.flx: ctor*/; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("Processing ", (str<83517>primfun[size] (aux_uncurry<105697>stackfun (literal[size]("0"), files<105612>varname))))), " files")), "\x0A")));
      {
      _a14239t_107672 _tmp109342 = ((::std::string("Processing ") + ::flx::rtl::strutil::str<_a5094t_107688>(_fI105697_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_tt107728(0, _vI105612_files)) /* apply_stack */) ) + ::std::string(" files") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109342)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3277, cols 9 to 18
      //i<105614>varname = 1;
      _vI105614_i = 1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<105707> := files<105612>varname;
      _vI105707_xs  = _vI105612_files; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv95283<105706> := iterator'2<105708>closure;
      _genout_urv95283  = (FLX_NEWP(_fI105708_iterator__apos_2)(FLX_FPAR_PASS this)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
      //_generator_flx_233<105615>varname = _genout_urv95283<105706>varname;
      _generator_flx_233 = _genout_urv95283; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
    continue__ll_flx_208_L105626:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
      //_lam_65025_mv_65026<105608> := apply(_generator_flx_233<105615>varname, ());
      _lam_65025_mv_65026  = (_generator_flx_233)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
/*match case 1:|Some file_param_bootflx_65006*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
      if(!andthen(FLX_VNI(_lam_65025_mv_65026)==1, (FLX_NEWP(_lam_65033)(FLX_FPAR_PASS this))) ) goto _ml65028_L105627;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
      //file_param_bootflx_65006<105616>varname = (arg of case 1 of _lam_65025_mv_65026<105608>varname);
      file_param_bootflx_65006 = *((_a14239t_107672*)FLX_VNP(_lam_65025_mv_65026)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3279, cols 11 to 58
      //arg<105617>varname = (join<82705>stackfun (apply((prj38:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<68948>varname)), file_param_bootflx_65006<105616>varname));
      _vI105617_arg = _fI82705_join((*_vI68948_control).INDIR, file_param_bootflx_65006); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3280, cols 11 to 69
      //_ds1_65029<105618>varname = (split_extension<83124>stackfun arg<105617>varname);
      _ds1_65029 = split_extension(_vI105617_arg); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3280, cols 11 to 69
      //apply((prj5:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(loopctl<68949>varname)) = apply((prj0:string^2 -> string), _ds1_65029<105618>varname);
      (*_vI68949_loopctl).path = (_ds1_65029.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3280, cols 11 to 69
      //apply((prj3:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(loopctl<68949>varname)) = apply((prj1:string^2 -> string), _ds1_65029<105618>varname);
      (*_vI68949_loopctl).ext = (_ds1_65029.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3281, cols 11 to 70
      //_ds1_65030<105619>varname = (split1<84047>stackfun apply((prj5:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(loopctl<68949>varname)));
      _ds1_65030 = split1(FLX_FPAR_PASS_ONLY)
      .apply((*_vI68949_loopctl).path) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3281, cols 11 to 70
      //apply((prj2:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(loopctl<68949>varname)) = apply((prj0:string^2 -> string), _ds1_65030<105619>varname);
      (*_vI68949_loopctl).dir = (_ds1_65030.data)[0]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3281, cols 11 to 70
      //apply((prj1:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), *(loopctl<68949>varname)) = apply((prj1:string^2 -> string), _ds1_65030<105619>varname);
      (*_vI68949_loopctl).base = (_ds1_65030.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3284, cols 11 to 46
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68948>varname)) = "";
      *(&_vI68948_control->LINKER_OUTPUT_FILENAME)  = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3285, cols 11 to 30
      //(deref<85463>primfun[string] apply((prj69:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68948>varname)) = "";
      *(&_vI68948_control->STDOUT)  = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3286, cols 11 to 30
      //(deref<85463>primfun[string] apply((prj21:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<68948>varname)) = "";
      *(&_vI68948_control->EXPECT)  = ::std::string(""); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3287, cols 11 to 82
      //_genout_urv96120<105718> := (cal_depvars<67624>stackfun (toolchain<68911>varname, (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname), control<68948>varname, (deref<80488>primfun[record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string))] loopctl<68949>varname)));
      _genout_urv96120  = cal_depvars(FLX_FPAR_PASS_ONLY)
      .apply(_tt107776(_vI68911_toolchain, *_vI68947_config , _vI68948_control, *_vI68949_loopctl )) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3287, cols 11 to 82
      //dvars<105620>varname = _genout_urv96120<105718>varname;
      _vI105620_dvars = _genout_urv96120; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((_fmt_65031<105609>primfun (i<105614>varname, n<105613>varname, file_param_bootflx_65006<105616>varname)), "\x0A")));
      {
      _a14239t_107672 _tmp109343 = ::flx::rtl::strutil::flx_asprintf("Processing [%02d/%02d]: %s",_vI105614_i,_vI105613_n,file_param_bootflx_65006.c_str()) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109343)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2960, cols 1 to 2
      //control<106023> := (deref<80489>primfun[record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list))] control<68948>varname);
      _vI106023_control  = *_vI68948_control ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2011, cols 3 to 5
      //dflt_clang_config<105724>varname = ( ccflags:Empty<80385>varname, debugln:debugln<106024>closure, dynamic_libraries:Empty<80385>varname, header_search_dirs:Empty<80385>varname, library_search_dirs:Empty<80385>varname, macros:Empty<80385>varname, static_libraries:Empty<80385>varname);
      _vI105724_dflt_clang_config = _art107755((void* /*VR_nullptr*/ )0, (FLX_NEWP(_pI106024_debugln)(FLX_FPAR_PASS this)), (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2041, cols 3 to 30
      //calpackages_run<105734>varname = (case 0 of bool);
      _vI105734_calpackages_run = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3289, cols 11 to 68
      //pe<105622>varname = ( runit:runit<106001>closure, system:system<105725>closure);
      _vI105622_pe = _art107780((FLX_NEWP(runit)(FLX_FPAR_PASS this)), (FLX_NEWP(system)(FLX_FPAR_PASS this))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3290, cols 11 to 37
      //result<68889>varname = apply(apply((prj0:record(runit:((unit -> void) -> int),system:(string -> int)) -> (unit -> void) -> int), pe<105622>varname), ehandler<68894>closure);
      _vI68889_result = (_vI105622_pe.runit)->clone()
      ->apply((FLX_NEWP(ehandler)(FLX_FPAR_PASS this))) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3291, cols 11 to 37
      if(!((_vI68889_result == 0)) ) goto endoff_L68959;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3292, cols 11 to 13
      // primcall pre_incr<81467>primproc[int] &i<105614>ref;
      {
      int* _tmp109344 = (int*)&_vI105614_i;
      ++*((_tmp109344));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
      goto continue__ll_flx_208_L105626;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
    _ml65028_L105627:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
      if(!(FLX_VNI(_lam_65025_mv_65026)==0) ) goto _ml65034_L105628;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3308, cols 5 to 9
      goto endoff_L68959;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
    _ml65034_L105628:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3293, cols 9 to 13
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",3293,9,3293,13);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",3293,9,3293,13);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3308, cols 5 to 9
      goto endoff_L68959;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3308, cols 5 to 9
    _ifdoend_bootflx_64999_L68957:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3303, cols 9 to 13
      if(!(((*_vI68948_control).SHOWCODE == 1)) ) goto _ifdoelse_bootflx_65008_L106692;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3299, cols 19 to 37
      //_lam_65035_mv_65037<106694> := (==<80464>primfun[string] (apply((prj10:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ""));
      _lam_65035_mv_65037  = (dvars.use_ext == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3300, cols 16 to 58
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 3300, cols 16 to 58
      if(!(_lam_65035_mv_65037%2==1) ) goto _ml65039_L106695;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3300, cols 16 to 58
      //_urv101641<106693> := (+<14305>primfun ((+<14305>primfun ("// No file ", apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname))), ".(flx|fdoc) found"));
      _urv101641  = (::std::string("// No file ") + dvars.filebase ) + ::std::string(".(flx|fdoc) found") ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3300, cols 16 to 58
      goto _end_hash_307864118;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3300, cols 16 to 58
    _ml65039_L106695:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3300, cols 16 to 58
/*match case 2:any*/
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_632_L106697;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[load] ", (+<14305>primfun ((+<14305>primfun (apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".")), apply((prj10:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109346 = (::std::string("[load] ") + ((dvars.filebase + ::std::string(".") ) + dvars.use_ext ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109346)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 467, cols 5 to 6
    _ifdoelse_std_632_L106697:;
    // # C:/projects/felix/src/packages/io.fdoc: line 468, cols 5 to 22
      //_urv101641<106693> := (raw_load<8396>primfun (+<14305>primfun ((+<14305>primfun (apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".")), apply((prj10:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname))));
      _urv101641  = ::flx::rtl::ioutil::load_file(((dvars.filebase + ::std::string(".") ) + dvars.use_ext )); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3300, cols 16 to 58
    _end_hash_307864118:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3301, cols 13 to 15
      //prg<106688>varname = _urv101641<106693>varname;
      prg = _urv101641; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 440, cols 53 to 69
      // primcall write<8439>primproc (cstdout<8414>varname, prg<106688>varname);
      ::flx::rtl::ioutil::write(stdout,prg);
    // # C:/projects/felix/src/packages/flx.fdoc: line 3303, cols 9 to 13
    _ifdoelse_bootflx_65008_L106692:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3304, cols 9 to 81
      //_genout_urv101650<106699> := (cal_depvars<67624>stackfun (toolchain<68911>varname, (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname), control<68948>varname, (deref<80488>primfun[record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string))] loopctl<68949>varname)));
      _genout_urv101650  = cal_depvars(FLX_FPAR_PASS_ONLY)
      .apply(_tt107776(_vI68911_toolchain, *_vI68947_config , _vI68948_control, *_vI68949_loopctl )) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 3304, cols 9 to 81
      //dvars<106689>varname = _genout_urv101650<106699>varname;
      dvars = _genout_urv101650; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2960, cols 1 to 2
      //control<107004> := (deref<80489>primfun[record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list))] control<68948>varname);
      _vI107004_control  = *_vI68948_control ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2011, cols 3 to 5
      //dflt_clang_config<106705>varname = ( ccflags:Empty<80385>varname, debugln:debugln<107005>closure, dynamic_libraries:Empty<80385>varname, header_search_dirs:Empty<80385>varname, library_search_dirs:Empty<80385>varname, macros:Empty<80385>varname, static_libraries:Empty<80385>varname);
      _vI106705_dflt_clang_config = _art107755((void* /*VR_nullptr*/ )0, (FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS this)), (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2041, cols 3 to 30
      //calpackages_run<106715>varname = (case 0 of bool);
      calpackages_run = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3305, cols 9 to 66
      //pe<106690>varname = ( runit:runit<106982>closure, system:system<106706>closure);
      pe = _art107780((FLX_NEWP(_fI106982_runit)(FLX_FPAR_PASS this)), (FLX_NEWP(_fI106706_system)(FLX_FPAR_PASS this))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3306, cols 9 to 35
      //result<68889>varname = apply(apply((prj0:record(runit:((unit -> void) -> int),system:(string -> int)) -> (unit -> void) -> int), pe<106690>varname), ehandler<68894>closure);
      _vI68889_result = (pe.runit)->clone()
      ->apply((FLX_NEWP(ehandler)(FLX_FPAR_PASS this))) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 3309, cols 1 to 8
    endoff_L68959:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 3310, cols 5 to 18
      //return result<68889>varname;: type int
      return _vI68889_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",3311,3,3311,4); // HACK! 
}

//------------------------------
//FUNCTION <14933>: split: Apply method
void* split::apply(_at107674 const &_arg ){
  _vI14935_x = _arg.data[0];
  d = _arg.data[1];
    // # C:/projects/felix/src/packages/strings.fdoc: line 492, cols 5 to 6
      //pos<92860> := literal[size]("0");
      pos  = 0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 492, cols 5 to 6
      //y<92861> := Empty<80385>varname;
      y  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 492, cols 5 to 6
    start_92847_L92865:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 488, cols 13 to 41
      //aux_mv_2291<92862> := (stl_find_first_of<14557>primfun (x<14935>varname, d<14936>varname, pos<92860>varname));
      aux_mv_2291  = _vI14935_x.find_first_of(d,pos); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 489, cols 9 to 19
/*match case 1:(_sypv_1969_param_std_1970 when (== (_sypv_1969_param_std_1970, stl_npos)))*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 489, cols 9 to 19
      if(!((aux_mv_2291 == ::std::string::npos)) ) goto _ml2293_L92864;
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      //_urv92857<92857> := (Snoc<80397>struct (y<92861>varname, (copyfrom<81377>primfun[size] (x<14935>varname, pos<92860>varname))));
      _urv92857  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(y, ::flx::rtl::strutil::substr(_vI14935_x,pos,_vI14935_x.size())))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 21, cols 3 to 52
      goto _end_inline_rev_split_92868_L92868;
    // # C:/projects/felix/src/packages/strings.fdoc: line 489, cols 9 to 19
    _ml2293_L92864:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 490, cols 9 to 9
/*match case 2:n_param_std_1971*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 490, cols 9 to 9
      //n_param_std_1971<92863>varname = aux_mv_2291<92862>varname;
      n_param_std_1971 = aux_mv_2291; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 492, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/strings.fdoc: line 492, cols 5 to 6
      //y<92861> := (Snoc<80397>struct (y<92861>varname, (substring<81415>primfun[size, size] (x<14935>varname, pos<92860>varname, n_param_std_1971<92863>varname))));
      y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(y, ::flx::rtl::strutil::substr(_vI14935_x,pos,n_param_std_1971)))); //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 492, cols 5 to 6
      //pos<92860> := (+<80900>primfun[size] (n_param_std_1971<92863>varname, literal[size]("1")));
      pos  = n_param_std_1971 + 1 ; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 492, cols 5 to 6
      goto start_92847_L92865;
    // # C:/projects/felix/src/packages/strings.fdoc: line 494, cols 3 to 4
    _end_inline_rev_split_92868_L92868:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<92870>stackfun (_urv92857<92857>varname, Empty<80385>varname));: type void*
      return _fI92870_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_urv92857, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",484,3,484,84); // HACK! 
}

//------------------------------
//FUNCTION <66987>: cxx_depcheck::==: Apply method
 ::flx::rtl::cl_t _fI66987___equals___equals_::apply(_at107697 const &_arg ){
  a = _arg.data[0];
  b = _arg.data[1];
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 399, cols 5 to 6
    start_99091_L99091:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 399, cols 5 to 6
      //apply((prj0:list^2 -> list), ==_mv_66145<66145>varname) = a<66997>varname;
      (_vI66145___equals___equals__mv_66145.data)[0] = a; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 399, cols 5 to 6
      //apply((prj1:list^2 -> list), ==_mv_66145<66145>varname) = b<66998>varname;
      (_vI66145___equals___equals__mv_66145.data)[1] = b; //assign simple
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 391, cols 9 to 20
/*match case 1:(|Empty, |Empty)*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 391, cols 9 to 20
      if(!(FLX_VNI((_vI66145___equals___equals__mv_66145.data)[0])==0 && FLX_VNI((_vI66145___equals___equals__mv_66145.data)[1])==0 ) ) goto _ml66147_L66999;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 391, cols 25 to 36
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 391, cols 9 to 20
    _ml66147_L66999:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 9 to 34
/*match case 2:(|Cons (h1_param_bootflx_66124, t1_param_bootflx_66125), |Cons (h2_param_bootflx_66126, t2_param_bootflx_66127))*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 9 to 34
      if(!(andthen(!!((_vI66145___equals___equals__mv_66145.data)[0]) , (FLX_NEWP(_lam_66149)(FLX_FPAR_PASS this, ptrcxx_depcheck))) && andthen(!!((_vI66145___equals___equals__mv_66145.data)[1]) , (FLX_NEWP(_lam_66150)(FLX_FPAR_PASS this, ptrcxx_depcheck))) ) ) goto _ml66148_L67001;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 32 to 33
      //t2_param_bootflx_66127<66993>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] apply((prj1:list^2 -> list), ==_mv_66145<66145>varname)));
      t2_param_bootflx_66127 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(((_vI66145___equals___equals__mv_66145.data)[1])))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 29 to 30
      //h2_param_bootflx_66126<66994>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] apply((prj1:list^2 -> list), ==_mv_66145<66145>varname)));
      h2_param_bootflx_66126 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(((_vI66145___equals___equals__mv_66145.data)[1])))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 18 to 19
      //t1_param_bootflx_66125<66995>varname = apply((prj1:string * list -> list), (_ctor_arg_Cons<81152>primfun[string] apply((prj0:list^2 -> list), ==_mv_66145<66145>varname)));
      t1_param_bootflx_66125 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(((_vI66145___equals___equals__mv_66145.data)[0])))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 15 to 16
      //h1_param_bootflx_66124<66996>varname = apply((prj0:string * list -> string), (_ctor_arg_Cons<81152>primfun[string] apply((prj0:list^2 -> list), ==_mv_66145<66145>varname)));
      h1_param_bootflx_66124 = (reinterpret<_tt107698>(flx::list::snoc2cons<_a14239t_107672>(((_vI66145___equals___equals__mv_66145.data)[0])))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 395, cols 10 to 14
      if(!(!((h1_param_bootflx_66124 == h2_param_bootflx_66126)) ) ) goto _ifdoend_bootflx_66128_L67000;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 394, cols 12 to 24
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 395, cols 10 to 14
    _ifdoend_bootflx_66128_L67000:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 399, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 399, cols 5 to 6
      //b<66998> := t2_param_bootflx_66127<66993>varname;
      b  = t2_param_bootflx_66127; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 399, cols 5 to 6
      //a<66997> := t1_param_bootflx_66125<66995>varname;
      a  = t1_param_bootflx_66125; //init
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 399, cols 5 to 6
      goto start_99091_L99091;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 9 to 34
    _ml66148_L67001:;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 397, cols 9 to 9
/*match case 3:any*/
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 397, cols 13 to 25
      //return (case 0 of bool);: type  ::flx::rtl::cl_t
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",399,5,399,6); // HACK! 
}

//------------------------------
//FUNCTION <90980>: _init_::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <86075>: func1::_lam_581: Apply method
_art107765 _lam_581::apply(_art107755 const &_arg ){
  a0 = _arg;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1118, cols 12 to 36
      //return apply(s<86073>varname, (tf<86074>varname, a0<86076>varname));: type _art107765
      return ptr_fI86068_func1->_vI86073_s(ptr_fI86068_func1->_vI86074_tf, a0);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",1118,12,1118,36); // HACK! 
}

//------------------------------
//FUNCTION <103184>: +::aux_uncurry: Apply method
void* _fI103184_aux_uncurry::apply(_at107867 const &_arg ){
  _vI103185_x_uncurry = _arg.data[0];
  _vI103186_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_103096_L103193:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<103189> := x_uncurry<103185>varname;
      _vI103189_aux__apos_2_mv_1387  = _vI103185_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI103189_aux__apos_2_mv_1387)==0) ) goto _ml1389_L103188;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<103186>varname;: type void*
      return _vI103186_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L103188:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI103189_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI103192__lam_1391)(FLX_FPAR_PASS this, ptr_fI89126___plus_))) ) goto _ml1390_L103187;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<103190>varname = apply((prj1:list * string^2 -> string^2), (arg of case 1 of aux'2_mv_1387<103189>varname));
      _vI103190_h_param_std_1269 = (*((_tt107856*)FLX_VNP(_vI103189_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<103191>varname = apply((prj0:list * string^2 -> list), (arg of case 1 of aux'2_mv_1387<103189>varname));
      _vI103191_t_param_std_1268 = (*((_tt107856*)FLX_VNP(_vI103189_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<103186> := (Snoc<81403>struct (y<103186>varname, h_param_std_1269<103190>varname));
      _vI103186_y  = FLX_VNR(1, new(*PTF gcp, _tt107856_ptr_map, true) _tt107856 (_tt107856(_vI103186_y, _vI103190_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<103185> := t_param_std_1268<103191>varname;
      _vI103185_x_uncurry  = _vI103191_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_103096_L103193;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L103187:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <66582>: toolchain_gcc_linux::dynamic_library_linker: Apply method
int _fI66582_dynamic_library_linker::apply(_art107763 const &_arg ){
  _vI66585_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 933, cols 5 to 6
      //result<66584>varname = (generic_link_lib_dynamic_uncurry<89472>stackfun (( CCFLAGS:ccflags_for_dynamic_link<66504>varname, CCLINK_DLLIB:linker<66503>varname, EXT_SHARED_OBJ:".so", LINK_STRINGS:(join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66586>varname))), SPEC_EXE_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66586>varname)), apply((prj1:record(dst:(string),srcs:(list)) -> list), spec<66585>varname), apply((prj0:record(dst:(string),srcs:(list)) -> string), spec<66585>varname)));
      _vI66584_result = generic_link_lib_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107813(_art107812(ptrtoolchain_gcc_linux->ccflags_for_dynamic_link, ptrtoolchain_gcc_linux->linker, ::std::string(".so"), _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrtoolchain_gcc_linux->_vI66586_config.library_search_dirs, ptrtoolchain_gcc_linux->_vI66586_config.dynamic_libraries)) /* apply_stack */, ::std::string("-o "), ptrtoolchain_gcc_linux->_vI66586_config.debugln), _vI66585_spec.srcs, _vI66585_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 934, cols 5 to 18
      //return result<66584>varname;: type int
      return _vI66584_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",935,3,935,4); // HACK! 
}

//------------------------------
//FUNCTION <66632>: toolchain_gcc_osx::cxx_dependency_generator: Apply method
_tt107757 _fI66632_cxx_dependency_generator::apply(_art107756 const &_arg ){
  _vI66637_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1012, cols 6 to 7
      //_ds2_66190<66634>varname = (generic_cxx_gen_deps_uncurry<89446>stackfun (( CCDEP:cxx_compiler<66593>varname, CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), "-std=c++11")), "-MM")), INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66677>varname), debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66677>varname)), apply((prj0:record(src:(string)) -> string), spec<66637>varname)));
      _ds2_66190 = generic_cxx_gen_deps_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107802(_art107801(ptrtoolchain_gcc_osx->_vI66593_cxx_compiler, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_gcc_osx->_vI66677_config.ccflags, ::std::string("-std=c++11")))), ::std::string("-MM")))), ptrtoolchain_gcc_osx->_vI66677_config.header_search_dirs, ptrtoolchain_gcc_osx->_vI66677_config.macros, ptrtoolchain_gcc_osx->_vI66677_config.debugln), _vI66637_spec.src)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1012, cols 6 to 7
      //result<66635>varname = apply((prj0:int * string -> int), _ds2_66190<66634>varname);
      _vI66635_result = _ds2_66190.mem_0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1012, cols 6 to 7
      //data<66636>varname = apply((prj1:int * string -> string), _ds2_66190<66634>varname);
      _vI66636_data = _ds2_66190.mem_1; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1013, cols 6 to 25
      //return (result<66635>varname, data<66636>varname);: type _tt107757
      return _tt107757(_vI66635_result, _vI66636_data);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1014,3,1014,4); // HACK! 
}

//------------------------------
//FUNCTION <106859>: flx_processing::cxx_link_shared_exe: Apply method
int _fI106859_cxx_link_shared_exe::apply(_pt107743* const &_arg ){
  _vI106873_ehandler = _arg;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107394>ref;
      {
      __timeb64* _tmp109348 = (__timeb64*)&_vI107394_tv;
      _ftime64_s(((_tmp109348)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv99925<107393> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107394>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107394>varname)), literal[double]("1.0e3")))));
      _vI107393__genout_urv99925  = (static_cast<double>((_vI107394_tv.time))) + ((static_cast<double>((_vI107394_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2545, cols 5 to 25
      //t0<106860>varname = _genout_urv99925<107393>varname;
      _vI106860_t0 = _vI107393__genout_urv99925; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2546, cols 5 to 36
      //pkg_dstrings<106861>varname = Empty<80385>varname;
      _vI106861_pkg_dstrings = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2547, cols 5 to 34
      //pkgs<106862>varname = apply((prj78:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname);
      _vI106862_pkgs = ptrflx_processing->_vI107004_control.extra_pkgs; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2563, cols 5 to 9
      if(!(!list_eq(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_vI106862_pkgs, (void* /*VR_nullptr*/ )0)) /* apply_stack */ ) ) goto _ifdoelse_bootflx_65935_L106877;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_shared_exe] Adding packages ", (str<81092>stackfun pkgs<106862>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109349 = (::std::string("[flx:cxx_link_shared_exe] Adding packages ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106862_pkgs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109349)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<107395>varname = (aux_uncurry<107396>stackfun (apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), Empty<80385>varname));
      _vI107395_r = _fI107396_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697((*ptrflx_processing->_vI68947_config ).FLX_CONFIG_DIRS, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<107395>ref;
      {
      void** _tmp109350 = (void**)&_vI107395_r;
      _rev(((_tmp109350)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2553, cols 7 to 8
      //PKGCONFIG_PATH<106865>varname = r<107395>varname;
      _vI106865_PKGCONFIG_PATH = _vI107395_r; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2554, cols 7 to 126
      //allargs<106866>varname = (join_uncurry<89534>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun ((+<80787>stackfun (PKGCONFIG_PATH<106865>varname, "-r")), "--field=provides_dlib")), "--field=requires_dlibs")), "--keepleftmost")), pkgs<106862>varname)), apply((prj80:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106866_allargs = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_vI106865_PKGCONFIG_PATH, ::std::string("-r"))) /* apply_stack */, ::std::string("--field=provides_dlib"))) /* apply_stack */, ::std::string("--field=requires_dlibs"))) /* apply_stack */, ::std::string("--keepleftmost"))) /* apply_stack */, _vI106862_pkgs)) /* apply_stack */, ptrflx_processing->_vI107004_control.pkgs)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2555, cols 7 to 64
      //_genout_urv99966<107406> := (flx_pkgconfig<68435>stackfun allargs<106866>varname);
      _vI107406__genout_urv99966  = flx_pkgconfig(FLX_FPAR_PASS_ONLY)
      .apply(_vI106866_allargs) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2555, cols 7 to 64
      //_ds2_66100<106867>varname = _genout_urv99966<107406>varname;
      _vI106867__ds2_66100 = _vI107406__genout_urv99966; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2555, cols 7 to 64
      //ret<106868>varname = apply((prj0:int * list -> int), _ds2_66100<106867>varname);
      _vI106868_ret = _vI106867__ds2_66100.mem_0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2555, cols 7 to 64
      //mydstrings<106869>varname = apply((prj1:int * list -> list), _ds2_66100<106867>varname);
      _vI106869_mydstrings = _vI106867__ds2_66100.mem_1; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2561, cols 7 to 11
      if(!(!((_vI106868_ret == 0)) ) ) goto _ifdoelse_bootflx_65937_L106875;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx:cxx_link_shared_exe] Error ", (str<80203>primfun[int] ret<106868>varname))), " executing flx_pkgconfig, args=")), (str<81092>stackfun allargs<106866>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109351 = (((::std::string("[flx:cxx_link_shared_exe] Error ") + ::flx::rtl::strutil::str<int>(_vI106868_ret) ) + ::std::string(" executing flx_pkgconfig, args=") ) + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI106866_allargs) /* apply_stack */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109351)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/control.fdoc: line 124, cols 44 to 73
      // primcall _throw<6273>primproc (cast<81151>primfun[cont, unit -> void] ehandler<106873>varname);
      {
      _a6258t_107873 _tmp109352 = (_a6258t_107873)(_vI106873_ehandler);
      throw ((_tmp109352));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2561, cols 7 to 11
    _ifdoelse_bootflx_65937_L106875:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2562, cols 7 to 31
      //pkg_dstrings<106861>varname = mydstrings<106869>varname;
      _vI106861_pkg_dstrings = _vI106869_mydstrings; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2563, cols 5 to 9
    _ifdoelse_bootflx_65935_L106877:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 22 to 36
      //cxx_link_shared_exe_mv_66102<107408> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107408_cxx_link_shared_exe_mv_66102  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      if(!(_vI107408_cxx_link_shared_exe_mv_66102%2==1) ) goto _ml66104_L107409;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      //_urv99977<107407> := echoln<107006>closure;
      _vI107407__urv99977  = (FLX_NEWP(_pI107006_echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      goto _end_hash_944164368;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
    _ml66104_L107409:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      //_urv99977<107407> := debugln<107005>closure;
      _vI107407__urv99977  = (FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
    _end_hash_944164368:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 22 to 36
      //cxx_link_shared_exe_mv_66102<107412> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107412_cxx_link_shared_exe_mv_66102  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      if(!(_vI107412_cxx_link_shared_exe_mv_66102%2==1) ) goto _ml66104_L107413;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
      goto _end_hash_818839084;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
    _ml66104_L107413:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2569, cols 19 to 77
    _end_hash_818839084:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2572, cols 5 to 6
      //tc<106870>varname = apply(toolchain<68911>varname, ( ccflags:apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), debugln:_urv99977<107407>varname, dynamic_libraries:(join_uncurry<89534>stackfun (apply((prj45:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), pkg_dstrings<106861>varname)), header_search_dirs:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), library_search_dirs:apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), macros:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname), static_libraries:apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), dflt_clang_config<106705>varname)));
      _vI106870_tc = (ptrflx_processing->_vI68911_toolchain)->clone()
      ->apply(_art107755(ptrflx_processing->_vI106705_dflt_clang_config.ccflags, _vI107407__urv99977, _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.LINK_STRINGS, _vI106861_pkg_dstrings)) /* apply_stack */, ptrflx_processing->_vI106705_dflt_clang_config.header_search_dirs, ptrflx_processing->_vI106705_dflt_clang_config.library_search_dirs, ptrflx_processing->_vI106705_dflt_clang_config.macros, ptrflx_processing->_vI106705_dflt_clang_config.static_libraries)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ("Toolchain loaded ", apply(apply((prj25:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<106870>varname), ()))), "\x0A")));
      {
      _a14239t_107672 _tmp109353 = (::std::string("Toolchain loaded ") + (_vI106870_tc.whatami)->clone()
      ->apply() /* general apply */ ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109353)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2578, cols 5 to 57
      //EXT_DYNAMIC_OBJ<106871>varname = apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<106870>varname), ());
      _vI106871_EXT_DYNAMIC_OBJ = (_vI106870_tc.dynamic_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2598, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.CXXONLY == 0)) ) goto _ifdoend_bootflx_65938_L106878;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2589, cols 7 to 8
      //result<106872>varname = apply(apply((prj11:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<106870>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), srcs:(+<80787>stackfun ((+<80787>stackfun ((join_uncurry<89534>stackfun (apply((prj19:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname))), (+<14305>primfun ((+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), "_static_link_thunk")), EXT_DYNAMIC_OBJ<106871>varname)))), (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), EXT_DYNAMIC_OBJ<106871>varname))))));
      _vI106872_result = (_vI106870_tc.dynamic_executable_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(ptrflx_processing->_vI107004_control.DRIVER_OBJS, ptrflx_processing->_vI107004_control.cppos)) /* apply_stack */, (ptrflx_processing->dvars.cpp_filebase + ::std::string("_static_link_thunk") ) + _vI106871_EXT_DYNAMIC_OBJ )) /* apply_stack */, ptrflx_processing->dvars.cpp_filebase + _vI106871_EXT_DYNAMIC_OBJ )) /* apply_stack */)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2598, cols 5 to 9
      goto _ifdoelse_bootflx_65939_L106879;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2598, cols 5 to 9
    _ifdoend_bootflx_65938_L106878:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2596, cols 7 to 10
      //result<106872>varname = apply(apply((prj11:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> record(dst:(string),srcs:(list)) -> int), tc<106870>varname), ( dst:apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), srcs:apply((prj76:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname)));
      _vI106872_result = (_vI106870_tc.dynamic_executable_linker)->clone()
      ->apply(_art107763(ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME, ptrflx_processing->_vI107004_control.cppos)) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2598, cols 5 to 9
    _ifdoelse_bootflx_65939_L106879:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _end_100016_L107422;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107421>ref;
      {
      __timeb64* _tmp109354 = (__timeb64*)&_vI107421_tv;
      _ftime64_s(((_tmp109354)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107420> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107421>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107421>varname)), literal[double]("1.0e3")))));
      _vI107420__genout_urv96124  = (static_cast<double>((_vI107421_tv.time))) + ((static_cast<double>((_vI107421_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107415>varname = (-<80547>primfun[double] (_genout_urv96124<107420>varname, t0<106860>varname));
      _vI107415_elapsed = _vI107420__genout_urv96124 - _vI106860_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107416>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107415>varname, literal[double]("60.0"))));
      _vI107416_minutes = ::std::floor((_vI107415_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107417>varname = (-<80547>primfun[double] (elapsed<107415>varname, (*<80818>primfun[double] (minutes<107416>varname, literal[double]("60.0")))));
      _vI107417_seconds = _vI107415_elapsed - (_vI107416_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107416>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107417>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Dynamic executable link  : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109355 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107416_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107417_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Dynamic executable link  : ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109355)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2599, cols 5 to 78
    _end_100016_L107422:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2602, cols 5 to 9
      if(!(!((_vI106872_result == 0)) ) ) goto _ifdoelse_bootflx_65941_L106881;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] C++ dynamic executable link ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), " failed")), "\x0A")));
      {
      _a14239t_107672 _tmp109356 = ((::std::string("[flx] C++ dynamic executable link ") + ptrflx_processing->_vI107004_control.LINKER_OUTPUT_FILENAME ) + ::std::string(" failed") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109356)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2602, cols 5 to 9
    _ifdoelse_bootflx_65941_L106881:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2603, cols 5 to 18
      //return result<106872>varname;: type int
      return _vI106872_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2604,3,2604,4); // HACK! 
}

//------------------------------
//FUNCTION <68599>: flx_pkgconfig::check_id: Apply method
 ::flx::rtl::cl_t check_id::apply(_a14239t_107672 const &_arg ){
  _vI68606_s = _arg;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 247, cols 7 to 19
      //acc<68601>varname = (case 1 of bool);
      acc = 1; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 365, cols 5 to 6
      //x<96546> := s<68606>varname;
      _vI96546_x  = _vI68606_s; //init
    // # C:/projects/felix/src/packages/strings.fdoc: line 365, cols 5 to 6
      //_genout_urv96541<96541> := iterator'2<96542>closure;
      _genout_urv96541  = (FLX_NEWP(_fI96542_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_pkgconfig)); //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      //_generator_flx_pkgconfig_10995<68602>varname = _genout_urv96541<96541>varname;
      _generator_flx_pkgconfig_10995 = _genout_urv96541; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
    continue__ll_flx_pkgconfig_10990_L68607:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      //check_id_mv_65247<65247> := apply(_generator_flx_pkgconfig_10995<68602>varname, ());
      check_id_mv_65247  = (_generator_flx_pkgconfig_10995)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
/*match case 1:|Some elt_param_bootflx_65179*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      if(!andthen(FLX_VNI(check_id_mv_65247)==1, (FLX_NEWP(_lam_65250)(FLX_FPAR_PASS this, ptrflx_pkgconfig))) ) goto _ml65249_L68608;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      //elt_param_bootflx_65179<68605>varname = (arg of case 1 of check_id_mv_65247<65247>varname);
      elt_param_bootflx_65179 = *((char*)FLX_VNP(check_id_mv_65247)); //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 23 to 50
      //acc<68601>varname = (land<5211>primfun (acc<68601>varname, (lor<5213>primfun ((isidstart<5714>stackfun elt_param_bootflx_65179<68605>varname), (isdigit<5698>primfun elt_param_bootflx_65179<68605>varname)))));
      acc = acc && (isidstart(FLX_FPAR_PASS_ONLY)
      .apply(elt_param_bootflx_65179) /* apply_stack */ || (!!isdigit(elt_param_bootflx_65179)) ) ; //assign simple
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      goto continue__ll_flx_pkgconfig_10990_L68607;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
    _ml65249_L68608:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      if(!(FLX_VNI(check_id_mv_65247)==0) ) goto _ml65251_L68609;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      goto _em65247_L68610;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
    _ml65251_L68609:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
/*match failure*/
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",248,7,248,56);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",248,7,248,56);
;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 248, cols 7 to 56
    _em65247_L68610:;
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 249, cols 7 to 17
      //return acc<68601>varname;: type  ::flx::rtl::cl_t
      return acc;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx_pkgconfig.fdoc",250,5,250,6); // HACK! 
}

//------------------------------
//FUNCTION <86066>: func1: Apply method
_ft107779* func1::apply(_tt107992 const &_arg ){
  linst = _arg.mem_0;
  _vI86153_sym = _arg.mem_1;
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1117, cols 5 to 57
      //_ds2_580<86155>varname = (flx_dlsym<86154>stackfun (linst<86152>varname, sym<86153>varname));
      _ds2_580 = _fI86154_flx_dlsym(FLX_FPAR_PASS linst, _vI86153_sym); //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1117, cols 5 to 57
      //s<86156>varname = apply((prj0:(address * string --> int) * address -> address * string --> int), _ds2_580<86155>varname);
      _vI86156_s = _ds2_580.mem_0; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1117, cols 5 to 57
      //tf<86157>varname = apply((prj1:(address * string --> int) * address -> address), _ds2_580<86155>varname);
      tf = _ds2_580.mem_1; //assign simple
    // # C:/projects/felix/src/packages/dynlink.fdoc: line 1118, cols 5 to 37
      //return _lam_581<86158>closure;: type _ft107779*
      return (FLX_NEWP(_fI86158__lam_581)(FLX_FPAR_PASS this));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/dynlink.fdoc",1119,3,1119,4); // HACK! 
}

//------------------------------
//FUNCTION <66276>: toolchain_msvc_win32: Apply method
_art107765 toolchain_msvc_win32::apply(_art107755 const &_arg ){
  config = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1727, cols 3 to 43
      //base_c_compile_flags<66281>varname = Empty<80385>varname;
      base_c_compile_flags = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1728, cols 3 to 45
      //base_cxx_compile_flags<66282>varname = Empty<80385>varname;
      base_cxx_compile_flags = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93204>varname = (aux_uncurry<93205>stackfun (apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66495>varname), Empty<80385>varname));
      _vI93204_r = _fI93205_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(config.header_search_dirs, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93204>ref;
      {
      void** _tmp109358 = (void**)&_vI93204_r;
      _rev(((_tmp109358)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1746, cols 3 to 82
      //include_switches<66314>varname = r<93204>varname;
      include_switches = _vI93204_r; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1749, cols 3 to 19
      //include_switches<66314>varname = (join_uncurry<89534>stackfun (include_switches<66314>varname, (aux<93273>stackfun (apply((prj0:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66495>varname), Empty<80385>varname))));
      include_switches = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(include_switches, _fI93273_aux(FLX_FPAR_PASS this)
      .apply(_at107697(config.ccflags, (void* /*VR_nullptr*/ )0)) /* apply_stack */)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93307>varname = (aux_uncurry<93308>stackfun (apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66495>varname), Empty<80385>varname));
      _vI93307_r = _fI93308_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(config.macros, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93307>ref;
      {
      void** _tmp109359 = (void**)&_vI93307_r;
      _rev(((_tmp109359)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1752, cols 3 to 60
      //macros<66321>varname = r<93307>varname;
      macros = _vI93307_r; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93326>varname = (aux_uncurry<93327>stackfun ((join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66495>varname), apply((prj6:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66495>varname))), Empty<80385>varname));
      _vI93326_r = _fI93327_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(config.library_search_dirs, config.static_libraries)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93326>ref;
      {
      void** _tmp109360 = (void**)&_vI93326_r;
      _rev(((_tmp109360)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1757, cols 3 to 4
      //static_link_strings<66329>varname = r<93326>varname;
      static_link_strings = _vI93326_r; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<93344>varname = (aux_uncurry<93345>stackfun ((join_uncurry<89534>stackfun (apply((prj4:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66495>varname), apply((prj2:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66495>varname))), Empty<80385>varname));
      r = _fI93345_aux_uncurry(FLX_FPAR_PASS this)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(config.library_search_dirs, config.dynamic_libraries)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<93344>ref;
      {
      void** _tmp109361 = (void**)&r;
      _rev(((_tmp109361)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1762, cols 3 to 4
      //dynamic_link_strings<66337>varname = r<93344>varname;
      dynamic_link_strings = r; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1927, cols 1 to 2
      //return ( c_dependency_generator:c_dependency_generator<66372>closure, c_dynamic_object_compiler:c_dynamic_object_compiler<66413>closure, c_static_object_compiler:c_static_object_compiler<66407>closure, cxx_compiler_vendor:cxx_compiler_vendor<66289>closure, cxx_dependency_generator:cxx_dependency_generator<66379>closure, cxx_dynamic_object_compiler:cxx_dynamic_object_compiler<66431>closure, cxx_static_library_object_compiler:cxx_static_library_object_compiler<66425>closure, cxx_static_object_compiler:cxx_static_object_compiler<66419>closure, debug_flags:debug_flags<66305>closure, dependency_extension:dependency_extension<66291>closure, dependency_parser:dependency_parser<66386>closure, dynamic_executable_linker:dynamic_executable_linker<66466>closure, dynamic_library_extension:dynamic_library_extension<66301>closure, dynamic_library_linker:dynamic_library_linker<66489>closure, dynamic_object_extension:dynamic_object_extension<66297>closure, executable_extension:executable_extension<66293>closure, get_base_c_compile_flags:get_base_c_compile_flags<66307>closure, get_base_cxx_compile_flags:get_base_cxx_compile_flags<66309>closure, host_os:host_os<66285>closure, pathname_separator:pathname_separator<66303>closure, static_executable_linker:static_executable_linker<66443>closure, static_library_extension:static_library_extension<66299>closure, static_library_linker:static_library_linker<66437>closure, static_object_extension:static_object_extension<66295>closure, target_os:target_os<66287>closure, whatami:whatami<66283>closure);: type _art107765
      return _art107765((FLX_NEWP(c_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(c_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(c_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(cxx_compiler_vendor)(FLX_FPAR_PASS this)), (FLX_NEWP(cxx_dependency_generator)(FLX_FPAR_PASS this)), (FLX_NEWP(cxx_dynamic_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(cxx_static_library_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(cxx_static_object_compiler)(FLX_FPAR_PASS this)), (FLX_NEWP(debug_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(dependency_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(dependency_parser)(FLX_FPAR_PASS this)), (FLX_NEWP(dynamic_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(dynamic_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(dynamic_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(dynamic_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(executable_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(get_base_c_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(get_base_cxx_compile_flags)(FLX_FPAR_PASS this)), (FLX_NEWP(host_os)(FLX_FPAR_PASS this)), (FLX_NEWP(pathname_separator)(FLX_FPAR_PASS this)), (FLX_NEWP(static_executable_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(static_library_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(static_library_linker)(FLX_FPAR_PASS this)), (FLX_NEWP(static_object_extension)(FLX_FPAR_PASS this)), (FLX_NEWP(target_os)(FLX_FPAR_PASS this)), (FLX_NEWP(whatami)(FLX_FPAR_PASS this)));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1927,1,1927,2); // HACK! 
}

//------------------------------
//FUNCTION <98243>: map_package_requirements_uncurry::aux_uncurry::_lam_1360: Apply method
 ::flx::rtl::cl_t _fI98243__lam_1360::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 234, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",234,11,234,19); // HACK! 
}

//------------------------------
//FUNCTION <105882>: flx_processing::cxx_link_shared_exe::_lam_66099: Apply method
_a14239t_107672 _lam_66099::apply(_a14239t_107672 const &_arg ){
  _vI105883_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2551, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<105883>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI105883_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2551,11,2551,40); // HACK! 
}

//------------------------------
//FUNCTION <105948>: flx_processing::run_linker_if_required: Apply method
int run_linker_if_required::apply(_pt107743* const &_arg ){
  _vI105951_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2766, cols 5 to 19
      //result<105949>varname = 0;
      _vI105949_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.CCOMPILEIT == 0)) ) goto _ifdoend_bootflx_65958_L105952;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "C++ compilation (and linking and running) skipped by switch")), "\x0A")));
      {
      _a14239t_107672 _tmp109362 = (::std::string("[flx] ") + ::std::string("C++ compilation (and linking and running) skipped by switch") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109362)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
      goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
      goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
    _ifdoend_bootflx_65958_L105952:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2770, cols 7 to 44
      //_genout_urv100336<106576> := (check_binary_uptodate<105934>stackfun ());
      _genout_urv100336  = check_binary_uptodate(FLX_FPAR_PASS ptrflx_processing)
      .apply() /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2770, cols 7 to 44
      //uptodate<105950>varname = _genout_urv100336<106576>varname;
      _vI105950_uptodate = _genout_urv100336; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2789, cols 7 to 11
      if(!_vI105950_uptodate ) goto _ifdoend_bootflx_65960_L105953;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Linking skipped because binary is uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109363 = (::std::string("[flx] ") + ::std::string("Linking skipped because binary is uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109363)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2789, cols 7 to 11
      goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2789, cols 7 to 11
      goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2789, cols 7 to 11
    _ifdoend_bootflx_65960_L105953:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2788, cols 9 to 13
      if(!((ptrflx_processing->_vI106023_control.STATIC == 0)) ) goto _ifdoend_bootflx_65962_L105956;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100344_L106582;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Dynamic linkage")), "\x0A")));
      {
      _a14239t_107672 _tmp109364 = (::std::string("[flx] ") + ::std::string("Dynamic linkage") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109364)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2775, cols 11 to 36
    _end_100344_L106582:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2780, cols 11 to 15
      if(!((ptrflx_processing->_vI106023_control.LINKEXE == 1)) ) goto _ifdoend_bootflx_65964_L105954;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<105735>stackproc  ehandler<105951>varname;
      {
      calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI105951_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2609, cols 5 to 40
      //_genout_urv100345<106583> := (cxx_link_shared_exe<105878>stackfun ehandler<105951>varname);
      _genout_urv100345  = cxx_link_shared_exe(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105951_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2777, cols 13 to 66
      //result<105949>varname = _genout_urv100345<106583>varname;
      _vI105949_result = _genout_urv100345; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2788, cols 9 to 13
      goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2780, cols 11 to 15
    _ifdoend_bootflx_65964_L105954:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<105735>stackproc  ehandler<105951>varname;
      {
      calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI105951_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2537, cols 5 to 44
      //_genout_urv100349<106584> := (cxx_link_shared_library<105855>stackfun ehandler<105951>varname);
      _genout_urv100349  = cxx_link_shared_library(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105951_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2779, cols 13 to 70
      //result<105949>varname = _genout_urv100349<106584>varname;
      _vI105949_result = _genout_urv100349; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2788, cols 9 to 13
      goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2788, cols 9 to 13
    _ifdoend_bootflx_65962_L105956:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100356_L106587;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Static linkage")), "\x0A")));
      {
      _a14239t_107672 _tmp109367 = (::std::string("[flx] ") + ::std::string("Static linkage") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109367)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2782, cols 11 to 35
    _end_100356_L106587:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2787, cols 11 to 15
      if(!((ptrflx_processing->_vI106023_control.STATICLIB == 1)) ) goto _ifdoend_bootflx_65966_L105957;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2784, cols 13 to 48
      //_genout_urv100357<106588> := (cxx_static_library<105924>stackfun ehandler<105951>varname);
      _genout_urv100357  = cxx_static_library(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105951_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2784, cols 13 to 48
      //result<105949>varname = _genout_urv100357<106588>varname;
      _vI105949_result = _genout_urv100357; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2787, cols 11 to 15
      goto _ifdoelse_bootflx_65959_L105961;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2787, cols 11 to 15
    _ifdoend_bootflx_65966_L105957:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<105735>stackproc  ehandler<105951>varname;
      {
      calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI105951_ehandler);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2676, cols 5 to 40
      //_genout_urv100358<106589> := (cxx_link_static_exe<105901>stackfun ehandler<105951>varname);
      _genout_urv100358  = cxx_link_static_exe(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105951_ehandler) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2786, cols 13 to 66
      //result<105949>varname = _genout_urv100358<106589>varname;
      _vI105949_result = _genout_urv100358; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2790, cols 5 to 9
    _ifdoelse_bootflx_65959_L105961:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2791, cols 5 to 18
      //return result<105949>varname;: type int
      return _vI105949_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2792,3,2792,4); // HACK! 
}

//------------------------------
//FUNCTION <93880>: generic_static_library_uncurry::aux_uncurry: Apply method
void* _fI93880_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93881_inp_uncurry = _arg.data[0];
  _vI93882_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93889:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93885> := inp_uncurry<93881>varname;
      _vI93885_aux__apos_2_mv_1381  = _vI93881_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93885_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93884;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93882>varname;: type void*
      return _vI93882_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93884:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93885_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93888__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_static_library_uncurry))) ) goto _ml1384_L93883;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93886>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93885>varname));
      _vI93886_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93885_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93887>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93885>varname));
      _vI93887_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93885_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93882> := (Snoc<80397>struct (out<93882>varname, (quote_arg<16873>stackfun h_param_std_1267<93886>varname)));
      _vI93882_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93882_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI93886_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93881> := t_param_std_1266<93887>varname;
      _vI93881_inp_uncurry  = _vI93887_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93889;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93883:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <66920>: toolchain_clang_osx::pathname_separator: Apply method
_a14239t_107672 _fI66920_pathname_separator::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1466, cols 3 to 42
      //return "/";: type _a14239t_107672
      return ::std::string("/");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1466,3,1466,42); // HACK! 
}

//------------------------------
//FUNCTION <106113>: flx_processing::find_cxx_pkgs::_lam_66025: Apply method
 ::flx::rtl::cl_t _lam_66025::apply(){
    // # C:/projects/felix/src/packages/flx.fdoc: line 2091, cols 11 to 16
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2091,11,2091,16); // HACK! 
}

//------------------------------
//FUNCTION <97800>: flx_pkgconfig::parse_args::aux::_lam_2300: Apply method
 ::flx::rtl::cl_t _lam_2300::apply(){
    // # C:/projects/felix/src/packages/strings.fdoc: line 502, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/strings.fdoc",502,9,502,14); // HACK! 
}

//------------------------------
//FUNCTION <106767>: flx_processing::run_felix_compiler_if_required: Apply method
int _fI106767_run_felix_compiler_if_required::apply(_pt107743* const &_arg ){
  _vI106771_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2172, cols 5 to 19
      //result<106768>varname = 0;
      _vI106768_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2173, cols 5 to 41
      //_genout_urv98643<107159> := (check_cxx_uptodate<106764>stackfun ());
      _vI107159__genout_urv98643  = _fI106764_check_cxx_uptodate(FLX_FPAR_PASS ptrflx_processing)
      .apply() /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2173, cols 5 to 41
      //uptodate<106769>varname = _genout_urv98643<107159>varname;
      _vI106769_uptodate = _vI107159__genout_urv98643; //assign simple
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 3 to 67
      //str_mv_152<107161> := uptodate<106769>varname;
      _vI107161_str_mv_152  = _vI106769_uptodate; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      if(!(_vI107161_str_mv_152%2==1) ) goto _ml154_L107162;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      //_urv98644<107160> := "true";
      _vI107160__urv98644  = ::std::string("true"); //init
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      goto _end_inline_str_98649_L107163;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
    _ml154_L107162:;
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
/*match case 2:any*/
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 32 to 60
      //_urv98644<107160> := "false";
      _vI107160__urv98644  = ::std::string("false"); //init
    // # C:/projects/felix/src/packages/logic.fdoc: line 62, cols 3 to 67
    _end_inline_str_98649_L107163:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_98653_L107166;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("[run_felix_compiler_if_required] Uptodate=", _urv98644<107160>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109370 = (::std::string("[flx] ") + (::std::string("[run_felix_compiler_if_required] Uptodate=") + _vI107160__urv98644 ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109370)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2174, cols 5 to 73
    _end_98653_L107166:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
      if(_vI106769_uptodate) goto _ifdoend_bootflx_65868_L106774;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_98657_L107169;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Running flxg because target is not uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109371 = (::std::string("[flx] ") + ::std::string("Running flxg because target is not uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109371)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2176, cols 7 to 61
    _end_98657_L107169:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107171>ref;
      {
      __timeb64* _tmp109372 = (__timeb64*)&_vI107171_tv;
      _ftime64_s(((_tmp109372)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv98658<107170> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107171>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107171>varname)), literal[double]("1.0e3")))));
      _vI107170__genout_urv98658  = (static_cast<double>((_vI107171_tv.time))) + ((static_cast<double>((_vI107171_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2177, cols 7 to 27
      //t0<106770>varname = _genout_urv98658<107170>varname;
      _vI106770_t0 = _vI107170__genout_urv98658; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 20 to 45
      //run_felix_compiler_if_required_mv_66053<107173> := (==<80201>primfun[int] (apply((prj29:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 0));
      _vI107173_run_felix_compiler_if_required_mv_66053  = (ptrflx_processing->_vI107004_control.FLXG_OPTIMISE == 0); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
      if(!(_vI107173_run_felix_compiler_if_required_mv_66053%2==1) ) goto _ml66055_L107174;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
      //_urv98662<107172> := Empty<80385>varname;
      _vI107172__urv98662  = (void* /*VR_nullptr*/ )0; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
      goto _end_hash_1043992508;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
    _ml66055_L107174:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 148, cols 3 to 44
      //_urv98662<107172> := (Snoc<80397>struct (Empty<80385>varname, "--optimise"));
      _vI107172__urv98662  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("--optimise")))); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2199, cols 17 to 95
    _end_hash_1043992508:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 22 to 36
      //run_felix_compiler_if_required_mv_66058<107177> := (==<80201>primfun[int] (apply((prj20:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), 1));
      _vI107177_run_felix_compiler_if_required_mv_66058  = (ptrflx_processing->_vI107004_control.ECHO == 1); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
      if(!(_vI107177_run_felix_compiler_if_required_mv_66058%2==1) ) goto _ml66060_L107178;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
      //_urv98673<107176> := echoln<107006>closure;
      _vI107176__urv98673  = (FLX_NEWP(_pI107006_echoln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
      goto _end_hash_746011719;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
    _ml66060_L107178:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
      //_urv98673<107176> := debugln<107005>closure;
      _vI107176__urv98673  = (FLX_NEWP(_pI107005_debugln)(FLX_FPAR_PASS ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2200, cols 19 to 77
    _end_hash_746011719:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2201, cols 7 to 8
      //_genout_urv98845<107180> := (run_felix_compiler<68288>stackfun ( AUTOMATON:apply((prj0:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), BUNDLE_DIR:apply((prj1:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> opt), control<107004>varname), CACHE_DIR:apply((prj0:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), COMPILER_PHASE:apply((prj8:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), DOREDUCE:apply((prj17:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), FLAGS:_urv98662<107172>varname, FLXG:apply((prj27:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname), FLXLIBS:apply((prj2:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<106689>varname), FORCE:apply((prj28:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), IMPORTS:(Snoc<80397>struct (apply((prj37:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname), apply((prj67:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), INCLUDE_DIRS:apply((prj3:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), INLINE:apply((prj39:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), OUTPUT_DIR:apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), (deref<80487>primfun[record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string))] config<68947>varname)), STDGRAMMAR:(+<14305>primfun ("@", apply((prj66:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<107004>varname))), TIME:apply((prj9:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), control<107004>varname), VERBOSE:apply((prj6:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<106689>varname), debugln:_urv98673<107176>varname, filebase:apply((prj9:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), use_ext:apply((prj10:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname)));
      _vI107180__genout_urv98845  = run_felix_compiler(FLX_FPAR_PASS_ONLY)
      .apply(_art108159(ptrflx_processing->_vI107004_control.AUTOMATON, ptrflx_processing->_vI107004_control.BUNDLE_DIR, (*ptrflx_processing->_vI68947_config ).FLX_CACHE_DIR, ptrflx_processing->_vI107004_control.COMPILER_PHASE, ptrflx_processing->_vI107004_control.DOREDUCE, _vI107172__urv98662, ptrflx_processing->_vI107004_control.FLXG, ptrflx_processing->dvars.FLX_STD_LIBS, ptrflx_processing->_vI107004_control.FLXG_FORCE, FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrflx_processing->_vI107004_control.IMPORTS, ptrflx_processing->_vI107004_control.STDIMPORT))), (*ptrflx_processing->_vI68947_config ).FLX_LIB_DIRS, ptrflx_processing->_vI107004_control.INLINE, (*ptrflx_processing->_vI68947_config ).FLX_OUTPUT_DIR, ::std::string("@") + ptrflx_processing->_vI107004_control.STDGRAMMAR , ptrflx_processing->_vI107004_control.COMPILER_TIME, ptrflx_processing->dvars.VERBOSE, _vI107176__urv98673, ptrflx_processing->dvars.filebase, ptrflx_processing->dvars.use_ext)) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2201, cols 7 to 8
      //result<106768>varname = _genout_urv98845<107180>varname;
      _vI106768_result = _vI107180__genout_urv98845; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI107004_control.TIME == 1)) ) goto _end_98855_L107188;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<107187>ref;
      {
      __timeb64* _tmp109373 = (__timeb64*)&_vI107187_tv;
      _ftime64_s(((_tmp109373)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<107186> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<107187>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<107187>varname)), literal[double]("1.0e3")))));
      _vI107186__genout_urv96124  = (static_cast<double>((_vI107187_tv.time))) + ((static_cast<double>((_vI107187_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<107181>varname = (-<80547>primfun[double] (_genout_urv96124<107186>varname, t0<106770>varname));
      _vI107181_elapsed = _vI107186__genout_urv96124 - _vI106770_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<107182>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<107181>varname, literal[double]("60.0"))));
      _vI107182_minutes = ::std::floor((_vI107181_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<107183>varname = (-<80547>primfun[double] (elapsed<107181>varname, (*<80818>primfun[double] (minutes<107182>varname, literal[double]("60.0")))));
      _vI107183_seconds = _vI107181_elapsed - (_vI107182_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<107182>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<107183>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Felix flxg   : ", apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109374 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107182_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI107183_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Felix flxg   : ") + ptrflx_processing->dvars.cpp_filebase ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109374)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2202, cols 7 to 57
    _end_98855_L107188:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2207, cols 7 to 11
      if(!((_vI106768_result == 0)) ) goto _ifdoelse_bootflx_65869_L106775;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _end_98860_L107191;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Felix compilation succeeded")), "\x0A")));
      {
      _a14239t_107672 _tmp109375 = (::std::string("[flx] ") + ::std::string("Felix compilation succeeded") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109375)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2204, cols 9 to 47
    _end_98860_L107191:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2078, cols 3 to 4
      //run procedure stackcall calpackages<106716>stackproc  ehandler<106771>varname;
      {
      _pI106716_calpackages(FLX_FPAR_PASS ptrflx_processing)
      .stack_call(_vI106771_ehandler);
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_624_L107196;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[Open_output] ", (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".includes")))), "\x0A")));
      {
      _a14239t_107672 _tmp109377 = (::std::string("[Open_output] ") + (ptrflx_processing->dvars.cpp_filebase + ::std::string(".includes") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109377)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/io.fdoc: line 367, cols 5 to 6
    _ifdoelse_std_624_L107196:;
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98893<107200> := (raw_fopen_output<8432>primfun (+<14305>primfun (apply((prj8:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> string), dvars<106689>varname), ".includes")));
      _vI107200__genout_urv98893  = fopen((ptrflx_processing->dvars.cpp_filebase + ::std::string(".includes") ).c_str(),"wb"); //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98879<107199> := _genout_urv98893<107200>varname;
      _vI107199__genout_urv98879  = _vI107200__genout_urv98893; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98870<107198> := _genout_urv98879<107199>varname;
      _vI107198__genout_urv98870  = _vI107199__genout_urv98879; //init
    // # C:/projects/felix/src/packages/io.fdoc: line 368, cols 5 to 30
      //_genout_urv98872<107195> := _genout_urv98870<107198>varname;
      _vI107195__genout_urv98872  = _vI107198__genout_urv98870; //init
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 836, cols 5 to 43
      //f<107192>varname = _genout_urv98872<107195>varname;
      _vI107192_f = _vI107195__genout_urv98872; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 224, cols 5 to 6
      //run procedure directcall iter_uncurry<89522>directproc (_lam_65109<107193>closure, apply((prj24:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname));
      {
      _pt107730* _tmp109378 = (FLX_NEWP(_pI107193__lam_65109)(FLX_FPAR_PASS this, ptrflx_processing));
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(iter_uncurry)(FLX_FPAR_PASS_ONLY))
          ->call(0, _tt107731((_tmp109378), ptrflx_processing->_vI107004_control.EXTRA_INCLUDE_FILES));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->variant;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller run_felix_compiler_if_required\n");
            fprintf(stderr,"Calls  iter_uncurry\n");
            abort();
          }
          _p=_p->resume();
        }
      }
    // # C:/projects/felix/src/packages/flx_pkgconfig.fdoc: line 841, cols 5 to 13
      // primcall fclose<8437>primproc f<107192>varname;
      (void)fclose(_vI107192_f);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
      goto _ifdoelse_bootflx_65869_L106775;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
      goto _ifdoelse_bootflx_65869_L106775;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
    _ifdoend_bootflx_65868_L106774:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI107004_control.DEBUG_FLX ) goto _ifdoelse_bootflx_65869_L106775;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "skipping flxg because output is uptodate")), "\x0A")));
      {
      _a14239t_107672 _tmp109380 = (::std::string("[flx] ") + ::std::string("skipping flxg because output is uptodate") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109380)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2210, cols 5 to 9
    _ifdoelse_bootflx_65869_L106775:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2211, cols 5 to 18
      //return result<106768>varname;: type int
      return _vI106768_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2212,3,2212,4); // HACK! 
}

//------------------------------
//C FUNC <14855>: lstrip
_a14239t_107672 lstrip( _a14239t_107672 _vI14860_x, _a14239t_107672 _vI14861_e){
  _a5094t_107688 _vI14859_j;
   ::flx::rtl::cl_t _vI14858_found;
  _a5094t_107688 _vI14857_i;
    // # C:/projects/felix/src/packages/strings.fdoc: line 425, cols 5 to 9
      if(!((0 < _vI14860_x.size())) ) goto _ifdoelse_std_1957_L14872;
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
      //i<14857>varname = literal[size]("0");
      _vI14857_i = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
    redo__ll_strings_7234_L14862:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
      if(FLX_UNLIKELY(!(!((_vI14860_x.size() - 1  < _vI14857_i)) ) )) goto _ifdoelse_std_1957_L14872;
    // # C:/projects/felix/src/packages/strings.fdoc: line 414, cols 9 to 26
      //found<14858>varname = (case 0 of bool);
      _vI14858_found = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
      //j<14859>varname = literal[size]("0");
      _vI14859_j = 0; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
    redo__ll_strings_7240_L14863:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
      if(FLX_UNLIKELY(!(!((_vI14861_e.size() - 1  < _vI14859_j)) ) )) goto break__ll_strings_7240_L14867;
    // # C:/projects/felix/src/packages/strings.fdoc: line 418, cols 11 to 15
      if(!((::flx::rtl::strutil::subscript(_vI14860_x,_vI14857_i) == ::flx::rtl::strutil::subscript(_vI14861_e,_vI14859_j))) ) goto _ifdoelse_std_1959_L14865;
    // # C:/projects/felix/src/packages/strings.fdoc: line 417, cols 13 to 24
      //found<14858>varname = (case 1 of bool);
      _vI14858_found = 1; //assign simple
    // # C:/projects/felix/src/packages/strings.fdoc: line 418, cols 11 to 15
    _ifdoelse_std_1959_L14865:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
      // primcall pre_incr<81537>primproc[size] &j<14859>ref;
      {
      _a5094t_107688* _tmp109381 = (_a5094t_107688*)&_vI14859_j;
      ++*((_tmp109381));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
      goto redo__ll_strings_7240_L14863;
    // # C:/projects/felix/src/packages/strings.fdoc: line 419, cols 9 to 13
    break__ll_strings_7240_L14867:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 423, cols 9 to 13
      if(_vI14858_found) goto _ifdoend_std_1960_L14868;
    // # C:/projects/felix/src/packages/strings.fdoc: line 422, cols 11 to 26
      //return (copyfrom<81377>primfun[size] (x<14860>varname, i<14857>varname));: type _a14239t_107672
      return ::flx::rtl::strutil::substr(_vI14860_x,_vI14857_i,_vI14860_x.size());
    // # C:/projects/felix/src/packages/strings.fdoc: line 423, cols 9 to 13
    _ifdoend_std_1960_L14868:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
      // primcall pre_incr<81537>primproc[size] &i<14857>ref;
      {
      _a5094t_107688* _tmp109382 = (_a5094t_107688*)&_vI14857_i;
      ++*((_tmp109382));
      }
    // # C:/projects/felix/src/packages/strings.fdoc: line 424, cols 7 to 11
      goto redo__ll_strings_7234_L14862;
    // # C:/projects/felix/src/packages/strings.fdoc: line 425, cols 5 to 9
    _ifdoelse_std_1957_L14872:;
    // # C:/projects/felix/src/packages/strings.fdoc: line 426, cols 5 to 14
      //return "";: type _a14239t_107672
      return ::std::string("");
}
//------------------------------
//FUNCTION <89850>: gramtime_uncurry::maxtime: Apply method
_ft108125* maxtime::apply(double const &_arg ){
  _vI89853_x = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 84, cols 5 to 77
      //return maxtime'2<89851>closure;: type _ft108125*
      return (FLX_NEWP(_fI89851_maxtime__apos_2)(FLX_FPAR_PASS this, ptrgramtime_uncurry));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",84,5,84,77); // HACK! 
}

//------------------------------
//FUNCTION <66705>: toolchain_clang_linux::static_library_extension: Apply method
_a14239t_107672 _fI66705_static_library_extension::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1223, cols 3 to 49
      //return ".a";: type _a14239t_107672
      return ::std::string(".a");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1223,3,1223,49); // HACK! 
}

//------------------------------
//FUNCTION <106277>: flx_processing::cxx_compile_static1_uncurry::aux_uncurry: Apply method
void* _fI106277_aux_uncurry::apply(_at107697 const &_arg ){
  _vI106278_inp_uncurry = _arg.data[0];
  _vI106279_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L106286:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<106282> := inp_uncurry<106278>varname;
      _vI106282_aux__apos_2_mv_1381  = _vI106278_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI106282_aux__apos_2_mv_1381)==0) ) goto _ml1383_L106281;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<106279>varname;: type void*
      return _vI106279_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L106281:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI106282_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI106285__lam_1385)(FLX_FPAR_PASS this, ptrcxx_compile_static1_uncurry, ptrflx_processing))) ) goto _ml1384_L106280;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<106283>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<106282>varname));
      _vI106283_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI106282_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<106284>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<106282>varname));
      _vI106284_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI106282_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<106279> := (Snoc<80397>struct (out<106279>varname, (_lam_66080<106048>stackfun h_param_std_1267<106283>varname)));
      _vI106279_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI106279_out, _lam_66080(ptrcxx_compile_static1_uncurry, ptrflx_processing)
      .apply(_vI106283_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<106278> := t_param_std_1266<106284>varname;
      _vI106278_inp_uncurry  = _vI106284_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L106286;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L106280:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93748>: generic_cxx_compile_for_dynamic_uncurry::aux_uncurry: Apply method
void* _fI93748_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93749_inp_uncurry = _arg.data[0];
  _vI93750_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93757:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93753> := inp_uncurry<93749>varname;
      _vI93753_aux__apos_2_mv_1381  = _vI93749_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93753_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93752;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93750>varname;: type void*
      return _vI93750_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93752:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93753_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93756__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_compile_for_dynamic_uncurry))) ) goto _ml1384_L93751;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93754>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93753>varname));
      _vI93754_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93753_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93755>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93753>varname));
      _vI93755_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93753_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93750> := (Snoc<80397>struct (out<93750>varname, (mkinc<68173>stackfun h_param_std_1267<93754>varname)));
      _vI93750_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93750_out, mkinc(_vI93754_h_param_std_1267)))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93749> := t_param_std_1266<93755>varname;
      _vI93749_inp_uncurry  = _vI93755_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93757;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93751:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <93571>: generic_dependency_parser::_lam_65410: Apply method
 ::flx::rtl::cl_t _lam_65410::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 146, cols 48 to 53
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",146,48,146,53); // HACK! 
}

//------------------------------
//FUNCTION <106863>: flx_processing::cxx_link_shared_exe::_lam_66099: Apply method
_a14239t_107672 _fI106863__lam_66099::apply(_a14239t_107672 const &_arg ){
  _vI106864_s = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2551, cols 11 to 40
      //return (+<14305>primfun ("--path+=", s<106864>varname));: type _a14239t_107672
      return ::std::string("--path+=") + _vI106864_s ;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2551,11,2551,40); // HACK! 
}

//------------------------------
//FUNCTION <99081>: cxx_depcheck::==::_lam_66149: Apply method
 ::flx::rtl::cl_t _lam_66149::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 392, cols 9 to 20
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",392,9,392,20); // HACK! 
}

//------------------------------
//FUNCTION <93335>: toolchain_msvc_win32::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI93335__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <66947>: toolchain_clang_osx::c_dynamic_object_compiler: Apply method
int _fI66947_c_dynamic_object_compiler::apply(_art107759 const &_arg ){
  _vI66950_spec = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1539, cols 5 to 6
      //result<66949>varname = (generic_cxx_compile_for_dynamic_uncurry<89512>stackfun (( CCFLAGS:(Snoc<80397>struct ((Snoc<80397>struct (base_c_compile_flags<66898>varname, "-fvisibility=hidden")), "-fPIC")), CCOBJ_DLLIB:c_compiler<66894>varname, INCLUDE_DIRS:apply((prj3:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), MACROS:apply((prj5:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> list), config<66979>varname), SPEC_OBJ_FILENAME:"-o ", debugln:apply((prj1:record(ccflags:(list),debugln:(string -> void),dynamic_libraries:(list),header_search_dirs:(list),library_search_dirs:(list),macros:(list),static_libraries:(list)) -> string -> void), config<66979>varname)), apply((prj1:record(dst:(string),src:(string)) -> string), spec<66950>varname), apply((prj0:record(dst:(string),src:(string)) -> string), spec<66950>varname)));
      _vI66949_result = generic_cxx_compile_for_dynamic_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107807(_art107806(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(ptrtoolchain_clang_osx->_vI66898_base_c_compile_flags, ::std::string("-fvisibility=hidden")))), ::std::string("-fPIC")))), ptrtoolchain_clang_osx->_vI66894_c_compiler, ptrtoolchain_clang_osx->_vI66979_config.header_search_dirs, ptrtoolchain_clang_osx->_vI66979_config.macros, ::std::string("-o "), ptrtoolchain_clang_osx->_vI66979_config.debugln), _vI66950_spec.src, _vI66950_spec.dst)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1540, cols 5 to 18
      //return result<66949>varname;: type int
      return _vI66949_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1541,3,1541,4); // HACK! 
}

//------------------------------
//FUNCTION <91700>: process_config_text_uncurry::iterator'2::_lam_1566: Apply method
 ::flx::rtl::cl_t _fI91700__lam_1566::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",678,11,678,19); // HACK! 
}

//------------------------------
//FUNCTION <96260>: list_eq::_lam_1561: Apply method
 ::flx::rtl::cl_t _lam_1561::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 640, cols 20 to 30
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",640,20,640,30); // HACK! 
}

//------------------------------
//FUNCTION <67624>: cal_depvars: Apply method
_art107775 cal_depvars::apply(_tt107776 const &_arg ){
  toolchain = _arg.mem_0;
  _vI67699_config = _arg.mem_1;
  control = _arg.mem_2;
  loopctl = _arg.mem_3;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1705, cols 3 to 5
      //dflt_clang_config<67639>varname = ( ccflags:Empty<80385>varname, debugln:debugln<85462>closure, dynamic_libraries:Empty<80385>varname, header_search_dirs:Empty<80385>varname, library_search_dirs:Empty<80385>varname, macros:Empty<80385>varname, static_libraries:Empty<80385>varname);
      dflt_clang_config = _art107755((void* /*VR_nullptr*/ )0, (FLX_NEWP(debugln)(FLX_FPAR_PASS this)), (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0, (void* /*VR_nullptr*/ )0); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1706, cols 3 to 39
      //tc<67640>varname = apply(toolchain<67698>varname, dflt_clang_config<67639>varname);
      _vI67640_tc = (toolchain)->clone()
      ->apply(dflt_clang_config) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1707, cols 3 to 47
      //EXT_LIB<67641>varname = apply(apply((prj21:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<67640>varname), ());
      EXT_LIB = (_vI67640_tc.static_library_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1708, cols 3 to 50
      //EXT_SHLIB<67642>varname = apply(apply((prj12:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<67640>varname), ());
      EXT_SHLIB = (_vI67640_tc.dynamic_library_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1709, cols 3 to 43
      //EXT_EXE<67643>varname = apply(apply((prj15:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<67640>varname), ());
      EXT_EXE = (_vI67640_tc.executable_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1710, cols 3 to 53
      //EXT_STATIC_OBJ<67644>varname = apply(apply((prj23:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<67640>varname), ());
      EXT_STATIC_OBJ = (_vI67640_tc.static_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1711, cols 3 to 54
      //EXT_SHARED_OBJ<67645>varname = apply(apply((prj14:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> string), tc<67640>varname), ());
      EXT_SHARED_OBJ = (_vI67640_tc.dynamic_object_extension)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1712, cols 3 to 38
      //DEBUG_FLAGS<67646>varname = apply(apply((prj8:record(c_dependency_generator:(record(src:(string)) -> int * string),c_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),c_static_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_compiler_vendor:(unit -> string),cxx_dependency_generator:(record(src:(string)) -> int * string),cxx_dynamic_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_library_object_compiler:(record(dst:(string),src:(string)) -> int),cxx_static_object_compiler:(record(dst:(string),src:(string)) -> int),debug_flags:(unit -> list),dependency_extension:(unit -> string),dependency_parser:(string -> list),dynamic_executable_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_library_extension:(unit -> string),dynamic_library_linker:(record(dst:(string),srcs:(list)) -> int),dynamic_object_extension:(unit -> string),executable_extension:(unit -> string),get_base_c_compile_flags:(unit -> list),get_base_cxx_compile_flags:(unit -> list),host_os:(unit -> string),pathname_separator:(unit -> string),static_executable_linker:(record(dst:(string),srcs:(list)) -> int),static_library_extension:(unit -> string),static_library_linker:(record(dst:(string),srcs:(list)) -> int),static_object_extension:(unit -> string),target_os:(unit -> string),whatami:(unit -> string)) -> unit -> list), tc<67640>varname), ());
      DEBUG_FLAGS = (_vI67640_tc.debug_flags)->clone()
      ->apply() /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95792_L95792;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Felix package manager config directories are ", (str<81092>stackfun apply((prj1:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> list), config<67699>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109385 = (::std::string("[flx] ") + (::std::string("Felix package manager config directories are ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI67699_config.FLX_CONFIG_DIRS) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109385)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1715, cols 3 to 86
    _end_95792_L95792:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95796_L95796;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("FileDir= ", apply((prj2:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109386 = (::std::string("[flx] ") + (::std::string("FileDir= ") + loopctl.dir ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109386)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1718, cols 3 to 37
    _end_95796_L95796:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 25 to 42
      //cal_depvars_mv_65773<95798> := (==<80464>primfun[string] (apply((prj2:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname), "."));
      cal_depvars_mv_65773  = (loopctl.dir == ::std::string(".")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 22 to 106
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 22 to 106
      if(!(cal_depvars_mv_65773%2==1) ) goto _ml65775_L95799;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 22 to 106
      //_urv95797<95797> := apply((prj1:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname);
      _urv95797  = loopctl.base; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 22 to 106
      goto _end_hash_809729167;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 22 to 106
    _ml65775_L95799:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 22 to 106
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 22 to 106
      //_urv95797<95797> := (join<82705>stackfun (apply((prj2:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname), apply((prj1:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname)));
      _urv95797  = _fI82705_join(loopctl.dir, loopctl.base); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 22 to 106
    _end_hash_809729167:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1719, cols 3 to 107
      //rel_filebase<67649>varname = _urv95797<95797>varname;
      rel_filebase = _urv95797; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95805_L95805;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Rel_filebase= ", rel_filebase<67649>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109387 = (::std::string("[flx] ") + (::std::string("Rel_filebase= ") + rel_filebase ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109387)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1720, cols 3 to 43
    _end_95805_L95805:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95809_L95809;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Given Extension=", apply((prj3:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109388 = (::std::string("[flx] ") + (::std::string("Given Extension=") + loopctl.ext ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109388)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1721, cols 3 to 44
    _end_95809_L95809:;
    // # C:/projects/felix/src/packages/algebra.fdoc: line 269, cols 3 to 48
      //cal_depvars_mv_65778<95811> := (lnot<5216>primfun (==<80464>primfun[string] (apply((prj3:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname), "")));
      cal_depvars_mv_65778  = !((loopctl.ext == ::std::string(""))) ; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1733, cols 17 to 6
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1733, cols 17 to 6
      if(!(cal_depvars_mv_65778%2==1) ) goto _ml65780_L95812;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1733, cols 17 to 6
      //_urv95810<95810> := apply((prj3:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname);
      _urv95810  = loopctl.ext; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1733, cols 17 to 6
      goto _end_hash_33559530;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1733, cols 17 to 6
    _ml65780_L95812:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1733, cols 17 to 6
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1726, cols 8 to 81
      //flxt<95813>varname = (dfiletime<82503>stackfun ((+<14305>primfun (rel_filebase<67649>varname, ".flx")), (neg<82781>primfun[double] literal[double]("1.0"))));
      flxt = dfiletime(rel_filebase + ::std::string(".flx") , - 1.0 ); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1727, cols 8 to 83
      //fdoct<95814>varname = (dfiletime<82503>stackfun ((+<14305>primfun (rel_filebase<67649>varname, ".fdoc")), (neg<82781>primfun[double] literal[double]("1.0"))));
      fdoct = dfiletime(rel_filebase + ::std::string(".fdoc") , - 1.0 ); //assign simple
    // # C:/projects/felix/src/packages/algebra.fdoc: line 391, cols 3 to 31
      //_lam_65782_mv_65784<95815> := (<<82604>primfun[double] (fdoct<95814>varname, flxt<95813>varname));
      _lam_65782_mv_65784  = (fdoct < flxt); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
      if(!(_lam_65782_mv_65784%2==1) ) goto _ml65786_L95816;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
      //_urv95810<95810> := ".flx";
      _urv95810  = ::std::string(".flx"); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
      goto _end_hash_33559530;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
    _ml65786_L95816:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
/*match case 2:any*/
    // # C:/projects/felix/src/packages/algebra.fdoc: line 391, cols 3 to 31
      //_lam_65782_mv_65789<95817> := (<<82604>primfun[double] (flxt<95813>varname, fdoct<95814>varname));
      _lam_65782_mv_65789  = (flxt < fdoct); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
      if(!(_lam_65782_mv_65789%2==1) ) goto _ml65791_L95818;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
      //_urv95810<95810> := ".fdoc";
      _urv95810  = ::std::string(".fdoc"); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
      goto _end_hash_33559530;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
    _ml65791_L95818:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1731, cols 10 to 17
      //_urv95810<95810> := "";
      _urv95810  = ::std::string(""); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1733, cols 17 to 6
    _end_hash_33559530:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1734, cols 3 to 4
      //use_ext<67660>varname = _urv95810<95810>varname;
      use_ext = _urv95810; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95824_L95824;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Computed Extension=", use_ext<67660>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109389 = (::std::string("[flx] ") + (::std::string("Computed Extension=") + use_ext ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109389)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1735, cols 3 to 43
    _end_95824_L95824:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1736, cols 3 to 63
      //filebase<67661>varname = (mk_absolute_filename<17011>stackfun rel_filebase<67649>varname);
      filebase = mk_absolute_filename(rel_filebase); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95828_L95828;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("User program base is ", filebase<67661>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109390 = (::std::string("[flx] ") + (::std::string("User program base is ") + filebase ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109390)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1737, cols 3 to 46
    _end_95828_L95828:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1739, cols 11 to 29
      //cal_depvars_mv_65794<95830> := apply((prj1:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> opt), *(control<67700>varname));
      cal_depvars_mv_65794  = (*control).BUNDLE_DIR; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1740, cols 7 to 14
/*match case 1:|Some dir_param_bootflx_65704*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1740, cols 7 to 14
      if(!andthen(FLX_VNI(cal_depvars_mv_65794)==1, (FLX_NEWP(_lam_65797)(FLX_FPAR_PASS this))) ) goto _ml65796_L95832;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1740, cols 12 to 14
      //dir_param_bootflx_65704<95831>varname = (arg of case 1 of cal_depvars_mv_65794<95830>varname);
      dir_param_bootflx_65704 = *((_a14239t_107672*)FLX_VNP(cal_depvars_mv_65794)); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 34 to 42
      //basename_mv_726<95835> := (split1<84047>stackfun filebase<67661>varname);
      _vI95835_basename_mv_726  = split1(FLX_FPAR_PASS_ONLY)
      .apply(filebase) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 51 to 53
/*match case 1:(any, b_param_std_675)*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 53 to 53
      //b_param_std_675<95836>varname = apply((prj1:string^2 -> string), basename_mv_726<95835>varname);
      _vI95836_b_param_std_675 = (_vI95835_basename_mv_726.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1743, cols 5 to 19
      //_urv95829<95829> := (join<82705>stackfun (dir_param_bootflx_65704<95831>varname, b_param_std_675<95836>varname));
      _urv95829  = _fI82705_join(dir_param_bootflx_65704, _vI95836_b_param_std_675); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1743, cols 5 to 19
      goto _end_hash_511643078;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1740, cols 7 to 14
    _ml65796_L95832:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1741, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1741, cols 7 to 11
      if(!(FLX_VNI(cal_depvars_mv_65794)==0) ) goto _ml65798_L95833;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1741, cols 18 to 42
      //cal_depvars_mv_65800<95837> := (==<80464>primfun[string] (apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), config<67699>varname), ""));
      cal_depvars_mv_65800  = (_vI67699_config.FLX_OUTPUT_DIR == ::std::string("")); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1742, cols 15 to 61
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1742, cols 15 to 61
      if(!(cal_depvars_mv_65800%2==1) ) goto _ml65802_L95838;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1742, cols 15 to 61
      //_urv95829<95829> := filebase<67661>varname;
      _urv95829  = filebase; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1742, cols 15 to 61
      goto _end_hash_511643078;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1742, cols 15 to 61
    _ml65802_L95838:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1742, cols 15 to 61
/*match case 2:any*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<95840> := filebase<67661>varname;
      _vI95840_f  = filebase; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI95840_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L95841;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<95840>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<95840>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<95840>varname, 2))));
      _vI95840_f = ::flx::rtl::strutil::substr(_vI95840_f,0,1) + ::flx::rtl::strutil::substr(_vI95840_f,2,_vI95840_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L95844;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L95841:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI95840_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L95844;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<95840>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<95840>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<95840>varname, 2))));
      _vI95840_f = (::flx::rtl::strutil::substr(_vI95840_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI95840_f,2,_vI95840_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L95844:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI95840_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L95846;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<95840>varname = (copyfrom<81959>primfun[int] (f<95840>varname, 1));
      _vI95840_f = ::flx::rtl::strutil::substr(_vI95840_f,1,_vI95840_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L95846:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<95839>varname = (join<82705>stackfun (apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), config<67699>varname), f<95840>varname));
      _vI95839_k = _fI82705_join(_vI67699_config.FLX_OUTPUT_DIR, _vI95840_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 294, cols 7 to 15
      //_urv95829<95829> := k<95839>varname;
      _urv95829  = _vI95839_k; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 294, cols 7 to 15
      goto _end_hash_511643078;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1741, cols 7 to 11
    _ml65798_L95833:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1743, cols 5 to 19
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1743, cols 5 to 19
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1743,5,1743,19);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1743,5,1743,19);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1743, cols 5 to 19
    _end_hash_511643078:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1744, cols 3 to 14
      //cpp_filebase<67669>varname = _urv95829<95829>varname;
      cpp_filebase = _urv95829; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95852_L95852;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("C++ file base is ", cpp_filebase<67669>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109392 = (::std::string("[flx] ") + (::std::string("C++ file base is ") + cpp_filebase ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109392)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1745, cols 3 to 46
    _end_95852_L95852:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1753, cols 3 to 7
      if(!(!(((*control).CHECK_EXPECT == 0))  && ((*control).STDOUT == ::std::string("")) ) ) goto _ifdoelse_bootflx_65706_L67703;
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<95862> := (+<14305>primfun (filebase<67661>varname, ".stdout"));
      _vI95862_f  = filebase + ::std::string(".stdout") ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI95862_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L95863;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<95862>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<95862>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<95862>varname, 2))));
      _vI95862_f = ::flx::rtl::strutil::substr(_vI95862_f,0,1) + ::flx::rtl::strutil::substr(_vI95862_f,2,_vI95862_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L95866;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L95863:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI95862_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L95866;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<95862>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<95862>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<95862>varname, 2))));
      _vI95862_f = (::flx::rtl::strutil::substr(_vI95862_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI95862_f,2,_vI95862_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L95866:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI95862_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L95868;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<95862>varname = (copyfrom<81959>primfun[int] (f<95862>varname, 1));
      _vI95862_f = ::flx::rtl::strutil::substr(_vI95862_f,1,_vI95862_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L95868:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<95860>varname = (join<82705>stackfun (apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), config<67699>varname), f<95862>varname));
      _vI95860_k = _fI82705_join(_vI67699_config.FLX_OUTPUT_DIR, _vI95862_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1751, cols 5 to 77
      //(deref<85463>primfun[string] apply((prj69:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = k<95860>varname;
      *(&control->STDOUT)  = _vI95860_k; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _ifdoelse_bootflx_65706_L67703;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set stdout to ", apply((prj69:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109393 = (::std::string("[flx] ") + (::std::string("Set stdout to ") + (*control).STDOUT ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109393)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1753, cols 3 to 7
      goto _ifdoelse_bootflx_65706_L67703;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1753, cols 3 to 7
    _ifdoelse_bootflx_65706_L67703:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1763, cols 3 to 7
      if(!(!(((*control).SET_STDIN == 0))  && ((*control).STDIN == ::std::string("")) ) ) goto _ifdoelse_bootflx_65708_L67709;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1756, cols 5 to 41
      //stdin_name<67670>varname = (+<14305>primfun (filebase<67661>varname, ".input"));
      stdin_name = filebase + ::std::string(".input") ; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 255, cols 5 to 20
      // primcall stat<16970>primproc (stdin_name<67670>varname, &b<95899>ref, &err<95900>ref);
      {
      _a16948t_107830* _tmp109394 = (_a16948t_107830*)&_vI95899_b;
      int* _tmp109395 = (int*)&_vI95900_err;
      *((_tmp109395))=_stat64(stdin_name.c_str(),((_tmp109394)));
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 15 to 22
      //filetime_mv_748<95902> := (==<80201>primfun[int] (err<95900>varname, 0));
      _vI95902_filetime_mv_748  = (_vI95900_err == 0); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      if(!(_vI95902_filetime_mv_748%2==1) ) goto _ml750_L95901;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      //_urv95882<95898> := (mtime<82837>primfun[Win32, stat_t, mode_t] &b<95899>ref);
      _vI95898__urv95882  = (double)(((_a16948t_107830*)&_vI95899_b)->st_mtime); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      goto _end_inline_filetime_95889_L95903;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
    _ml750_L95901:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      //_urv95882<95898> := literal[double]("0.0");
      _vI95898__urv95882  = 0.0; //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 257, cols 3 to 4
    _end_inline_filetime_95889_L95903:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1761, cols 5 to 9
      if(!(!((_vI95898__urv95882 == 0.0)) ) ) goto _ifdoend_bootflx_65709_L67704;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1758, cols 7 to 33
      //(deref<85463>primfun[string] apply((prj68:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = stdin_name<67670>varname;
      *(&control->STDIN)  = stdin_name; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1761, cols 5 to 9
      goto _ifdoelse_bootflx_65710_L67707;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1761, cols 5 to 9
    _ifdoend_bootflx_65709_L67704:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1760, cols 5 to 82
      if(!(((*control).INREGEX == ::std::string(""))) ) goto _ifdoelse_bootflx_65710_L67707;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("WARNING: computed input file ", stdin_name<67670>varname)), " doesn't exist!")), "\x0A")));
      {
      _a14239t_107672 _tmp109396 = ((::std::string("WARNING: computed input file ") + stdin_name ) + ::std::string(" doesn't exist!") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109396)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1761, cols 5 to 9
    _ifdoelse_bootflx_65710_L67707:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _ifdoelse_bootflx_65708_L67709;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set stdin to ", apply((prj68:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109397 = (::std::string("[flx] ") + (::std::string("Set stdin to ") + (*control).STDIN ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109397)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1763, cols 3 to 7
      goto _ifdoelse_bootflx_65708_L67709;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1763, cols 3 to 7
    _ifdoelse_bootflx_65708_L67709:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1777, cols 3 to 7
      if(!(!(((*control).CHECK_EXPECT == 0))  && ((*control).EXPECT == ::std::string("")) ) ) goto _ifdoelse_bootflx_65714_L67715;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1770, cols 5 to 43
      //expect_name<67671>varname = (+<14305>primfun (filebase<67661>varname, ".expect"));
      expect_name = filebase + ::std::string(".expect") ; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 255, cols 5 to 20
      // primcall stat<16970>primproc (expect_name<67671>varname, &b<95921>ref, &err<95922>ref);
      {
      _a16948t_107830* _tmp109398 = (_a16948t_107830*)&_vI95921_b;
      int* _tmp109399 = (int*)&_vI95922_err;
      *((_tmp109399))=_stat64(expect_name.c_str(),((_tmp109398)));
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 15 to 22
      //filetime_mv_748<95924> := (==<80201>primfun[int] (err<95922>varname, 0));
      filetime_mv_748  = (_vI95922_err == 0); //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      if(!(filetime_mv_748%2==1) ) goto _ml750_L95923;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      //_urv95882<95920> := (mtime<82837>primfun[Win32, stat_t, mode_t] &b<95921>ref);
      _urv95882  = (double)(((_a16948t_107830*)&_vI95921_b)->st_mtime); //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      goto _end_inline_filetime_95889_L95925;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
    _ml750_L95923:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
/*match case 2:any*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 256, cols 12 to 47
      //_urv95882<95920> := literal[double]("0.0");
      _urv95882  = 0.0; //init
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 257, cols 3 to 4
    _end_inline_filetime_95889_L95925:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1775, cols 5 to 9
      if(!(!((_urv95882 == 0.0)) ) ) goto _ifdoend_bootflx_65715_L67710;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1772, cols 7 to 35
      //(deref<85463>primfun[string] apply((prj21:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = expect_name<67671>varname;
      *(&control->EXPECT)  = expect_name; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1775, cols 5 to 9
      goto _ifdoelse_bootflx_65716_L67713;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1775, cols 5 to 9
    _ifdoend_bootflx_65715_L67710:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1774, cols 5 to 84
      if(!(((*control).INREGEX == ::std::string(""))) ) goto _ifdoelse_bootflx_65716_L67713;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("WARNING: computed expect file ", expect_name<67671>varname)), " doesn't exist!")), "\x0A")));
      {
      _a14239t_107672 _tmp109400 = ((::std::string("WARNING: computed expect file ") + expect_name ) + ::std::string(" doesn't exist!") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109400)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1775, cols 5 to 9
    _ifdoelse_bootflx_65716_L67713:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _ifdoelse_bootflx_65714_L67715;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Set expect to ", apply((prj21:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109401 = (::std::string("[flx] ") + (::std::string("Set expect to ") + (*control).EXPECT ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109401)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1777, cols 3 to 7
      goto _ifdoelse_bootflx_65714_L67715;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1777, cols 3 to 7
    _ifdoelse_bootflx_65714_L67715:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1785, cols 3 to 7
      if(!((loopctl.path == ::std::string(""))) ) goto _ifdoelse_bootflx_65720_L67717;
    // # C:/projects/felix/src/packages/io.fdoc: line 440, cols 53 to 69
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("No such felix program: ", apply((prj5:record(argno:(int),base:(string),dir:(string),ext:(string),grab:(int),path:(string),progname:(string)) -> string), loopctl<67701>varname))), "\x0A")));
      {
      _a14239t_107672 _tmp109402 = (::std::string("No such felix program: ") + loopctl.path ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109402)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1784, cols 5 to 20
      // primcall exit<7637>primproc 1;
      ::std::exit(1);
    // # C:/projects/felix/src/packages/flx.fdoc: line 1785, cols 3 to 7
    _ifdoelse_bootflx_65720_L67717:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1788, cols 11 to 29
      //cal_depvars_mv_65805<95939> := apply((prj1:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> opt), *(control<67700>varname));
      cal_depvars_mv_65805  = (*control).BUNDLE_DIR; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1789, cols 7 to 14
/*match case 1:|Some dir_param_bootflx_65721*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1789, cols 7 to 14
      if(!andthen(FLX_VNI(cal_depvars_mv_65805)==1, (FLX_NEWP(_lam_65808)(FLX_FPAR_PASS this))) ) goto _ml65807_L95941;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1789, cols 12 to 14
      //dir_param_bootflx_65721<95940>varname = (arg of case 1 of cal_depvars_mv_65805<95939>varname);
      dir_param_bootflx_65721 = *((_a14239t_107672*)FLX_VNP(cal_depvars_mv_65805)); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 34 to 42
      //basename_mv_726<95944> := (split1<84047>stackfun filebase<67661>varname);
      _vI95944_basename_mv_726  = split1(FLX_FPAR_PASS_ONLY)
      .apply(filebase) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 51 to 53
/*match case 1:(any, b_param_std_675)*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 53 to 53
      //b_param_std_675<95945>varname = apply((prj1:string^2 -> string), basename_mv_726<95944>varname);
      _vI95945_b_param_std_675 = (_vI95944_basename_mv_726.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1790, cols 5 to 76
      //_urv95938<95938> := (join<82705>stackfun (dir_param_bootflx_65721<95940>varname, (+<14305>primfun (b_param_std_675<95945>varname, "_interface.flx"))));
      _urv95938  = _fI82705_join(dir_param_bootflx_65721, _vI95945_b_param_std_675 + ::std::string("_interface.flx") ); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1790, cols 5 to 76
      goto _end_hash_192301976;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1789, cols 7 to 14
    _ml65807_L95941:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1790, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1790, cols 7 to 11
      if(!(FLX_VNI(cal_depvars_mv_65805)==0) ) goto _ml65809_L95942;
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<95947> := (+<14305>primfun (filebase<67661>varname, "_interface.flx"));
      _vI95947_f  = filebase + ::std::string("_interface.flx") ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI95947_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L95948;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<95947>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<95947>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<95947>varname, 2))));
      _vI95947_f = ::flx::rtl::strutil::substr(_vI95947_f,0,1) + ::flx::rtl::strutil::substr(_vI95947_f,2,_vI95947_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L95951;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L95948:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI95947_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L95951;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<95947>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<95947>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<95947>varname, 2))));
      _vI95947_f = (::flx::rtl::strutil::substr(_vI95947_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI95947_f,2,_vI95947_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L95951:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI95947_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L95953;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<95947>varname = (copyfrom<81959>primfun[int] (f<95947>varname, 1));
      _vI95947_f = ::flx::rtl::strutil::substr(_vI95947_f,1,_vI95947_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L95953:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<95946>varname = (join<82705>stackfun (apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), config<67699>varname), f<95947>varname));
      _vI95946_k = _fI82705_join(_vI67699_config.FLX_OUTPUT_DIR, _vI95947_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 294, cols 7 to 15
      //_urv95938<95938> := k<95946>varname;
      _urv95938  = _vI95946_k; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 294, cols 7 to 15
      goto _end_hash_192301976;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1790, cols 7 to 11
    _ml65809_L95942:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1790, cols 5 to 76
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1790, cols 5 to 76
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1790,5,1790,76);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1790,5,1790,76);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1790, cols 5 to 76
    _end_hash_192301976:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1791, cols 3 to 13
      //apply((prj32:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)) = _urv95938<95938>varname;
      (*control).FLX_INTERFACE_FILENAME = _urv95938; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95959_L95959;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Flx interface filename is ", apply((prj32:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109404 = (::std::string("[flx] ") + (::std::string("Flx interface filename is ") + (*control).FLX_INTERFACE_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109404)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1792, cols 3 to 74
    _end_95959_L95959:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1795, cols 11 to 29
      //cal_depvars_mv_65811<95961> := apply((prj1:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> opt), *(control<67700>varname));
      cal_depvars_mv_65811  = (*control).BUNDLE_DIR; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1796, cols 7 to 14
/*match case 1:|Some dir_param_bootflx_65722*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1796, cols 7 to 14
      if(!andthen(FLX_VNI(cal_depvars_mv_65811)==1, (FLX_NEWP(_lam_65814)(FLX_FPAR_PASS this))) ) goto _ml65813_L95963;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1796, cols 12 to 14
      //dir_param_bootflx_65722<95962>varname = (arg of case 1 of cal_depvars_mv_65811<95961>varname);
      dir_param_bootflx_65722 = *((_a14239t_107672*)FLX_VNP(cal_depvars_mv_65811)); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 34 to 42
      //basename_mv_726<95966> := (split1<84047>stackfun filebase<67661>varname);
      _vI95966_basename_mv_726  = split1(FLX_FPAR_PASS_ONLY)
      .apply(filebase) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 51 to 53
/*match case 1:(any, b_param_std_675)*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 53 to 53
      //b_param_std_675<95967>varname = apply((prj1:string^2 -> string), basename_mv_726<95966>varname);
      _vI95967_b_param_std_675 = (_vI95966_basename_mv_726.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1797, cols 5 to 66
      //_urv95960<95960> := (join<82705>stackfun (dir_param_bootflx_65722<95962>varname, (+<14305>primfun (b_param_std_675<95967>varname, ".hpp"))));
      _urv95960  = _fI82705_join(dir_param_bootflx_65722, _vI95967_b_param_std_675 + ::std::string(".hpp") ); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1797, cols 5 to 66
      goto _end_hash_544812631;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1796, cols 7 to 14
    _ml65813_L95963:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1797, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1797, cols 7 to 11
      if(!(FLX_VNI(cal_depvars_mv_65811)==0) ) goto _ml65815_L95964;
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<95969> := (+<14305>primfun (filebase<67661>varname, ".hpp"));
      _vI95969_f  = filebase + ::std::string(".hpp") ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI95969_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L95970;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<95969>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<95969>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<95969>varname, 2))));
      _vI95969_f = ::flx::rtl::strutil::substr(_vI95969_f,0,1) + ::flx::rtl::strutil::substr(_vI95969_f,2,_vI95969_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L95973;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L95970:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI95969_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L95973;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<95969>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<95969>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<95969>varname, 2))));
      _vI95969_f = (::flx::rtl::strutil::substr(_vI95969_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI95969_f,2,_vI95969_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L95973:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI95969_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L95975;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<95969>varname = (copyfrom<81959>primfun[int] (f<95969>varname, 1));
      _vI95969_f = ::flx::rtl::strutil::substr(_vI95969_f,1,_vI95969_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L95975:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<95968>varname = (join<82705>stackfun (apply((prj4:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), config<67699>varname), f<95969>varname));
      _vI95968_k = _fI82705_join(_vI67699_config.FLX_OUTPUT_DIR, _vI95969_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 294, cols 7 to 15
      //_urv95960<95960> := k<95968>varname;
      _urv95960  = _vI95968_k; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 294, cols 7 to 15
      goto _end_hash_544812631;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1797, cols 7 to 11
    _ml65815_L95964:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1797, cols 5 to 66
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1797, cols 5 to 66
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1797,5,1797,66);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1797,5,1797,66);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1797, cols 5 to 66
    _end_hash_544812631:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1798, cols 3 to 13
      //apply((prj11:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)) = _urv95960<95960>varname;
      (*control).CXX_INTERFACE_FILENAME = _urv95960; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_95981_L95981;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("C++ interface filename is ", apply((prj32:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109406 = (::std::string("[flx] ") + (::std::string("C++ interface filename is ") + (*control).FLX_INTERFACE_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109406)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1799, cols 3 to 74
    _end_95981_L95981:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1864, cols 3 to 7
      if(!(((*control).LINKER_OUTPUT_FILENAME == ::std::string(""))) ) goto _ifdoend_bootflx_65723_L67728;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1820, cols 5 to 9
      if(!(((*control).LINKIT == 1) || ((*control).RUNONLY == 1) ) ) goto _ifdoend_bootflx_65725_L67724;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1813, cols 7 to 11
      if(!(((*control).STATICLIB == 1)) ) goto _ifdoend_bootflx_65727_L67718;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1804, cols 9 to 33
      //f<67682>varname = (+<14305>primfun (filebase<67661>varname, EXT_LIB<67641>varname));
      _vI67682_f = filebase + EXT_LIB ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1820, cols 5 to 9
      goto _ifdoelse_bootflx_65726_L67727;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1813, cols 7 to 11
    _ifdoend_bootflx_65727_L67718:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1812, cols 7 to 30
      if(!(((*control).STATIC == 0)) ) goto _ifdoend_bootflx_65729_L67721;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1810, cols 9 to 13
      if(!(((*control).LINKEXE == 1)) ) goto _ifdoend_bootflx_65731_L67719;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1807, cols 11 to 30
      //f<67682>varname = (+<14305>primfun (filebase<67661>varname, EXT_LIB<67641>varname));
      _vI67682_f = filebase + EXT_LIB ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1820, cols 5 to 9
      goto _ifdoelse_bootflx_65726_L67727;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1810, cols 9 to 13
    _ifdoend_bootflx_65731_L67719:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1809, cols 11 to 32
      //f<67682>varname = (+<14305>primfun (filebase<67661>varname, EXT_SHLIB<67642>varname));
      _vI67682_f = filebase + EXT_SHLIB ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1820, cols 5 to 9
      goto _ifdoelse_bootflx_65726_L67727;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1812, cols 7 to 30
    _ifdoend_bootflx_65729_L67721:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1812, cols 9 to 28
      //f<67682>varname = (+<14305>primfun (filebase<67661>varname, EXT_EXE<67643>varname));
      _vI67682_f = filebase + EXT_EXE ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1820, cols 5 to 9
      goto _ifdoelse_bootflx_65726_L67727;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1820, cols 5 to 9
    _ifdoend_bootflx_65725_L67724:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1819, cols 7 to 11
      if(!(((*control).STATIC == 1)) ) goto _ifdoend_bootflx_65733_L67725;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1816, cols 9 to 35
      //f<67682>varname = (+<14305>primfun (filebase<67661>varname, EXT_STATIC_OBJ<67644>varname));
      _vI67682_f = filebase + EXT_STATIC_OBJ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1819, cols 7 to 11
      goto _ifdoelse_bootflx_65726_L67727;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1819, cols 7 to 11
    _ifdoend_bootflx_65733_L67725:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1818, cols 9 to 35
      //f<67682>varname = (+<14305>primfun (filebase<67661>varname, EXT_SHARED_OBJ<67645>varname));
      _vI67682_f = filebase + EXT_SHARED_OBJ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1820, cols 5 to 9
    _ifdoelse_bootflx_65726_L67727:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 295, cols 3 to 4
      //f<95985> := f<67682>varname;
      _vI95985_f  = _vI67682_f; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI95985_f,1,3) == ::std::string(":\\"))) ) goto _ifdoend_bootflx_65059_L95986;
    // # C:/projects/felix/src/packages/flx.fdoc: line 285, cols 33 to 55
      //f<95985>varname = (+<14305>primfun ((substring<81958>primfun[int, int] (f<95985>varname, 0, 1)), (copyfrom<81959>primfun[int] (f<95985>varname, 2))));
      _vI95985_f = ::flx::rtl::strutil::substr(_vI95985_f,0,1) + ::flx::rtl::strutil::substr(_vI95985_f,2,_vI95985_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
      goto _ifdoelse_bootflx_65060_L95989;
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoend_bootflx_65059_L95986:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 7 to 61
      if(!((::flx::rtl::strutil::subscript(_vI95985_f,1) == ::flx::rtl::strutil::subscript(::std::string(":"),0))) ) goto _ifdoelse_bootflx_65060_L95989;
    // # C:/projects/felix/src/packages/flx.fdoc: line 286, cols 33 to 60
      //f<95985>varname = (+<14305>primfun ((+<14305>primfun ((substring<81958>primfun[int, int] (f<95985>varname, 0, 1)), "\")), (copyfrom<81959>primfun[int] (f<95985>varname, 2))));
      _vI95985_f = (::flx::rtl::strutil::substr(_vI95985_f,0,1) + ::std::string("\\") ) + ::flx::rtl::strutil::substr(_vI95985_f,2,_vI95985_f.size()) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 287, cols 7 to 11
    _ifdoelse_bootflx_65060_L95989:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
      if(!((::flx::rtl::strutil::subscript(_vI95985_f,0) == ::flx::rtl::strutil::subscript(::std::string("\\"),0))) ) goto _ifdoelse_bootflx_65064_L95991;
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 32 to 43
      //f<95985>varname = (copyfrom<81959>primfun[int] (f<95985>varname, 1));
      _vI95985_f = ::flx::rtl::strutil::substr(_vI95985_f,1,_vI95985_f.size()); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 288, cols 7 to 49
    _ifdoelse_bootflx_65064_L95991:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 292, cols 7 to 34
      //k<95983>varname = (join<82705>stackfun (apply((prj0:record(FLX_CACHE_DIR:(string),FLX_CONFIG_DIRS:(list),FLX_HOME_DIR:(string),FLX_LIB_DIRS:(list),FLX_OUTPUT_DIR:(string),FLX_PROFILE_DIR:(string),FLX_RTL_DIRS:(list),FLX_SHARE_DIR:(string),FLX_TARGET_DIR:(string)) -> string), config<67699>varname), f<95985>varname));
      k = _fI82705_join(_vI67699_config.FLX_CACHE_DIR, _vI95985_f); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1821, cols 5 to 73
      //apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)) = k<95983>varname;
      (*control).LINKER_OUTPUT_FILENAME = k; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Felx writing output binary to ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109407 = (::std::string("[flx] ") + (::std::string("Felx writing output binary to ") + (*control).LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109407)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1864, cols 3 to 7
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1864, cols 3 to 7
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1864, cols 3 to 7
    _ifdoend_bootflx_65723_L67728:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      if(!(((*control).OUTP_hash_48688961 == 1)) ) goto _ifdoend_bootflx_65735_L67739;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1842, cols 5 to 9
      if(!(((*control).LINKIT == 1) || ((*control).RUNONLY == 1) ) ) goto _ifdoend_bootflx_65737_L67735;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1835, cols 7 to 11
      if(!(((*control).STATICLIB == 1)) ) goto _ifdoend_bootflx_65739_L67729;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1826, cols 9 to 50
      // primcall +=<14301>primproc (&(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)), EXT_LIB<67641>varname);
      {
      _a14239t_107672* _tmp109408 = &(*(&control->LINKER_OUTPUT_FILENAME) );
      ((_tmp109408))->append(EXT_LIB);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1835, cols 7 to 11
    _ifdoend_bootflx_65739_L67729:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1834, cols 7 to 52
      if(!(((*control).STATIC == 0)) ) goto _ifdoend_bootflx_65741_L67732;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1832, cols 9 to 13
      if(!(((*control).LINKEXE == 1)) ) goto _ifdoend_bootflx_65743_L67730;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1829, cols 11 to 52
      // primcall +=<14301>primproc (&(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)), EXT_EXE<67643>varname);
      {
      _a14239t_107672* _tmp109409 = &(*(&control->LINKER_OUTPUT_FILENAME) );
      ((_tmp109409))->append(EXT_EXE);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1832, cols 9 to 13
    _ifdoend_bootflx_65743_L67730:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1831, cols 11 to 54
      // primcall +=<14301>primproc (&(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)), EXT_SHLIB<67642>varname);
      {
      _a14239t_107672* _tmp109410 = &(*(&control->LINKER_OUTPUT_FILENAME) );
      ((_tmp109410))->append(EXT_SHLIB);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1834, cols 7 to 52
    _ifdoend_bootflx_65741_L67732:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1834, cols 9 to 50
      // primcall +=<14301>primproc (&(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)), EXT_EXE<67643>varname);
      {
      _a14239t_107672* _tmp109411 = &(*(&control->LINKER_OUTPUT_FILENAME) );
      ((_tmp109411))->append(EXT_EXE);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1842, cols 5 to 9
    _ifdoend_bootflx_65737_L67735:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1841, cols 7 to 11
      if(!(((*control).STATIC == 1)) ) goto _ifdoend_bootflx_65745_L67736;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1838, cols 9 to 57
      // primcall +=<14301>primproc (&(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)), EXT_STATIC_OBJ<67644>varname);
      {
      _a14239t_107672* _tmp109412 = &(*(&control->LINKER_OUTPUT_FILENAME) );
      ((_tmp109412))->append(EXT_STATIC_OBJ);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1841, cols 7 to 11
    _ifdoend_bootflx_65745_L67736:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1840, cols 9 to 57
      // primcall +=<14301>primproc (&(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)), EXT_SHARED_OBJ<67645>varname);
      {
      _a14239t_107672* _tmp109413 = &(*(&control->LINKER_OUTPUT_FILENAME) );
      ((_tmp109413))->append(EXT_SHARED_OBJ);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
    _ifdoend_bootflx_65735_L67739:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      if(!(((*control).OUTPUT_DIRECTORY_SPECIFIED == 1)) ) goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 34 to 42
      //basename_mv_726<96006> := (split1<84047>stackfun apply((prj0:string^2 -> string), (split_extension<83124>stackfun filebase<67661>varname)));
      _vI96006_basename_mv_726  = split1(FLX_FPAR_PASS_ONLY)
      .apply((split_extension(filebase).data)[0]) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 51 to 53
/*match case 1:(any, b_param_std_675)*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 53 to 53
      //b_param_std_675<96007>varname = apply((prj1:string^2 -> string), basename_mv_726<96006>varname);
      _vI96007_b_param_std_675 = (_vI96006_basename_mv_726.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1844, cols 5 to 75
      //basename<67683>varname = b_param_std_675<96007>varname;
      basename = _vI96007_b_param_std_675; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 5 to 9
      if(!(((*control).LINKIT == 1) || ((*control).RUNONLY == 1) ) ) goto _ifdoend_bootflx_65749_L67746;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1856, cols 7 to 11
      if(!(((*control).STATICLIB == 1)) ) goto _ifdoend_bootflx_65751_L67740;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1847, cols 9 to 94
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = (+<14305>primfun ((join<82705>stackfun (apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)), basename<67683>varname)), EXT_LIB<67641>varname));
      *(&control->LINKER_OUTPUT_FILENAME)  = _fI82705_join((*control).LINKER_OUTPUT_FILENAME, basename) + EXT_LIB ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1856, cols 7 to 11
    _ifdoend_bootflx_65751_L67740:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1855, cols 7 to 96
      if(!(((*control).STATIC == 0)) ) goto _ifdoend_bootflx_65753_L67743;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1853, cols 9 to 13
      if(!(((*control).LINKEXE == 1)) ) goto _ifdoend_bootflx_65755_L67741;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1850, cols 11 to 96
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = (+<14305>primfun ((join<82705>stackfun (apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)), basename<67683>varname)), EXT_EXE<67643>varname));
      *(&control->LINKER_OUTPUT_FILENAME)  = _fI82705_join((*control).LINKER_OUTPUT_FILENAME, basename) + EXT_EXE ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1853, cols 9 to 13
    _ifdoend_bootflx_65755_L67741:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1852, cols 11 to 98
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = (+<14305>primfun ((join<82705>stackfun (apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)), basename<67683>varname)), EXT_SHLIB<67642>varname));
      *(&control->LINKER_OUTPUT_FILENAME)  = _fI82705_join((*control).LINKER_OUTPUT_FILENAME, basename) + EXT_SHLIB ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1855, cols 7 to 96
    _ifdoend_bootflx_65753_L67743:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1855, cols 9 to 94
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = (+<14305>primfun ((join<82705>stackfun (apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)), basename<67683>varname)), EXT_EXE<67643>varname));
      *(&control->LINKER_OUTPUT_FILENAME)  = _fI82705_join((*control).LINKER_OUTPUT_FILENAME, basename) + EXT_EXE ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 5 to 9
    _ifdoend_bootflx_65749_L67746:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1862, cols 7 to 11
      if(!(((*control).STATIC == 1)) ) goto _ifdoend_bootflx_65757_L67747;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1859, cols 9 to 101
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = (+<14305>primfun ((join<82705>stackfun (apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)), basename<67683>varname)), EXT_STATIC_OBJ<67644>varname));
      *(&control->LINKER_OUTPUT_FILENAME)  = _fI82705_join((*control).LINKER_OUTPUT_FILENAME, basename) + EXT_STATIC_OBJ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1863, cols 3 to 9
      goto _ifdoelse_bootflx_65724_L67753;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1862, cols 7 to 11
    _ifdoend_bootflx_65757_L67747:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1861, cols 9 to 101
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = (+<14305>primfun ((join<82705>stackfun (apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)), basename<67683>varname)), EXT_SHARED_OBJ<67645>varname));
      *(&control->LINKER_OUTPUT_FILENAME)  = _fI82705_join((*control).LINKER_OUTPUT_FILENAME, basename) + EXT_SHARED_OBJ ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1864, cols 3 to 7
    _ifdoelse_bootflx_65724_L67753:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1865, cols 3 to 100
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = (mk_absolute_filename<17011>stackfun apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)));
      *(&control->LINKER_OUTPUT_FILENAME)  = mk_absolute_filename((*control).LINKER_OUTPUT_FILENAME); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1867, cols 10 to 28
      //cal_depvars_mv_65817<96047> := apply((prj1:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> opt), *(control<67700>varname));
      cal_depvars_mv_65817  = (*control).BUNDLE_DIR; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1868, cols 7 to 14
/*match case 1:|Some dir_param_bootflx_65759*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1868, cols 7 to 14
      if(!andthen(FLX_VNI(cal_depvars_mv_65817)==1, (FLX_NEWP(_lam_65820)(FLX_FPAR_PASS this))) ) goto _ml65819_L96049;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1868, cols 12 to 14
      //dir_param_bootflx_65759<96048>varname = (arg of case 1 of cal_depvars_mv_65817<96047>varname);
      dir_param_bootflx_65759 = *((_a14239t_107672*)FLX_VNP(cal_depvars_mv_65817)); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 34 to 42
      //basename_mv_726<96052> := (split1<84047>stackfun apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)));
      basename_mv_726  = split1(FLX_FPAR_PASS_ONLY)
      .apply((*control).LINKER_OUTPUT_FILENAME) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 51 to 53
/*match case 1:(any, b_param_std_675)*/
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 76, cols 53 to 53
      //b_param_std_675<96053>varname = apply((prj1:string^2 -> string), basename_mv_726<96052>varname);
      b_param_std_675 = (basename_mv_726.data)[1]; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 4 to 47
      //_urv96046<96046> := (join<82705>stackfun (dir_param_bootflx_65759<96048>varname, b_param_std_675<96053>varname));
      _urv96046  = _fI82705_join(dir_param_bootflx_65759, b_param_std_675); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 4 to 47
      goto _end_hash_1068146759;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1868, cols 7 to 14
    _ml65819_L96049:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 7 to 11
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 7 to 11
      if(!(FLX_VNI(cal_depvars_mv_65817)==0) ) goto _ml65821_L96050;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 4 to 47
      //_urv96046<96046> := apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname));
      _urv96046  = (*control).LINKER_OUTPUT_FILENAME; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 4 to 47
      goto _end_hash_1068146759;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 7 to 11
    _ml65821_L96050:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 4 to 47
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 4 to 47
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1869,4,1869,47);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1869,4,1869,47);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1869, cols 4 to 47
    _end_hash_1068146759:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1870, cols 3 to 13
      //(deref<85463>primfun[string] apply((prj41:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &string), control<67700>varname)) = _urv96046<96046>varname;
      *(&control->LINKER_OUTPUT_FILENAME)  = _urv96046; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_96059_L96059;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Linker output filename ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)))))), "\x0A")));
      {
      _a14239t_107672 _tmp109415 = (::std::string("[flx] ") + (::std::string("Linker output filename ") + (*control).LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109415)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1871, cols 3 to 71
    _end_96059_L96059:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1874, cols 3 to 32
      //args<67689>varname = apply((prj73:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67700>varname));
      _vI67689_args = (*control).USER_ARGS; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_96063_L96063;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Target program args = ", (str<81092>stackfun args<67689>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109416 = (::std::string("[flx] ") + (::std::string("Target program args = ") + str(FLX_FPAR_PASS_ONLY)
      .apply(_vI67689_args) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109416)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1875, cols 3 to 45
    _end_96063_L96063:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1884, cols 3 to 7
      if(!(((*control).NOSTDLIB == 1)) ) goto _ifdoend_bootflx_65760_L67754;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1878, cols 5 to 35
      //FLX_STD_LIBS<67690>varname = Empty<80385>varname;
      FLX_STD_LIBS = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1884, cols 3 to 7
      goto _ifdoelse_bootflx_65761_L67758;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1884, cols 3 to 7
    _ifdoend_bootflx_65760_L67754:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1880, cols 11 to 31
      //cal_depvars_mv_65822<65822> := apply((prj33:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67700>varname));
      cal_depvars_mv_65822  = (*control).FLX_STD_LIBS; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1881, cols 7 to 12
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1881, cols 7 to 12
      if(!(FLX_VNI(cal_depvars_mv_65822)==0) ) goto _ml65824_L67755;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1881, cols 17 to 51
      //FLX_STD_LIBS<67690>varname = (Snoc<80397>struct (Empty<80385>varname, "std"));
      FLX_STD_LIBS = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("std")))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1881, cols 7 to 12
      goto _ifdoelse_bootflx_65761_L67758;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1881, cols 7 to 12
    _ml65824_L67755:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1882, cols 7 to 7
/*match case 2:x_param_bootflx_65763*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 1882, cols 7 to 7
      //x_param_bootflx_65763<67691>varname = cal_depvars_mv_65822<65822>varname;
      x_param_bootflx_65763 = cal_depvars_mv_65822; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1882, cols 12 to 27
      //FLX_STD_LIBS<67690>varname = x_param_bootflx_65763<67691>varname;
      FLX_STD_LIBS = x_param_bootflx_65763; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1884, cols 3 to 7
    _ifdoelse_bootflx_65761_L67758:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_96074_L96074;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Felix standard (cached) libraries: ", (str<81092>stackfun FLX_STD_LIBS<67690>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109417 = (::std::string("[flx] ") + (::std::string("Felix standard (cached) libraries: ") + str(FLX_FPAR_PASS_ONLY)
      .apply(FLX_STD_LIBS) /* apply_stack */ ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109417)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1885, cols 3 to 68
    _end_96074_L96074:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1887, cols 3 to 71
      //STDGRAMMAR<67692>varname = (mk_absolute_filename<17011>stackfun apply((prj66:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)));
      STDGRAMMAR = mk_absolute_filename((*control).STDGRAMMAR); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1888, cols 3 to 73
      //GRAMMAR_DIR<67693>varname = (mk_absolute_filename<17011>stackfun apply((prj36:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)));
      GRAMMAR_DIR = mk_absolute_filename((*control).GRAMMAR_DIR); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1889, cols 3 to 69
      //AUTOMATON<67694>varname = (mk_absolute_filename<17011>stackfun apply((prj0:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), *(control<67700>varname)));
      AUTOMATON = mk_absolute_filename((*control).AUTOMATON); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1891, cols 3 to 32
      //DEBUGSWITCH<67695>varname = Empty<80385>varname;
      DEBUGSWITCH = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1892, cols 3 to 78
      if(!(((*control).DEBUG_COMPILER == 1)) ) goto _ifdoelse_bootflx_65765_L67760;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1892, cols 38 to 72
      //DEBUGSWITCH<67695>varname = (Snoc<80397>struct (Empty<80385>varname, "--debug"));
      DEBUGSWITCH = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("--debug")))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1892, cols 3 to 78
    _ifdoelse_bootflx_65765_L67760:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1894, cols 3 to 31
      //STATIC_ENV<67696>varname = Empty<80385>varname;
      STATIC_ENV = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1895, cols 3 to 88
      if(!(((*control).DEBUG_COMPILER == 1)) ) goto _ifdoelse_bootflx_65767_L67762;
    // # C:/projects/felix/src/packages/lists.fdoc: line 154, cols 5 to 21
      //o<96085>varname = Empty<80385>varname;
      _vI96085_o = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
      if(!((0 < 2)) ) goto _ifdoelse_std_1250_L96081;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      //i<96086>varname = (-<80305>primfun[int] ((_ctor_int<81465>primfun[size] arrayindexcount<84335>varname[bool]), 1));
      _vI96086_i = (static_cast<int>(2)/*int.flx: ctor*/) - 1 ; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_incr<81467>primproc[int] &i<96086>ref;
      {
      int* _tmp109418 = (int*)&_vI96086_i;
      ++*((_tmp109418));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
    redo__ll_lists_5098_L96084:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      if(FLX_UNLIKELY(!((0 < _vI96086_i)) )) goto _ifdoelse_std_1250_L96081;
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      // primcall pre_decr<84277>primproc[int] &i<96086>ref;
      {
      int* _tmp109419 = (int*)&_vI96086_i;
      --*((_tmp109419));
      }
    // # C:/projects/felix/src/packages/lists.fdoc: line 157, cols 9 to 23
      //o<96085>varname = (Snoc<80397>struct (o<96085>varname, apply(aprj(i<96086>varname : bool), ("env", "FLX_DEBUG=1"))));
      _vI96085_o = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI96085_o, (_at107674(::std::string("env"), ::std::string("FLX_DEBUG=1")).data)[reinterpret< ::flx::rtl::cl_t>(_vI96086_i)]))); //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 158, cols 7 to 11
      goto redo__ll_lists_5098_L96084;
    // # C:/projects/felix/src/packages/lists.fdoc: line 159, cols 5 to 9
    _ifdoelse_std_1250_L96081:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1895, cols 38 to 82
      //STATIC_ENV<67696>varname = o<96085>varname;
      STATIC_ENV = _vI96085_o; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1895, cols 3 to 88
    _ifdoelse_bootflx_65767_L67762:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_96092_L96092;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("RECOMPILE=", (str<80203>primfun[int] apply((prj56:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), *(control<67700>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp109420 = (::std::string("[flx] ") + (::std::string("RECOMPILE=") + ::flx::rtl::strutil::str<int>((*control).RECOMPILE) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109420)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1897, cols 3 to 47
    _end_96092_L96092:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _end_96096_L96096;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("RUNIT=", (str<80203>primfun[int] apply((prj58:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> int), *(control<67700>varname))))))), "\x0A")));
      {
      _a14239t_107672 _tmp109421 = (::std::string("[flx] ") + (::std::string("RUNIT=") + ::flx::rtl::strutil::str<int>((*control).RUNIT) ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109421)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1898, cols 3 to 39
    _end_96096_L96096:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1900, cols 3 to 30
      //VERBOSE<67697>varname = Empty<80385>varname;
      VERBOSE = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1907, cols 3 to 7
      if(!(((*control).DEBUG_COMPILER == 1)) ) goto _ifdoend_bootflx_65768_L67763;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1902, cols 5 to 29
      //VERBOSE<67697>varname = (Snoc<80397>struct (Empty<80385>varname, "-v"));
      VERBOSE = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-v")))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _ifdoelse_bootflx_65769_L67764;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Compiler debugging on")), "\x0A")));
      {
      _a14239t_107672 _tmp109422 = (::std::string("[flx] ") + ::std::string("Compiler debugging on") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109422)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1907, cols 3 to 7
      goto _ifdoelse_bootflx_65769_L67764;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1907, cols 3 to 7
      goto _ifdoelse_bootflx_65769_L67764;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1907, cols 3 to 7
    _ifdoend_bootflx_65768_L67763:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1905, cols 5 to 31
      //VERBOSE<67697>varname = (Snoc<80397>struct (Empty<80385>varname, "-q"));
      VERBOSE = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-q")))); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1693, cols 5 to 68
      if(!(*control).DEBUG_FLX ) goto _ifdoelse_bootflx_65769_L67764;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", "Compiler debugging off")), "\x0A")));
      {
      _a14239t_107672 _tmp109423 = (::std::string("[flx] ") + ::std::string("Compiler debugging off") ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109423)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 1907, cols 3 to 7
    _ifdoelse_bootflx_65769_L67764:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1911, cols 3 to 7
      if(!(((*control).DEBUG == 1)) ) goto _ifdoelse_bootflx_65771_L67766;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1910, cols 5 to 51
      //(deref<80855>primfun[list] apply((prj2:&record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> &list), control<67700>varname)) = (join_uncurry<89534>stackfun (apply((prj2:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), *(control<67700>varname)), DEBUG_FLAGS<67646>varname));
      *(&control->CCFLAGS)  = _fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697((*control).CCFLAGS, DEBUG_FLAGS)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 1911, cols 3 to 7
    _ifdoelse_bootflx_65771_L67766:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1926, cols 3 to 5
      //return ( AUTOMATON:AUTOMATON<67694>varname, DEBUGSWITCH:DEBUGSWITCH<67695>varname, FLX_STD_LIBS:FLX_STD_LIBS<67690>varname, GRAMMAR_DIR:GRAMMAR_DIR<67693>varname, STATIC_ENV:STATIC_ENV<67696>varname, STDGRAMMAR:STDGRAMMAR<67692>varname, VERBOSE:VERBOSE<67697>varname, args:args<67689>varname, cpp_filebase:cpp_filebase<67669>varname, filebase:filebase<67661>varname, use_ext:use_ext<67660>varname);: type _art107775
      return _art107775(AUTOMATON, DEBUGSWITCH, FLX_STD_LIBS, GRAMMAR_DIR, STATIC_ENV, STDGRAMMAR, VERBOSE, _vI67689_args, cpp_filebase, filebase, use_ext);
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",1928,1,1928,2); // HACK! 
}

//------------------------------
//C FUNC <17016>: filesin
void* filesin(FLX_APAR_DECL _a14239t_107672 dname){
  _a14239t_107672 _vI17022_f;
  int stat;
  void* _vI17020_files;
  _a16988t_108140 fileinfo;
  _a16987t_108142 _vI17018_d;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1135, cols 7 to 32
      //files<17020>varname = Empty<80385>varname;
      _vI17020_files = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1138, cols 7 to 46
      // primcall findfirst<16989>primproc ((+<14305>primfun (dname<17023>varname, "\*")), &fileinfo<17019>ref, &d<17018>ref);
      {
      _a14239t_107672 _tmp109424 = dname + ::std::string("\\*") ;
      _a16988t_108140* _tmp109425 = (_a16988t_108140*)&fileinfo;
      _a16987t_108142* _tmp109426 = (_a16987t_108142*)&_vI17018_d;
      *((_tmp109426))=_findfirst(((_tmp109424)).c_str(), ((_tmp109425)));
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1148, cols 7 to 11
      if(!(int(_vI17018_d) == -1) ) goto harvestnext_L17027;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1145, cols 9 to 13
      if(!((errno == (ENOENT)) || (errno == (EINVAL)) ) ) goto _ifdoend_std_2857_L17024;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1144, cols 11 to 37
      //return None<85998>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1145, cols 9 to 13
    _ifdoend_std_2857_L17024:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ("findfirst() failed unexpectedly", "\x0A")));
      {
      _a14239t_107672 _tmp109427 = ::std::string("findfirst() failed unexpectedly") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109427)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 559, cols 61 to 75
      // primcall fflush<8442>primproc cstderr<8415>varname;
      fflush(stderr);
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1147, cols 9 to 22
      {if(FLX_UNLIKELY(!(0)))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",1147,9,1147,22);}
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1152, cols 5 to 17
    harvestnext_L17027:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1154, cols 7 to 43
      //f<17022>varname = (filename<16993>primfun fileinfo<17019>varname);
      _vI17022_f = std::string(fileinfo.name); //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1158, cols 7 to 11
      if(!(!((_vI17022_f == ::std::string("..")))  && !((_vI17022_f == ::std::string(".")))  ) ) goto _ifdoelse_std_2860_L17029;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &files<17020>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &files<17020>ref), (filename<16993>primfun fileinfo<17019>varname)));
      *((void**)&_vI17020_files)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI17020_files) , std::string(fileinfo.name))) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1158, cols 7 to 11
    _ifdoelse_std_2860_L17029:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1160, cols 7 to 37
      // primcall findnext<16990>primproc (d<17018>varname, &fileinfo<17019>ref, &stat<17021>ref);
      {
      _a16988t_108140* _tmp109428 = (_a16988t_108140*)&fileinfo;
      int* _tmp109429 = (int*)&stat;
      *((_tmp109429))=_findnext(_vI17018_d, ((_tmp109428)));
      }
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1161, cols 7 to 37
      if((stat == 0)) goto harvestnext_L17027;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1170, cols 7 to 11
      if(!((stat == -1)) ) goto _ifdoend_std_2861_L17030;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1164, cols 9 to 45
      if((errno == (ENOENT))) goto harvestexit_L17032;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1165, cols 9 to 22
      {if(FLX_UNLIKELY(!(0)))
        FLX_ASSERT_FAILURE("C:/projects/felix/src/packages/filesystem.fdoc",1165,9,1165,22);}
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1170, cols 7 to 11
      goto harvestexit_L17032;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1170, cols 7 to 11
    _ifdoend_std_2861_L17030:;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ("Error reading dir", "\x0A")));
      {
      _a14239t_107672 _tmp109430 = ::std::string("Error reading dir") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109430)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/io.fdoc: line 553, cols 17 to 31
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1168, cols 9 to 21
      // primcall findclose<16991>primproc d<17018>varname;
      _findclose(_vI17018_d);
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1169, cols 9 to 35
      //return None<85998>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1172, cols 5 to 17
    harvestexit_L17032:;
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1176, cols 7 to 19
      // primcall findclose<16991>primproc d<17018>varname;
      _findclose(_vI17018_d);
    // # C:/projects/felix/src/packages/filesystem.fdoc: line 1177, cols 7 to 25
      //return (Some<85999>struct files<17020>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, ::flx::rtl::_address_ptr_map, true) void* (_vI17020_files));
}
//------------------------------
//FUNCTION <66620>: toolchain_gcc_osx::debug_flags: Apply method
void* _fI66620_debug_flags::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 148, cols 3 to 44
      //return (Snoc<80397>struct (Empty<80385>varname, "-g"));: type void*
      return FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677((void* /*VR_nullptr*/ )0, ::std::string("-g"))));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",978,3,978,49); // HACK! 
}

//------------------------------
//FUNCTION <66602>: toolchain_gcc_osx::target_os: Apply method
_a14239t_107672 _fI66602_target_os::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 968, cols 3 to 35
      //return "OSX";: type _a14239t_107672
      return ::std::string("OSX");
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",968,3,968,35); // HACK! 
}

//------------------------------
//FUNCTION <105974>: flx_processing::run_program_static: Apply method
int run_program_static::apply(_pt107743* const &_arg ){
  _vI105978_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2838, cols 5 to 19
      //result<105975>varname = 0;
      _vI105975_result = 0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 306, cols 5 to 25
      //r<106626>varname = (aux_uncurry<106627>stackfun ((join_uncurry<89534>stackfun ((+<80787>stackfun (apply((prj4:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<105620>varname), apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), apply((prj7:record(AUTOMATON:(string),DEBUGSWITCH:(list),FLX_STD_LIBS:(list),GRAMMAR_DIR:(string),STATIC_ENV:(list),STDGRAMMAR:(string),VERBOSE:(list),args:(list),cpp_filebase:(string),filebase:(string),use_ext:(string)) -> list), dvars<105620>varname))), Empty<80385>varname));
      _vI106626_r = _fI106627_aux_uncurry(FLX_FPAR_PASS this, ptrflx_processing)
      .apply(_at107697(_fI89534_join_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_at107697(_fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(ptrflx_processing->_vI105620_dvars.STATIC_ENV, ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME)) /* apply_stack */, ptrflx_processing->_vI105620_dvars.args)) /* apply_stack */, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 307, cols 5 to 12
      // primcall rev<80379>primproc[string, &list] &r<106626>ref;
      {
      void** _tmp109431 = (void**)&_vI106626_r;
      _rev(((_tmp109431)),(_a14239t_107672*)0);
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2841, cols 5 to 6
      //CMD<105976>varname = (cat_uncurry<89509>stackfun (" ", r<106626>varname));
      _vI105976_CMD = cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI106626_r)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2843, cols 5 to 85
      if(!(!((ptrflx_processing->_vI106023_control.STDOUT == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65975_L105980;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2843, cols 32 to 79
      //CMD<105976>varname = (+<14305>primfun ((+<14305>primfun (CMD<105976>varname, " > ")), (+<14305>primfun ((+<14305>primfun (""", apply((prj69:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), """))));
      _vI105976_CMD = (_vI105976_CMD + ::std::string(" > ") ) + ((::std::string("\"") + ptrflx_processing->_vI106023_control.STDOUT ) + ::std::string("\"") ) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2843, cols 5 to 85
    _ifdoelse_bootflx_65975_L105980:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2844, cols 5 to 82
      if(!(!((ptrflx_processing->_vI106023_control.STDIN == ::std::string(""))) ) ) goto _ifdoelse_bootflx_65977_L105982;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2844, cols 31 to 76
      //CMD<105976>varname = (+<14305>primfun ((+<14305>primfun (CMD<105976>varname, " < ")), (+<14305>primfun ((+<14305>primfun (""", apply((prj68:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))), """))));
      _vI105976_CMD = (_vI105976_CMD + ::std::string(" < ") ) + ((::std::string("\"") + ptrflx_processing->_vI106023_control.STDIN ) + ::std::string("\"") ) ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2844, cols 5 to 82
    _ifdoelse_bootflx_65977_L105982:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1996, cols 5 to 67
      if(!ptrflx_processing->_vI106023_control.DEBUG_FLX ) goto _end_100500_L106639;
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstderr<8415>varname, (+<14305>primfun ((+<14305>primfun ("[flx] ", (+<14305>primfun ("Run command=", CMD<105976>varname)))), "\x0A")));
      {
      _a14239t_107672 _tmp109432 = (::std::string("[flx] ") + (::std::string("Run command=") + _vI105976_CMD ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp109432)));
      }
    // # C:/projects/felix/src/packages/flx.fdoc: line 2845, cols 5 to 32
    _end_100500_L106639:;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106641>ref;
      {
      __timeb64* _tmp109433 = (__timeb64*)&_vI106641_tv;
      _ftime64_s(((_tmp109433)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv100501<106640> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106641>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106641>varname)), literal[double]("1.0e3")))));
      _genout_urv100501  = (static_cast<double>((_vI106641_tv.time))) + ((static_cast<double>((_vI106641_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2846, cols 5 to 25
      //t0<105977>varname = _genout_urv100501<106640>varname;
      _vI105977_t0 = _genout_urv100501; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2847, cols 5 to 22
      //_genout_urv100505<106642> := (system<105725>stackfun CMD<105976>varname);
      _genout_urv100505  = system(FLX_FPAR_PASS ptrflx_processing)
      .apply(_vI105976_CMD) /* apply_stack */; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2847, cols 5 to 22
      //result<105975>varname = _genout_urv100505<106642>varname;
      _vI105975_result = _genout_urv100505; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2020, cols 5 to 9
      if(!((ptrflx_processing->_vI106023_control.TIME == 1)) ) goto _end_100515_L106650;
    // # C:/projects/felix/src/packages/time.fdoc: line 76, cols 7 to 22
      // primcall _ftime64_s<17185>primproc &tv<106649>ref;
      {
      __timeb64* _tmp109434 = (__timeb64*)&_vI106649_tv;
      _ftime64_s(((_tmp109434)));
      }
    // # C:/projects/felix/src/packages/time.fdoc: line 77, cols 7 to 56
      //_genout_urv96124<106648> := (+<80589>primfun[double] ((_ctor_double<17183>primfun apply((prj0:__timeb64 -> time_t), tv<106649>varname)), (/<80590>primfun[double] ((_ctor_double<80591>primfun[ushort] apply((prj1:__timeb64 -> ushort), tv<106649>varname)), literal[double]("1.0e3")))));
      _vI106648__genout_urv96124  = (static_cast<double>((_vI106649_tv.time))) + ((static_cast<double>((_vI106649_tv.millitm))) / 1.0e3 ) ; //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2016, cols 7 to 37
      //elapsed<106643>varname = (-<80547>primfun[double] (_genout_urv96124<106648>varname, t0<105977>varname));
      _vI106643_elapsed = _vI106648__genout_urv96124 - _vI105977_t0 ; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2017, cols 7 to 43
      //minutes<106644>varname = (floor<80817>primfun[double] (/<80590>primfun[double] (elapsed<106643>varname, literal[double]("60.0"))));
      _vI106644_minutes = ::std::floor((_vI106643_elapsed / 60.0 )); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2018, cols 7 to 45
      //seconds<106645>varname = (-<80547>primfun[double] (elapsed<106643>varname, (*<80818>primfun[double] (minutes<106644>varname, literal[double]("60.0")))));
      _vI106645_seconds = _vI106643_elapsed - (_vI106644_minutes * 60.0 ) ; //assign simple
    // # C:/projects/felix/src/packages/io.fdoc: line 443, cols 55 to 76
      // primcall write<8439>primproc (cstdout<8414>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("[flx] Time : ", (fmt<80548>stackfun (minutes<106644>varname, (fixed<5838>struct (2, 0)))))), "m")), (fmt<80548>stackfun (seconds<106645>varname, (fixed<5838>struct (4, 1)))))), "s for ")), (+<14305>primfun ("Static Run   : ", apply((prj41:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> string), control<106023>varname))))), "\x0A")));
      {
      _a14239t_107672 _tmp109435 = (((((::std::string("[flx] Time : ") + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106644_minutes, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(2, 0))))) /* apply_stack */ ) + ::std::string("m") ) + fmt(FLX_FPAR_PASS_ONLY)
      .apply(_tt107893(_vI106645_seconds, FLX_VR(1, new(*PTF gcp, _at107686_ptr_map, true) _at107686 (_at107686(4, 1))))) /* apply_stack */ ) + ::std::string("s for ") ) + (::std::string("Static Run   : ") + ptrflx_processing->_vI106023_control.LINKER_OUTPUT_FILENAME ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp109435)));
      }
    // # C:/projects/felix/src/packages/io.fdoc: line 544, cols 60 to 74
      // primcall fflush<8442>primproc cstdout<8414>varname;
      fflush(stdout);
    // # C:/projects/felix/src/packages/flx.fdoc: line 2848, cols 5 to 66
    _end_100515_L106650:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2849, cols 5 to 18
      //return result<105975>varname;: type int
      return _vI105975_result;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2850,3,2850,4); // HACK! 
}

//------------------------------
//FUNCTION <105049>: gramtime_uncurry::aux::aux_uncurry: Apply method
void* _fI105049_aux_uncurry::apply(_at107697 const &_arg ){
  _vI105050_x_uncurry = _arg.data[0];
  _vI105051_y = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
    start_91646_L105058:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //aux'2_mv_1387<105054> := x_uncurry<105050>varname;
      _vI105054_aux__apos_2_mv_1387  = _vI105050_x_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
      if(!(FLX_VNI(_vI105054_aux__apos_2_mv_1387)==0) ) goto _ml1389_L105053;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      //return y<105051>varname;: type void*
      return _vI105051_y;
    // # C:/projects/felix/src/packages/lists.fdoc: line 320, cols 11 to 16
    _ml1389_L105053:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
/*match case 2:|Snoc (t_param_std_1268, h_param_std_1269)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
      if(!andthen(FLX_VNI(_vI105054_aux__apos_2_mv_1387)==1, (FLX_NEWP(_fI105057__lam_1391)(FLX_FPAR_PASS this, ptr_fI105041_aux, ptrgramtime_uncurry))) ) goto _ml1390_L105052;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 18 to 18
      //h_param_std_1269<105055>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1387<105054>varname));
      _vI105055_h_param_std_1269 = (*((_tt107677*)FLX_VNP(_vI105054_aux__apos_2_mv_1387))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 16 to 16
      //t_param_std_1268<105056>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1387<105054>varname));
      _vI105056_t_param_std_1268 = (*((_tt107677*)FLX_VNP(_vI105054_aux__apos_2_mv_1387))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //y<105051> := (Snoc<80397>struct (y<105051>varname, h_param_std_1269<105055>varname));
      _vI105051_y  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105051_y, _vI105055_h_param_std_1269))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      //x_uncurry<105050> := t_param_std_1268<105056>varname;
      _vI105050_x_uncurry  = _vI105056_t_param_std_1268; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 324, cols 5 to 6
      goto start_91646_L105058;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 11 to 19
    _ml1390_L105052:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 321, cols 9 to 41
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",321,9,321,41);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",324,5,324,6); // HACK! 
}

//------------------------------
//FUNCTION <96425>: iter_uncurry::_lam_1354: Apply method
 ::flx::rtl::cl_t _lam_1354::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 221, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",221,9,221,17); // HACK! 
}

//------------------------------
//FUNCTION <67003>: cxx_depcheck::maxf: Apply method
_ft108125* maxf::apply(double const &_arg ){
  _vI67008_t = _arg;
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 401, cols 5 to 95
      //return maxf'2<67005>closure;: type _ft108125*
      return (FLX_NEWP(_fI67005_maxf__apos_2)(FLX_FPAR_PASS this, ptrcxx_depcheck));
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",401,5,401,95); // HACK! 
}

//------------------------------
//C FUNC <14901>: strip
_a14239t_107672 strip(_a14239t_107672 _vI14903_x){
    // # C:/projects/felix/src/packages/strings.fdoc: line 450, cols 3 to 61
      //return (lstrip<14855>stackfun ((rstrip<14873>stackfun (x<14903>varname, " \x09\x0A\x0D\x0C\x0B")), " \x09\x0A\x0D\x0C\x0B"));: type _a14239t_107672
      return lstrip(rstrip(_vI14903_x, ::std::string(" \x09\n\x0D\x0C\x0B")), ::std::string(" \x09\n\x0D\x0C\x0B"));
}
//------------------------------
//FUNCTION <103583>: print_options::_lam_1073: Apply method
 ::flx::rtl::cl_t _lam_1073::apply(){
    // # C:/projects/felix/src/packages/core_type_constructors.fdoc: line 122, cols 9 to 14
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/core_type_constructors.fdoc",122,9,122,14); // HACK! 
}

//------------------------------
//FUNCTION <93049>: toolchain_msvc_win32::static_executable_linker::iterator'2: Apply method
void* _fI93049_iterator__apos_2::apply(){
  FLX_START_SWITCH
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
    continue__ll_lists_5421_L93050:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //iterator'2_mv_1563<93054> := xs<93048>varname;
      _vI93054_iterator__apos_2_mv_1563  = ptrstatic_executable_linker->_vI93048_xs; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
/*match case 1:|Snoc (t_param_std_1318, h_param_std_1319)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
      if(!andthen(FLX_VNI(_vI93054_iterator__apos_2_mv_1563)==1, (FLX_NEWP(_fI93057__lam_1566)(FLX_FPAR_PASS this, ptrstatic_executable_linker, ptrtoolchain_msvc_win32))) ) goto _ml1565_L93053;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 18 to 18
      //h_param_std_1319<93055>varname = apply((prj1:list * string -> string), (arg of case 1 of iterator'2_mv_1563<93054>varname));
      _vI93055_h_param_std_1319 = (*((_tt107677*)FLX_VNP(_vI93054_iterator__apos_2_mv_1563))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 16 to 16
      //t_param_std_1318<93056>varname = apply((prj0:list * string -> list), (arg of case 1 of iterator'2_mv_1563<93054>varname));
      _vI93056_t_param_std_1318 = (*((_tt107677*)FLX_VNP(_vI93054_iterator__apos_2_mv_1563))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 24 to 29
      //xs<93048>varname = t_param_std_1318<93056>varname;
      ptrstatic_executable_linker->_vI93048_xs = _vI93056_t_param_std_1318; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 32 to 44
      FLX_SET_PC(109437)
      //yield (Some<80915>struct h_param_std_1319<93055>varname);: type void*
      return FLX_VNR(1, new(*PTF gcp, _a14239t_107672_ptr_map, true) _a14239t_107672 (_vI93055_h_param_std_1319));//yield
    FLX_CASE_LABEL(109437)
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L93050;
    // # C:/projects/felix/src/packages/lists.fdoc: line 678, cols 11 to 19
    _ml1565_L93053:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
/*match case 2:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
      if(!(FLX_VNI(_vI93054_iterator__apos_2_mv_1563)==0) ) goto _ml1567_L93052;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 21 to 35
      //return None<80917>varname;: type void*
      return (void* /*VR_nullptr*/ )0;
    // # C:/projects/felix/src/packages/lists.fdoc: line 679, cols 11 to 16
    _ml1567_L93052:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 680, cols 9 to 18
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",680,9,680,18);
;
    // # C:/projects/felix/src/packages/lists.fdoc: line 681, cols 7 to 11
      goto continue__ll_lists_5421_L93050;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",682,5,682,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <106819>: flx_processing::ocaml_compile: Apply method
int _fI106819_ocaml_compile::apply(_pt107743* const &_arg ){
  _vI106824_ehandler = _arg;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2413, cols 5 to 29
      //deps<106820>varname = Empty<80385>varname;
      _vI106820_deps = (void* /*VR_nullptr*/ )0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //xs<107315> := apply((prj79:record(AUTOMATON:(string),BUNDLE_DIR:(opt),CCFLAGS:(list),CCOMPILEIT:(int),CHECK_DEPENDENCIES:(int),CHECK_EXPECT:(int),CLEAR_CACHE:(int),CMDLINE_INPUT:(bool),COMPILER_PHASE:(string),COMPILER_TIME:(int),CXXONLY:(int),CXX_INTERFACE_FILENAME:(string),DEBUG:(int),DEBUG_COMPILER:(int),DEBUG_FLX:(bool),DIST_ROOT:(string),DLINK_STRINGS:(list),DOREDUCE:(int),DRIVER_EXE:(string),DRIVER_OBJS:(list),ECHO:(int),EXPECT:(string),EXTRA_CCFLAGS:(list),EXTRA_INCLUDE_DIRS:(list),EXTRA_INCLUDE_FILES:(list),EXTRA_PACKAGES:(list),FELIX:(int),FLXG:(string),FLXG_FORCE:(int),FLXG_OPTIMISE:(int),FLXRUN:(list),FLX_INSTALL_DIR:(string),FLX_INTERFACE_FILENAME:(string),FLX_STD_LIBS:(list),FLX_TARGET_SUBDIR:(string),FLX_TOOLCHAIN:(string),GRAMMAR_DIR:(string),IMPORTS:(list),INDIR:(string),INLINE:(int),INREGEX:(string),LINKER_OUTPUT_FILENAME:(string),LINKER_SWITCHES:(list),LINKEXE:(int),LINKIT:(int),LINK_STRINGS:(list),MACROS:(list),NONSTOP:(int),NOOPTIMISE:(int),NOSTDLIB:(int),OCAMLONLY:(int),OPTIMISE:(list),OUTPUT_DIRECTORY_SPECIFIED:(int),OUTPUT_FILENAME_SPECIFIED:(int),OUTPUT_FILENAME_WITHOUT_EXTENSION_SPECIFIED:(int),PRINT_HELP:(int),RECOMPILE:(int),REPL_MODE:(bool),RUNIT:(int),RUNONLY:(int),SET_STDIN:(int),SHOWCODE:(int),SLINK_STRINGS:(list),STANDARD_INCLUDE_FILES:(list),STATIC:(int),STATICLIB:(int),STDGRAMMAR:(string),STDIMPORT:(string),STDIN:(string),STDOUT:(string),TIME:(int),TIMECMD:(string),USAGE:(string),USER_ARGS:(list),VALIDATE_CACHE:(int),cache_time:(double),cppos:(list),cpps:(list),extra_pkgs:(list),ocamls:(list),pkgs:(list)) -> list), control<107004>varname);
      _vI107315_xs  = ptrflx_processing->_vI107004_control.ocamls; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 682, cols 5 to 6
      //_genout_urv99486<107314> := iterator'2<107316>closure;
      _vI107314__genout_urv99486  = (FLX_NEWP(_fI107316_iterator__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      //_generator_flx_2665<106821>varname = _genout_urv99486<107314>varname;
      _vI106821__generator_flx_2665 = _vI107314__genout_urv99486; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
    continue__ll_flx_2632_L106825:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      //ocaml_compile_mv_66087<106704> := apply(_generator_flx_2665<106821>varname, ());
      _vI106704_ocaml_compile_mv_66087  = (_vI106821__generator_flx_2665)->clone()
      ->apply() /* general apply */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
/*match case 1:|Some src_param_bootflx_65917*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      if(!andthen(FLX_VNI(_vI106704_ocaml_compile_mv_66087)==1, (FLX_NEWP(_fI107325__lam_66090)(FLX_FPAR_PASS this, ptrflx_processing))) ) goto _ml66089_L106833;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      //src_param_bootflx_65917<106822>varname = (arg of case 1 of ocaml_compile_mv_66087<106704>varname);
      _vI106822_src_param_bootflx_65917 = *((_a14239t_107672*)FLX_VNP(_vI106704_ocaml_compile_mv_66087)); //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2427, cols 7 to 11
      if(!((::flx::rtl::strutil::substr(_vI106822_src_param_bootflx_65917,- ::std::string(".cmi").size() ,_vI106822_src_param_bootflx_65917.size()) == ::std::string(".cmi")) || (::flx::rtl::strutil::substr(_vI106822_src_param_bootflx_65917,- ::std::string(".cmx").size() ,_vI106822_src_param_bootflx_65917.size()) == ::std::string(".cmx")) ) ) goto _ifdoend_bootflx_65918_L106826;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &deps<106820>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &deps<106820>ref), src_param_bootflx_65917<106822>varname));
      *((void**)&_vI106820_deps)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI106820_deps) , _vI106822_src_param_bootflx_65917)) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto continue__ll_flx_2632_L106825;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2427, cols 7 to 11
    _ifdoend_bootflx_65918_L106826:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 1962, cols 1 to 2
      //_genout_urv99636<107328> := dxqt'2<107329>closure;
      _vI107328__genout_urv99636  = (FLX_NEWP(_fI107329_dxqt__apos_2)(FLX_FPAR_PASS this, ptrflx_processing)); //init
    // # C:/projects/felix/src/packages/flx.fdoc: line 2406, cols 5 to 60
      //xqt<107326>varname = _genout_urv99636<107328>varname;
      _vI107326_xqt = _vI107328__genout_urv99636; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2407, cols 5 to 65
      //result<107327>varname = apply(xqt<107326>varname, (+<14305>primfun ((+<14305>primfun ((+<14305>primfun ("ocamlopt.opt -c ", (cat_uncurry<89509>stackfun (" ", deps<106820>varname)))), " ")), src_param_bootflx_65917<106822>varname)));
      _vI107327_result = (_vI107326_xqt)->clone()
      ->apply(((::std::string("ocamlopt.opt -c ") + cat_uncurry(FLX_FPAR_PASS_ONLY)
      .apply(_tt107698(::std::string(" "), _vI106820_deps)) /* apply_stack */ ) + ::std::string(" ") ) + _vI106822_src_param_bootflx_65917 ) /* general apply */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2408, cols 5 to 27
      // primcall ignore<82871>primproc[string] result<107327>varname;
      (void)_vI107327_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2420, cols 9 to 56
      //result<106823>varname = 0;
      _vI106823_result = 0; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2421, cols 9 to 37
      if(!(!((_vI106823_result == 0)) ) ) goto _ifdoend_bootflx_65920_L106827;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2421, cols 9 to 37
      //return result<106823>varname;: type int
      return _vI106823_result;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2421, cols 9 to 37
    _ifdoend_bootflx_65920_L106827:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2426, cols 9 to 13
      if(!((::flx::rtl::strutil::substr(_vI106822_src_param_bootflx_65917,- ::std::string(".mli").size() ,_vI106822_src_param_bootflx_65917.size()) == ::std::string(".mli"))) ) goto _ifdoend_bootflx_65922_L106828;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &deps<106820>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &deps<106820>ref), (+<14305>primfun ((subscript<14360>stackfun (src_param_bootflx_65917<106822>varname, (Slice_to_incl<82847>struct -5))), ".cmi"))));
      *((void**)&_vI106820_deps)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI106820_deps) , subscript(FLX_FPAR_PASS_ONLY)
      .apply(_tt108173(_vI106822_src_param_bootflx_65917, ::flx::rtl::_uctor_(3, new(*PTF gcp, int_ptr_map, true) int (-5)))) /* apply_stack */ + ::std::string(".cmi") )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto continue__ll_flx_2632_L106825;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2426, cols 9 to 13
    _ifdoend_bootflx_65922_L106828:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2425, cols 9 to 36
      if(!((::flx::rtl::strutil::substr(_vI106822_src_param_bootflx_65917,- ::std::string(".ml").size() ,_vI106822_src_param_bootflx_65917.size()) == ::std::string(".ml"))) ) goto continue__ll_flx_2632_L106825;
    // # C:/projects/felix/src/packages/lists.fdoc: line 422, cols 35 to 45
      //(deref<80855>primfun[list] &deps<106820>ref) = (+<80787>stackfun ((deref<80855>primfun[list] &deps<106820>ref), (+<14305>primfun ((subscript<14360>stackfun (src_param_bootflx_65917<106822>varname, (Slice_to_incl<82847>struct -4))), ".cmi"))));
      *((void**)&_vI106820_deps)  = _fI80787___plus_(FLX_FPAR_PASS_ONLY)
      .apply(_tt107677(*((void**)&_vI106820_deps) , subscript(FLX_FPAR_PASS_ONLY)
      .apply(_tt108173(_vI106822_src_param_bootflx_65917, ::flx::rtl::_uctor_(3, new(*PTF gcp, int_ptr_map, true) int (-4)))) /* apply_stack */ + ::std::string(".cmi") )) /* apply_stack */; //assign simple
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto continue__ll_flx_2632_L106825;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto continue__ll_flx_2632_L106825;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
    _ml66089_L106833:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
/*match case 2:|None*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      if(!(FLX_VNI(_vI106704_ocaml_compile_mv_66087)==0) ) goto _ml66091_L106834;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      goto _em66087_L106835;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
    _ml66091_L106834:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
/*match failure*/
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2428,5,2428,9);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2428,5,2428,9);
;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2428, cols 5 to 9
    _em66087_L106835:;
    // # C:/projects/felix/src/packages/flx.fdoc: line 2429, cols 5 to 13
      //return 0;: type int
      return 0;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/flx.fdoc",2430,2,2430,3); // HACK! 
}

//------------------------------
//FUNCTION <94117>: generic_link_lib_dynamic_uncurry::aux_uncurry::_lam_1385: Apply method
 ::flx::rtl::cl_t _fI94117__lam_1385::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,9,292,17); // HACK! 
}

//------------------------------
//FUNCTION <93792>: generic_cxx_compile_for_dynamic_uncurry::aux_uncurry: Apply method
void* _fI93792_aux_uncurry::apply(_at107697 const &_arg ){
  _vI93793_inp_uncurry = _arg.data[0];
  _vI93794_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L93801:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<93797> := inp_uncurry<93793>varname;
      _vI93797_aux__apos_2_mv_1381  = _vI93793_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI93797_aux__apos_2_mv_1381)==0) ) goto _ml1383_L93796;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<93794>varname;: type void*
      return _vI93794_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L93796:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI93797_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI93800__lam_1385)(FLX_FPAR_PASS this, ptrgeneric_cxx_compile_for_dynamic_uncurry))) ) goto _ml1384_L93795;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<93798>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<93797>varname));
      _vI93798_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI93797_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<93799>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<93797>varname));
      _vI93799_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI93797_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<93794> := (Snoc<80397>struct (out<93794>varname, (quote_arg<16873>stackfun h_param_std_1267<93798>varname)));
      _vI93794_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI93794_out, quote_arg(FLX_FPAR_PASS_ONLY)
      .apply(_vI93798_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<93793> := t_param_std_1266<93799>varname;
      _vI93793_inp_uncurry  = _vI93799_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L93801;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L93795:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}

//------------------------------
//FUNCTION <105041>: gramtime_uncurry::aux: Apply method
void* _fI105041_aux::apply(_at107697 const &_arg ){
  _vI105042_inp = _arg.data[0];
  _vI105043_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
    start_93268_L105062:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //aux_mv_1471<105046> := inp<105042>varname;
      _vI105046_aux_mv_1471  = _vI105042_inp; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
      if(!(FLX_VNI(_vI105046_aux_mv_1471)==0) ) goto _ml1473_L105045;
    // # C:/projects/felix/src/packages/lists.fdoc: line 325, cols 5 to 26
      //return (aux_uncurry<105049>stackfun (out<105043>varname, Empty<80385>varname));: type void*
      return _fI105049_aux_uncurry(FLX_FPAR_PASS this, ptrgramtime_uncurry)
      .apply(_at107697(_vI105043_out, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    // # C:/projects/felix/src/packages/lists.fdoc: line 546, cols 9 to 14
    _ml1473_L105045:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1299, h_param_std_1300)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
      if(!andthen(FLX_VNI(_vI105046_aux_mv_1471)==1, (FLX_NEWP(_fI105059__lam_1480)(FLX_FPAR_PASS this, ptrgramtime_uncurry))) ) goto _ml1474_L105044;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 16 to 16
      //h_param_std_1300<105047>varname = apply((prj1:list * string -> string), (arg of case 1 of aux_mv_1471<105046>varname));
      _vI105047_h_param_std_1300 = (*((_tt107677*)FLX_VNP(_vI105046_aux_mv_1471))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 14 to 14
      //t_param_std_1299<105048>varname = apply((prj0:list * string -> list), (arg of case 1 of aux_mv_1471<105046>varname));
      _vI105048_t_param_std_1299 = (*((_tt107677*)FLX_VNP(_vI105046_aux_mv_1471))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 548, cols 12 to 15
      //aux_mv_1476<105061> := (_lam_65074<89860>stackfun h_param_std_1300<105047>varname);
      _vI105061_aux_mv_1476  = _lam_65074(ptrgramtime_uncurry)
      .apply(_vI105047_h_param_std_1300) /* apply_stack */; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
/*match case 1:|case 1*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
      if(!(_vI105061_aux_mv_1476%2==1) ) goto _ml1478_L105060;
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //out<105043> := (Snoc<80397>struct (out<105043>varname, h_param_std_1300<105047>varname));
      _vI105043_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI105043_out, _vI105047_h_param_std_1300))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //inp<105042> := t_param_std_1299<105048>varname;
      _vI105042_inp  = _vI105048_t_param_std_1299; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      goto start_93268_L105062;
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
    _ml1478_L105060:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 549, cols 9 to 25
/*match case 2:any*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      //inp<105042> := t_param_std_1299<105048>varname;
      _vI105042_inp  = _vI105048_t_param_std_1299; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 552, cols 5 to 6
      goto start_93268_L105062;
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
    _ml1474_L105044:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 550, cols 7 to 14
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 550, cols 7 to 14
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",550,7,550,14);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",550,7,550,14);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",552,5,552,6); // HACK! 
}

//------------------------------
//FUNCTION <66924>: toolchain_clang_osx::get_base_c_compile_flags: Apply method
void* _fI66924_get_base_c_compile_flags::apply(){
    // # C:/projects/felix/src/packages/toolchain.fdoc: line 1468, cols 3 to 65
      //return base_c_compile_flags<66898>varname;: type void*
      return ptrtoolchain_clang_osx->_vI66898_base_c_compile_flags;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/toolchain.fdoc",1468,3,1468,65); // HACK! 
}

//------------------------------
//FUNCTION <105059>: gramtime_uncurry::aux::_lam_1480: Apply method
 ::flx::rtl::cl_t _fI105059__lam_1480::apply(){
    // # C:/projects/felix/src/packages/lists.fdoc: line 547, cols 9 to 17
      //return (case 1 of bool);: type  ::flx::rtl::cl_t
      return 1;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",547,9,547,17); // HACK! 
}

//------------------------------
//FUNCTION <98014>: map_package_requirements_uncurry::aux_uncurry: Apply method
void* _fI98014_aux_uncurry::apply(_at107697 const &_arg ){
  _vI98015_inp_uncurry = _arg.data[0];
  _vI98016_out = _arg.data[1];
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
    start_91002_L98023:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //aux'2_mv_1381<98019> := inp_uncurry<98015>varname;
      _vI98019_aux__apos_2_mv_1381  = _vI98015_inp_uncurry; //init
    // # [flx_match] generated: line 0, cols 0 to 0
/*begin match*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
/*match case 1:|Empty*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
      if(!(FLX_VNI(_vI98019_aux__apos_2_mv_1381)==0) ) goto _ml1383_L98018;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      //return out<98016>varname;: type void*
      return _vI98016_out;
    // # C:/projects/felix/src/packages/lists.fdoc: line 291, cols 9 to 14
    _ml1383_L98018:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
/*match case 2:|Snoc (t_param_std_1266, h_param_std_1267)*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
      if(!andthen(FLX_VNI(_vI98019_aux__apos_2_mv_1381)==1, (FLX_NEWP(_fI98022__lam_1385)(FLX_FPAR_PASS this, ptrmap_package_requirements_uncurry))) ) goto _ml1384_L98017;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 16 to 16
      //h_param_std_1267<98020>varname = apply((prj1:list * string -> string), (arg of case 1 of aux'2_mv_1381<98019>varname));
      _vI98020_h_param_std_1267 = (*((_tt107677*)FLX_VNP(_vI98019_aux__apos_2_mv_1381))).mem_1; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 14 to 14
      //t_param_std_1266<98021>varname = apply((prj0:list * string -> list), (arg of case 1 of aux'2_mv_1381<98019>varname));
      _vI98021_t_param_std_1266 = (*((_tt107677*)FLX_VNP(_vI98019_aux__apos_2_mv_1381))).mem_0; //assign simple
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
/*parallel assignment*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //out<98016> := (Snoc<80397>struct (out<98016>varname, (_lam_65101<90347>stackfun h_param_std_1267<98020>varname)));
      _vI98016_out  = FLX_VNR(1, new(*PTF gcp, _tt107677_ptr_map, true) _tt107677 (_tt107677(_vI98016_out, _lam_65101(ptrmap_package_requirements_uncurry)
      .apply(_vI98020_h_param_std_1267) /* apply_stack */))); //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      //inp_uncurry<98015> := t_param_std_1266<98021>varname;
      _vI98015_inp_uncurry  = _vI98021_t_param_std_1266; //init
    // # C:/projects/felix/src/packages/lists.fdoc: line 294, cols 5 to 6
      goto start_91002_L98023;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 9 to 17
    _ml1384_L98017:;
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
/*match failure*/
    // # C:/projects/felix/src/packages/lists.fdoc: line 292, cols 7 to 45
      // [BEXE_code] non_return_code c"      FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);\x0A" ()
            FLX_MATCH_FAILURE("C:/projects/felix/src/packages/lists.fdoc",292,7,292,45);
;
    FLX_DROPTHRU_FAILURE("C:/projects/felix/src/packages/lists.fdoc",294,5,294,6); // HACK! 
}


//-----------------------------------------
}} // namespace flxusr::bootflx
//CREATE STANDARD EXTERNAL INTERFACE
FLX_FRAME_WRAPPERS(::flxusr::bootflx,bootflx)
FLX_STACK_START_WRAPPER(::flxusr::bootflx,bootflx,_init_)

//-----------------------------------------
//body complete
