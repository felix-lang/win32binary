#ifndef _FLX_GUARD_flx_pkgconfig
#define _FLX_GUARD_flx_pkgconfig
//Input file: build\release\share\src\tools\flx_pkgconfig
//Generated by Felix Version 2016.07.12-rc1
//Timestamp: 2017/7/9 5:48:56 UTC
//Timestamp: 2017/7/9 5:48:56 (local)

//FELIX RUNTIME
#include "flx_rtl.hpp"
#include "flx_gc.hpp"
#ifndef FLX_NO_INCLUDES
#include "flx_pkgconfig.includes"
#endif


//-----------------------------------------
//USER HEADERS
#include "flx_rtl_config.hpp"
#include <ctype.h>
#include <stddef.h>
#include <stdio.h>
#include <string>
#include <cstdlib>

    namespace flx { namespace list {
      template<class T> struct snoc { void *mem_0; T mem_1; };
      template<class T> struct cons { T mem_0; void * mem_1; };
      template<class T> cons<T> snoc2cons (void *x) {
        return cons<T> {((snoc<T>*)x)->mem_1, ((snoc<T>*)x)->mem_0};
      }
    }}
  
#include "flx_serialisers.hpp"

#include <iostream>
#include "flx_ioutil.hpp"
#include "flx_strutil.hpp"
#include "flx_rtl.hpp"
#include "flx_gc.hpp"


//-----------------------------------------
//FELIX SYSTEM
namespace flxusr { namespace flx_pkgconfig {
struct thread_frame_t;

//-----------------------------------------
//NAME THE TYPES

//PRIMITIVE 13708 INSTANCE 70442: string
typedef ::std::basic_string<char> _a13708t_70442;

//TYPE 70443: bool
// typedef _us2  ::flx::rtl::cl_t;

//TYPE 70444: string^2
// typedef _at<_a13708t_70442,2> _at70444;
struct _at70444;

//TYPE 70445: list * string
// typedef _tt2<void*,_a13708t_70442> _tt70445;
struct _tt70445;

//PRIMITIVE 5028 INSTANCE 70447: int
//typedef int int;

//TYPE 70448: list * int
// typedef _tt2<void*,int> _tt70448;
struct _tt70448;

//TYPE 70450: list * list
// typedef _tt2<void*,void*> _tt70450;
struct _tt70450;

//TYPE 70452: int^3
// typedef _at<int,3> _at70452;
struct _at70452;

//TYPE 70454: unit -> bool
// typedef _ft< ::flx::rtl::cl_t, ::flx::rtl::cl_t> _ft70454;
struct _ft70454;

//TYPE 70455: bool * (unit -> bool)
// typedef _tt2< ::flx::rtl::cl_t,_ft70454*> _tt70455;
struct _tt70455;

//TYPE 70456: list * string -> list
// typedef _ft<_tt70445,void*> _ft70456;
struct _ft70456;

//TYPE 70457: int * list
// typedef _tt2<int,void*> _tt70457;
struct _tt70457;

//TYPE 70458: int * list -> int
// typedef _ft<_tt70457,int> _ft70458;
struct _ft70458;

//TYPE 70459: int * list -> list
// typedef _ft<_tt70457,void*> _ft70459;
struct _ft70459;

//PRIMITIVE 7857 INSTANCE 70460: ofile
typedef FILE* _a7857t_70460;

//TYPE 70461: ofile * string
// typedef _tt2<_a7857t_70460,_a13708t_70442> _tt70461;
struct _tt70461;

//TYPE 70462: string * list
// typedef _tt2<_a13708t_70442,void*> _tt70462;
struct _tt70462;

//TYPE 70463: int^2
// typedef _at<int,2> _at70463;
struct _at70463;

//TYPE 70464: int^3 -> int
// typedef _ft<_at70452,int> _ft70464;
struct _ft70464;

//PRIMITIVE 5038 INSTANCE 70465: size
typedef size_t _a5038t_70465;

//TYPE 70466: size^2
// typedef _at<_a5038t_70465,2> _at70466;
struct _at70466;

//PRIMITIVE 5025 INSTANCE 70467: char
//typedef char char;

//TYPE 70468: char^2
// typedef _at<char,2> _at70468;
struct _at70468;

//TYPE 70469: string * size
// typedef _tt2<_a13708t_70442,_a5038t_70465> _tt70469;
struct _tt70469;

//TYPE 70471: string * int
// typedef _tt2<_a13708t_70442,int> _tt70471;
struct _tt70471;

//TYPE 70473: list^2
// typedef _at<void*,2> _at70473;
struct _at70473;

//TYPE 70474: string * list -> list
// typedef _ft<_tt70462,void*> _ft70474;
struct _ft70474;

//TYPE 70475: string * list -> string
// typedef _ft<_tt70462,_a13708t_70442> _ft70475;
struct _ft70475;

//TYPE 70476: string * int * int
// typedef _tt3<_a13708t_70442,int,int> _tt70476;
struct _tt70476;

//TYPE 70479: list * string^2
// typedef _tt2<void*,_at70444> _tt70479;
struct _tt70479;

//TYPE 70481: string -> bool
// typedef _ft<_a13708t_70442, ::flx::rtl::cl_t> _ft70481;
struct _ft70481;

//TYPE 70482: (string -> bool) * list
// typedef _tt2<_ft70481*,void*> _tt70482;
struct _tt70482;

//TYPE 70483: string -> void
// typedef _pt<_a13708t_70442> _pt70483;
struct _pt70483;

//TYPE 70484: (string -> void) * list
// typedef _tt2<_pt70483*,void*> _tt70484;
struct _tt70484;

//PRIMITIVE 7856 INSTANCE 70485: ifile
typedef FILE* _a7856t_70485;

//TYPE 70486: string^2 -> string
// typedef _ft<_at70444,_a13708t_70442> _ft70486;
struct _ft70486;

//TYPE 70487: list * string
// typedef _tt2<void*,_a13708t_70442> _tt70487;
struct _tt70487;

//PRIMITIVE 15443 INSTANCE 70488: lex_iterator
typedef char const* _a15443t_70488;

//TYPE 70489: lex_iterator^2
// typedef _at<_a15443t_70488,2> _at70489;
struct _at70489;

//TYPE 70490: lex_iterator * string
// typedef _tt2<_a15443t_70488,_a13708t_70442> _tt70490;
struct _tt70490;

//TYPE 70491: lex_iterator * string -> string
// typedef _ft<_tt70490,_a13708t_70442> _ft70491;
struct _ft70491;

//TYPE 70492: lex_iterator * string -> lex_iterator
// typedef _ft<_tt70490,_a15443t_70488> _ft70492;
struct _ft70492;

//TYPE 70494: lex_iterator * int
// typedef _tt2<_a15443t_70488,int> _tt70494;
struct _tt70494;

//TYPE 70495: string * char
// typedef _tt2<_a13708t_70442,char> _tt70495;
struct _tt70495;

//TYPE 70496: size * int
// typedef _tt2<_a5038t_70465,int> _tt70496;
struct _tt70496;

//TYPE 70498: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft70498;
struct _ft70498;

//STRUCT 16336 INSTANCE 70524: Win32
struct _s16336t_70524;

//TYPE 70538: list * string -> string
// typedef _ft<_tt70445,_a13708t_70442> _ft70538;
struct _ft70538;

//TYPE 70540: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft70540;
struct _ft70540;

//TYPE 70541: &size * size
// typedef _tt2<_a5038t_70465*,_a5038t_70465> _tt70541;
struct _tt70541;

//TYPE 70543: &string * size
// typedef _tt2<_a13708t_70442*,_a5038t_70465> _tt70543;
struct _tt70543;

//TYPE 70544: &string * string
// typedef _tt2<_a13708t_70442*,_a13708t_70442> _tt70544;
struct _tt70544;

//TYPE 70549: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft70549;
struct _ft70549;

//TYPE 70550: string * string * size
// typedef _tt3<_a13708t_70442,_a13708t_70442,_a5038t_70465> _tt70550;
struct _tt70550;

//TYPE 70551: string * size * size
// typedef _tt3<_a13708t_70442,_a5038t_70465,_a5038t_70465> _tt70551;
struct _tt70551;

//TYPE 70553: list * int -> int
// typedef _ft<_tt70448,int> _ft70553;
struct _ft70553;

//TYPE 70554: list * int -> list
// typedef _ft<_tt70448,void*> _ft70554;
struct _ft70554;

//TYPE 70558: list * string^2 -> string^2
// typedef _ft<_tt70479,_at70444> _ft70558;
struct _ft70558;

//TYPE 70559: list * string^2 -> list
// typedef _ft<_tt70479,void*> _ft70559;
struct _ft70559;

//TYPE 70561: string * &char
// typedef _tt2<_a13708t_70442,char*> _tt70561;
struct _tt70561;


//-----------------------------------------
//DEFINE THE TYPES

//TYPE 70444: string^2
struct _at70444 {
  static ::std::size_t const len = 2;
  typedef _a13708t_70442 element_type;
  _a13708t_70442 data[2];
  _at70444() {}
  _at70444(_a13708t_70442 a0, _a13708t_70442 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 70445: list * string
struct _tt70445 {
  void* mem_0;
  _a13708t_70442 mem_1;
  _tt70445(){}
  _tt70445(void* a0, _a13708t_70442 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70448: list * int
struct _tt70448 {
  void* mem_0;
  int mem_1;
  _tt70448(){}
  _tt70448(void* a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70450: list * list
struct _tt70450 {
  void* mem_0;
  void* mem_1;
  _tt70450(){}
  _tt70450(void* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70452: int^3
struct _at70452 {
  static ::std::size_t const len = 3;
  typedef int element_type;
  int data[3];
  _at70452() {}
  _at70452(int a0, int a1, int a2) {
    data[0] = a0;
    data[1] = a1;
    data[2] = a2;
  }
};

//TYPE 70454: unit -> bool
struct _ft70454 {
  typedef  ::flx::rtl::cl_t rettype;
  typedef void argtype;
  virtual  ::flx::rtl::cl_t apply()=0;
  virtual _ft70454 *clone()=0;
  virtual ~_ft70454(){};
};

//TYPE 70455: bool * (unit -> bool)
struct _tt70455 {
   ::flx::rtl::cl_t mem_0;
  _ft70454* mem_1;
  _tt70455(){}
  _tt70455( ::flx::rtl::cl_t a0, _ft70454* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70456: list * string -> list
struct _ft70456 {
  typedef void* rettype;
  typedef _tt70445 argtype;
  virtual void* apply(_tt70445 const &)=0;
  virtual _ft70456 *clone()=0;
  virtual ~_ft70456(){};
};

//TYPE 70457: int * list
struct _tt70457 {
  int mem_0;
  void* mem_1;
  _tt70457(){}
  _tt70457(int a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70458: int * list -> int
struct _ft70458 {
  typedef int rettype;
  typedef _tt70457 argtype;
  virtual int apply(_tt70457 const &)=0;
  virtual _ft70458 *clone()=0;
  virtual ~_ft70458(){};
};

//TYPE 70459: int * list -> list
struct _ft70459 {
  typedef void* rettype;
  typedef _tt70457 argtype;
  virtual void* apply(_tt70457 const &)=0;
  virtual _ft70459 *clone()=0;
  virtual ~_ft70459(){};
};

//TYPE 70461: ofile * string
struct _tt70461 {
  _a7857t_70460 mem_0;
  _a13708t_70442 mem_1;
  _tt70461(){}
  _tt70461(_a7857t_70460 a0, _a13708t_70442 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70462: string * list
struct _tt70462 {
  _a13708t_70442 mem_0;
  void* mem_1;
  _tt70462(){}
  _tt70462(_a13708t_70442 a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70463: int^2
struct _at70463 {
  static ::std::size_t const len = 2;
  typedef int element_type;
  int data[2];
  _at70463() {}
  _at70463(int a0, int a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 70464: int^3 -> int
struct _ft70464 {
  typedef int rettype;
  typedef _at70452 argtype;
  virtual int apply(_at70452 const &)=0;
  virtual _ft70464 *clone()=0;
  virtual ~_ft70464(){};
};

//TYPE 70466: size^2
struct _at70466 {
  static ::std::size_t const len = 2;
  typedef _a5038t_70465 element_type;
  _a5038t_70465 data[2];
  _at70466() {}
  _at70466(_a5038t_70465 a0, _a5038t_70465 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 70468: char^2
struct _at70468 {
  static ::std::size_t const len = 2;
  typedef char element_type;
  char data[2];
  _at70468() {}
  _at70468(char a0, char a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 70469: string * size
struct _tt70469 {
  _a13708t_70442 mem_0;
  _a5038t_70465 mem_1;
  _tt70469(){}
  _tt70469(_a13708t_70442 a0, _a5038t_70465 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70471: string * int
struct _tt70471 {
  _a13708t_70442 mem_0;
  int mem_1;
  _tt70471(){}
  _tt70471(_a13708t_70442 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70473: list^2
struct _at70473 {
  static ::std::size_t const len = 2;
  typedef void* element_type;
  void* data[2];
  _at70473() {}
  _at70473(void* a0, void* a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 70474: string * list -> list
struct _ft70474 {
  typedef void* rettype;
  typedef _tt70462 argtype;
  virtual void* apply(_tt70462 const &)=0;
  virtual _ft70474 *clone()=0;
  virtual ~_ft70474(){};
};

//TYPE 70475: string * list -> string
struct _ft70475 {
  typedef _a13708t_70442 rettype;
  typedef _tt70462 argtype;
  virtual _a13708t_70442 apply(_tt70462 const &)=0;
  virtual _ft70475 *clone()=0;
  virtual ~_ft70475(){};
};

//TYPE 70476: string * int * int
struct _tt70476 {
  _a13708t_70442 mem_0;
  int mem_1;
  int mem_2;
  _tt70476(){}
  _tt70476(_a13708t_70442 a0, int a1, int a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 70479: list * string^2
struct _tt70479 {
  void* mem_0;
  _at70444 mem_1;
  _tt70479(){}
  _tt70479(void* a0, _at70444 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70481: string -> bool
struct _ft70481 {
  typedef  ::flx::rtl::cl_t rettype;
  typedef _a13708t_70442 argtype;
  virtual  ::flx::rtl::cl_t apply(_a13708t_70442 const &)=0;
  virtual _ft70481 *clone()=0;
  virtual ~_ft70481(){};
};

//TYPE 70482: (string -> bool) * list
struct _tt70482 {
  _ft70481* mem_0;
  void* mem_1;
  _tt70482(){}
  _tt70482(_ft70481* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70483: string -> void
struct _pt70483: ::flx::rtl::con_t {
  typedef void rettype;
  typedef _a13708t_70442 argtype;
  virtual ::flx::rtl::con_t *call(::flx::rtl::con_t *, _a13708t_70442 const &)=0;
  virtual _pt70483 *clone()=0;
  virtual ::flx::rtl::con_t *resume()=0;
};

//TYPE 70484: (string -> void) * list
struct _tt70484 {
  _pt70483* mem_0;
  void* mem_1;
  _tt70484(){}
  _tt70484(_pt70483* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70486: string^2 -> string
struct _ft70486 {
  typedef _a13708t_70442 rettype;
  typedef _at70444 argtype;
  virtual _a13708t_70442 apply(_at70444 const &)=0;
  virtual _ft70486 *clone()=0;
  virtual ~_ft70486(){};
};

//TYPE 70487: list * string
struct _tt70487 {
  void* mem_0;
  _a13708t_70442 mem_1;
  _tt70487(){}
  _tt70487(void* a0, _a13708t_70442 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70489: lex_iterator^2
struct _at70489 {
  static ::std::size_t const len = 2;
  typedef _a15443t_70488 element_type;
  _a15443t_70488 data[2];
  _at70489() {}
  _at70489(_a15443t_70488 a0, _a15443t_70488 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 70490: lex_iterator * string
struct _tt70490 {
  _a15443t_70488 mem_0;
  _a13708t_70442 mem_1;
  _tt70490(){}
  _tt70490(_a15443t_70488 a0, _a13708t_70442 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70491: lex_iterator * string -> string
struct _ft70491 {
  typedef _a13708t_70442 rettype;
  typedef _tt70490 argtype;
  virtual _a13708t_70442 apply(_tt70490 const &)=0;
  virtual _ft70491 *clone()=0;
  virtual ~_ft70491(){};
};

//TYPE 70492: lex_iterator * string -> lex_iterator
struct _ft70492 {
  typedef _a15443t_70488 rettype;
  typedef _tt70490 argtype;
  virtual _a15443t_70488 apply(_tt70490 const &)=0;
  virtual _ft70492 *clone()=0;
  virtual ~_ft70492(){};
};

//TYPE 70494: lex_iterator * int
struct _tt70494 {
  _a15443t_70488 mem_0;
  int mem_1;
  _tt70494(){}
  _tt70494(_a15443t_70488 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70495: string * char
struct _tt70495 {
  _a13708t_70442 mem_0;
  char mem_1;
  _tt70495(){}
  _tt70495(_a13708t_70442 a0, char a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70496: size * int
struct _tt70496 {
  _a5038t_70465 mem_0;
  int mem_1;
  _tt70496(){}
  _tt70496(_a5038t_70465 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70498: unit -> opt
struct _ft70498 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft70498 *clone()=0;
  virtual ~_ft70498(){};
};

//GENERIC STRUCT 16336 INSTANCE 70524: Win32
struct _s16336t_70524 {
  _s16336t_70524(){}
};

//TYPE 70538: list * string -> string
struct _ft70538 {
  typedef _a13708t_70442 rettype;
  typedef _tt70445 argtype;
  virtual _a13708t_70442 apply(_tt70445 const &)=0;
  virtual _ft70538 *clone()=0;
  virtual ~_ft70538(){};
};

//TYPE 70540: unit -> opt
struct _ft70540 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft70540 *clone()=0;
  virtual ~_ft70540(){};
};

//TYPE 70541: &size * size
struct _tt70541 {
  _a5038t_70465* mem_0;
  _a5038t_70465 mem_1;
  _tt70541(){}
  _tt70541(_a5038t_70465* a0, _a5038t_70465 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70543: &string * size
struct _tt70543 {
  _a13708t_70442* mem_0;
  _a5038t_70465 mem_1;
  _tt70543(){}
  _tt70543(_a13708t_70442* a0, _a5038t_70465 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70544: &string * string
struct _tt70544 {
  _a13708t_70442* mem_0;
  _a13708t_70442 mem_1;
  _tt70544(){}
  _tt70544(_a13708t_70442* a0, _a13708t_70442 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 70549: unit -> opt
struct _ft70549 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft70549 *clone()=0;
  virtual ~_ft70549(){};
};

//TYPE 70550: string * string * size
struct _tt70550 {
  _a13708t_70442 mem_0;
  _a13708t_70442 mem_1;
  _a5038t_70465 mem_2;
  _tt70550(){}
  _tt70550(_a13708t_70442 a0, _a13708t_70442 a1, _a5038t_70465 a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 70551: string * size * size
struct _tt70551 {
  _a13708t_70442 mem_0;
  _a5038t_70465 mem_1;
  _a5038t_70465 mem_2;
  _tt70551(){}
  _tt70551(_a13708t_70442 a0, _a5038t_70465 a1, _a5038t_70465 a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 70553: list * int -> int
struct _ft70553 {
  typedef int rettype;
  typedef _tt70448 argtype;
  virtual int apply(_tt70448 const &)=0;
  virtual _ft70553 *clone()=0;
  virtual ~_ft70553(){};
};

//TYPE 70554: list * int -> list
struct _ft70554 {
  typedef void* rettype;
  typedef _tt70448 argtype;
  virtual void* apply(_tt70448 const &)=0;
  virtual _ft70554 *clone()=0;
  virtual ~_ft70554(){};
};

//TYPE 70558: list * string^2 -> string^2
struct _ft70558 {
  typedef _at70444 rettype;
  typedef _tt70479 argtype;
  virtual _at70444 apply(_tt70479 const &)=0;
  virtual _ft70558 *clone()=0;
  virtual ~_ft70558(){};
};

//TYPE 70559: list * string^2 -> list
struct _ft70559 {
  typedef void* rettype;
  typedef _tt70479 argtype;
  virtual void* apply(_tt70479 const &)=0;
  virtual _ft70559 *clone()=0;
  virtual ~_ft70559(){};
};

//TYPE 70561: string * &char
struct _tt70561 {
  _a13708t_70442 mem_0;
  char* mem_1;
  _tt70561(){}
  _tt70561(_a13708t_70442 a0, char* a1):
    mem_0(a0), mem_1(a1){}
};


//-----------------------------------------
//DEFINE FUNCTION CLASS NAMES
struct isidstart;
struct flx_pkgconfig;
struct print_help;
struct lexit;
struct lexstr;
struct xfind;
struct parse_args;
struct reattach_drive_letters;
struct check_id;
struct get_field;
struct get_variable;
struct add_val;
struct tail_val;
struct keep_val;
struct handle_pkg;
struct _lam_64579;
struct _lam_64590;
struct _lam_64602;
struct _init_;
struct _fI67551___plus_;
struct iter_uncurry;
struct cat_uncurry;
struct search_and_replace_uncurry;
struct mem_uncurry;
struct aux_uncurry;
struct _lam_1326;
struct _lam_1316;
struct _lam_1397;
struct _lam_1398;
struct _fI68551_aux_uncurry;
struct _lam_1332;
struct _fI68561_aux_uncurry;
struct _fI68569__lam_1332;
struct _lam_1295;
struct aux;
struct _fI68666_aux_uncurry;
struct _fI68674__lam_1332;
struct _lam_1443;
struct _fI68687_aux_uncurry;
struct _fI68695__lam_1332;
struct _fI68700_aux_uncurry;
struct _fI68708__lam_1332;
struct _fI68748_iterator__apos_2;
struct _lam_64552;
struct _lam_168;
struct _lam_64578;
struct _fI68947_iterator__apos_2;
struct _lam_1507;
struct _lam_2304;
struct _lam_2306;
struct _lam_64559;
struct _fI69056__lam_1398;
struct _fI69058_aux_uncurry;
struct _fI69066__lam_1332;
struct _fI69068_aux_uncurry;
struct _fI69076__lam_1332;
struct _fI69185_aux_uncurry;
struct _fI69193__lam_1332;
struct _fI69243_search_and_replace__apos_2;
struct _fI69256_iterator__apos_2;
struct _fI69264__lam_1507;
struct _fI69265__lam_2304;
struct _fI69272__lam_2306;
struct _fI69316_aux_uncurry;
struct _fI69324__lam_1326;
struct _fI69333__lam_1398;
struct _fI69354__lam_1398;
struct _fI69406__lam_1398;
struct _fI69408_aux_uncurry;
struct _fI69416__lam_1332;
struct _fI69418_aux_uncurry;
struct _fI69426__lam_1332;
struct _fI69434_aux;
struct _fI69442_aux_uncurry;
struct _fI69450__lam_1332;
struct _fI69452__lam_1443;
struct _fI69498_aux_uncurry;
struct _fI69506__lam_1332;
struct _fI69515__lam_1398;
struct _fI69526__lam_1398;
struct _fI69528_aux_uncurry;
struct _fI69536__lam_1332;
struct _fI69538_aux_uncurry;
struct _fI69546__lam_1332;
struct _lam_64523;
struct _lam_64536;
struct _fI70099_aux;
struct _fI70107_aux_uncurry;
struct _fI70115__lam_1332;
struct _fI70117__lam_1443;
struct _fI70125_aux;
struct _fI70133_aux_uncurry;
struct _fI70141__lam_1332;
struct _fI70143__lam_1443;
struct _fI70149_aux;
struct _lam_2241;
struct _fI70162_aux_uncurry;
struct _fI70170__lam_1332;
struct _lam_64546;
struct _lam_64547;
struct _fI70309_aux;
struct _lam_2230;
struct _fI70322_aux_uncurry;
struct _fI70330__lam_1332;
struct _lam_64610;
struct _fI70387_iterator__apos_2;
struct _fI70395__lam_1507;
struct _lam_1375;
struct _lam_1386;
struct _lam_1385;


//-----------------------------------------
//DEFINE FUNCTION CLASSES

//------------------------------
//PURE C FUNCTION <5149>: andthen bool * (unit -> bool) -> bool
 ::flx::rtl::cl_t andthen(  ::flx::rtl::cl_t, _ft70454*);

//------------------------------
//FUNCTION <5658>: isidstart char -> bool
struct isidstart {
  FLX_FMEM_DECL

  _a5038t_70465 i_param_std_1834;
  _a5038t_70465 find_mv_2046;
  void* isidstart_mv_165;
  char x;
  isidstart(FLX_FPAR_DECL_ONLY);
  isidstart* clone();
   ::flx::rtl::cl_t apply(char const &);
};

//------------------------------
//PURE C FUNCTION <11248>: range int^3 -> list
void* range(FLX_FPAR_DECL  int, int, int);

//------------------------------
//PURE C FUNCTION <14324>: lstrip string^2 -> string
_a13708t_70442 lstrip( _a13708t_70442, _a13708t_70442);

//------------------------------
//PURE C FUNCTION <14342>: rstrip string^2 -> string
_a13708t_70442 rstrip( _a13708t_70442, _a13708t_70442);

//------------------------------
//FUNCTION <64784>: flx_pkgconfig list -> int * list
struct flx_pkgconfig {
  FLX_FMEM_DECL

  _a13708t_70442 pkg_param_flx_pkgconfig_64511;
  void* tail_param_flx_pkgconfig_64512;
  void* flx_pkgconfig_mv_64604;
  void* is_empty_mv_1309;
   ::flx::rtl::cl_t _urv70344;
  void* args;
  void* result;
  void* dirs;
  _a13708t_70442 extension;
  int keep;
   ::flx::rtl::cl_t backwards;
  int return_code;
   ::flx::rtl::cl_t listkeys;
   ::flx::rtl::cl_t dolist;
  void* recfields;
   ::flx::rtl::cl_t missing;
   ::flx::rtl::cl_t require_pkg_exists;
   ::flx::rtl::cl_t hide;
  void* pkgs;
  void* fields;
  _a13708t_70442 path;
  flx_pkgconfig(FLX_FPAR_DECL_ONLY);
  flx_pkgconfig* clone();
  _tt70457 apply(void* const &);
};

//------------------------------
//PROCEDURE <64786>: flx_pkgconfig::print_help unit -> void
struct print_help {
  flx_pkgconfig *ptrflx_pkgconfig;

  print_help  (flx_pkgconfig*);
  void stack_call();
};

//------------------------------
//FUNCTION <64790>: flx_pkgconfig::lexit lex_iterator^2 -> lex_iterator * string
struct lexit {
  flx_pkgconfig *ptrflx_pkgconfig;

  _a15443t_70488 finish;
  _a15443t_70488 ini;
  _a15443t_70488 p3;
  _a15443t_70488 p2;
  _a15443t_70488 p1;
  _a15443t_70488 start;
  lexit  (flx_pkgconfig*);
  _tt70490 apply(_at70489 const &);
};

//------------------------------
//FUNCTION <64812>: flx_pkgconfig::lexstr string -> list
struct lexstr {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a15443t_70488 next_param_flx_pkgconfig_64424;
  _a13708t_70442 lexeme_param_flx_pkgconfig_64425;
  _tt70490 lexstr_mv_64514;
  _a13708t_70442 _vI64826_s__apos_;
  void* words;
  _a15443t_70488 current;
  _a15443t_70488 _vI64816_finish;
  _a15443t_70488 first;
  _a13708t_70442 s;
  lexstr  (FLX_FPAR_DECL flx_pkgconfig*);
  lexstr* clone();
  void* apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <64854>: flx_pkgconfig::xfind string^2 -> bool
struct xfind {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5038t_70465 i_param_std_1826;
  _a5038t_70465 find_mv_2026;
  void* xfind_mv_64519;
  _a13708t_70442 c;
  _a13708t_70442 flags;
  xfind  (FLX_FPAR_DECL flx_pkgconfig*);
  xfind* clone();
   ::flx::rtl::cl_t apply(_at70444 const &);
};

//------------------------------
//PROCEDURE <64862>: flx_pkgconfig::parse_args list -> void
struct parse_args: ::flx::rtl::con_t {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _lam_64530_mv_64532;
  _a13708t_70442 _urv69735;
  _a13708t_70442 data;
  _a13708t_70442 _vI70051_x;
  _a13708t_70442 fld;
  _a13708t_70442 _vI70049_flags;
  _a13708t_70442 arg_param_flx_pkgconfig_64428;
  void* tail_param_flx_pkgconfig_64429;
  void* parse_args_mv_64525;
  void* _vI64929_args;
  parse_args  (FLX_FPAR_DECL flx_pkgconfig*);
  parse_args* clone();
  void stack_call(void* const &);
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,void* const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//FUNCTION <64931>: flx_pkgconfig::reattach_drive_letters list -> list
struct reattach_drive_letters {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t reattach_drive_letters_mv_64542;
  void* other_param_flx_pkgconfig_64479;
  _a13708t_70442 a_param_flx_pkgconfig_64476;
  _a13708t_70442 b_param_flx_pkgconfig_64477;
  void* tail_param_flx_pkgconfig_64478;
  void* reattach_drive_letters_mv_64538;
  void* _a;
  reattach_drive_letters  (FLX_FPAR_DECL flx_pkgconfig*);
  reattach_drive_letters* clone();
  void* apply(void* const &);
};

//------------------------------
//FUNCTION <64948>: flx_pkgconfig::check_id string -> bool
struct check_id: _ft70481 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI68752_x;
  _ft70498* _genout_urv68747;
  _a13708t_70442 _vI64955_s;
  char elt_param_flx_pkgconfig_64481;
  _ft70498* _generator_flx_pkgconfig_10763;
   ::flx::rtl::cl_t acc;
  void* check_id_mv_64549;
  check_id  (FLX_FPAR_DECL flx_pkgconfig*);
  check_id* clone();
   ::flx::rtl::cl_t apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <64961>: flx_pkgconfig::get_field string -> string^2
struct get_field {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5038t_70465 _vI69046_i_param_std_1834;
  _a5038t_70465 _vI69045_find_mv_2046;
  _a5038t_70465 n_param_flx_pkgconfig_64482;
  void* get_field_mv_64555;
  _a13708t_70442 line;
  get_field  (FLX_FPAR_DECL flx_pkgconfig*);
  get_field* clone();
  _at70444 apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <64969>: flx_pkgconfig::get_variable string -> string^2
struct get_variable {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t get_variable_mv_64574;
  _a13708t_70442 value_param_flx_pkgconfig_64485;
  _a13708t_70442 get_variable_mv_64570;
  _a13708t_70442 name_param_flx_pkgconfig_64484;
  _a13708t_70442 get_variable_mv_64566;
  _a5038t_70465 _vI68909_i_param_std_1834;
  _a5038t_70465 _vI68908_find_mv_2046;
  _a5038t_70465 n_param_flx_pkgconfig_64483;
  void* get_variable_mv_64561;
  _a13708t_70442 _vI64982_line;
  get_variable  (FLX_FPAR_DECL flx_pkgconfig*);
  get_variable* clone();
  _at70444 apply(_a13708t_70442 const &);
};

//------------------------------
//PROCEDURE <64983>: flx_pkgconfig::add_val string -> void
struct add_val: _pt70483 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI68548_insert_unique__apos_3_mv_1428;
  void* _urv68543;
  _a13708t_70442 v;
  add_val  (FLX_FPAR_DECL flx_pkgconfig*);
  add_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a13708t_70442 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <64987>: flx_pkgconfig::tail_val string -> void
struct tail_val: _pt70483 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI64989_v;
  tail_val  (FLX_FPAR_DECL flx_pkgconfig*);
  tail_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a13708t_70442 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <64991>: flx_pkgconfig::keep_val string -> void
struct keep_val: _pt70483 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI64993_v;
  keep_val  (FLX_FPAR_DECL flx_pkgconfig*);
  keep_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a13708t_70442 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <64995>: flx_pkgconfig::handle_pkg string * list -> void
struct handle_pkg: ::flx::rtl::con_t {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI69525_insert_unique__apos_3_mv_1428;
  void* _vI69523__urv68543;
  void* trace;
  _a13708t_70442 pkg;
   ::flx::rtl::cl_t found;
  void* variables;
  handle_pkg  (FLX_FPAR_DECL flx_pkgconfig*);
  handle_pkg* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_tt70462 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <64999>: flx_pkgconfig::handle_pkg::_lam_64579 string -> void
struct _lam_64579: _pt70483 {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _genout_urv69495;
  _a13708t_70442 _genout_urv69462;
   ::flx::rtl::cl_t _vI69405_insert_unique__apos_3_mv_1428;
  void* _vI69403__urv68543;
   ::flx::rtl::cl_t _genout_urv69398;
  _a7856t_70485 _genout_urv69397;
  _a7856t_70485 _genout_urv69388;
  _a7856t_70485 _genout_urv69390;
   ::flx::rtl::cl_t _lam_64579_mv_64581;
  _a13708t_70442 _urv69360;
  _a13708t_70442 dir;
  _a13708t_70442 _vI65006_line;
  void* lines;
  _a7856t_70485 file;
  _a13708t_70442 filename;
  int _lam_64579_mv_64585;
  _lam_64579  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _lam_64579* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a13708t_70442 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65007>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590 string -> void
struct _lam_64590: _pt70483 {
  FLX_FMEM_DECL
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  int _lam_64590_mv_64594;
  void* r;
   ::flx::rtl::cl_t _vI69055_insert_unique__apos_3_mv_1428;
  void* _vI69053__urv68543;
  _a13708t_70442 _vI65030_line;
  void* values;
  _a13708t_70442 value;
  _a13708t_70442 key;
  _at70444 _ds2_64592;
  _a13708t_70442 bdy;
  _a13708t_70442 vval;
  _a13708t_70442 variable;
  _at70444 _ds2_64591;
  _lam_64590  (FLX_FPAR_DECL _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _lam_64590* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a13708t_70442 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65026>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::_lam_64602 string -> void
struct _lam_64602: _pt70483 {
  FLX_FMEM_DECL
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI65028_s;
  _lam_64602  (FLX_FPAR_DECL _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _lam_64602* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a13708t_70442 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65090>: _init_ unit -> void
struct _init_: ::flx::rtl::con_t {
  FLX_FMEM_DECL

  _tt70457 _genout_urv70363;
  void* t_param_std_1204;
  void* tail_mv_1313;
  void* _urv68403;
  void* _vI68383_r;
  _init_(FLX_FPAR_DECL_ONLY);
  _init_* clone();
  void stack_call();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PURE C FUNCTION <67138>: eq string^2 -> bool
 ::flx::rtl::cl_t eq( _a13708t_70442, _a13708t_70442);

//------------------------------
//FUNCTION <67551>: + list * string -> list
struct _fI67551___plus_: _ft70456 {
  FLX_FMEM_DECL

  _a13708t_70442 y;
  void* _vI67552_x;
  _fI67551___plus_(FLX_FPAR_DECL_ONLY);
  _fI67551___plus_* clone();
  void* apply(_tt70445 const &);
};

//------------------------------
//PROCEDURE <68000>: iter_uncurry (string -> void) * list -> void
struct iter_uncurry: ::flx::rtl::con_t {
  FLX_FMEM_DECL

  void* t_param_std_1197;
  _a13708t_70442 h_param_std_1198;
  void* _vI68590_iter__apos_2_mv_1289;
  void* _vI68032_x;
  _pt70483* _f_uncurry;
  iter_uncurry(FLX_FPAR_DECL_ONLY);
  iter_uncurry* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_tt70484 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//FUNCTION <68005>: cat_uncurry string * list -> string
struct cat_uncurry: _ft70475 {
  FLX_FMEM_DECL

  void* xs;
  _ft70540* _genout_urv70385;
  _a13708t_70442 sep_uncurry;
  void* _vI68108_x;
  void* t_param_std_1231_param_std_1234;
  _a13708t_70442 h_param_std_1232_param_std_1235;
  void* tail_param_std_1228;
  _a13708t_70442 head_param_std_1229;
  _a13708t_70442 _vI68101_r;
  _a13708t_70442 s_param_std_1226;
  _ft70540* _generator_lists_5045;
  _a5038t_70465 n;
  void* _vI68094_cat__apos_2_mv_1381;
  void* _vI68091_cat__apos_2_mv_1377;
  void* _vI68088_cat__apos_2_mv_1372;
  cat_uncurry(FLX_FPAR_DECL_ONLY);
  cat_uncurry* clone();
  _a13708t_70442 apply(_tt70462 const &);
};

//------------------------------
//FUNCTION <68006>: search_and_replace_uncurry list * string -> string
struct search_and_replace_uncurry {
  FLX_FMEM_DECL

  _a5038t_70465 spos;
  _a5038t_70465 _vI68988_n;
  _a13708t_70442 o;
  _a5038t_70465 m;
  void* _vI68946_xs;
  _ft70549* _genout_urv68945;
  void* vs_uncurry;
  _a13708t_70442 _vI68150_v;
  _a13708t_70442 k_param_std_1958;
  _a13708t_70442 b_param_std_1959;
  _ft70549* _generator_strings_7324;
  void* _vI68141_search_and_replace__apos_2_mv_2301;
  search_and_replace_uncurry(FLX_FPAR_DECL_ONLY);
  search_and_replace_uncurry* clone();
  _a13708t_70442 apply(_tt70487 const &);
};

//------------------------------
//FUNCTION <68007>: mem_uncurry (string -> bool) * list -> bool
struct mem_uncurry {
  FLX_FMEM_DECL

   ::flx::rtl::cl_t _vI68455_mem__apos_2_mv_1393;
  void* t_param_std_1236;
  _a13708t_70442 h_param_std_1237;
  void* _vI68450_mem__apos_2_mv_1388;
  void* _vI68158_xs;
  _ft70481* eq_uncurry;
  mem_uncurry(FLX_FPAR_DECL_ONLY);
  mem_uncurry* clone();
   ::flx::rtl::cl_t apply(_tt70482 const &);
};

//------------------------------
//PURE C FUNCTION <68244>: _a68244_argv int -> string
_a13708t_70442 _a68244_argv(FLX_FPAR_DECL int);

//------------------------------
//FUNCTION <68384>: _init_::aux_uncurry list * list -> list
struct aux_uncurry {
  FLX_FMEM_DECL
  _init_ *ptr_init_;

  void* t_param_std_1207;
  int h_param_std_1208;
  void* _vI68389_aux__apos_2_mv_1322;
  void* out;
  void* inp_uncurry;
  aux_uncurry  (FLX_FPAR_DECL _init_*);
  aux_uncurry* clone();
  void* apply(_tt70450 const &);
};

//------------------------------
//FUNCTION <68392>: _init_::aux_uncurry::_lam_1326 unit -> bool
struct _lam_1326: _ft70454 {
  FLX_FMEM_DECL
  aux_uncurry *ptraux_uncurry;
  _init_ *ptr_init_;

  _lam_1326  (FLX_FPAR_DECL aux_uncurry*, _init_*);
  _lam_1326* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68408>: _init_::_lam_1316 unit -> bool
struct _lam_1316: _ft70454 {
  FLX_FMEM_DECL
  _init_ *ptr_init_;

  _lam_1316  (FLX_FPAR_DECL _init_*);
  _lam_1316* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68453>: mem_uncurry::_lam_1397 unit -> bool
struct _lam_1397: _ft70454 {
  FLX_FMEM_DECL
  mem_uncurry *ptrmem_uncurry;

  _lam_1397  (FLX_FPAR_DECL mem_uncurry*);
  _lam_1397* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68549>: flx_pkgconfig::add_val::_lam_1398 string -> bool
struct _lam_1398: _ft70481 {
  FLX_FMEM_DECL
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI68550_x;
  _lam_1398  (FLX_FPAR_DECL add_val*, flx_pkgconfig*);
  _lam_1398* clone();
   ::flx::rtl::cl_t apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <68551>: flx_pkgconfig::add_val::aux_uncurry list^2 -> list
struct _fI68551_aux_uncurry {
  FLX_FMEM_DECL
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* t_param_std_1209;
  _a13708t_70442 h_param_std_1210;
  void* _vI68556_aux__apos_2_mv_1328;
  void* _vI68553_y;
  void* x_uncurry;
  _fI68551_aux_uncurry  (FLX_FPAR_DECL add_val*, flx_pkgconfig*);
  _fI68551_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <68559>: flx_pkgconfig::add_val::aux_uncurry::_lam_1332 unit -> bool
struct _lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI68551_aux_uncurry *ptr_fI68551_aux_uncurry;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_1332  (FLX_FPAR_DECL _fI68551_aux_uncurry*, add_val*, flx_pkgconfig*);
  _lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68561>: flx_pkgconfig::add_val::aux_uncurry list^2 -> list
struct _fI68561_aux_uncurry {
  FLX_FMEM_DECL
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI68568_t_param_std_1209;
  _a13708t_70442 _vI68567_h_param_std_1210;
  void* _vI68566_aux__apos_2_mv_1328;
  void* _vI68563_y;
  void* _vI68562_x_uncurry;
  _fI68561_aux_uncurry  (FLX_FPAR_DECL add_val*, flx_pkgconfig*);
  _fI68561_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <68569>: flx_pkgconfig::add_val::aux_uncurry::_lam_1332 unit -> bool
struct _fI68569__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI68561_aux_uncurry *ptr_fI68561_aux_uncurry;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI68569__lam_1332  (FLX_FPAR_DECL _fI68561_aux_uncurry*, add_val*, flx_pkgconfig*);
  _fI68569__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68595>: iter_uncurry::_lam_1295 unit -> bool
struct _lam_1295: _ft70454 {
  FLX_FMEM_DECL
  iter_uncurry *ptriter_uncurry;

  _lam_1295  (FLX_FPAR_DECL iter_uncurry*);
  _lam_1295* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68658>: flx_pkgconfig::tail_val::aux list^2 -> list
struct aux {
  FLX_FMEM_DECL
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t aux_mv_1439;
  void* t_param_std_1242;
  _a13708t_70442 h_param_std_1243;
  void* aux_mv_1434;
  void* _vI68660_out;
  void* inp;
  aux  (FLX_FPAR_DECL tail_val*, flx_pkgconfig*);
  aux* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <68666>: flx_pkgconfig::tail_val::aux::aux_uncurry list^2 -> list
struct _fI68666_aux_uncurry {
  FLX_FMEM_DECL
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI68673_t_param_std_1209;
  _a13708t_70442 _vI68672_h_param_std_1210;
  void* _vI68671_aux__apos_2_mv_1328;
  void* _vI68668_y;
  void* _vI68667_x_uncurry;
  _fI68666_aux_uncurry  (FLX_FPAR_DECL aux*, tail_val*, flx_pkgconfig*);
  _fI68666_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <68674>: flx_pkgconfig::tail_val::aux::aux_uncurry::_lam_1332 unit -> bool
struct _fI68674__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI68666_aux_uncurry *ptr_fI68666_aux_uncurry;
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI68674__lam_1332  (FLX_FPAR_DECL _fI68666_aux_uncurry*, aux*, tail_val*, flx_pkgconfig*);
  _fI68674__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68676>: flx_pkgconfig::tail_val::aux::_lam_1443 unit -> bool
struct _lam_1443: _ft70454 {
  FLX_FMEM_DECL
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_1443  (FLX_FPAR_DECL aux*, tail_val*, flx_pkgconfig*);
  _lam_1443* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68687>: +::aux_uncurry list^2 -> list
struct _fI68687_aux_uncurry {
  FLX_FMEM_DECL
  _fI67551___plus_ *ptr_fI67551___plus_;

  void* _vI68694_t_param_std_1209;
  _a13708t_70442 _vI68693_h_param_std_1210;
  void* _vI68692_aux__apos_2_mv_1328;
  void* _vI68689_y;
  void* _vI68688_x_uncurry;
  _fI68687_aux_uncurry  (FLX_FPAR_DECL _fI67551___plus_*);
  _fI68687_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <68695>: +::aux_uncurry::_lam_1332 unit -> bool
struct _fI68695__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI68687_aux_uncurry *ptr_fI68687_aux_uncurry;
  _fI67551___plus_ *ptr_fI67551___plus_;

  _fI68695__lam_1332  (FLX_FPAR_DECL _fI68687_aux_uncurry*, _fI67551___plus_*);
  _fI68695__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68700>: +::aux_uncurry list^2 -> list
struct _fI68700_aux_uncurry {
  FLX_FMEM_DECL
  _fI67551___plus_ *ptr_fI67551___plus_;

  void* _vI68707_t_param_std_1209;
  _a13708t_70442 _vI68706_h_param_std_1210;
  void* _vI68705_aux__apos_2_mv_1328;
  void* _vI68702_y;
  void* _vI68701_x_uncurry;
  _fI68700_aux_uncurry  (FLX_FPAR_DECL _fI67551___plus_*);
  _fI68700_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <68708>: +::aux_uncurry::_lam_1332 unit -> bool
struct _fI68708__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI68700_aux_uncurry *ptr_fI68700_aux_uncurry;
  _fI67551___plus_ *ptr_fI67551___plus_;

  _fI68708__lam_1332  (FLX_FPAR_DECL _fI68700_aux_uncurry*, _fI67551___plus_*);
  _fI68708__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68748>: flx_pkgconfig::check_id::iterator'2 unit -> opt
struct _fI68748_iterator__apos_2: _ft70498 {
  FLX_FMEM_DECL
  FLX_PC_DECL
  check_id *ptrcheck_id;
  flx_pkgconfig *ptrflx_pkgconfig;

  int i;
  _fI68748_iterator__apos_2  (FLX_FPAR_DECL check_id*, flx_pkgconfig*);
  _fI68748_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <68756>: flx_pkgconfig::check_id::_lam_64552 unit -> bool
struct _lam_64552: _ft70454 {
  FLX_FMEM_DECL
  check_id *ptrcheck_id;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64552  (FLX_FPAR_DECL check_id*, flx_pkgconfig*);
  _lam_64552* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68795>: isidstart::_lam_168 unit -> bool
struct _lam_168: _ft70454 {
  FLX_FMEM_DECL
  isidstart *ptrisidstart;

  _lam_168  (FLX_FPAR_DECL isidstart*);
  _lam_168* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68912>: flx_pkgconfig::get_variable::_lam_64578 unit -> bool
struct _lam_64578: _ft70454 {
  FLX_FMEM_DECL
  get_variable *ptrget_variable;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64578  (FLX_FPAR_DECL get_variable*, flx_pkgconfig*);
  _lam_64578* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68947>: search_and_replace_uncurry::iterator'2 unit -> opt
struct _fI68947_iterator__apos_2: _ft70549 {
  FLX_FMEM_DECL
  FLX_PC_DECL
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  void* t_param_std_1259;
  _at70444 h_param_std_1260;
  void* _vI68952_iterator__apos_2_mv_1504;
  _fI68947_iterator__apos_2  (FLX_FPAR_DECL search_and_replace_uncurry*);
  _fI68947_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <68955>: search_and_replace_uncurry::iterator'2::_lam_1507 unit -> bool
struct _lam_1507: _ft70454 {
  FLX_FMEM_DECL
  _fI68947_iterator__apos_2 *ptr_fI68947_iterator__apos_2;
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_1507  (FLX_FPAR_DECL _fI68947_iterator__apos_2*, search_and_replace_uncurry*);
  _lam_1507* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68959>: search_and_replace_uncurry::_lam_2304 unit -> bool
struct _lam_2304: _ft70454 {
  FLX_FMEM_DECL
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_2304  (FLX_FPAR_DECL search_and_replace_uncurry*);
  _lam_2304* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68996>: search_and_replace_uncurry::_lam_2306 unit -> bool
struct _lam_2306: _ft70454 {
  FLX_FMEM_DECL
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_2306  (FLX_FPAR_DECL search_and_replace_uncurry*);
  _lam_2306* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69049>: flx_pkgconfig::get_field::_lam_64559 unit -> bool
struct _lam_64559: _ft70454 {
  FLX_FMEM_DECL
  get_field *ptrget_field;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64559  (FLX_FPAR_DECL get_field*, flx_pkgconfig*);
  _lam_64559* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69056>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::_lam_1398 string -> bool
struct _fI69056__lam_1398: _ft70481 {
  FLX_FMEM_DECL
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI69057_x;
  _fI69056__lam_1398  (FLX_FPAR_DECL _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69056__lam_1398* clone();
   ::flx::rtl::cl_t apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <69058>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::aux_uncurry list^2 -> list
struct _fI69058_aux_uncurry {
  FLX_FMEM_DECL
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69065_t_param_std_1209;
  _a13708t_70442 _vI69064_h_param_std_1210;
  void* _vI69063_aux__apos_2_mv_1328;
  void* _vI69060_y;
  void* _vI69059_x_uncurry;
  _fI69058_aux_uncurry  (FLX_FPAR_DECL _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69058_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69066>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::aux_uncurry::_lam_1332 unit -> bool
struct _fI69066__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69058_aux_uncurry *ptr_fI69058_aux_uncurry;
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69066__lam_1332  (FLX_FPAR_DECL _fI69058_aux_uncurry*, _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69066__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69068>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::aux_uncurry list^2 -> list
struct _fI69068_aux_uncurry {
  FLX_FMEM_DECL
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69075_t_param_std_1209;
  _a13708t_70442 _vI69074_h_param_std_1210;
  void* _vI69073_aux__apos_2_mv_1328;
  void* _vI69070_y;
  void* _vI69069_x_uncurry;
  _fI69068_aux_uncurry  (FLX_FPAR_DECL _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69068_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69076>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::aux_uncurry::_lam_1332 unit -> bool
struct _fI69076__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69068_aux_uncurry *ptr_fI69068_aux_uncurry;
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69076__lam_1332  (FLX_FPAR_DECL _fI69068_aux_uncurry*, _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69076__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69185>: flx_pkgconfig::lexstr::aux_uncurry list^2 -> list
struct _fI69185_aux_uncurry {
  FLX_FMEM_DECL
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69192_t_param_std_1209;
  _a13708t_70442 _vI69191_h_param_std_1210;
  void* _vI69190_aux__apos_2_mv_1328;
  void* _vI69187_y;
  void* _vI69186_x_uncurry;
  _fI69185_aux_uncurry  (FLX_FPAR_DECL lexstr*, flx_pkgconfig*);
  _fI69185_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69193>: flx_pkgconfig::lexstr::aux_uncurry::_lam_1332 unit -> bool
struct _fI69193__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69185_aux_uncurry *ptr_fI69185_aux_uncurry;
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69193__lam_1332  (FLX_FPAR_DECL _fI69185_aux_uncurry*, lexstr*, flx_pkgconfig*);
  _fI69193__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69243>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::search_and_replace'2 string -> string
struct _fI69243_search_and_replace__apos_2 {
  FLX_FMEM_DECL
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5038t_70465 _vI69269_spos;
  _a5038t_70465 _vI69268_n;
  _a13708t_70442 _vI69267_o;
  _a5038t_70465 _vI69266_m;
  void* _vI69255_xs;
  _ft70549* _genout_urv69202;
  _a13708t_70442 _vI69247_v;
  _a13708t_70442 _vI69246_k_param_std_1958;
  _a13708t_70442 _vI69245_b_param_std_1959;
  _ft70549* _vI69244__generator_strings_7324;
  void* _vI69242_search_and_replace__apos_2_mv_2301;
  _fI69243_search_and_replace__apos_2  (FLX_FPAR_DECL _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69243_search_and_replace__apos_2* clone();
  _a13708t_70442 apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <69256>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::search_and_replace'2::iterator'2 unit -> opt
struct _fI69256_iterator__apos_2: _ft70549 {
  FLX_FMEM_DECL
  FLX_PC_DECL
  _fI69243_search_and_replace__apos_2 *ptr_fI69243_search_and_replace__apos_2;
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69263_t_param_std_1259;
  _at70444 _vI69262_h_param_std_1260;
  void* _vI69261_iterator__apos_2_mv_1504;
  _fI69256_iterator__apos_2  (FLX_FPAR_DECL _fI69243_search_and_replace__apos_2*, _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69256_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <69264>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::search_and_replace'2::iterator'2::_lam_1507 unit -> bool
struct _fI69264__lam_1507: _ft70454 {
  FLX_FMEM_DECL
  _fI69256_iterator__apos_2 *ptr_fI69256_iterator__apos_2;
  _fI69243_search_and_replace__apos_2 *ptr_fI69243_search_and_replace__apos_2;
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69264__lam_1507  (FLX_FPAR_DECL _fI69256_iterator__apos_2*, _fI69243_search_and_replace__apos_2*, _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69264__lam_1507* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69265>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::search_and_replace'2::_lam_2304 unit -> bool
struct _fI69265__lam_2304: _ft70454 {
  FLX_FMEM_DECL
  _fI69243_search_and_replace__apos_2 *ptr_fI69243_search_and_replace__apos_2;
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69265__lam_2304  (FLX_FPAR_DECL _fI69243_search_and_replace__apos_2*, _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69265__lam_2304* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69272>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::search_and_replace'2::_lam_2306 unit -> bool
struct _fI69272__lam_2306: _ft70454 {
  FLX_FMEM_DECL
  _fI69243_search_and_replace__apos_2 *ptr_fI69243_search_and_replace__apos_2;
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69272__lam_2306  (FLX_FPAR_DECL _fI69243_search_and_replace__apos_2*, _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69272__lam_2306* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69316>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::aux_uncurry list^2 -> list
struct _fI69316_aux_uncurry {
  FLX_FMEM_DECL
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69323_t_param_std_1207;
  _a13708t_70442 _vI69322_h_param_std_1208;
  void* _vI69321_aux__apos_2_mv_1322;
  void* _vI69318_out;
  void* _vI69317_inp_uncurry;
  _fI69316_aux_uncurry  (FLX_FPAR_DECL _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69316_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69324>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::aux_uncurry::_lam_1326 unit -> bool
struct _fI69324__lam_1326: _ft70454 {
  FLX_FMEM_DECL
  _fI69316_aux_uncurry *ptr_fI69316_aux_uncurry;
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69324__lam_1326  (FLX_FPAR_DECL _fI69316_aux_uncurry*, _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69324__lam_1326* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69333>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::_lam_1398 string -> bool
struct _fI69333__lam_1398: _ft70481 {
  FLX_FMEM_DECL
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI69334_x;
  _fI69333__lam_1398  (FLX_FPAR_DECL _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69333__lam_1398* clone();
   ::flx::rtl::cl_t apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <69354>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_64590::_lam_1398 string -> bool
struct _fI69354__lam_1398: _ft70481 {
  FLX_FMEM_DECL
  _lam_64590 *ptr_lam_64590;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI69355_x;
  _fI69354__lam_1398  (FLX_FPAR_DECL _lam_64590*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69354__lam_1398* clone();
   ::flx::rtl::cl_t apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <69406>: flx_pkgconfig::handle_pkg::_lam_64579::_lam_1398 string -> bool
struct _fI69406__lam_1398: _ft70481 {
  FLX_FMEM_DECL
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI69407_x;
  _fI69406__lam_1398  (FLX_FPAR_DECL _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69406__lam_1398* clone();
   ::flx::rtl::cl_t apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <69408>: flx_pkgconfig::handle_pkg::_lam_64579::aux_uncurry list^2 -> list
struct _fI69408_aux_uncurry {
  FLX_FMEM_DECL
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69415_t_param_std_1209;
  _a13708t_70442 _vI69414_h_param_std_1210;
  void* _vI69413_aux__apos_2_mv_1328;
  void* _vI69410_y;
  void* _vI69409_x_uncurry;
  _fI69408_aux_uncurry  (FLX_FPAR_DECL _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69408_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69416>: flx_pkgconfig::handle_pkg::_lam_64579::aux_uncurry::_lam_1332 unit -> bool
struct _fI69416__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69408_aux_uncurry *ptr_fI69408_aux_uncurry;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69416__lam_1332  (FLX_FPAR_DECL _fI69408_aux_uncurry*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69416__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69418>: flx_pkgconfig::handle_pkg::_lam_64579::aux_uncurry list^2 -> list
struct _fI69418_aux_uncurry {
  FLX_FMEM_DECL
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69425_t_param_std_1209;
  _a13708t_70442 _vI69424_h_param_std_1210;
  void* _vI69423_aux__apos_2_mv_1328;
  void* _vI69420_y;
  void* _vI69419_x_uncurry;
  _fI69418_aux_uncurry  (FLX_FPAR_DECL _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69418_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69426>: flx_pkgconfig::handle_pkg::_lam_64579::aux_uncurry::_lam_1332 unit -> bool
struct _fI69426__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69418_aux_uncurry *ptr_fI69418_aux_uncurry;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69426__lam_1332  (FLX_FPAR_DECL _fI69418_aux_uncurry*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69426__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69434>: flx_pkgconfig::handle_pkg::_lam_64579::aux list^2 -> list
struct _fI69434_aux {
  FLX_FMEM_DECL
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI69454_aux_mv_1439;
  void* _vI69441_t_param_std_1242;
  _a13708t_70442 _vI69440_h_param_std_1243;
  void* _vI69439_aux_mv_1434;
  void* _vI69436_out;
  void* _vI69435_inp;
  _fI69434_aux  (FLX_FPAR_DECL _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69434_aux* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69442>: flx_pkgconfig::handle_pkg::_lam_64579::aux::aux_uncurry list^2 -> list
struct _fI69442_aux_uncurry {
  FLX_FMEM_DECL
  _fI69434_aux *ptr_fI69434_aux;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69449_t_param_std_1209;
  _a13708t_70442 _vI69448_h_param_std_1210;
  void* _vI69447_aux__apos_2_mv_1328;
  void* _vI69444_y;
  void* _vI69443_x_uncurry;
  _fI69442_aux_uncurry  (FLX_FPAR_DECL _fI69434_aux*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69442_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69450>: flx_pkgconfig::handle_pkg::_lam_64579::aux::aux_uncurry::_lam_1332 unit -> bool
struct _fI69450__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69442_aux_uncurry *ptr_fI69442_aux_uncurry;
  _fI69434_aux *ptr_fI69434_aux;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69450__lam_1332  (FLX_FPAR_DECL _fI69442_aux_uncurry*, _fI69434_aux*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69450__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69452>: flx_pkgconfig::handle_pkg::_lam_64579::aux::_lam_1443 unit -> bool
struct _fI69452__lam_1443: _ft70454 {
  FLX_FMEM_DECL
  _fI69434_aux *ptr_fI69434_aux;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69452__lam_1443  (FLX_FPAR_DECL _fI69434_aux*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69452__lam_1443* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69498>: flx_pkgconfig::handle_pkg::_lam_64579::aux_uncurry list^2 -> list
struct _fI69498_aux_uncurry {
  FLX_FMEM_DECL
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69505_t_param_std_1209;
  _a13708t_70442 _vI69504_h_param_std_1210;
  void* _vI69503_aux__apos_2_mv_1328;
  void* _vI69500_y;
  void* _vI69499_x_uncurry;
  _fI69498_aux_uncurry  (FLX_FPAR_DECL _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69498_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69506>: flx_pkgconfig::handle_pkg::_lam_64579::aux_uncurry::_lam_1332 unit -> bool
struct _fI69506__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69498_aux_uncurry *ptr_fI69498_aux_uncurry;
  _lam_64579 *ptr_lam_64579;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69506__lam_1332  (FLX_FPAR_DECL _fI69498_aux_uncurry*, _lam_64579*, handle_pkg*, flx_pkgconfig*);
  _fI69506__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69515>: flx_pkgconfig::handle_pkg::_lam_1398 string -> bool
struct _fI69515__lam_1398: _ft70481 {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI69516_x;
  _fI69515__lam_1398  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _fI69515__lam_1398* clone();
   ::flx::rtl::cl_t apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <69526>: flx_pkgconfig::handle_pkg::_lam_1398 string -> bool
struct _fI69526__lam_1398: _ft70481 {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a13708t_70442 _vI69527_x;
  _fI69526__lam_1398  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _fI69526__lam_1398* clone();
   ::flx::rtl::cl_t apply(_a13708t_70442 const &);
};

//------------------------------
//FUNCTION <69528>: flx_pkgconfig::handle_pkg::aux_uncurry list^2 -> list
struct _fI69528_aux_uncurry {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69535_t_param_std_1209;
  _a13708t_70442 _vI69534_h_param_std_1210;
  void* _vI69533_aux__apos_2_mv_1328;
  void* _vI69530_y;
  void* _vI69529_x_uncurry;
  _fI69528_aux_uncurry  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _fI69528_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69536>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_1332 unit -> bool
struct _fI69536__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69528_aux_uncurry *ptr_fI69528_aux_uncurry;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69536__lam_1332  (FLX_FPAR_DECL _fI69528_aux_uncurry*, handle_pkg*, flx_pkgconfig*);
  _fI69536__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69538>: flx_pkgconfig::handle_pkg::aux_uncurry list^2 -> list
struct _fI69538_aux_uncurry {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69545_t_param_std_1209;
  _a13708t_70442 _vI69544_h_param_std_1210;
  void* _vI69543_aux__apos_2_mv_1328;
  void* _vI69540_y;
  void* _vI69539_x_uncurry;
  _fI69538_aux_uncurry  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _fI69538_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <69546>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_1332 unit -> bool
struct _fI69546__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI69538_aux_uncurry *ptr_fI69538_aux_uncurry;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69546__lam_1332  (FLX_FPAR_DECL _fI69538_aux_uncurry*, handle_pkg*, flx_pkgconfig*);
  _fI69546__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69651>: flx_pkgconfig::xfind::_lam_64523 unit -> bool
struct _lam_64523: _ft70454 {
  FLX_FMEM_DECL
  xfind *ptrxfind;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64523  (FLX_FPAR_DECL xfind*, flx_pkgconfig*);
  _lam_64523* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70045>: flx_pkgconfig::parse_args::_lam_64536 unit -> bool
struct _lam_64536: _ft70454 {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64536  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _lam_64536* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70099>: flx_pkgconfig::parse_args::aux list^2 -> list
struct _fI70099_aux {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI70119_aux_mv_1439;
  void* _vI70106_t_param_std_1242;
  _a13708t_70442 _vI70105_h_param_std_1243;
  void* _vI70104_aux_mv_1434;
  void* _vI70101_out;
  void* _vI70100_inp;
  _fI70099_aux  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _fI70099_aux* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <70107>: flx_pkgconfig::parse_args::aux::aux_uncurry list^2 -> list
struct _fI70107_aux_uncurry {
  FLX_FMEM_DECL
  _fI70099_aux *ptr_fI70099_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70114_t_param_std_1209;
  _a13708t_70442 _vI70113_h_param_std_1210;
  void* _vI70112_aux__apos_2_mv_1328;
  void* _vI70109_y;
  void* _vI70108_x_uncurry;
  _fI70107_aux_uncurry  (FLX_FPAR_DECL _fI70099_aux*, parse_args*, flx_pkgconfig*);
  _fI70107_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <70115>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_1332 unit -> bool
struct _fI70115__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI70107_aux_uncurry *ptr_fI70107_aux_uncurry;
  _fI70099_aux *ptr_fI70099_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70115__lam_1332  (FLX_FPAR_DECL _fI70107_aux_uncurry*, _fI70099_aux*, parse_args*, flx_pkgconfig*);
  _fI70115__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70117>: flx_pkgconfig::parse_args::aux::_lam_1443 unit -> bool
struct _fI70117__lam_1443: _ft70454 {
  FLX_FMEM_DECL
  _fI70099_aux *ptr_fI70099_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70117__lam_1443  (FLX_FPAR_DECL _fI70099_aux*, parse_args*, flx_pkgconfig*);
  _fI70117__lam_1443* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70125>: flx_pkgconfig::parse_args::aux list^2 -> list
struct _fI70125_aux {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI70145_aux_mv_1439;
  void* _vI70132_t_param_std_1242;
  _a13708t_70442 _vI70131_h_param_std_1243;
  void* _vI70130_aux_mv_1434;
  void* _vI70127_out;
  void* _vI70126_inp;
  _fI70125_aux  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _fI70125_aux* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <70133>: flx_pkgconfig::parse_args::aux::aux_uncurry list^2 -> list
struct _fI70133_aux_uncurry {
  FLX_FMEM_DECL
  _fI70125_aux *ptr_fI70125_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70140_t_param_std_1209;
  _a13708t_70442 _vI70139_h_param_std_1210;
  void* _vI70138_aux__apos_2_mv_1328;
  void* _vI70135_y;
  void* _vI70134_x_uncurry;
  _fI70133_aux_uncurry  (FLX_FPAR_DECL _fI70125_aux*, parse_args*, flx_pkgconfig*);
  _fI70133_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <70141>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_1332 unit -> bool
struct _fI70141__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI70133_aux_uncurry *ptr_fI70133_aux_uncurry;
  _fI70125_aux *ptr_fI70125_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70141__lam_1332  (FLX_FPAR_DECL _fI70133_aux_uncurry*, _fI70125_aux*, parse_args*, flx_pkgconfig*);
  _fI70141__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70143>: flx_pkgconfig::parse_args::aux::_lam_1443 unit -> bool
struct _fI70143__lam_1443: _ft70454 {
  FLX_FMEM_DECL
  _fI70125_aux *ptr_fI70125_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70143__lam_1443  (FLX_FPAR_DECL _fI70125_aux*, parse_args*, flx_pkgconfig*);
  _fI70143__lam_1443* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70149>: flx_pkgconfig::parse_args::aux string * list -> list
struct _fI70149_aux: _ft70474 {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5038t_70465 i_param_std_1854;
  _a5038t_70465 find_first_of_mv_2096;
  _a5038t_70465 n_param_std_1913;
  void* aux_mv_2237;
  void* _vI70151_y;
  _a13708t_70442 _vI70150_x;
  _fI70149_aux  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _fI70149_aux* clone();
  void* apply(_tt70462 const &);
};

//------------------------------
//FUNCTION <70160>: flx_pkgconfig::parse_args::aux::_lam_2241 unit -> bool
struct _lam_2241: _ft70454 {
  FLX_FMEM_DECL
  _fI70149_aux *ptr_fI70149_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_2241  (FLX_FPAR_DECL _fI70149_aux*, parse_args*, flx_pkgconfig*);
  _lam_2241* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70162>: flx_pkgconfig::parse_args::aux_uncurry list^2 -> list
struct _fI70162_aux_uncurry {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70169_t_param_std_1209;
  _a13708t_70442 _vI70168_h_param_std_1210;
  void* _vI70167_aux__apos_2_mv_1328;
  void* _vI70164_y;
  void* _vI70163_x_uncurry;
  _fI70162_aux_uncurry  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _fI70162_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <70170>: flx_pkgconfig::parse_args::aux_uncurry::_lam_1332 unit -> bool
struct _fI70170__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI70162_aux_uncurry *ptr_fI70162_aux_uncurry;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70170__lam_1332  (FLX_FPAR_DECL _fI70162_aux_uncurry*, parse_args*, flx_pkgconfig*);
  _fI70170__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70223>: flx_pkgconfig::reattach_drive_letters::_lam_64546 unit -> bool
struct _lam_64546: _ft70454 {
  FLX_FMEM_DECL
  reattach_drive_letters *ptrreattach_drive_letters;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64546  (FLX_FPAR_DECL reattach_drive_letters*, flx_pkgconfig*);
  _lam_64546* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70224>: flx_pkgconfig::reattach_drive_letters::_lam_64546::_lam_64547 unit -> bool
struct _lam_64547: _ft70454 {
  FLX_FMEM_DECL
  _lam_64546 *ptr_lam_64546;
  reattach_drive_letters *ptrreattach_drive_letters;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64547  (FLX_FPAR_DECL _lam_64546*, reattach_drive_letters*, flx_pkgconfig*);
  _lam_64547* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70309>: flx_pkgconfig::aux string * list -> list
struct _fI70309_aux: _ft70474 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5038t_70465 _vI70317_i_param_std_1834;
  _a5038t_70465 _vI70316_find_mv_2046;
  _a5038t_70465 n_param_std_1909;
  void* aux_mv_2226;
  void* _vI70311_y;
  _a13708t_70442 _vI70310_x;
  _fI70309_aux  (FLX_FPAR_DECL flx_pkgconfig*);
  _fI70309_aux* clone();
  void* apply(_tt70462 const &);
};

//------------------------------
//FUNCTION <70320>: flx_pkgconfig::aux::_lam_2230 unit -> bool
struct _lam_2230: _ft70454 {
  FLX_FMEM_DECL
  _fI70309_aux *ptr_fI70309_aux;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_2230  (FLX_FPAR_DECL _fI70309_aux*, flx_pkgconfig*);
  _lam_2230* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70322>: flx_pkgconfig::aux_uncurry list^2 -> list
struct _fI70322_aux_uncurry {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70329_t_param_std_1209;
  _a13708t_70442 _vI70328_h_param_std_1210;
  void* _vI70327_aux__apos_2_mv_1328;
  void* _vI70324_y;
  void* _vI70323_x_uncurry;
  _fI70322_aux_uncurry  (FLX_FPAR_DECL flx_pkgconfig*);
  _fI70322_aux_uncurry* clone();
  void* apply(_at70473 const &);
};

//------------------------------
//FUNCTION <70330>: flx_pkgconfig::aux_uncurry::_lam_1332 unit -> bool
struct _fI70330__lam_1332: _ft70454 {
  FLX_FMEM_DECL
  _fI70322_aux_uncurry *ptr_fI70322_aux_uncurry;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70330__lam_1332  (FLX_FPAR_DECL _fI70322_aux_uncurry*, flx_pkgconfig*);
  _fI70330__lam_1332* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70357>: flx_pkgconfig::_lam_64610 unit -> bool
struct _lam_64610: _ft70454 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64610  (FLX_FPAR_DECL flx_pkgconfig*);
  _lam_64610* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70387>: cat_uncurry::iterator'2 unit -> opt
struct _fI70387_iterator__apos_2: _ft70540 {
  FLX_FMEM_DECL
  FLX_PC_DECL
  cat_uncurry *ptrcat_uncurry;

  void* _vI70394_t_param_std_1259;
  _a13708t_70442 _vI70393_h_param_std_1260;
  void* _vI70392_iterator__apos_2_mv_1504;
  _fI70387_iterator__apos_2  (FLX_FPAR_DECL cat_uncurry*);
  _fI70387_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <70395>: cat_uncurry::iterator'2::_lam_1507 unit -> bool
struct _fI70395__lam_1507: _ft70454 {
  FLX_FMEM_DECL
  _fI70387_iterator__apos_2 *ptr_fI70387_iterator__apos_2;
  cat_uncurry *ptrcat_uncurry;

  _fI70395__lam_1507  (FLX_FPAR_DECL _fI70387_iterator__apos_2*, cat_uncurry*);
  _fI70395__lam_1507* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70399>: cat_uncurry::_lam_1375 unit -> bool
struct _lam_1375: _ft70454 {
  FLX_FMEM_DECL
  cat_uncurry *ptrcat_uncurry;

  _lam_1375  (FLX_FPAR_DECL cat_uncurry*);
  _lam_1375* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70409>: cat_uncurry::_lam_1386 unit -> bool
struct _lam_1386: _ft70454 {
  FLX_FMEM_DECL
  cat_uncurry *ptrcat_uncurry;

  _lam_1386  (FLX_FPAR_DECL cat_uncurry*);
  _lam_1386* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70416>: cat_uncurry::_lam_1385 unit -> bool
struct _lam_1385: _ft70454 {
  FLX_FMEM_DECL
  cat_uncurry *ptrcat_uncurry;

  _lam_1385  (FLX_FPAR_DECL cat_uncurry*);
  _lam_1385* clone();
   ::flx::rtl::cl_t apply();
};

struct thread_frame_t {
  int argc;
  char **argv;
  FILE *flx_stdin;
  FILE *flx_stdout;
  FILE *flx_stderr;
  ::flx::gc::generic::gc_profile_t *gcp;
  ::flx::gc::generic::gc_shape_t * const shape_list_head;
  thread_frame_t(
  );
  void* _vI65089_result;
  int _vI65088_return_code;
  _tt70457 _ds2_64411;
  _a13708t_70442 letters;
  _a13708t_70442 lower;
  _a13708t_70442 upper;

};

FLX_DCL_THREAD_FRAME

}} // namespace flxusr::flx_pkgconfig
//header complete
#endif
