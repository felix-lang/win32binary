#ifndef _FLX_GUARD_flx_pkgconfig
#define _FLX_GUARD_flx_pkgconfig
//Input file: build\release\share\src\tools\flx_pkgconfig
//Generated by Felix Version 2016.07.12-rc1
//Timestamp: 2017/5/17 16:20:42 UTC
//Timestamp: 2017/5/17 16:20:42 (local)

//FELIX RUNTIME
#include "flx_rtl.hpp"
#include "flx_gc.hpp"
#ifndef FLX_NO_INCLUDES
#include "flx_pkgconfig.includes"
#endif


//-----------------------------------------
//USER HEADERS
#include "flx_rtl_config.hpp"
#include <ctype.h>
#include <stddef.h>
#include <stdio.h>
#include <string>
#include <cstdlib>

    namespace flx { namespace list {
      template<class T> struct snoc { void *mem_0; T mem_1; };
      template<class T> struct cons { T mem_0; void * mem_1; };
      template<class T> cons<T> snoc2cons (void *x) {
        return cons<T> {((snoc<T>*)x)->mem_1, ((snoc<T>*)x)->mem_0};
      }
    }}
  
#include "flx_serialisers.hpp"

#include <iostream>
#include "flx_ioutil.hpp"
#include "flx_strutil.hpp"
#include "flx_rtl.hpp"
#include "flx_gc.hpp"


//-----------------------------------------
//FELIX SYSTEM
namespace flxusr { namespace flx_pkgconfig {
struct thread_frame_t;

//-----------------------------------------
//NAME THE TYPES

//PRIMITIVE 14239 INSTANCE 71023: string
typedef ::std::basic_string<char> _a14239t_71023;

//TYPE 71024: bool
// typedef _us2  ::flx::rtl::cl_t;

//TYPE 71025: string^2
// typedef _at<_a14239t_71023,2> _at71025;
struct _at71025;

//TYPE 71026: list * string
// typedef _tt2<void*,_a14239t_71023> _tt71026;
struct _tt71026;

//PRIMITIVE 5084 INSTANCE 71028: int
//typedef int int;

//TYPE 71029: list * int
// typedef _tt2<void*,int> _tt71029;
struct _tt71029;

//TYPE 71031: list * list
// typedef _tt2<void*,void*> _tt71031;
struct _tt71031;

//TYPE 71033: int^3
// typedef _at<int,3> _at71033;
struct _at71033;

//TYPE 71035: unit -> bool
// typedef _ft< ::flx::rtl::cl_t, ::flx::rtl::cl_t> _ft71035;
struct _ft71035;

//TYPE 71036: bool * (unit -> bool)
// typedef _tt2< ::flx::rtl::cl_t,_ft71035*> _tt71036;
struct _tt71036;

//TYPE 71037: list * string -> list
// typedef _ft<_tt71026,void*> _ft71037;
struct _ft71037;

//TYPE 71038: int * list
// typedef _tt2<int,void*> _tt71038;
struct _tt71038;

//TYPE 71039: int * list -> int
// typedef _ft<_tt71038,int> _ft71039;
struct _ft71039;

//TYPE 71040: int * list -> list
// typedef _ft<_tt71038,void*> _ft71040;
struct _ft71040;

//PRIMITIVE 8395 INSTANCE 71041: ofile
typedef FILE* _a8395t_71041;

//TYPE 71042: ofile * string
// typedef _tt2<_a8395t_71041,_a14239t_71023> _tt71042;
struct _tt71042;

//TYPE 71043: string * list
// typedef _tt2<_a14239t_71023,void*> _tt71043;
struct _tt71043;

//TYPE 71044: int^2
// typedef _at<int,2> _at71044;
struct _at71044;

//TYPE 71045: int^3 -> int
// typedef _ft<_at71033,int> _ft71045;
struct _ft71045;

//PRIMITIVE 5094 INSTANCE 71046: size
typedef size_t _a5094t_71046;

//TYPE 71047: size^2
// typedef _at<_a5094t_71046,2> _at71047;
struct _at71047;

//PRIMITIVE 5081 INSTANCE 71048: char
//typedef char char;

//TYPE 71049: char^2
// typedef _at<char,2> _at71049;
struct _at71049;

//TYPE 71050: string * size
// typedef _tt2<_a14239t_71023,_a5094t_71046> _tt71050;
struct _tt71050;

//TYPE 71052: string * int
// typedef _tt2<_a14239t_71023,int> _tt71052;
struct _tt71052;

//TYPE 71054: list^2
// typedef _at<void*,2> _at71054;
struct _at71054;

//TYPE 71055: string * list -> list
// typedef _ft<_tt71043,void*> _ft71055;
struct _ft71055;

//TYPE 71056: string * list -> string
// typedef _ft<_tt71043,_a14239t_71023> _ft71056;
struct _ft71056;

//TYPE 71057: string * int * int
// typedef _tt3<_a14239t_71023,int,int> _tt71057;
struct _tt71057;

//TYPE 71060: list * string^2
// typedef _tt2<void*,_at71025> _tt71060;
struct _tt71060;

//TYPE 71062: string -> bool
// typedef _ft<_a14239t_71023, ::flx::rtl::cl_t> _ft71062;
struct _ft71062;

//TYPE 71063: (string -> bool) * list
// typedef _tt2<_ft71062*,void*> _tt71063;
struct _tt71063;

//TYPE 71064: string -> void
// typedef _pt<_a14239t_71023> _pt71064;
struct _pt71064;

//TYPE 71065: (string -> void) * list
// typedef _tt2<_pt71064*,void*> _tt71065;
struct _tt71065;

//PRIMITIVE 8394 INSTANCE 71066: ifile
typedef FILE* _a8394t_71066;

//TYPE 71067: string^2 -> string
// typedef _ft<_at71025,_a14239t_71023> _ft71067;
struct _ft71067;

//TYPE 71068: list * string
// typedef _tt2<void*,_a14239t_71023> _tt71068;
struct _tt71068;

//PRIMITIVE 15974 INSTANCE 71069: lex_iterator
typedef char const* _a15974t_71069;

//TYPE 71070: lex_iterator^2
// typedef _at<_a15974t_71069,2> _at71070;
struct _at71070;

//TYPE 71071: lex_iterator * string
// typedef _tt2<_a15974t_71069,_a14239t_71023> _tt71071;
struct _tt71071;

//TYPE 71072: lex_iterator * string -> string
// typedef _ft<_tt71071,_a14239t_71023> _ft71072;
struct _ft71072;

//TYPE 71073: lex_iterator * string -> lex_iterator
// typedef _ft<_tt71071,_a15974t_71069> _ft71073;
struct _ft71073;

//TYPE 71075: lex_iterator * int
// typedef _tt2<_a15974t_71069,int> _tt71075;
struct _tt71075;

//TYPE 71076: string * char
// typedef _tt2<_a14239t_71023,char> _tt71076;
struct _tt71076;

//TYPE 71077: size * int
// typedef _tt2<_a5094t_71046,int> _tt71077;
struct _tt71077;

//TYPE 71079: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft71079;
struct _ft71079;

//STRUCT 16867 INSTANCE 71105: Win32
struct _s16867t_71105;

//TYPE 71120: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft71120;
struct _ft71120;

//TYPE 71121: &size * size
// typedef _tt2<_a5094t_71046*,_a5094t_71046> _tt71121;
struct _tt71121;

//TYPE 71123: &string * size
// typedef _tt2<_a14239t_71023*,_a5094t_71046> _tt71123;
struct _tt71123;

//TYPE 71124: list * string -> string
// typedef _ft<_tt71026,_a14239t_71023> _ft71124;
struct _ft71124;

//TYPE 71125: &string * string
// typedef _tt2<_a14239t_71023*,_a14239t_71023> _tt71125;
struct _tt71125;

//TYPE 71130: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft71130;
struct _ft71130;

//TYPE 71131: string * string * size
// typedef _tt3<_a14239t_71023,_a14239t_71023,_a5094t_71046> _tt71131;
struct _tt71131;

//TYPE 71132: string * size * size
// typedef _tt3<_a14239t_71023,_a5094t_71046,_a5094t_71046> _tt71132;
struct _tt71132;

//TYPE 71134: list * int -> int
// typedef _ft<_tt71029,int> _ft71134;
struct _ft71134;

//TYPE 71135: list * int -> list
// typedef _ft<_tt71029,void*> _ft71135;
struct _ft71135;

//TYPE 71139: list * string^2 -> string^2
// typedef _ft<_tt71060,_at71025> _ft71139;
struct _ft71139;

//TYPE 71140: list * string^2 -> list
// typedef _ft<_tt71060,void*> _ft71140;
struct _ft71140;

//TYPE 71142: string * &char
// typedef _tt2<_a14239t_71023,char*> _tt71142;
struct _tt71142;


//-----------------------------------------
//DEFINE THE TYPES

//TYPE 71025: string^2
struct _at71025 {
  static ::std::size_t const len = 2;
  typedef _a14239t_71023 element_type;
  _a14239t_71023 data[2];
  _at71025() {}
  _at71025(_a14239t_71023 a0, _a14239t_71023 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 71026: list * string
struct _tt71026 {
  void* mem_0;
  _a14239t_71023 mem_1;
  _tt71026(){}
  _tt71026(void* a0, _a14239t_71023 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71029: list * int
struct _tt71029 {
  void* mem_0;
  int mem_1;
  _tt71029(){}
  _tt71029(void* a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71031: list * list
struct _tt71031 {
  void* mem_0;
  void* mem_1;
  _tt71031(){}
  _tt71031(void* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71033: int^3
struct _at71033 {
  static ::std::size_t const len = 3;
  typedef int element_type;
  int data[3];
  _at71033() {}
  _at71033(int a0, int a1, int a2) {
    data[0] = a0;
    data[1] = a1;
    data[2] = a2;
  }
};

//TYPE 71035: unit -> bool
struct _ft71035 {
  typedef  ::flx::rtl::cl_t rettype;
  typedef void argtype;
  virtual  ::flx::rtl::cl_t apply()=0;
  virtual _ft71035 *clone()=0;
  virtual ~_ft71035(){};
};

//TYPE 71036: bool * (unit -> bool)
struct _tt71036 {
   ::flx::rtl::cl_t mem_0;
  _ft71035* mem_1;
  _tt71036(){}
  _tt71036( ::flx::rtl::cl_t a0, _ft71035* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71037: list * string -> list
struct _ft71037 {
  typedef void* rettype;
  typedef _tt71026 argtype;
  virtual void* apply(_tt71026 const &)=0;
  virtual _ft71037 *clone()=0;
  virtual ~_ft71037(){};
};

//TYPE 71038: int * list
struct _tt71038 {
  int mem_0;
  void* mem_1;
  _tt71038(){}
  _tt71038(int a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71039: int * list -> int
struct _ft71039 {
  typedef int rettype;
  typedef _tt71038 argtype;
  virtual int apply(_tt71038 const &)=0;
  virtual _ft71039 *clone()=0;
  virtual ~_ft71039(){};
};

//TYPE 71040: int * list -> list
struct _ft71040 {
  typedef void* rettype;
  typedef _tt71038 argtype;
  virtual void* apply(_tt71038 const &)=0;
  virtual _ft71040 *clone()=0;
  virtual ~_ft71040(){};
};

//TYPE 71042: ofile * string
struct _tt71042 {
  _a8395t_71041 mem_0;
  _a14239t_71023 mem_1;
  _tt71042(){}
  _tt71042(_a8395t_71041 a0, _a14239t_71023 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71043: string * list
struct _tt71043 {
  _a14239t_71023 mem_0;
  void* mem_1;
  _tt71043(){}
  _tt71043(_a14239t_71023 a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71044: int^2
struct _at71044 {
  static ::std::size_t const len = 2;
  typedef int element_type;
  int data[2];
  _at71044() {}
  _at71044(int a0, int a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 71045: int^3 -> int
struct _ft71045 {
  typedef int rettype;
  typedef _at71033 argtype;
  virtual int apply(_at71033 const &)=0;
  virtual _ft71045 *clone()=0;
  virtual ~_ft71045(){};
};

//TYPE 71047: size^2
struct _at71047 {
  static ::std::size_t const len = 2;
  typedef _a5094t_71046 element_type;
  _a5094t_71046 data[2];
  _at71047() {}
  _at71047(_a5094t_71046 a0, _a5094t_71046 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 71049: char^2
struct _at71049 {
  static ::std::size_t const len = 2;
  typedef char element_type;
  char data[2];
  _at71049() {}
  _at71049(char a0, char a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 71050: string * size
struct _tt71050 {
  _a14239t_71023 mem_0;
  _a5094t_71046 mem_1;
  _tt71050(){}
  _tt71050(_a14239t_71023 a0, _a5094t_71046 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71052: string * int
struct _tt71052 {
  _a14239t_71023 mem_0;
  int mem_1;
  _tt71052(){}
  _tt71052(_a14239t_71023 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71054: list^2
struct _at71054 {
  static ::std::size_t const len = 2;
  typedef void* element_type;
  void* data[2];
  _at71054() {}
  _at71054(void* a0, void* a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 71055: string * list -> list
struct _ft71055 {
  typedef void* rettype;
  typedef _tt71043 argtype;
  virtual void* apply(_tt71043 const &)=0;
  virtual _ft71055 *clone()=0;
  virtual ~_ft71055(){};
};

//TYPE 71056: string * list -> string
struct _ft71056 {
  typedef _a14239t_71023 rettype;
  typedef _tt71043 argtype;
  virtual _a14239t_71023 apply(_tt71043 const &)=0;
  virtual _ft71056 *clone()=0;
  virtual ~_ft71056(){};
};

//TYPE 71057: string * int * int
struct _tt71057 {
  _a14239t_71023 mem_0;
  int mem_1;
  int mem_2;
  _tt71057(){}
  _tt71057(_a14239t_71023 a0, int a1, int a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 71060: list * string^2
struct _tt71060 {
  void* mem_0;
  _at71025 mem_1;
  _tt71060(){}
  _tt71060(void* a0, _at71025 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71062: string -> bool
struct _ft71062 {
  typedef  ::flx::rtl::cl_t rettype;
  typedef _a14239t_71023 argtype;
  virtual  ::flx::rtl::cl_t apply(_a14239t_71023 const &)=0;
  virtual _ft71062 *clone()=0;
  virtual ~_ft71062(){};
};

//TYPE 71063: (string -> bool) * list
struct _tt71063 {
  _ft71062* mem_0;
  void* mem_1;
  _tt71063(){}
  _tt71063(_ft71062* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71064: string -> void
struct _pt71064: ::flx::rtl::con_t {
  typedef void rettype;
  typedef _a14239t_71023 argtype;
  virtual ::flx::rtl::con_t *call(::flx::rtl::con_t *, _a14239t_71023 const &)=0;
  virtual _pt71064 *clone()=0;
  virtual ::flx::rtl::con_t *resume()=0;
};

//TYPE 71065: (string -> void) * list
struct _tt71065 {
  _pt71064* mem_0;
  void* mem_1;
  _tt71065(){}
  _tt71065(_pt71064* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71067: string^2 -> string
struct _ft71067 {
  typedef _a14239t_71023 rettype;
  typedef _at71025 argtype;
  virtual _a14239t_71023 apply(_at71025 const &)=0;
  virtual _ft71067 *clone()=0;
  virtual ~_ft71067(){};
};

//TYPE 71068: list * string
struct _tt71068 {
  void* mem_0;
  _a14239t_71023 mem_1;
  _tt71068(){}
  _tt71068(void* a0, _a14239t_71023 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71070: lex_iterator^2
struct _at71070 {
  static ::std::size_t const len = 2;
  typedef _a15974t_71069 element_type;
  _a15974t_71069 data[2];
  _at71070() {}
  _at71070(_a15974t_71069 a0, _a15974t_71069 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 71071: lex_iterator * string
struct _tt71071 {
  _a15974t_71069 mem_0;
  _a14239t_71023 mem_1;
  _tt71071(){}
  _tt71071(_a15974t_71069 a0, _a14239t_71023 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71072: lex_iterator * string -> string
struct _ft71072 {
  typedef _a14239t_71023 rettype;
  typedef _tt71071 argtype;
  virtual _a14239t_71023 apply(_tt71071 const &)=0;
  virtual _ft71072 *clone()=0;
  virtual ~_ft71072(){};
};

//TYPE 71073: lex_iterator * string -> lex_iterator
struct _ft71073 {
  typedef _a15974t_71069 rettype;
  typedef _tt71071 argtype;
  virtual _a15974t_71069 apply(_tt71071 const &)=0;
  virtual _ft71073 *clone()=0;
  virtual ~_ft71073(){};
};

//TYPE 71075: lex_iterator * int
struct _tt71075 {
  _a15974t_71069 mem_0;
  int mem_1;
  _tt71075(){}
  _tt71075(_a15974t_71069 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71076: string * char
struct _tt71076 {
  _a14239t_71023 mem_0;
  char mem_1;
  _tt71076(){}
  _tt71076(_a14239t_71023 a0, char a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71077: size * int
struct _tt71077 {
  _a5094t_71046 mem_0;
  int mem_1;
  _tt71077(){}
  _tt71077(_a5094t_71046 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71079: unit -> opt
struct _ft71079 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft71079 *clone()=0;
  virtual ~_ft71079(){};
};

//GENERIC STRUCT 16867 INSTANCE 71105: Win32
struct _s16867t_71105 {
  _s16867t_71105(){}
};

//TYPE 71120: unit -> opt
struct _ft71120 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft71120 *clone()=0;
  virtual ~_ft71120(){};
};

//TYPE 71121: &size * size
struct _tt71121 {
  _a5094t_71046* mem_0;
  _a5094t_71046 mem_1;
  _tt71121(){}
  _tt71121(_a5094t_71046* a0, _a5094t_71046 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71123: &string * size
struct _tt71123 {
  _a14239t_71023* mem_0;
  _a5094t_71046 mem_1;
  _tt71123(){}
  _tt71123(_a14239t_71023* a0, _a5094t_71046 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71124: list * string -> string
struct _ft71124 {
  typedef _a14239t_71023 rettype;
  typedef _tt71026 argtype;
  virtual _a14239t_71023 apply(_tt71026 const &)=0;
  virtual _ft71124 *clone()=0;
  virtual ~_ft71124(){};
};

//TYPE 71125: &string * string
struct _tt71125 {
  _a14239t_71023* mem_0;
  _a14239t_71023 mem_1;
  _tt71125(){}
  _tt71125(_a14239t_71023* a0, _a14239t_71023 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 71130: unit -> opt
struct _ft71130 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft71130 *clone()=0;
  virtual ~_ft71130(){};
};

//TYPE 71131: string * string * size
struct _tt71131 {
  _a14239t_71023 mem_0;
  _a14239t_71023 mem_1;
  _a5094t_71046 mem_2;
  _tt71131(){}
  _tt71131(_a14239t_71023 a0, _a14239t_71023 a1, _a5094t_71046 a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 71132: string * size * size
struct _tt71132 {
  _a14239t_71023 mem_0;
  _a5094t_71046 mem_1;
  _a5094t_71046 mem_2;
  _tt71132(){}
  _tt71132(_a14239t_71023 a0, _a5094t_71046 a1, _a5094t_71046 a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 71134: list * int -> int
struct _ft71134 {
  typedef int rettype;
  typedef _tt71029 argtype;
  virtual int apply(_tt71029 const &)=0;
  virtual _ft71134 *clone()=0;
  virtual ~_ft71134(){};
};

//TYPE 71135: list * int -> list
struct _ft71135 {
  typedef void* rettype;
  typedef _tt71029 argtype;
  virtual void* apply(_tt71029 const &)=0;
  virtual _ft71135 *clone()=0;
  virtual ~_ft71135(){};
};

//TYPE 71139: list * string^2 -> string^2
struct _ft71139 {
  typedef _at71025 rettype;
  typedef _tt71060 argtype;
  virtual _at71025 apply(_tt71060 const &)=0;
  virtual _ft71139 *clone()=0;
  virtual ~_ft71139(){};
};

//TYPE 71140: list * string^2 -> list
struct _ft71140 {
  typedef void* rettype;
  typedef _tt71060 argtype;
  virtual void* apply(_tt71060 const &)=0;
  virtual _ft71140 *clone()=0;
  virtual ~_ft71140(){};
};

//TYPE 71142: string * &char
struct _tt71142 {
  _a14239t_71023 mem_0;
  char* mem_1;
  _tt71142(){}
  _tt71142(_a14239t_71023 a0, char* a1):
    mem_0(a0), mem_1(a1){}
};


//-----------------------------------------
//DEFINE FUNCTION CLASS NAMES
struct isidstart;
struct flx_pkgconfig;
struct print_help;
struct lexit;
struct lexstr;
struct xfind;
struct parse_args;
struct reattach_drive_letters;
struct check_id;
struct get_field;
struct get_variable;
struct add_val;
struct tail_val;
struct keep_val;
struct handle_pkg;
struct _lam_65160;
struct _lam_65171;
struct _lam_65183;
struct _init_;
struct _fI68132___plus_;
struct cat_uncurry;
struct mem_uncurry;
struct search_and_replace_uncurry;
struct iter_uncurry;
struct aux_uncurry;
struct _lam_1385;
struct _lam_1375;
struct _lam_1456;
struct _lam_1457;
struct _fI69132_aux_uncurry;
struct _lam_1391;
struct _fI69142_aux_uncurry;
struct _fI69150__lam_1391;
struct _lam_1354;
struct aux;
struct _fI69247_aux_uncurry;
struct _fI69255__lam_1391;
struct _lam_1502;
struct _fI69268_aux_uncurry;
struct _fI69276__lam_1391;
struct _fI69281_aux_uncurry;
struct _fI69289__lam_1391;
struct _fI69329_iterator__apos_2;
struct _lam_65133;
struct _lam_168;
struct _lam_65159;
struct _fI69528_iterator__apos_2;
struct _lam_1566;
struct _lam_2363;
struct _lam_2365;
struct _lam_65140;
struct _fI69637__lam_1457;
struct _fI69639_aux_uncurry;
struct _fI69647__lam_1391;
struct _fI69649_aux_uncurry;
struct _fI69657__lam_1391;
struct _fI69766_aux_uncurry;
struct _fI69774__lam_1391;
struct _fI69824_search_and_replace__apos_2;
struct _fI69837_iterator__apos_2;
struct _fI69845__lam_1566;
struct _fI69846__lam_2363;
struct _fI69853__lam_2365;
struct _fI69897_aux_uncurry;
struct _fI69905__lam_1385;
struct _fI69914__lam_1457;
struct _fI69935__lam_1457;
struct _fI69987__lam_1457;
struct _fI69989_aux_uncurry;
struct _fI69997__lam_1391;
struct _fI69999_aux_uncurry;
struct _fI70007__lam_1391;
struct _fI70015_aux;
struct _fI70023_aux_uncurry;
struct _fI70031__lam_1391;
struct _fI70033__lam_1502;
struct _fI70079_aux_uncurry;
struct _fI70087__lam_1391;
struct _fI70096__lam_1457;
struct _fI70107__lam_1457;
struct _fI70109_aux_uncurry;
struct _fI70117__lam_1391;
struct _fI70119_aux_uncurry;
struct _fI70127__lam_1391;
struct _lam_65104;
struct _lam_65117;
struct _fI70680_aux;
struct _fI70688_aux_uncurry;
struct _fI70696__lam_1391;
struct _fI70698__lam_1502;
struct _fI70706_aux;
struct _fI70714_aux_uncurry;
struct _fI70722__lam_1391;
struct _fI70724__lam_1502;
struct _fI70730_aux;
struct _lam_2300;
struct _fI70743_aux_uncurry;
struct _fI70751__lam_1391;
struct _lam_65127;
struct _lam_65128;
struct _fI70890_aux;
struct _lam_2289;
struct _fI70903_aux_uncurry;
struct _fI70911__lam_1391;
struct _lam_65191;
struct _fI70968_iterator__apos_2;
struct _fI70976__lam_1566;
struct _lam_1434;
struct _lam_1445;
struct _lam_1444;


//-----------------------------------------
//DEFINE FUNCTION CLASSES

//------------------------------
//PURE C FUNCTION <5205>: andthen bool * (unit -> bool) -> bool
 ::flx::rtl::cl_t andthen(  ::flx::rtl::cl_t, _ft71035*);

//------------------------------
//FUNCTION <5714>: isidstart char -> bool
struct isidstart {
  FLX_FMEM_DECL

  _a5094t_71046 i_param_std_1893;
  _a5094t_71046 find_mv_2105;
  void* isidstart_mv_165;
  char x;
  isidstart(FLX_FPAR_DECL_ONLY);
  isidstart* clone();
   ::flx::rtl::cl_t apply(char const &);
};

//------------------------------
//PURE C FUNCTION <11786>: range int^3 -> list
void* range(FLX_FPAR_DECL  int, int, int);

//------------------------------
//PURE C FUNCTION <14855>: lstrip string^2 -> string
_a14239t_71023 lstrip( _a14239t_71023, _a14239t_71023);

//------------------------------
//PURE C FUNCTION <14873>: rstrip string^2 -> string
_a14239t_71023 rstrip( _a14239t_71023, _a14239t_71023);

//------------------------------
//FUNCTION <65365>: flx_pkgconfig list -> int * list
struct flx_pkgconfig {
  FLX_FMEM_DECL

  _a14239t_71023 pkg_param_flx_pkgconfig_65092;
  void* tail_param_flx_pkgconfig_65093;
  void* flx_pkgconfig_mv_65185;
  void* is_empty_mv_1368;
   ::flx::rtl::cl_t _urv70925;
  void* args;
  void* result;
  void* dirs;
  _a14239t_71023 extension;
  int keep;
   ::flx::rtl::cl_t backwards;
  int return_code;
   ::flx::rtl::cl_t listkeys;
   ::flx::rtl::cl_t dolist;
  void* recfields;
   ::flx::rtl::cl_t missing;
   ::flx::rtl::cl_t require_pkg_exists;
   ::flx::rtl::cl_t hide;
  void* pkgs;
  void* fields;
  _a14239t_71023 path;
  flx_pkgconfig(FLX_FPAR_DECL_ONLY);
  flx_pkgconfig* clone();
  _tt71038 apply(void* const &);
};

//------------------------------
//PROCEDURE <65367>: flx_pkgconfig::print_help unit -> void
struct print_help {
  flx_pkgconfig *ptrflx_pkgconfig;

  print_help  (flx_pkgconfig*);
  void stack_call();
};

//------------------------------
//FUNCTION <65371>: flx_pkgconfig::lexit lex_iterator^2 -> lex_iterator * string
struct lexit {
  flx_pkgconfig *ptrflx_pkgconfig;

  _a15974t_71069 finish;
  _a15974t_71069 ini;
  _a15974t_71069 p3;
  _a15974t_71069 p2;
  _a15974t_71069 p1;
  _a15974t_71069 start;
  lexit  (flx_pkgconfig*);
  _tt71071 apply(_at71070 const &);
};

//------------------------------
//FUNCTION <65393>: flx_pkgconfig::lexstr string -> list
struct lexstr {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a15974t_71069 next_param_flx_pkgconfig_65005;
  _a14239t_71023 lexeme_param_flx_pkgconfig_65006;
  _tt71071 lexstr_mv_65095;
  _a14239t_71023 _vI65407_s__apos_;
  void* words;
  _a15974t_71069 current;
  _a15974t_71069 _vI65397_finish;
  _a15974t_71069 first;
  _a14239t_71023 s;
  lexstr  (FLX_FPAR_DECL flx_pkgconfig*);
  lexstr* clone();
  void* apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <65435>: flx_pkgconfig::xfind string^2 -> bool
struct xfind {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5094t_71046 i_param_std_1885;
  _a5094t_71046 find_mv_2085;
  void* xfind_mv_65100;
  _a14239t_71023 c;
  _a14239t_71023 flags;
  xfind  (FLX_FPAR_DECL flx_pkgconfig*);
  xfind* clone();
   ::flx::rtl::cl_t apply(_at71025 const &);
};

//------------------------------
//PROCEDURE <65443>: flx_pkgconfig::parse_args list -> void
struct parse_args: ::flx::rtl::con_t {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _lam_65111_mv_65113;
  _a14239t_71023 _urv70316;
  _a14239t_71023 data;
  _a14239t_71023 _vI70632_x;
  _a14239t_71023 fld;
  _a14239t_71023 _vI70630_flags;
  _a14239t_71023 arg_param_flx_pkgconfig_65009;
  void* tail_param_flx_pkgconfig_65010;
  void* parse_args_mv_65106;
  void* _vI65510_args;
  parse_args  (FLX_FPAR_DECL flx_pkgconfig*);
  parse_args* clone();
  void stack_call(void* const &);
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,void* const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//FUNCTION <65512>: flx_pkgconfig::reattach_drive_letters list -> list
struct reattach_drive_letters {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t reattach_drive_letters_mv_65123;
  void* other_param_flx_pkgconfig_65060;
  _a14239t_71023 a_param_flx_pkgconfig_65057;
  _a14239t_71023 b_param_flx_pkgconfig_65058;
  void* tail_param_flx_pkgconfig_65059;
  void* reattach_drive_letters_mv_65119;
  void* _a;
  reattach_drive_letters  (FLX_FPAR_DECL flx_pkgconfig*);
  reattach_drive_letters* clone();
  void* apply(void* const &);
};

//------------------------------
//FUNCTION <65529>: flx_pkgconfig::check_id string -> bool
struct check_id: _ft71062 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI69333_x;
  _ft71079* _genout_urv69328;
  _a14239t_71023 _vI65536_s;
  char elt_param_flx_pkgconfig_65062;
  _ft71079* _generator_flx_pkgconfig_10995;
   ::flx::rtl::cl_t acc;
  void* check_id_mv_65130;
  check_id  (FLX_FPAR_DECL flx_pkgconfig*);
  check_id* clone();
   ::flx::rtl::cl_t apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <65542>: flx_pkgconfig::get_field string -> string^2
struct get_field {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5094t_71046 _vI69627_i_param_std_1893;
  _a5094t_71046 _vI69626_find_mv_2105;
  _a5094t_71046 n_param_flx_pkgconfig_65063;
  void* get_field_mv_65136;
  _a14239t_71023 line;
  get_field  (FLX_FPAR_DECL flx_pkgconfig*);
  get_field* clone();
  _at71025 apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <65550>: flx_pkgconfig::get_variable string -> string^2
struct get_variable {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t get_variable_mv_65155;
  _a14239t_71023 value_param_flx_pkgconfig_65066;
  _a14239t_71023 get_variable_mv_65151;
  _a14239t_71023 name_param_flx_pkgconfig_65065;
  _a14239t_71023 get_variable_mv_65147;
  _a5094t_71046 _vI69490_i_param_std_1893;
  _a5094t_71046 _vI69489_find_mv_2105;
  _a5094t_71046 n_param_flx_pkgconfig_65064;
  void* get_variable_mv_65142;
  _a14239t_71023 _vI65563_line;
  get_variable  (FLX_FPAR_DECL flx_pkgconfig*);
  get_variable* clone();
  _at71025 apply(_a14239t_71023 const &);
};

//------------------------------
//PROCEDURE <65564>: flx_pkgconfig::add_val string -> void
struct add_val: _pt71064 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI69129_insert_unique__apos_3_mv_1487;
  void* _urv69124;
  _a14239t_71023 v;
  add_val  (FLX_FPAR_DECL flx_pkgconfig*);
  add_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a14239t_71023 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65568>: flx_pkgconfig::tail_val string -> void
struct tail_val: _pt71064 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI65570_v;
  tail_val  (FLX_FPAR_DECL flx_pkgconfig*);
  tail_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a14239t_71023 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65572>: flx_pkgconfig::keep_val string -> void
struct keep_val: _pt71064 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI65574_v;
  keep_val  (FLX_FPAR_DECL flx_pkgconfig*);
  keep_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a14239t_71023 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65576>: flx_pkgconfig::handle_pkg string * list -> void
struct handle_pkg: ::flx::rtl::con_t {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI70106_insert_unique__apos_3_mv_1487;
  void* _vI70104__urv69124;
  void* trace;
  _a14239t_71023 pkg;
   ::flx::rtl::cl_t found;
  void* variables;
  handle_pkg  (FLX_FPAR_DECL flx_pkgconfig*);
  handle_pkg* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_tt71043 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65580>: flx_pkgconfig::handle_pkg::_lam_65160 string -> void
struct _lam_65160: _pt71064 {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _genout_urv70076;
  _a14239t_71023 _genout_urv70043;
   ::flx::rtl::cl_t _vI69986_insert_unique__apos_3_mv_1487;
  void* _vI69984__urv69124;
   ::flx::rtl::cl_t _genout_urv69979;
  _a8394t_71066 _genout_urv69978;
  _a8394t_71066 _genout_urv69969;
  _a8394t_71066 _genout_urv69971;
   ::flx::rtl::cl_t _lam_65160_mv_65162;
  _a14239t_71023 _urv69941;
  _a14239t_71023 dir;
  _a14239t_71023 _vI65587_line;
  void* lines;
  _a8394t_71066 file;
  _a14239t_71023 filename;
  int _lam_65160_mv_65166;
  _lam_65160  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _lam_65160* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a14239t_71023 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65588>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171 string -> void
struct _lam_65171: _pt71064 {
  FLX_FMEM_DECL
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  int _lam_65171_mv_65175;
  void* r;
   ::flx::rtl::cl_t _vI69636_insert_unique__apos_3_mv_1487;
  void* _vI69634__urv69124;
  _a14239t_71023 _vI65611_line;
  void* values;
  _a14239t_71023 value;
  _a14239t_71023 key;
  _at71025 _ds2_65173;
  _a14239t_71023 bdy;
  _a14239t_71023 vval;
  _a14239t_71023 variable;
  _at71025 _ds2_65172;
  _lam_65171  (FLX_FPAR_DECL _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _lam_65171* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a14239t_71023 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65607>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_65183 string -> void
struct _lam_65183: _pt71064 {
  FLX_FMEM_DECL
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI65609_s;
  _lam_65183  (FLX_FPAR_DECL _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _lam_65183* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a14239t_71023 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65671>: _init_ unit -> void
struct _init_: ::flx::rtl::con_t {
  FLX_FMEM_DECL

  _tt71038 _genout_urv70944;
  void* t_param_std_1263;
  void* tail_mv_1372;
  void* _urv68984;
  void* _vI68964_r;
  _init_(FLX_FPAR_DECL_ONLY);
  _init_* clone();
  void stack_call();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PURE C FUNCTION <67719>: eq string^2 -> bool
 ::flx::rtl::cl_t eq( _a14239t_71023, _a14239t_71023);

//------------------------------
//FUNCTION <68132>: + list * string -> list
struct _fI68132___plus_: _ft71037 {
  FLX_FMEM_DECL

  _a14239t_71023 y;
  void* _vI68133_x;
  _fI68132___plus_(FLX_FPAR_DECL_ONLY);
  _fI68132___plus_* clone();
  void* apply(_tt71026 const &);
};

//------------------------------
//FUNCTION <68581>: cat_uncurry string * list -> string
struct cat_uncurry: _ft71056 {
  FLX_FMEM_DECL

  void* xs;
  _ft71120* _genout_urv70966;
  _a14239t_71023 sep_uncurry;
  void* _vI68645_x;
  void* t_param_std_1290_param_std_1293;
  _a14239t_71023 h_param_std_1291_param_std_1294;
  void* tail_param_std_1287;
  _a14239t_71023 head_param_std_1288;
  _a14239t_71023 _vI68638_r;
  _a14239t_71023 s_param_std_1285;
  _ft71120* _generator_lists_5289;
  _a5094t_71046 n;
  void* _vI68631_cat__apos_2_mv_1440;
  void* _vI68628_cat__apos_2_mv_1436;
  void* _vI68625_cat__apos_2_mv_1431;
  cat_uncurry(FLX_FPAR_DECL_ONLY);
  cat_uncurry* clone();
  _a14239t_71023 apply(_tt71043 const &);
};

//------------------------------
//FUNCTION <68588>: mem_uncurry (string -> bool) * list -> bool
struct mem_uncurry {
  FLX_FMEM_DECL

   ::flx::rtl::cl_t _vI69036_mem__apos_2_mv_1452;
  void* t_param_std_1295;
  _a14239t_71023 h_param_std_1296;
  void* _vI69031_mem__apos_2_mv_1447;
  void* _vI68659_xs;
  _ft71062* eq_uncurry;
  mem_uncurry(FLX_FPAR_DECL_ONLY);
  mem_uncurry* clone();
   ::flx::rtl::cl_t apply(_tt71063 const &);
};

//------------------------------
//FUNCTION <68589>: search_and_replace_uncurry list * string -> string
struct search_and_replace_uncurry {
  FLX_FMEM_DECL

  _a5094t_71046 spos;
  _a5094t_71046 _vI69569_n;
  _a14239t_71023 o;
  _a5094t_71046 m;
  void* _vI69527_xs;
  _ft71130* _genout_urv69526;
  void* vs_uncurry;
  _a14239t_71023 _vI68746_v;
  _a14239t_71023 k_param_std_2017;
  _a14239t_71023 b_param_std_2018;
  _ft71130* _generator_strings_7556;
  void* _vI68737_search_and_replace__apos_2_mv_2360;
  search_and_replace_uncurry(FLX_FPAR_DECL_ONLY);
  search_and_replace_uncurry* clone();
  _a14239t_71023 apply(_tt71068 const &);
};

//------------------------------
//PROCEDURE <68595>: iter_uncurry (string -> void) * list -> void
struct iter_uncurry: ::flx::rtl::con_t {
  FLX_FMEM_DECL

  void* t_param_std_1256;
  _a14239t_71023 h_param_std_1257;
  void* _vI69171_iter__apos_2_mv_1348;
  void* _vI68725_x;
  _pt71064* _f_uncurry;
  iter_uncurry(FLX_FPAR_DECL_ONLY);
  iter_uncurry* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_tt71065 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PURE C FUNCTION <68825>: _a68825_argv int -> string
_a14239t_71023 _a68825_argv(FLX_FPAR_DECL int);

//------------------------------
//FUNCTION <68965>: _init_::aux_uncurry list * list -> list
struct aux_uncurry {
  FLX_FMEM_DECL
  _init_ *ptr_init_;

  void* t_param_std_1266;
  int h_param_std_1267;
  void* _vI68970_aux__apos_2_mv_1381;
  void* out;
  void* inp_uncurry;
  aux_uncurry  (FLX_FPAR_DECL _init_*);
  aux_uncurry* clone();
  void* apply(_tt71031 const &);
};

//------------------------------
//FUNCTION <68973>: _init_::aux_uncurry::_lam_1385 unit -> bool
struct _lam_1385: _ft71035 {
  FLX_FMEM_DECL
  aux_uncurry *ptraux_uncurry;
  _init_ *ptr_init_;

  _lam_1385  (FLX_FPAR_DECL aux_uncurry*, _init_*);
  _lam_1385* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <68989>: _init_::_lam_1375 unit -> bool
struct _lam_1375: _ft71035 {
  FLX_FMEM_DECL
  _init_ *ptr_init_;

  _lam_1375  (FLX_FPAR_DECL _init_*);
  _lam_1375* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69034>: mem_uncurry::_lam_1456 unit -> bool
struct _lam_1456: _ft71035 {
  FLX_FMEM_DECL
  mem_uncurry *ptrmem_uncurry;

  _lam_1456  (FLX_FPAR_DECL mem_uncurry*);
  _lam_1456* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69130>: flx_pkgconfig::add_val::_lam_1457 string -> bool
struct _lam_1457: _ft71062 {
  FLX_FMEM_DECL
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI69131_x;
  _lam_1457  (FLX_FPAR_DECL add_val*, flx_pkgconfig*);
  _lam_1457* clone();
   ::flx::rtl::cl_t apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <69132>: flx_pkgconfig::add_val::aux_uncurry list^2 -> list
struct _fI69132_aux_uncurry {
  FLX_FMEM_DECL
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* t_param_std_1268;
  _a14239t_71023 h_param_std_1269;
  void* _vI69137_aux__apos_2_mv_1387;
  void* _vI69134_y;
  void* x_uncurry;
  _fI69132_aux_uncurry  (FLX_FPAR_DECL add_val*, flx_pkgconfig*);
  _fI69132_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69140>: flx_pkgconfig::add_val::aux_uncurry::_lam_1391 unit -> bool
struct _lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69132_aux_uncurry *ptr_fI69132_aux_uncurry;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_1391  (FLX_FPAR_DECL _fI69132_aux_uncurry*, add_val*, flx_pkgconfig*);
  _lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69142>: flx_pkgconfig::add_val::aux_uncurry list^2 -> list
struct _fI69142_aux_uncurry {
  FLX_FMEM_DECL
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69149_t_param_std_1268;
  _a14239t_71023 _vI69148_h_param_std_1269;
  void* _vI69147_aux__apos_2_mv_1387;
  void* _vI69144_y;
  void* _vI69143_x_uncurry;
  _fI69142_aux_uncurry  (FLX_FPAR_DECL add_val*, flx_pkgconfig*);
  _fI69142_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69150>: flx_pkgconfig::add_val::aux_uncurry::_lam_1391 unit -> bool
struct _fI69150__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69142_aux_uncurry *ptr_fI69142_aux_uncurry;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69150__lam_1391  (FLX_FPAR_DECL _fI69142_aux_uncurry*, add_val*, flx_pkgconfig*);
  _fI69150__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69176>: iter_uncurry::_lam_1354 unit -> bool
struct _lam_1354: _ft71035 {
  FLX_FMEM_DECL
  iter_uncurry *ptriter_uncurry;

  _lam_1354  (FLX_FPAR_DECL iter_uncurry*);
  _lam_1354* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69239>: flx_pkgconfig::tail_val::aux list^2 -> list
struct aux {
  FLX_FMEM_DECL
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t aux_mv_1498;
  void* t_param_std_1301;
  _a14239t_71023 h_param_std_1302;
  void* aux_mv_1493;
  void* _vI69241_out;
  void* inp;
  aux  (FLX_FPAR_DECL tail_val*, flx_pkgconfig*);
  aux* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69247>: flx_pkgconfig::tail_val::aux::aux_uncurry list^2 -> list
struct _fI69247_aux_uncurry {
  FLX_FMEM_DECL
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69254_t_param_std_1268;
  _a14239t_71023 _vI69253_h_param_std_1269;
  void* _vI69252_aux__apos_2_mv_1387;
  void* _vI69249_y;
  void* _vI69248_x_uncurry;
  _fI69247_aux_uncurry  (FLX_FPAR_DECL aux*, tail_val*, flx_pkgconfig*);
  _fI69247_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69255>: flx_pkgconfig::tail_val::aux::aux_uncurry::_lam_1391 unit -> bool
struct _fI69255__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69247_aux_uncurry *ptr_fI69247_aux_uncurry;
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69255__lam_1391  (FLX_FPAR_DECL _fI69247_aux_uncurry*, aux*, tail_val*, flx_pkgconfig*);
  _fI69255__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69257>: flx_pkgconfig::tail_val::aux::_lam_1502 unit -> bool
struct _lam_1502: _ft71035 {
  FLX_FMEM_DECL
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_1502  (FLX_FPAR_DECL aux*, tail_val*, flx_pkgconfig*);
  _lam_1502* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69268>: +::aux_uncurry list^2 -> list
struct _fI69268_aux_uncurry {
  FLX_FMEM_DECL
  _fI68132___plus_ *ptr_fI68132___plus_;

  void* _vI69275_t_param_std_1268;
  _a14239t_71023 _vI69274_h_param_std_1269;
  void* _vI69273_aux__apos_2_mv_1387;
  void* _vI69270_y;
  void* _vI69269_x_uncurry;
  _fI69268_aux_uncurry  (FLX_FPAR_DECL _fI68132___plus_*);
  _fI69268_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69276>: +::aux_uncurry::_lam_1391 unit -> bool
struct _fI69276__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69268_aux_uncurry *ptr_fI69268_aux_uncurry;
  _fI68132___plus_ *ptr_fI68132___plus_;

  _fI69276__lam_1391  (FLX_FPAR_DECL _fI69268_aux_uncurry*, _fI68132___plus_*);
  _fI69276__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69281>: +::aux_uncurry list^2 -> list
struct _fI69281_aux_uncurry {
  FLX_FMEM_DECL
  _fI68132___plus_ *ptr_fI68132___plus_;

  void* _vI69288_t_param_std_1268;
  _a14239t_71023 _vI69287_h_param_std_1269;
  void* _vI69286_aux__apos_2_mv_1387;
  void* _vI69283_y;
  void* _vI69282_x_uncurry;
  _fI69281_aux_uncurry  (FLX_FPAR_DECL _fI68132___plus_*);
  _fI69281_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69289>: +::aux_uncurry::_lam_1391 unit -> bool
struct _fI69289__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69281_aux_uncurry *ptr_fI69281_aux_uncurry;
  _fI68132___plus_ *ptr_fI68132___plus_;

  _fI69289__lam_1391  (FLX_FPAR_DECL _fI69281_aux_uncurry*, _fI68132___plus_*);
  _fI69289__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69329>: flx_pkgconfig::check_id::iterator'2 unit -> opt
struct _fI69329_iterator__apos_2: _ft71079 {
  FLX_FMEM_DECL
  FLX_PC_DECL
  check_id *ptrcheck_id;
  flx_pkgconfig *ptrflx_pkgconfig;

  int i;
  _fI69329_iterator__apos_2  (FLX_FPAR_DECL check_id*, flx_pkgconfig*);
  _fI69329_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <69337>: flx_pkgconfig::check_id::_lam_65133 unit -> bool
struct _lam_65133: _ft71035 {
  FLX_FMEM_DECL
  check_id *ptrcheck_id;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_65133  (FLX_FPAR_DECL check_id*, flx_pkgconfig*);
  _lam_65133* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69376>: isidstart::_lam_168 unit -> bool
struct _lam_168: _ft71035 {
  FLX_FMEM_DECL
  isidstart *ptrisidstart;

  _lam_168  (FLX_FPAR_DECL isidstart*);
  _lam_168* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69493>: flx_pkgconfig::get_variable::_lam_65159 unit -> bool
struct _lam_65159: _ft71035 {
  FLX_FMEM_DECL
  get_variable *ptrget_variable;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_65159  (FLX_FPAR_DECL get_variable*, flx_pkgconfig*);
  _lam_65159* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69528>: search_and_replace_uncurry::iterator'2 unit -> opt
struct _fI69528_iterator__apos_2: _ft71130 {
  FLX_FMEM_DECL
  FLX_PC_DECL
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  void* t_param_std_1318;
  _at71025 h_param_std_1319;
  void* _vI69533_iterator__apos_2_mv_1563;
  _fI69528_iterator__apos_2  (FLX_FPAR_DECL search_and_replace_uncurry*);
  _fI69528_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <69536>: search_and_replace_uncurry::iterator'2::_lam_1566 unit -> bool
struct _lam_1566: _ft71035 {
  FLX_FMEM_DECL
  _fI69528_iterator__apos_2 *ptr_fI69528_iterator__apos_2;
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_1566  (FLX_FPAR_DECL _fI69528_iterator__apos_2*, search_and_replace_uncurry*);
  _lam_1566* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69540>: search_and_replace_uncurry::_lam_2363 unit -> bool
struct _lam_2363: _ft71035 {
  FLX_FMEM_DECL
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_2363  (FLX_FPAR_DECL search_and_replace_uncurry*);
  _lam_2363* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69577>: search_and_replace_uncurry::_lam_2365 unit -> bool
struct _lam_2365: _ft71035 {
  FLX_FMEM_DECL
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_2365  (FLX_FPAR_DECL search_and_replace_uncurry*);
  _lam_2365* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69630>: flx_pkgconfig::get_field::_lam_65140 unit -> bool
struct _lam_65140: _ft71035 {
  FLX_FMEM_DECL
  get_field *ptrget_field;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_65140  (FLX_FPAR_DECL get_field*, flx_pkgconfig*);
  _lam_65140* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69637>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_1457 string -> bool
struct _fI69637__lam_1457: _ft71062 {
  FLX_FMEM_DECL
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI69638_x;
  _fI69637__lam_1457  (FLX_FPAR_DECL _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69637__lam_1457* clone();
   ::flx::rtl::cl_t apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <69639>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry list^2 -> list
struct _fI69639_aux_uncurry {
  FLX_FMEM_DECL
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69646_t_param_std_1268;
  _a14239t_71023 _vI69645_h_param_std_1269;
  void* _vI69644_aux__apos_2_mv_1387;
  void* _vI69641_y;
  void* _vI69640_x_uncurry;
  _fI69639_aux_uncurry  (FLX_FPAR_DECL _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69639_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69647>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry::_lam_1391 unit -> bool
struct _fI69647__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69639_aux_uncurry *ptr_fI69639_aux_uncurry;
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69647__lam_1391  (FLX_FPAR_DECL _fI69639_aux_uncurry*, _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69647__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69649>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry list^2 -> list
struct _fI69649_aux_uncurry {
  FLX_FMEM_DECL
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69656_t_param_std_1268;
  _a14239t_71023 _vI69655_h_param_std_1269;
  void* _vI69654_aux__apos_2_mv_1387;
  void* _vI69651_y;
  void* _vI69650_x_uncurry;
  _fI69649_aux_uncurry  (FLX_FPAR_DECL _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69649_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69657>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry::_lam_1391 unit -> bool
struct _fI69657__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69649_aux_uncurry *ptr_fI69649_aux_uncurry;
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69657__lam_1391  (FLX_FPAR_DECL _fI69649_aux_uncurry*, _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69657__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69766>: flx_pkgconfig::lexstr::aux_uncurry list^2 -> list
struct _fI69766_aux_uncurry {
  FLX_FMEM_DECL
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69773_t_param_std_1268;
  _a14239t_71023 _vI69772_h_param_std_1269;
  void* _vI69771_aux__apos_2_mv_1387;
  void* _vI69768_y;
  void* _vI69767_x_uncurry;
  _fI69766_aux_uncurry  (FLX_FPAR_DECL lexstr*, flx_pkgconfig*);
  _fI69766_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69774>: flx_pkgconfig::lexstr::aux_uncurry::_lam_1391 unit -> bool
struct _fI69774__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69766_aux_uncurry *ptr_fI69766_aux_uncurry;
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69774__lam_1391  (FLX_FPAR_DECL _fI69766_aux_uncurry*, lexstr*, flx_pkgconfig*);
  _fI69774__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69824>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2 string -> string
struct _fI69824_search_and_replace__apos_2 {
  FLX_FMEM_DECL
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5094t_71046 _vI69850_spos;
  _a5094t_71046 _vI69849_n;
  _a14239t_71023 _vI69848_o;
  _a5094t_71046 _vI69847_m;
  void* _vI69836_xs;
  _ft71130* _genout_urv69783;
  _a14239t_71023 _vI69828_v;
  _a14239t_71023 _vI69827_k_param_std_2017;
  _a14239t_71023 _vI69826_b_param_std_2018;
  _ft71130* _vI69825__generator_strings_7556;
  void* _vI69823_search_and_replace__apos_2_mv_2360;
  _fI69824_search_and_replace__apos_2  (FLX_FPAR_DECL _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69824_search_and_replace__apos_2* clone();
  _a14239t_71023 apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <69837>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2::iterator'2 unit -> opt
struct _fI69837_iterator__apos_2: _ft71130 {
  FLX_FMEM_DECL
  FLX_PC_DECL
  _fI69824_search_and_replace__apos_2 *ptr_fI69824_search_and_replace__apos_2;
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69844_t_param_std_1318;
  _at71025 _vI69843_h_param_std_1319;
  void* _vI69842_iterator__apos_2_mv_1563;
  _fI69837_iterator__apos_2  (FLX_FPAR_DECL _fI69824_search_and_replace__apos_2*, _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69837_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <69845>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2::iterator'2::_lam_1566 unit -> bool
struct _fI69845__lam_1566: _ft71035 {
  FLX_FMEM_DECL
  _fI69837_iterator__apos_2 *ptr_fI69837_iterator__apos_2;
  _fI69824_search_and_replace__apos_2 *ptr_fI69824_search_and_replace__apos_2;
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69845__lam_1566  (FLX_FPAR_DECL _fI69837_iterator__apos_2*, _fI69824_search_and_replace__apos_2*, _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69845__lam_1566* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69846>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2::_lam_2363 unit -> bool
struct _fI69846__lam_2363: _ft71035 {
  FLX_FMEM_DECL
  _fI69824_search_and_replace__apos_2 *ptr_fI69824_search_and_replace__apos_2;
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69846__lam_2363  (FLX_FPAR_DECL _fI69824_search_and_replace__apos_2*, _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69846__lam_2363* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69853>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::search_and_replace'2::_lam_2365 unit -> bool
struct _fI69853__lam_2365: _ft71035 {
  FLX_FMEM_DECL
  _fI69824_search_and_replace__apos_2 *ptr_fI69824_search_and_replace__apos_2;
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69853__lam_2365  (FLX_FPAR_DECL _fI69824_search_and_replace__apos_2*, _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69853__lam_2365* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69897>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry list^2 -> list
struct _fI69897_aux_uncurry {
  FLX_FMEM_DECL
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69904_t_param_std_1266;
  _a14239t_71023 _vI69903_h_param_std_1267;
  void* _vI69902_aux__apos_2_mv_1381;
  void* _vI69899_out;
  void* _vI69898_inp_uncurry;
  _fI69897_aux_uncurry  (FLX_FPAR_DECL _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69897_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69905>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::aux_uncurry::_lam_1385 unit -> bool
struct _fI69905__lam_1385: _ft71035 {
  FLX_FMEM_DECL
  _fI69897_aux_uncurry *ptr_fI69897_aux_uncurry;
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69905__lam_1385  (FLX_FPAR_DECL _fI69897_aux_uncurry*, _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69905__lam_1385* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69914>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_1457 string -> bool
struct _fI69914__lam_1457: _ft71062 {
  FLX_FMEM_DECL
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI69915_x;
  _fI69914__lam_1457  (FLX_FPAR_DECL _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69914__lam_1457* clone();
   ::flx::rtl::cl_t apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <69935>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_65171::_lam_1457 string -> bool
struct _fI69935__lam_1457: _ft71062 {
  FLX_FMEM_DECL
  _lam_65171 *ptr_lam_65171;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI69936_x;
  _fI69935__lam_1457  (FLX_FPAR_DECL _lam_65171*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69935__lam_1457* clone();
   ::flx::rtl::cl_t apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <69987>: flx_pkgconfig::handle_pkg::_lam_65160::_lam_1457 string -> bool
struct _fI69987__lam_1457: _ft71062 {
  FLX_FMEM_DECL
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI69988_x;
  _fI69987__lam_1457  (FLX_FPAR_DECL _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69987__lam_1457* clone();
   ::flx::rtl::cl_t apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <69989>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry list^2 -> list
struct _fI69989_aux_uncurry {
  FLX_FMEM_DECL
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI69996_t_param_std_1268;
  _a14239t_71023 _vI69995_h_param_std_1269;
  void* _vI69994_aux__apos_2_mv_1387;
  void* _vI69991_y;
  void* _vI69990_x_uncurry;
  _fI69989_aux_uncurry  (FLX_FPAR_DECL _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69989_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <69997>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry::_lam_1391 unit -> bool
struct _fI69997__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69989_aux_uncurry *ptr_fI69989_aux_uncurry;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI69997__lam_1391  (FLX_FPAR_DECL _fI69989_aux_uncurry*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69997__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <69999>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry list^2 -> list
struct _fI69999_aux_uncurry {
  FLX_FMEM_DECL
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70006_t_param_std_1268;
  _a14239t_71023 _vI70005_h_param_std_1269;
  void* _vI70004_aux__apos_2_mv_1387;
  void* _vI70001_y;
  void* _vI70000_x_uncurry;
  _fI69999_aux_uncurry  (FLX_FPAR_DECL _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI69999_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70007>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry::_lam_1391 unit -> bool
struct _fI70007__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI69999_aux_uncurry *ptr_fI69999_aux_uncurry;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70007__lam_1391  (FLX_FPAR_DECL _fI69999_aux_uncurry*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI70007__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70015>: flx_pkgconfig::handle_pkg::_lam_65160::aux list^2 -> list
struct _fI70015_aux {
  FLX_FMEM_DECL
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI70035_aux_mv_1498;
  void* _vI70022_t_param_std_1301;
  _a14239t_71023 _vI70021_h_param_std_1302;
  void* _vI70020_aux_mv_1493;
  void* _vI70017_out;
  void* _vI70016_inp;
  _fI70015_aux  (FLX_FPAR_DECL _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI70015_aux* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70023>: flx_pkgconfig::handle_pkg::_lam_65160::aux::aux_uncurry list^2 -> list
struct _fI70023_aux_uncurry {
  FLX_FMEM_DECL
  _fI70015_aux *ptr_fI70015_aux;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70030_t_param_std_1268;
  _a14239t_71023 _vI70029_h_param_std_1269;
  void* _vI70028_aux__apos_2_mv_1387;
  void* _vI70025_y;
  void* _vI70024_x_uncurry;
  _fI70023_aux_uncurry  (FLX_FPAR_DECL _fI70015_aux*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI70023_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70031>: flx_pkgconfig::handle_pkg::_lam_65160::aux::aux_uncurry::_lam_1391 unit -> bool
struct _fI70031__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI70023_aux_uncurry *ptr_fI70023_aux_uncurry;
  _fI70015_aux *ptr_fI70015_aux;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70031__lam_1391  (FLX_FPAR_DECL _fI70023_aux_uncurry*, _fI70015_aux*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI70031__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70033>: flx_pkgconfig::handle_pkg::_lam_65160::aux::_lam_1502 unit -> bool
struct _fI70033__lam_1502: _ft71035 {
  FLX_FMEM_DECL
  _fI70015_aux *ptr_fI70015_aux;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70033__lam_1502  (FLX_FPAR_DECL _fI70015_aux*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI70033__lam_1502* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70079>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry list^2 -> list
struct _fI70079_aux_uncurry {
  FLX_FMEM_DECL
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70086_t_param_std_1268;
  _a14239t_71023 _vI70085_h_param_std_1269;
  void* _vI70084_aux__apos_2_mv_1387;
  void* _vI70081_y;
  void* _vI70080_x_uncurry;
  _fI70079_aux_uncurry  (FLX_FPAR_DECL _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI70079_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70087>: flx_pkgconfig::handle_pkg::_lam_65160::aux_uncurry::_lam_1391 unit -> bool
struct _fI70087__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI70079_aux_uncurry *ptr_fI70079_aux_uncurry;
  _lam_65160 *ptr_lam_65160;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70087__lam_1391  (FLX_FPAR_DECL _fI70079_aux_uncurry*, _lam_65160*, handle_pkg*, flx_pkgconfig*);
  _fI70087__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70096>: flx_pkgconfig::handle_pkg::_lam_1457 string -> bool
struct _fI70096__lam_1457: _ft71062 {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI70097_x;
  _fI70096__lam_1457  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _fI70096__lam_1457* clone();
   ::flx::rtl::cl_t apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <70107>: flx_pkgconfig::handle_pkg::_lam_1457 string -> bool
struct _fI70107__lam_1457: _ft71062 {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a14239t_71023 _vI70108_x;
  _fI70107__lam_1457  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _fI70107__lam_1457* clone();
   ::flx::rtl::cl_t apply(_a14239t_71023 const &);
};

//------------------------------
//FUNCTION <70109>: flx_pkgconfig::handle_pkg::aux_uncurry list^2 -> list
struct _fI70109_aux_uncurry {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70116_t_param_std_1268;
  _a14239t_71023 _vI70115_h_param_std_1269;
  void* _vI70114_aux__apos_2_mv_1387;
  void* _vI70111_y;
  void* _vI70110_x_uncurry;
  _fI70109_aux_uncurry  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _fI70109_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70117>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_1391 unit -> bool
struct _fI70117__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI70109_aux_uncurry *ptr_fI70109_aux_uncurry;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70117__lam_1391  (FLX_FPAR_DECL _fI70109_aux_uncurry*, handle_pkg*, flx_pkgconfig*);
  _fI70117__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70119>: flx_pkgconfig::handle_pkg::aux_uncurry list^2 -> list
struct _fI70119_aux_uncurry {
  FLX_FMEM_DECL
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70126_t_param_std_1268;
  _a14239t_71023 _vI70125_h_param_std_1269;
  void* _vI70124_aux__apos_2_mv_1387;
  void* _vI70121_y;
  void* _vI70120_x_uncurry;
  _fI70119_aux_uncurry  (FLX_FPAR_DECL handle_pkg*, flx_pkgconfig*);
  _fI70119_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70127>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_1391 unit -> bool
struct _fI70127__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI70119_aux_uncurry *ptr_fI70119_aux_uncurry;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70127__lam_1391  (FLX_FPAR_DECL _fI70119_aux_uncurry*, handle_pkg*, flx_pkgconfig*);
  _fI70127__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70232>: flx_pkgconfig::xfind::_lam_65104 unit -> bool
struct _lam_65104: _ft71035 {
  FLX_FMEM_DECL
  xfind *ptrxfind;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_65104  (FLX_FPAR_DECL xfind*, flx_pkgconfig*);
  _lam_65104* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70626>: flx_pkgconfig::parse_args::_lam_65117 unit -> bool
struct _lam_65117: _ft71035 {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_65117  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _lam_65117* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70680>: flx_pkgconfig::parse_args::aux list^2 -> list
struct _fI70680_aux {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI70700_aux_mv_1498;
  void* _vI70687_t_param_std_1301;
  _a14239t_71023 _vI70686_h_param_std_1302;
  void* _vI70685_aux_mv_1493;
  void* _vI70682_out;
  void* _vI70681_inp;
  _fI70680_aux  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _fI70680_aux* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70688>: flx_pkgconfig::parse_args::aux::aux_uncurry list^2 -> list
struct _fI70688_aux_uncurry {
  FLX_FMEM_DECL
  _fI70680_aux *ptr_fI70680_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70695_t_param_std_1268;
  _a14239t_71023 _vI70694_h_param_std_1269;
  void* _vI70693_aux__apos_2_mv_1387;
  void* _vI70690_y;
  void* _vI70689_x_uncurry;
  _fI70688_aux_uncurry  (FLX_FPAR_DECL _fI70680_aux*, parse_args*, flx_pkgconfig*);
  _fI70688_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70696>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_1391 unit -> bool
struct _fI70696__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI70688_aux_uncurry *ptr_fI70688_aux_uncurry;
  _fI70680_aux *ptr_fI70680_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70696__lam_1391  (FLX_FPAR_DECL _fI70688_aux_uncurry*, _fI70680_aux*, parse_args*, flx_pkgconfig*);
  _fI70696__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70698>: flx_pkgconfig::parse_args::aux::_lam_1502 unit -> bool
struct _fI70698__lam_1502: _ft71035 {
  FLX_FMEM_DECL
  _fI70680_aux *ptr_fI70680_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70698__lam_1502  (FLX_FPAR_DECL _fI70680_aux*, parse_args*, flx_pkgconfig*);
  _fI70698__lam_1502* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70706>: flx_pkgconfig::parse_args::aux list^2 -> list
struct _fI70706_aux {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI70726_aux_mv_1498;
  void* _vI70713_t_param_std_1301;
  _a14239t_71023 _vI70712_h_param_std_1302;
  void* _vI70711_aux_mv_1493;
  void* _vI70708_out;
  void* _vI70707_inp;
  _fI70706_aux  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _fI70706_aux* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70714>: flx_pkgconfig::parse_args::aux::aux_uncurry list^2 -> list
struct _fI70714_aux_uncurry {
  FLX_FMEM_DECL
  _fI70706_aux *ptr_fI70706_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70721_t_param_std_1268;
  _a14239t_71023 _vI70720_h_param_std_1269;
  void* _vI70719_aux__apos_2_mv_1387;
  void* _vI70716_y;
  void* _vI70715_x_uncurry;
  _fI70714_aux_uncurry  (FLX_FPAR_DECL _fI70706_aux*, parse_args*, flx_pkgconfig*);
  _fI70714_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70722>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_1391 unit -> bool
struct _fI70722__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI70714_aux_uncurry *ptr_fI70714_aux_uncurry;
  _fI70706_aux *ptr_fI70706_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70722__lam_1391  (FLX_FPAR_DECL _fI70714_aux_uncurry*, _fI70706_aux*, parse_args*, flx_pkgconfig*);
  _fI70722__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70724>: flx_pkgconfig::parse_args::aux::_lam_1502 unit -> bool
struct _fI70724__lam_1502: _ft71035 {
  FLX_FMEM_DECL
  _fI70706_aux *ptr_fI70706_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70724__lam_1502  (FLX_FPAR_DECL _fI70706_aux*, parse_args*, flx_pkgconfig*);
  _fI70724__lam_1502* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70730>: flx_pkgconfig::parse_args::aux string * list -> list
struct _fI70730_aux: _ft71055 {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5094t_71046 i_param_std_1913;
  _a5094t_71046 find_first_of_mv_2155;
  _a5094t_71046 n_param_std_1972;
  void* aux_mv_2296;
  void* _vI70732_y;
  _a14239t_71023 _vI70731_x;
  _fI70730_aux  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _fI70730_aux* clone();
  void* apply(_tt71043 const &);
};

//------------------------------
//FUNCTION <70741>: flx_pkgconfig::parse_args::aux::_lam_2300 unit -> bool
struct _lam_2300: _ft71035 {
  FLX_FMEM_DECL
  _fI70730_aux *ptr_fI70730_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_2300  (FLX_FPAR_DECL _fI70730_aux*, parse_args*, flx_pkgconfig*);
  _lam_2300* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70743>: flx_pkgconfig::parse_args::aux_uncurry list^2 -> list
struct _fI70743_aux_uncurry {
  FLX_FMEM_DECL
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70750_t_param_std_1268;
  _a14239t_71023 _vI70749_h_param_std_1269;
  void* _vI70748_aux__apos_2_mv_1387;
  void* _vI70745_y;
  void* _vI70744_x_uncurry;
  _fI70743_aux_uncurry  (FLX_FPAR_DECL parse_args*, flx_pkgconfig*);
  _fI70743_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70751>: flx_pkgconfig::parse_args::aux_uncurry::_lam_1391 unit -> bool
struct _fI70751__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI70743_aux_uncurry *ptr_fI70743_aux_uncurry;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70751__lam_1391  (FLX_FPAR_DECL _fI70743_aux_uncurry*, parse_args*, flx_pkgconfig*);
  _fI70751__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70804>: flx_pkgconfig::reattach_drive_letters::_lam_65127 unit -> bool
struct _lam_65127: _ft71035 {
  FLX_FMEM_DECL
  reattach_drive_letters *ptrreattach_drive_letters;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_65127  (FLX_FPAR_DECL reattach_drive_letters*, flx_pkgconfig*);
  _lam_65127* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70805>: flx_pkgconfig::reattach_drive_letters::_lam_65127::_lam_65128 unit -> bool
struct _lam_65128: _ft71035 {
  FLX_FMEM_DECL
  _lam_65127 *ptr_lam_65127;
  reattach_drive_letters *ptrreattach_drive_letters;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_65128  (FLX_FPAR_DECL _lam_65127*, reattach_drive_letters*, flx_pkgconfig*);
  _lam_65128* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70890>: flx_pkgconfig::aux string * list -> list
struct _fI70890_aux: _ft71055 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _a5094t_71046 _vI70898_i_param_std_1893;
  _a5094t_71046 _vI70897_find_mv_2105;
  _a5094t_71046 n_param_std_1968;
  void* aux_mv_2285;
  void* _vI70892_y;
  _a14239t_71023 _vI70891_x;
  _fI70890_aux  (FLX_FPAR_DECL flx_pkgconfig*);
  _fI70890_aux* clone();
  void* apply(_tt71043 const &);
};

//------------------------------
//FUNCTION <70901>: flx_pkgconfig::aux::_lam_2289 unit -> bool
struct _lam_2289: _ft71035 {
  FLX_FMEM_DECL
  _fI70890_aux *ptr_fI70890_aux;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_2289  (FLX_FPAR_DECL _fI70890_aux*, flx_pkgconfig*);
  _lam_2289* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70903>: flx_pkgconfig::aux_uncurry list^2 -> list
struct _fI70903_aux_uncurry {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI70910_t_param_std_1268;
  _a14239t_71023 _vI70909_h_param_std_1269;
  void* _vI70908_aux__apos_2_mv_1387;
  void* _vI70905_y;
  void* _vI70904_x_uncurry;
  _fI70903_aux_uncurry  (FLX_FPAR_DECL flx_pkgconfig*);
  _fI70903_aux_uncurry* clone();
  void* apply(_at71054 const &);
};

//------------------------------
//FUNCTION <70911>: flx_pkgconfig::aux_uncurry::_lam_1391 unit -> bool
struct _fI70911__lam_1391: _ft71035 {
  FLX_FMEM_DECL
  _fI70903_aux_uncurry *ptr_fI70903_aux_uncurry;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI70911__lam_1391  (FLX_FPAR_DECL _fI70903_aux_uncurry*, flx_pkgconfig*);
  _fI70911__lam_1391* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70938>: flx_pkgconfig::_lam_65191 unit -> bool
struct _lam_65191: _ft71035 {
  FLX_FMEM_DECL
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_65191  (FLX_FPAR_DECL flx_pkgconfig*);
  _lam_65191* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70968>: cat_uncurry::iterator'2 unit -> opt
struct _fI70968_iterator__apos_2: _ft71120 {
  FLX_FMEM_DECL
  FLX_PC_DECL
  cat_uncurry *ptrcat_uncurry;

  void* _vI70975_t_param_std_1318;
  _a14239t_71023 _vI70974_h_param_std_1319;
  void* _vI70973_iterator__apos_2_mv_1563;
  _fI70968_iterator__apos_2  (FLX_FPAR_DECL cat_uncurry*);
  _fI70968_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <70976>: cat_uncurry::iterator'2::_lam_1566 unit -> bool
struct _fI70976__lam_1566: _ft71035 {
  FLX_FMEM_DECL
  _fI70968_iterator__apos_2 *ptr_fI70968_iterator__apos_2;
  cat_uncurry *ptrcat_uncurry;

  _fI70976__lam_1566  (FLX_FPAR_DECL _fI70968_iterator__apos_2*, cat_uncurry*);
  _fI70976__lam_1566* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70980>: cat_uncurry::_lam_1434 unit -> bool
struct _lam_1434: _ft71035 {
  FLX_FMEM_DECL
  cat_uncurry *ptrcat_uncurry;

  _lam_1434  (FLX_FPAR_DECL cat_uncurry*);
  _lam_1434* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70990>: cat_uncurry::_lam_1445 unit -> bool
struct _lam_1445: _ft71035 {
  FLX_FMEM_DECL
  cat_uncurry *ptrcat_uncurry;

  _lam_1445  (FLX_FPAR_DECL cat_uncurry*);
  _lam_1445* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70997>: cat_uncurry::_lam_1444 unit -> bool
struct _lam_1444: _ft71035 {
  FLX_FMEM_DECL
  cat_uncurry *ptrcat_uncurry;

  _lam_1444  (FLX_FPAR_DECL cat_uncurry*);
  _lam_1444* clone();
   ::flx::rtl::cl_t apply();
};

struct thread_frame_t {
  int argc;
  char **argv;
  FILE *flx_stdin;
  FILE *flx_stdout;
  FILE *flx_stderr;
  ::flx::gc::generic::gc_profile_t *gcp;
  ::flx::gc::generic::gc_shape_t * const shape_list_head;
  thread_frame_t(
  );
  _a14239t_71023 letters;
  _a14239t_71023 lower;
  _tt71038 _ds2_64992;
  void* _vI65670_result;
  int _vI65669_return_code;
  _a14239t_71023 upper;

};

FLX_DCL_THREAD_FRAME

}} // namespace flxusr::flx_pkgconfig
//header complete
#endif
