struct X {
  a:int;
  b:double;
};
var x:X = X(1,2.2);
println$ str x.a + str x.b;
struct complx {
  x: double;
  y: double;
  fun arg => tan (self.x/self.y);
  fun mod => sqrt (self.x * self.x + self.y * self.y);
  fun add (z:complx) => complx(self.x + z.x, self.y + z.y);
}

var z = complx(0.5, 0.5);
println$ z.x, z.y, z.arg, z.mod;

var a = z.add z;
println$ a.x, a.y;
struct complx2 {
  x: double;
  y: double;
  proc doset (xx:double, yy:double) { self.x <- xx; self.y <- yy; }
}

var b = complx2(1.0,2.0);
(&b).doset (0.7, 0.8);
println$ b.x, b.y;
